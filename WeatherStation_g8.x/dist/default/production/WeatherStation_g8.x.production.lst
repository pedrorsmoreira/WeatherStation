

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 30 16:18:29 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	text64,local,class=CODE,merge=1,delta=2
    79                           	psect	text65,local,class=CODE,merge=1,delta=2
    80                           	psect	text66,local,class=CODE,merge=1,delta=2
    81                           	psect	text67,local,class=CODE,merge=1,delta=2
    82                           	psect	text68,local,class=CODE,merge=1,delta=2
    83                           	psect	text69,local,class=CODE,merge=1,delta=2
    84                           	psect	text70,local,class=CODE,merge=1,delta=2
    85                           	psect	text71,local,class=CODE,merge=1,delta=2
    86                           	psect	text72,local,class=CODE,merge=1,delta=2
    87                           	psect	text73,local,class=CODE,merge=1,delta=2
    88                           	psect	text74,local,class=CODE,merge=1,delta=2
    89                           	psect	text75,local,class=CODE,merge=1,delta=2
    90                           	psect	text76,local,class=CODE,merge=1,delta=2
    91                           	psect	text77,local,class=CODE,merge=1,delta=2
    92                           	psect	text78,local,class=CODE,merge=1,delta=2
    93                           	psect	text79,local,class=CODE,merge=1,delta=2
    94                           	psect	text80,local,class=CODE,merge=1,delta=2
    95                           	psect	text81,local,class=CODE,merge=1,delta=2
    96                           	psect	text82,local,class=CODE,merge=1,delta=2,group=1
    97                           	psect	text83,local,class=CODE,merge=1,delta=2,group=1
    98                           	psect	text84,local,class=CODE,merge=1,delta=2,group=1
    99                           	psect	text85,local,class=CODE,merge=1,delta=2
   100                           	psect	text86,local,class=CODE,merge=1,delta=2
   101                           	psect	text87,local,class=CODE,merge=1,delta=2
   102                           	psect	text88,local,class=CODE,merge=1,delta=2
   103                           	psect	text89,local,class=CODE,merge=1,delta=2
   104                           	psect	text90,local,class=CODE,merge=1,delta=2
   105                           	psect	text91,local,class=CODE,merge=1,delta=2
   106                           	psect	text92,local,class=CODE,merge=1,delta=2
   107                           	psect	text93,local,class=CODE,merge=1,delta=2
   108                           	psect	text94,local,class=CODE,merge=1,delta=2
   109                           	psect	text95,local,class=CODE,merge=1,delta=2
   110                           	psect	text96,local,class=CODE,merge=1,delta=2,group=1
   111                           	psect	text97,local,class=CODE,merge=1,delta=2
   112                           	psect	text98,local,class=CODE,merge=1,delta=2
   113                           	psect	intentry,global,class=CODE,delta=2
   114                           	psect	text100,local,class=CODE,merge=1,delta=2
   115                           	psect	text101,local,class=CODE,merge=1,delta=2
   116                           	psect	text102,local,class=CODE,merge=1,delta=2
   117                           	psect	text103,local,class=CODE,merge=1,delta=2
   118                           	psect	text104,local,class=CODE,merge=1,delta=2
   119                           	psect	text105,local,class=CODE,merge=1,delta=2
   120                           	psect	text106,local,class=CODE,merge=1,delta=2
   121                           	psect	text107,local,class=CODE,merge=1,delta=2
   122                           	psect	text108,local,class=CODE,merge=1,delta=2
   123                           	psect	text109,local,class=CODE,merge=1,delta=2
   124                           	psect	text110,local,class=CODE,merge=1,delta=2
   125                           	psect	text111,local,class=CODE,merge=1,delta=2
   126                           	psect	text112,local,class=CODE,merge=1,delta=2
   127                           	psect	text113,local,class=CODE,merge=1,delta=2
   128                           	psect	text114,local,class=CODE,merge=1,delta=2
   129                           	psect	text115,local,class=CODE,merge=1,delta=2
   130                           	psect	text116,local,class=CODE,merge=1,delta=2
   131                           	psect	text117,local,class=CODE,merge=1,delta=2
   132                           	psect	text118,local,class=CODE,merge=1,delta=2
   133                           	dabs	1,0x7E,2
   134  0000                     
   135                           ; Version 2.10
   136                           ; Generated 31/07/2019 GMT
   137                           ; 
   138                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   139                           ; All rights reserved.
   140                           ; 
   141                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   142                           ; 
   143                           ; Redistribution and use in source and binary forms, with or without modification, are
   144                           ; permitted provided that the following conditions are met:
   145                           ; 
   146                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   147                           ;        conditions and the following disclaimer.
   148                           ; 
   149                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   150                           ;        of conditions and the following disclaimer in the documentation and/or other
   151                           ;        materials provided with the distribution.
   152                           ; 
   153                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   154                           ;        software without specific prior written permission.
   155                           ; 
   156                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   157                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   158                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   159                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   160                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   161                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   162                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   163                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   164                           ; 
   165                           ; 
   166                           ; Code-generator required, PIC16F18875 Definitions
   167                           ; 
   168                           ; SFR Addresses
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001C                     	;# 
   197  001C                     	;# 
   198  001D                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  008C                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  008E                     	;# 
   207  008F                     	;# 
   208  0090                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0110                     	;# 
   229  0110                     	;# 
   230  0111                     	;# 
   231  0112                     	;# 
   232  0112                     	;# 
   233  0113                     	;# 
   234  0114                     	;# 
   235  0114                     	;# 
   236  0115                     	;# 
   237  0116                     	;# 
   238  0116                     	;# 
   239  0117                     	;# 
   240  0119                     	;# 
   241  0119                     	;# 
   242  0119                     	;# 
   243  011A                     	;# 
   244  011A                     	;# 
   245  011A                     	;# 
   246  011B                     	;# 
   247  011B                     	;# 
   248  011B                     	;# 
   249  011B                     	;# 
   250  011B                     	;# 
   251  011C                     	;# 
   252  011C                     	;# 
   253  011C                     	;# 
   254  011D                     	;# 
   255  011D                     	;# 
   256  011D                     	;# 
   257  011E                     	;# 
   258  011E                     	;# 
   259  011E                     	;# 
   260  011F                     	;# 
   261  011F                     	;# 
   262  011F                     	;# 
   263  011F                     	;# 
   264  011F                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  018E                     	;# 
   268  018F                     	;# 
   269  0190                     	;# 
   270  0191                     	;# 
   271  0192                     	;# 
   272  0196                     	;# 
   273  0197                     	;# 
   274  0198                     	;# 
   275  0199                     	;# 
   276  019A                     	;# 
   277  019B                     	;# 
   278  019C                     	;# 
   279  020C                     	;# 
   280  020C                     	;# 
   281  020D                     	;# 
   282  020E                     	;# 
   283  020F                     	;# 
   284  020F                     	;# 
   285  0210                     	;# 
   286  0210                     	;# 
   287  0211                     	;# 
   288  0211                     	;# 
   289  0212                     	;# 
   290  0212                     	;# 
   291  0213                     	;# 
   292  0214                     	;# 
   293  0215                     	;# 
   294  0215                     	;# 
   295  0216                     	;# 
   296  0216                     	;# 
   297  0217                     	;# 
   298  0217                     	;# 
   299  0218                     	;# 
   300  0218                     	;# 
   301  0219                     	;# 
   302  021A                     	;# 
   303  021B                     	;# 
   304  021B                     	;# 
   305  021C                     	;# 
   306  021C                     	;# 
   307  021D                     	;# 
   308  021D                     	;# 
   309  021E                     	;# 
   310  021F                     	;# 
   311  028C                     	;# 
   312  028C                     	;# 
   313  028D                     	;# 
   314  028D                     	;# 
   315  028E                     	;# 
   316  028F                     	;# 
   317  0290                     	;# 
   318  0290                     	;# 
   319  0291                     	;# 
   320  0292                     	;# 
   321  0292                     	;# 
   322  0293                     	;# 
   323  0293                     	;# 
   324  0294                     	;# 
   325  0295                     	;# 
   326  0296                     	;# 
   327  0296                     	;# 
   328  0297                     	;# 
   329  0298                     	;# 
   330  0298                     	;# 
   331  0299                     	;# 
   332  0299                     	;# 
   333  029A                     	;# 
   334  029B                     	;# 
   335  029C                     	;# 
   336  029C                     	;# 
   337  029D                     	;# 
   338  030C                     	;# 
   339  030C                     	;# 
   340  030D                     	;# 
   341  030E                     	;# 
   342  030F                     	;# 
   343  0310                     	;# 
   344  0310                     	;# 
   345  0311                     	;# 
   346  0312                     	;# 
   347  0313                     	;# 
   348  0314                     	;# 
   349  0314                     	;# 
   350  0315                     	;# 
   351  0316                     	;# 
   352  0317                     	;# 
   353  0318                     	;# 
   354  0318                     	;# 
   355  0319                     	;# 
   356  031A                     	;# 
   357  031B                     	;# 
   358  031C                     	;# 
   359  031C                     	;# 
   360  031D                     	;# 
   361  031E                     	;# 
   362  031F                     	;# 
   363  038C                     	;# 
   364  038C                     	;# 
   365  038D                     	;# 
   366  038E                     	;# 
   367  0390                     	;# 
   368  0390                     	;# 
   369  0391                     	;# 
   370  0392                     	;# 
   371  040C                     	;# 
   372  040D                     	;# 
   373  040E                     	;# 
   374  040F                     	;# 
   375  0410                     	;# 
   376  0411                     	;# 
   377  0416                     	;# 
   378  0416                     	;# 
   379  0417                     	;# 
   380  0418                     	;# 
   381  0418                     	;# 
   382  0419                     	;# 
   383  041A                     	;# 
   384  041A                     	;# 
   385  041B                     	;# 
   386  041C                     	;# 
   387  041C                     	;# 
   388  041D                     	;# 
   389  041E                     	;# 
   390  041F                     	;# 
   391  048C                     	;# 
   392  048C                     	;# 
   393  048D                     	;# 
   394  048E                     	;# 
   395  048F                     	;# 
   396  048F                     	;# 
   397  0490                     	;# 
   398  0491                     	;# 
   399  0492                     	;# 
   400  0492                     	;# 
   401  0493                     	;# 
   402  0494                     	;# 
   403  0495                     	;# 
   404  0495                     	;# 
   405  0496                     	;# 
   406  0497                     	;# 
   407  0498                     	;# 
   408  0499                     	;# 
   409  049A                     	;# 
   410  049B                     	;# 
   411  049C                     	;# 
   412  049D                     	;# 
   413  050C                     	;# 
   414  050C                     	;# 
   415  050D                     	;# 
   416  050E                     	;# 
   417  050F                     	;# 
   418  050F                     	;# 
   419  0510                     	;# 
   420  0511                     	;# 
   421  0512                     	;# 
   422  0512                     	;# 
   423  0513                     	;# 
   424  0514                     	;# 
   425  0515                     	;# 
   426  0515                     	;# 
   427  0516                     	;# 
   428  0517                     	;# 
   429  0518                     	;# 
   430  0519                     	;# 
   431  051A                     	;# 
   432  051B                     	;# 
   433  051C                     	;# 
   434  051D                     	;# 
   435  058C                     	;# 
   436  058C                     	;# 
   437  058D                     	;# 
   438  058E                     	;# 
   439  058F                     	;# 
   440  058F                     	;# 
   441  0590                     	;# 
   442  0591                     	;# 
   443  0592                     	;# 
   444  0593                     	;# 
   445  060C                     	;# 
   446  060D                     	;# 
   447  060E                     	;# 
   448  060F                     	;# 
   449  0610                     	;# 
   450  0611                     	;# 
   451  0612                     	;# 
   452  0613                     	;# 
   453  0614                     	;# 
   454  0616                     	;# 
   455  0617                     	;# 
   456  0618                     	;# 
   457  0619                     	;# 
   458  061A                     	;# 
   459  061B                     	;# 
   460  061C                     	;# 
   461  061D                     	;# 
   462  061E                     	;# 
   463  068C                     	;# 
   464  068D                     	;# 
   465  068E                     	;# 
   466  068F                     	;# 
   467  0690                     	;# 
   468  0691                     	;# 
   469  0692                     	;# 
   470  0693                     	;# 
   471  0694                     	;# 
   472  070C                     	;# 
   473  070D                     	;# 
   474  070E                     	;# 
   475  070F                     	;# 
   476  0710                     	;# 
   477  0711                     	;# 
   478  0712                     	;# 
   479  0713                     	;# 
   480  0714                     	;# 
   481  0716                     	;# 
   482  0717                     	;# 
   483  0718                     	;# 
   484  0719                     	;# 
   485  071A                     	;# 
   486  071B                     	;# 
   487  071C                     	;# 
   488  071D                     	;# 
   489  071E                     	;# 
   490  0796                     	;# 
   491  0797                     	;# 
   492  0798                     	;# 
   493  0799                     	;# 
   494  079A                     	;# 
   495  079B                     	;# 
   496  080C                     	;# 
   497  080D                     	;# 
   498  080E                     	;# 
   499  080F                     	;# 
   500  0810                     	;# 
   501  0811                     	;# 
   502  0812                     	;# 
   503  0813                     	;# 
   504  0814                     	;# 
   505  081A                     	;# 
   506  081B                     	;# 
   507  081C                     	;# 
   508  081D                     	;# 
   509  081E                     	;# 
   510  081F                     	;# 
   511  088C                     	;# 
   512  088D                     	;# 
   513  088E                     	;# 
   514  088F                     	;# 
   515  0890                     	;# 
   516  0891                     	;# 
   517  0892                     	;# 
   518  0893                     	;# 
   519  0895                     	;# 
   520  0896                     	;# 
   521  0897                     	;# 
   522  0898                     	;# 
   523  0899                     	;# 
   524  089A                     	;# 
   525  089B                     	;# 
   526  090C                     	;# 
   527  090E                     	;# 
   528  090F                     	;# 
   529  091F                     	;# 
   530  091F                     	;# 
   531  098F                     	;# 
   532  098F                     	;# 
   533  0990                     	;# 
   534  0991                     	;# 
   535  0992                     	;# 
   536  0993                     	;# 
   537  0994                     	;# 
   538  0995                     	;# 
   539  0996                     	;# 
   540  0997                     	;# 
   541  0E0F                     	;# 
   542  0E10                     	;# 
   543  0E11                     	;# 
   544  0E12                     	;# 
   545  0E13                     	;# 
   546  0E14                     	;# 
   547  0E15                     	;# 
   548  0E16                     	;# 
   549  0E17                     	;# 
   550  0E18                     	;# 
   551  0E19                     	;# 
   552  0E1A                     	;# 
   553  0E1B                     	;# 
   554  0E1C                     	;# 
   555  0E1D                     	;# 
   556  0E1E                     	;# 
   557  0E1F                     	;# 
   558  0E20                     	;# 
   559  0E21                     	;# 
   560  0E22                     	;# 
   561  0E23                     	;# 
   562  0E24                     	;# 
   563  0E25                     	;# 
   564  0E26                     	;# 
   565  0E27                     	;# 
   566  0E28                     	;# 
   567  0E29                     	;# 
   568  0E2A                     	;# 
   569  0E2B                     	;# 
   570  0E2C                     	;# 
   571  0E2D                     	;# 
   572  0E2E                     	;# 
   573  0E2F                     	;# 
   574  0E30                     	;# 
   575  0E31                     	;# 
   576  0E32                     	;# 
   577  0E33                     	;# 
   578  0E34                     	;# 
   579  0E35                     	;# 
   580  0E36                     	;# 
   581  0E37                     	;# 
   582  0E8F                     	;# 
   583  0E90                     	;# 
   584  0E91                     	;# 
   585  0E92                     	;# 
   586  0E93                     	;# 
   587  0E94                     	;# 
   588  0E95                     	;# 
   589  0E96                     	;# 
   590  0E97                     	;# 
   591  0E9C                     	;# 
   592  0E9D                     	;# 
   593  0E9E                     	;# 
   594  0EA1                     	;# 
   595  0EA2                     	;# 
   596  0EA3                     	;# 
   597  0EA4                     	;# 
   598  0EA5                     	;# 
   599  0EA9                     	;# 
   600  0EAA                     	;# 
   601  0EAB                     	;# 
   602  0EAC                     	;# 
   603  0EB1                     	;# 
   604  0EB2                     	;# 
   605  0EB3                     	;# 
   606  0EB8                     	;# 
   607  0EB9                     	;# 
   608  0EBA                     	;# 
   609  0EBB                     	;# 
   610  0EBC                     	;# 
   611  0EBD                     	;# 
   612  0EBE                     	;# 
   613  0EC3                     	;# 
   614  0EC5                     	;# 
   615  0EC6                     	;# 
   616  0EC7                     	;# 
   617  0EC8                     	;# 
   618  0EC9                     	;# 
   619  0ECA                     	;# 
   620  0ECB                     	;# 
   621  0ECC                     	;# 
   622  0F10                     	;# 
   623  0F11                     	;# 
   624  0F12                     	;# 
   625  0F13                     	;# 
   626  0F14                     	;# 
   627  0F15                     	;# 
   628  0F16                     	;# 
   629  0F17                     	;# 
   630  0F18                     	;# 
   631  0F19                     	;# 
   632  0F1A                     	;# 
   633  0F1B                     	;# 
   634  0F1C                     	;# 
   635  0F1D                     	;# 
   636  0F1E                     	;# 
   637  0F1F                     	;# 
   638  0F20                     	;# 
   639  0F21                     	;# 
   640  0F22                     	;# 
   641  0F23                     	;# 
   642  0F24                     	;# 
   643  0F25                     	;# 
   644  0F26                     	;# 
   645  0F27                     	;# 
   646  0F28                     	;# 
   647  0F29                     	;# 
   648  0F2A                     	;# 
   649  0F2B                     	;# 
   650  0F2C                     	;# 
   651  0F2D                     	;# 
   652  0F2E                     	;# 
   653  0F2F                     	;# 
   654  0F30                     	;# 
   655  0F31                     	;# 
   656  0F32                     	;# 
   657  0F38                     	;# 
   658  0F39                     	;# 
   659  0F3A                     	;# 
   660  0F3B                     	;# 
   661  0F3C                     	;# 
   662  0F3D                     	;# 
   663  0F3E                     	;# 
   664  0F3F                     	;# 
   665  0F40                     	;# 
   666  0F41                     	;# 
   667  0F43                     	;# 
   668  0F44                     	;# 
   669  0F45                     	;# 
   670  0F46                     	;# 
   671  0F47                     	;# 
   672  0F48                     	;# 
   673  0F49                     	;# 
   674  0F4A                     	;# 
   675  0F4B                     	;# 
   676  0F4C                     	;# 
   677  0F4E                     	;# 
   678  0F4F                     	;# 
   679  0F50                     	;# 
   680  0F51                     	;# 
   681  0F52                     	;# 
   682  0F53                     	;# 
   683  0F54                     	;# 
   684  0F55                     	;# 
   685  0F56                     	;# 
   686  0F57                     	;# 
   687  0F59                     	;# 
   688  0F5A                     	;# 
   689  0F5B                     	;# 
   690  0F5C                     	;# 
   691  0F5D                     	;# 
   692  0F61                     	;# 
   693  0F62                     	;# 
   694  0F64                     	;# 
   695  0F65                     	;# 
   696  0F66                     	;# 
   697  0F67                     	;# 
   698  0F68                     	;# 
   699  0F69                     	;# 
   700  0F6A                     	;# 
   701  0F6B                     	;# 
   702  0F6C                     	;# 
   703  0F6D                     	;# 
   704  0FE4                     	;# 
   705  0FE5                     	;# 
   706  0FE6                     	;# 
   707  0FE7                     	;# 
   708  0FE8                     	;# 
   709  0FE9                     	;# 
   710  0FEA                     	;# 
   711  0FEB                     	;# 
   712  0FED                     	;# 
   713  0FEE                     	;# 
   714  0FEF                     	;# 
   715  0000                     	;# 
   716  0001                     	;# 
   717  0002                     	;# 
   718  0003                     	;# 
   719  0004                     	;# 
   720  0005                     	;# 
   721  0006                     	;# 
   722  0007                     	;# 
   723  0008                     	;# 
   724  0009                     	;# 
   725  000A                     	;# 
   726  000B                     	;# 
   727  000C                     	;# 
   728  000D                     	;# 
   729  000E                     	;# 
   730  000F                     	;# 
   731  0010                     	;# 
   732  0011                     	;# 
   733  0012                     	;# 
   734  0013                     	;# 
   735  0014                     	;# 
   736  0015                     	;# 
   737  0016                     	;# 
   738  0017                     	;# 
   739  0018                     	;# 
   740  0019                     	;# 
   741  001A                     	;# 
   742  001C                     	;# 
   743  001C                     	;# 
   744  001D                     	;# 
   745  001D                     	;# 
   746  001E                     	;# 
   747  001F                     	;# 
   748  008C                     	;# 
   749  008C                     	;# 
   750  008D                     	;# 
   751  008E                     	;# 
   752  008E                     	;# 
   753  008F                     	;# 
   754  0090                     	;# 
   755  0090                     	;# 
   756  0091                     	;# 
   757  0093                     	;# 
   758  0094                     	;# 
   759  0095                     	;# 
   760  0096                     	;# 
   761  0097                     	;# 
   762  0098                     	;# 
   763  0099                     	;# 
   764  009A                     	;# 
   765  009B                     	;# 
   766  009C                     	;# 
   767  009D                     	;# 
   768  009E                     	;# 
   769  010C                     	;# 
   770  010D                     	;# 
   771  010E                     	;# 
   772  010E                     	;# 
   773  010F                     	;# 
   774  0110                     	;# 
   775  0110                     	;# 
   776  0111                     	;# 
   777  0112                     	;# 
   778  0112                     	;# 
   779  0113                     	;# 
   780  0114                     	;# 
   781  0114                     	;# 
   782  0115                     	;# 
   783  0116                     	;# 
   784  0116                     	;# 
   785  0117                     	;# 
   786  0119                     	;# 
   787  0119                     	;# 
   788  0119                     	;# 
   789  011A                     	;# 
   790  011A                     	;# 
   791  011A                     	;# 
   792  011B                     	;# 
   793  011B                     	;# 
   794  011B                     	;# 
   795  011B                     	;# 
   796  011B                     	;# 
   797  011C                     	;# 
   798  011C                     	;# 
   799  011C                     	;# 
   800  011D                     	;# 
   801  011D                     	;# 
   802  011D                     	;# 
   803  011E                     	;# 
   804  011E                     	;# 
   805  011E                     	;# 
   806  011F                     	;# 
   807  011F                     	;# 
   808  011F                     	;# 
   809  011F                     	;# 
   810  011F                     	;# 
   811  018C                     	;# 
   812  018D                     	;# 
   813  018E                     	;# 
   814  018F                     	;# 
   815  0190                     	;# 
   816  0191                     	;# 
   817  0192                     	;# 
   818  0196                     	;# 
   819  0197                     	;# 
   820  0198                     	;# 
   821  0199                     	;# 
   822  019A                     	;# 
   823  019B                     	;# 
   824  019C                     	;# 
   825  020C                     	;# 
   826  020C                     	;# 
   827  020D                     	;# 
   828  020E                     	;# 
   829  020F                     	;# 
   830  020F                     	;# 
   831  0210                     	;# 
   832  0210                     	;# 
   833  0211                     	;# 
   834  0211                     	;# 
   835  0212                     	;# 
   836  0212                     	;# 
   837  0213                     	;# 
   838  0214                     	;# 
   839  0215                     	;# 
   840  0215                     	;# 
   841  0216                     	;# 
   842  0216                     	;# 
   843  0217                     	;# 
   844  0217                     	;# 
   845  0218                     	;# 
   846  0218                     	;# 
   847  0219                     	;# 
   848  021A                     	;# 
   849  021B                     	;# 
   850  021B                     	;# 
   851  021C                     	;# 
   852  021C                     	;# 
   853  021D                     	;# 
   854  021D                     	;# 
   855  021E                     	;# 
   856  021F                     	;# 
   857  028C                     	;# 
   858  028C                     	;# 
   859  028D                     	;# 
   860  028D                     	;# 
   861  028E                     	;# 
   862  028F                     	;# 
   863  0290                     	;# 
   864  0290                     	;# 
   865  0291                     	;# 
   866  0292                     	;# 
   867  0292                     	;# 
   868  0293                     	;# 
   869  0293                     	;# 
   870  0294                     	;# 
   871  0295                     	;# 
   872  0296                     	;# 
   873  0296                     	;# 
   874  0297                     	;# 
   875  0298                     	;# 
   876  0298                     	;# 
   877  0299                     	;# 
   878  0299                     	;# 
   879  029A                     	;# 
   880  029B                     	;# 
   881  029C                     	;# 
   882  029C                     	;# 
   883  029D                     	;# 
   884  030C                     	;# 
   885  030C                     	;# 
   886  030D                     	;# 
   887  030E                     	;# 
   888  030F                     	;# 
   889  0310                     	;# 
   890  0310                     	;# 
   891  0311                     	;# 
   892  0312                     	;# 
   893  0313                     	;# 
   894  0314                     	;# 
   895  0314                     	;# 
   896  0315                     	;# 
   897  0316                     	;# 
   898  0317                     	;# 
   899  0318                     	;# 
   900  0318                     	;# 
   901  0319                     	;# 
   902  031A                     	;# 
   903  031B                     	;# 
   904  031C                     	;# 
   905  031C                     	;# 
   906  031D                     	;# 
   907  031E                     	;# 
   908  031F                     	;# 
   909  038C                     	;# 
   910  038C                     	;# 
   911  038D                     	;# 
   912  038E                     	;# 
   913  0390                     	;# 
   914  0390                     	;# 
   915  0391                     	;# 
   916  0392                     	;# 
   917  040C                     	;# 
   918  040D                     	;# 
   919  040E                     	;# 
   920  040F                     	;# 
   921  0410                     	;# 
   922  0411                     	;# 
   923  0416                     	;# 
   924  0416                     	;# 
   925  0417                     	;# 
   926  0418                     	;# 
   927  0418                     	;# 
   928  0419                     	;# 
   929  041A                     	;# 
   930  041A                     	;# 
   931  041B                     	;# 
   932  041C                     	;# 
   933  041C                     	;# 
   934  041D                     	;# 
   935  041E                     	;# 
   936  041F                     	;# 
   937  048C                     	;# 
   938  048C                     	;# 
   939  048D                     	;# 
   940  048E                     	;# 
   941  048F                     	;# 
   942  048F                     	;# 
   943  0490                     	;# 
   944  0491                     	;# 
   945  0492                     	;# 
   946  0492                     	;# 
   947  0493                     	;# 
   948  0494                     	;# 
   949  0495                     	;# 
   950  0495                     	;# 
   951  0496                     	;# 
   952  0497                     	;# 
   953  0498                     	;# 
   954  0499                     	;# 
   955  049A                     	;# 
   956  049B                     	;# 
   957  049C                     	;# 
   958  049D                     	;# 
   959  050C                     	;# 
   960  050C                     	;# 
   961  050D                     	;# 
   962  050E                     	;# 
   963  050F                     	;# 
   964  050F                     	;# 
   965  0510                     	;# 
   966  0511                     	;# 
   967  0512                     	;# 
   968  0512                     	;# 
   969  0513                     	;# 
   970  0514                     	;# 
   971  0515                     	;# 
   972  0515                     	;# 
   973  0516                     	;# 
   974  0517                     	;# 
   975  0518                     	;# 
   976  0519                     	;# 
   977  051A                     	;# 
   978  051B                     	;# 
   979  051C                     	;# 
   980  051D                     	;# 
   981  058C                     	;# 
   982  058C                     	;# 
   983  058D                     	;# 
   984  058E                     	;# 
   985  058F                     	;# 
   986  058F                     	;# 
   987  0590                     	;# 
   988  0591                     	;# 
   989  0592                     	;# 
   990  0593                     	;# 
   991  060C                     	;# 
   992  060D                     	;# 
   993  060E                     	;# 
   994  060F                     	;# 
   995  0610                     	;# 
   996  0611                     	;# 
   997  0612                     	;# 
   998  0613                     	;# 
   999  0614                     	;# 
  1000  0616                     	;# 
  1001  0617                     	;# 
  1002  0618                     	;# 
  1003  0619                     	;# 
  1004  061A                     	;# 
  1005  061B                     	;# 
  1006  061C                     	;# 
  1007  061D                     	;# 
  1008  061E                     	;# 
  1009  068C                     	;# 
  1010  068D                     	;# 
  1011  068E                     	;# 
  1012  068F                     	;# 
  1013  0690                     	;# 
  1014  0691                     	;# 
  1015  0692                     	;# 
  1016  0693                     	;# 
  1017  0694                     	;# 
  1018  070C                     	;# 
  1019  070D                     	;# 
  1020  070E                     	;# 
  1021  070F                     	;# 
  1022  0710                     	;# 
  1023  0711                     	;# 
  1024  0712                     	;# 
  1025  0713                     	;# 
  1026  0714                     	;# 
  1027  0716                     	;# 
  1028  0717                     	;# 
  1029  0718                     	;# 
  1030  0719                     	;# 
  1031  071A                     	;# 
  1032  071B                     	;# 
  1033  071C                     	;# 
  1034  071D                     	;# 
  1035  071E                     	;# 
  1036  0796                     	;# 
  1037  0797                     	;# 
  1038  0798                     	;# 
  1039  0799                     	;# 
  1040  079A                     	;# 
  1041  079B                     	;# 
  1042  080C                     	;# 
  1043  080D                     	;# 
  1044  080E                     	;# 
  1045  080F                     	;# 
  1046  0810                     	;# 
  1047  0811                     	;# 
  1048  0812                     	;# 
  1049  0813                     	;# 
  1050  0814                     	;# 
  1051  081A                     	;# 
  1052  081B                     	;# 
  1053  081C                     	;# 
  1054  081D                     	;# 
  1055  081E                     	;# 
  1056  081F                     	;# 
  1057  088C                     	;# 
  1058  088D                     	;# 
  1059  088E                     	;# 
  1060  088F                     	;# 
  1061  0890                     	;# 
  1062  0891                     	;# 
  1063  0892                     	;# 
  1064  0893                     	;# 
  1065  0895                     	;# 
  1066  0896                     	;# 
  1067  0897                     	;# 
  1068  0898                     	;# 
  1069  0899                     	;# 
  1070  089A                     	;# 
  1071  089B                     	;# 
  1072  090C                     	;# 
  1073  090E                     	;# 
  1074  090F                     	;# 
  1075  091F                     	;# 
  1076  091F                     	;# 
  1077  098F                     	;# 
  1078  098F                     	;# 
  1079  0990                     	;# 
  1080  0991                     	;# 
  1081  0992                     	;# 
  1082  0993                     	;# 
  1083  0994                     	;# 
  1084  0995                     	;# 
  1085  0996                     	;# 
  1086  0997                     	;# 
  1087  0E0F                     	;# 
  1088  0E10                     	;# 
  1089  0E11                     	;# 
  1090  0E12                     	;# 
  1091  0E13                     	;# 
  1092  0E14                     	;# 
  1093  0E15                     	;# 
  1094  0E16                     	;# 
  1095  0E17                     	;# 
  1096  0E18                     	;# 
  1097  0E19                     	;# 
  1098  0E1A                     	;# 
  1099  0E1B                     	;# 
  1100  0E1C                     	;# 
  1101  0E1D                     	;# 
  1102  0E1E                     	;# 
  1103  0E1F                     	;# 
  1104  0E20                     	;# 
  1105  0E21                     	;# 
  1106  0E22                     	;# 
  1107  0E23                     	;# 
  1108  0E24                     	;# 
  1109  0E25                     	;# 
  1110  0E26                     	;# 
  1111  0E27                     	;# 
  1112  0E28                     	;# 
  1113  0E29                     	;# 
  1114  0E2A                     	;# 
  1115  0E2B                     	;# 
  1116  0E2C                     	;# 
  1117  0E2D                     	;# 
  1118  0E2E                     	;# 
  1119  0E2F                     	;# 
  1120  0E30                     	;# 
  1121  0E31                     	;# 
  1122  0E32                     	;# 
  1123  0E33                     	;# 
  1124  0E34                     	;# 
  1125  0E35                     	;# 
  1126  0E36                     	;# 
  1127  0E37                     	;# 
  1128  0E8F                     	;# 
  1129  0E90                     	;# 
  1130  0E91                     	;# 
  1131  0E92                     	;# 
  1132  0E93                     	;# 
  1133  0E94                     	;# 
  1134  0E95                     	;# 
  1135  0E96                     	;# 
  1136  0E97                     	;# 
  1137  0E9C                     	;# 
  1138  0E9D                     	;# 
  1139  0E9E                     	;# 
  1140  0EA1                     	;# 
  1141  0EA2                     	;# 
  1142  0EA3                     	;# 
  1143  0EA4                     	;# 
  1144  0EA5                     	;# 
  1145  0EA9                     	;# 
  1146  0EAA                     	;# 
  1147  0EAB                     	;# 
  1148  0EAC                     	;# 
  1149  0EB1                     	;# 
  1150  0EB2                     	;# 
  1151  0EB3                     	;# 
  1152  0EB8                     	;# 
  1153  0EB9                     	;# 
  1154  0EBA                     	;# 
  1155  0EBB                     	;# 
  1156  0EBC                     	;# 
  1157  0EBD                     	;# 
  1158  0EBE                     	;# 
  1159  0EC3                     	;# 
  1160  0EC5                     	;# 
  1161  0EC6                     	;# 
  1162  0EC7                     	;# 
  1163  0EC8                     	;# 
  1164  0EC9                     	;# 
  1165  0ECA                     	;# 
  1166  0ECB                     	;# 
  1167  0ECC                     	;# 
  1168  0F10                     	;# 
  1169  0F11                     	;# 
  1170  0F12                     	;# 
  1171  0F13                     	;# 
  1172  0F14                     	;# 
  1173  0F15                     	;# 
  1174  0F16                     	;# 
  1175  0F17                     	;# 
  1176  0F18                     	;# 
  1177  0F19                     	;# 
  1178  0F1A                     	;# 
  1179  0F1B                     	;# 
  1180  0F1C                     	;# 
  1181  0F1D                     	;# 
  1182  0F1E                     	;# 
  1183  0F1F                     	;# 
  1184  0F20                     	;# 
  1185  0F21                     	;# 
  1186  0F22                     	;# 
  1187  0F23                     	;# 
  1188  0F24                     	;# 
  1189  0F25                     	;# 
  1190  0F26                     	;# 
  1191  0F27                     	;# 
  1192  0F28                     	;# 
  1193  0F29                     	;# 
  1194  0F2A                     	;# 
  1195  0F2B                     	;# 
  1196  0F2C                     	;# 
  1197  0F2D                     	;# 
  1198  0F2E                     	;# 
  1199  0F2F                     	;# 
  1200  0F30                     	;# 
  1201  0F31                     	;# 
  1202  0F32                     	;# 
  1203  0F38                     	;# 
  1204  0F39                     	;# 
  1205  0F3A                     	;# 
  1206  0F3B                     	;# 
  1207  0F3C                     	;# 
  1208  0F3D                     	;# 
  1209  0F3E                     	;# 
  1210  0F3F                     	;# 
  1211  0F40                     	;# 
  1212  0F41                     	;# 
  1213  0F43                     	;# 
  1214  0F44                     	;# 
  1215  0F45                     	;# 
  1216  0F46                     	;# 
  1217  0F47                     	;# 
  1218  0F48                     	;# 
  1219  0F49                     	;# 
  1220  0F4A                     	;# 
  1221  0F4B                     	;# 
  1222  0F4C                     	;# 
  1223  0F4E                     	;# 
  1224  0F4F                     	;# 
  1225  0F50                     	;# 
  1226  0F51                     	;# 
  1227  0F52                     	;# 
  1228  0F53                     	;# 
  1229  0F54                     	;# 
  1230  0F55                     	;# 
  1231  0F56                     	;# 
  1232  0F57                     	;# 
  1233  0F59                     	;# 
  1234  0F5A                     	;# 
  1235  0F5B                     	;# 
  1236  0F5C                     	;# 
  1237  0F5D                     	;# 
  1238  0F61                     	;# 
  1239  0F62                     	;# 
  1240  0F64                     	;# 
  1241  0F65                     	;# 
  1242  0F66                     	;# 
  1243  0F67                     	;# 
  1244  0F68                     	;# 
  1245  0F69                     	;# 
  1246  0F6A                     	;# 
  1247  0F6B                     	;# 
  1248  0F6C                     	;# 
  1249  0F6D                     	;# 
  1250  0FE4                     	;# 
  1251  0FE5                     	;# 
  1252  0FE6                     	;# 
  1253  0FE7                     	;# 
  1254  0FE8                     	;# 
  1255  0FE9                     	;# 
  1256  0FEA                     	;# 
  1257  0FEB                     	;# 
  1258  0FED                     	;# 
  1259  0FEE                     	;# 
  1260  0FEF                     	;# 
  1261  0000                     	;# 
  1262  0001                     	;# 
  1263  0002                     	;# 
  1264  0003                     	;# 
  1265  0004                     	;# 
  1266  0005                     	;# 
  1267  0006                     	;# 
  1268  0007                     	;# 
  1269  0008                     	;# 
  1270  0009                     	;# 
  1271  000A                     	;# 
  1272  000B                     	;# 
  1273  000C                     	;# 
  1274  000D                     	;# 
  1275  000E                     	;# 
  1276  000F                     	;# 
  1277  0010                     	;# 
  1278  0011                     	;# 
  1279  0012                     	;# 
  1280  0013                     	;# 
  1281  0014                     	;# 
  1282  0015                     	;# 
  1283  0016                     	;# 
  1284  0017                     	;# 
  1285  0018                     	;# 
  1286  0019                     	;# 
  1287  001A                     	;# 
  1288  001C                     	;# 
  1289  001C                     	;# 
  1290  001D                     	;# 
  1291  001D                     	;# 
  1292  001E                     	;# 
  1293  001F                     	;# 
  1294  008C                     	;# 
  1295  008C                     	;# 
  1296  008D                     	;# 
  1297  008E                     	;# 
  1298  008E                     	;# 
  1299  008F                     	;# 
  1300  0090                     	;# 
  1301  0090                     	;# 
  1302  0091                     	;# 
  1303  0093                     	;# 
  1304  0094                     	;# 
  1305  0095                     	;# 
  1306  0096                     	;# 
  1307  0097                     	;# 
  1308  0098                     	;# 
  1309  0099                     	;# 
  1310  009A                     	;# 
  1311  009B                     	;# 
  1312  009C                     	;# 
  1313  009D                     	;# 
  1314  009E                     	;# 
  1315  010C                     	;# 
  1316  010D                     	;# 
  1317  010E                     	;# 
  1318  010E                     	;# 
  1319  010F                     	;# 
  1320  0110                     	;# 
  1321  0110                     	;# 
  1322  0111                     	;# 
  1323  0112                     	;# 
  1324  0112                     	;# 
  1325  0113                     	;# 
  1326  0114                     	;# 
  1327  0114                     	;# 
  1328  0115                     	;# 
  1329  0116                     	;# 
  1330  0116                     	;# 
  1331  0117                     	;# 
  1332  0119                     	;# 
  1333  0119                     	;# 
  1334  0119                     	;# 
  1335  011A                     	;# 
  1336  011A                     	;# 
  1337  011A                     	;# 
  1338  011B                     	;# 
  1339  011B                     	;# 
  1340  011B                     	;# 
  1341  011B                     	;# 
  1342  011B                     	;# 
  1343  011C                     	;# 
  1344  011C                     	;# 
  1345  011C                     	;# 
  1346  011D                     	;# 
  1347  011D                     	;# 
  1348  011D                     	;# 
  1349  011E                     	;# 
  1350  011E                     	;# 
  1351  011E                     	;# 
  1352  011F                     	;# 
  1353  011F                     	;# 
  1354  011F                     	;# 
  1355  011F                     	;# 
  1356  011F                     	;# 
  1357  018C                     	;# 
  1358  018D                     	;# 
  1359  018E                     	;# 
  1360  018F                     	;# 
  1361  0190                     	;# 
  1362  0191                     	;# 
  1363  0192                     	;# 
  1364  0196                     	;# 
  1365  0197                     	;# 
  1366  0198                     	;# 
  1367  0199                     	;# 
  1368  019A                     	;# 
  1369  019B                     	;# 
  1370  019C                     	;# 
  1371  020C                     	;# 
  1372  020C                     	;# 
  1373  020D                     	;# 
  1374  020E                     	;# 
  1375  020F                     	;# 
  1376  020F                     	;# 
  1377  0210                     	;# 
  1378  0210                     	;# 
  1379  0211                     	;# 
  1380  0211                     	;# 
  1381  0212                     	;# 
  1382  0212                     	;# 
  1383  0213                     	;# 
  1384  0214                     	;# 
  1385  0215                     	;# 
  1386  0215                     	;# 
  1387  0216                     	;# 
  1388  0216                     	;# 
  1389  0217                     	;# 
  1390  0217                     	;# 
  1391  0218                     	;# 
  1392  0218                     	;# 
  1393  0219                     	;# 
  1394  021A                     	;# 
  1395  021B                     	;# 
  1396  021B                     	;# 
  1397  021C                     	;# 
  1398  021C                     	;# 
  1399  021D                     	;# 
  1400  021D                     	;# 
  1401  021E                     	;# 
  1402  021F                     	;# 
  1403  028C                     	;# 
  1404  028C                     	;# 
  1405  028D                     	;# 
  1406  028D                     	;# 
  1407  028E                     	;# 
  1408  028F                     	;# 
  1409  0290                     	;# 
  1410  0290                     	;# 
  1411  0291                     	;# 
  1412  0292                     	;# 
  1413  0292                     	;# 
  1414  0293                     	;# 
  1415  0293                     	;# 
  1416  0294                     	;# 
  1417  0295                     	;# 
  1418  0296                     	;# 
  1419  0296                     	;# 
  1420  0297                     	;# 
  1421  0298                     	;# 
  1422  0298                     	;# 
  1423  0299                     	;# 
  1424  0299                     	;# 
  1425  029A                     	;# 
  1426  029B                     	;# 
  1427  029C                     	;# 
  1428  029C                     	;# 
  1429  029D                     	;# 
  1430  030C                     	;# 
  1431  030C                     	;# 
  1432  030D                     	;# 
  1433  030E                     	;# 
  1434  030F                     	;# 
  1435  0310                     	;# 
  1436  0310                     	;# 
  1437  0311                     	;# 
  1438  0312                     	;# 
  1439  0313                     	;# 
  1440  0314                     	;# 
  1441  0314                     	;# 
  1442  0315                     	;# 
  1443  0316                     	;# 
  1444  0317                     	;# 
  1445  0318                     	;# 
  1446  0318                     	;# 
  1447  0319                     	;# 
  1448  031A                     	;# 
  1449  031B                     	;# 
  1450  031C                     	;# 
  1451  031C                     	;# 
  1452  031D                     	;# 
  1453  031E                     	;# 
  1454  031F                     	;# 
  1455  038C                     	;# 
  1456  038C                     	;# 
  1457  038D                     	;# 
  1458  038E                     	;# 
  1459  0390                     	;# 
  1460  0390                     	;# 
  1461  0391                     	;# 
  1462  0392                     	;# 
  1463  040C                     	;# 
  1464  040D                     	;# 
  1465  040E                     	;# 
  1466  040F                     	;# 
  1467  0410                     	;# 
  1468  0411                     	;# 
  1469  0416                     	;# 
  1470  0416                     	;# 
  1471  0417                     	;# 
  1472  0418                     	;# 
  1473  0418                     	;# 
  1474  0419                     	;# 
  1475  041A                     	;# 
  1476  041A                     	;# 
  1477  041B                     	;# 
  1478  041C                     	;# 
  1479  041C                     	;# 
  1480  041D                     	;# 
  1481  041E                     	;# 
  1482  041F                     	;# 
  1483  048C                     	;# 
  1484  048C                     	;# 
  1485  048D                     	;# 
  1486  048E                     	;# 
  1487  048F                     	;# 
  1488  048F                     	;# 
  1489  0490                     	;# 
  1490  0491                     	;# 
  1491  0492                     	;# 
  1492  0492                     	;# 
  1493  0493                     	;# 
  1494  0494                     	;# 
  1495  0495                     	;# 
  1496  0495                     	;# 
  1497  0496                     	;# 
  1498  0497                     	;# 
  1499  0498                     	;# 
  1500  0499                     	;# 
  1501  049A                     	;# 
  1502  049B                     	;# 
  1503  049C                     	;# 
  1504  049D                     	;# 
  1505  050C                     	;# 
  1506  050C                     	;# 
  1507  050D                     	;# 
  1508  050E                     	;# 
  1509  050F                     	;# 
  1510  050F                     	;# 
  1511  0510                     	;# 
  1512  0511                     	;# 
  1513  0512                     	;# 
  1514  0512                     	;# 
  1515  0513                     	;# 
  1516  0514                     	;# 
  1517  0515                     	;# 
  1518  0515                     	;# 
  1519  0516                     	;# 
  1520  0517                     	;# 
  1521  0518                     	;# 
  1522  0519                     	;# 
  1523  051A                     	;# 
  1524  051B                     	;# 
  1525  051C                     	;# 
  1526  051D                     	;# 
  1527  058C                     	;# 
  1528  058C                     	;# 
  1529  058D                     	;# 
  1530  058E                     	;# 
  1531  058F                     	;# 
  1532  058F                     	;# 
  1533  0590                     	;# 
  1534  0591                     	;# 
  1535  0592                     	;# 
  1536  0593                     	;# 
  1537  060C                     	;# 
  1538  060D                     	;# 
  1539  060E                     	;# 
  1540  060F                     	;# 
  1541  0610                     	;# 
  1542  0611                     	;# 
  1543  0612                     	;# 
  1544  0613                     	;# 
  1545  0614                     	;# 
  1546  0616                     	;# 
  1547  0617                     	;# 
  1548  0618                     	;# 
  1549  0619                     	;# 
  1550  061A                     	;# 
  1551  061B                     	;# 
  1552  061C                     	;# 
  1553  061D                     	;# 
  1554  061E                     	;# 
  1555  068C                     	;# 
  1556  068D                     	;# 
  1557  068E                     	;# 
  1558  068F                     	;# 
  1559  0690                     	;# 
  1560  0691                     	;# 
  1561  0692                     	;# 
  1562  0693                     	;# 
  1563  0694                     	;# 
  1564  070C                     	;# 
  1565  070D                     	;# 
  1566  070E                     	;# 
  1567  070F                     	;# 
  1568  0710                     	;# 
  1569  0711                     	;# 
  1570  0712                     	;# 
  1571  0713                     	;# 
  1572  0714                     	;# 
  1573  0716                     	;# 
  1574  0717                     	;# 
  1575  0718                     	;# 
  1576  0719                     	;# 
  1577  071A                     	;# 
  1578  071B                     	;# 
  1579  071C                     	;# 
  1580  071D                     	;# 
  1581  071E                     	;# 
  1582  0796                     	;# 
  1583  0797                     	;# 
  1584  0798                     	;# 
  1585  0799                     	;# 
  1586  079A                     	;# 
  1587  079B                     	;# 
  1588  080C                     	;# 
  1589  080D                     	;# 
  1590  080E                     	;# 
  1591  080F                     	;# 
  1592  0810                     	;# 
  1593  0811                     	;# 
  1594  0812                     	;# 
  1595  0813                     	;# 
  1596  0814                     	;# 
  1597  081A                     	;# 
  1598  081B                     	;# 
  1599  081C                     	;# 
  1600  081D                     	;# 
  1601  081E                     	;# 
  1602  081F                     	;# 
  1603  088C                     	;# 
  1604  088D                     	;# 
  1605  088E                     	;# 
  1606  088F                     	;# 
  1607  0890                     	;# 
  1608  0891                     	;# 
  1609  0892                     	;# 
  1610  0893                     	;# 
  1611  0895                     	;# 
  1612  0896                     	;# 
  1613  0897                     	;# 
  1614  0898                     	;# 
  1615  0899                     	;# 
  1616  089A                     	;# 
  1617  089B                     	;# 
  1618  090C                     	;# 
  1619  090E                     	;# 
  1620  090F                     	;# 
  1621  091F                     	;# 
  1622  091F                     	;# 
  1623  098F                     	;# 
  1624  098F                     	;# 
  1625  0990                     	;# 
  1626  0991                     	;# 
  1627  0992                     	;# 
  1628  0993                     	;# 
  1629  0994                     	;# 
  1630  0995                     	;# 
  1631  0996                     	;# 
  1632  0997                     	;# 
  1633  0E0F                     	;# 
  1634  0E10                     	;# 
  1635  0E11                     	;# 
  1636  0E12                     	;# 
  1637  0E13                     	;# 
  1638  0E14                     	;# 
  1639  0E15                     	;# 
  1640  0E16                     	;# 
  1641  0E17                     	;# 
  1642  0E18                     	;# 
  1643  0E19                     	;# 
  1644  0E1A                     	;# 
  1645  0E1B                     	;# 
  1646  0E1C                     	;# 
  1647  0E1D                     	;# 
  1648  0E1E                     	;# 
  1649  0E1F                     	;# 
  1650  0E20                     	;# 
  1651  0E21                     	;# 
  1652  0E22                     	;# 
  1653  0E23                     	;# 
  1654  0E24                     	;# 
  1655  0E25                     	;# 
  1656  0E26                     	;# 
  1657  0E27                     	;# 
  1658  0E28                     	;# 
  1659  0E29                     	;# 
  1660  0E2A                     	;# 
  1661  0E2B                     	;# 
  1662  0E2C                     	;# 
  1663  0E2D                     	;# 
  1664  0E2E                     	;# 
  1665  0E2F                     	;# 
  1666  0E30                     	;# 
  1667  0E31                     	;# 
  1668  0E32                     	;# 
  1669  0E33                     	;# 
  1670  0E34                     	;# 
  1671  0E35                     	;# 
  1672  0E36                     	;# 
  1673  0E37                     	;# 
  1674  0E8F                     	;# 
  1675  0E90                     	;# 
  1676  0E91                     	;# 
  1677  0E92                     	;# 
  1678  0E93                     	;# 
  1679  0E94                     	;# 
  1680  0E95                     	;# 
  1681  0E96                     	;# 
  1682  0E97                     	;# 
  1683  0E9C                     	;# 
  1684  0E9D                     	;# 
  1685  0E9E                     	;# 
  1686  0EA1                     	;# 
  1687  0EA2                     	;# 
  1688  0EA3                     	;# 
  1689  0EA4                     	;# 
  1690  0EA5                     	;# 
  1691  0EA9                     	;# 
  1692  0EAA                     	;# 
  1693  0EAB                     	;# 
  1694  0EAC                     	;# 
  1695  0EB1                     	;# 
  1696  0EB2                     	;# 
  1697  0EB3                     	;# 
  1698  0EB8                     	;# 
  1699  0EB9                     	;# 
  1700  0EBA                     	;# 
  1701  0EBB                     	;# 
  1702  0EBC                     	;# 
  1703  0EBD                     	;# 
  1704  0EBE                     	;# 
  1705  0EC3                     	;# 
  1706  0EC5                     	;# 
  1707  0EC6                     	;# 
  1708  0EC7                     	;# 
  1709  0EC8                     	;# 
  1710  0EC9                     	;# 
  1711  0ECA                     	;# 
  1712  0ECB                     	;# 
  1713  0ECC                     	;# 
  1714  0F10                     	;# 
  1715  0F11                     	;# 
  1716  0F12                     	;# 
  1717  0F13                     	;# 
  1718  0F14                     	;# 
  1719  0F15                     	;# 
  1720  0F16                     	;# 
  1721  0F17                     	;# 
  1722  0F18                     	;# 
  1723  0F19                     	;# 
  1724  0F1A                     	;# 
  1725  0F1B                     	;# 
  1726  0F1C                     	;# 
  1727  0F1D                     	;# 
  1728  0F1E                     	;# 
  1729  0F1F                     	;# 
  1730  0F20                     	;# 
  1731  0F21                     	;# 
  1732  0F22                     	;# 
  1733  0F23                     	;# 
  1734  0F24                     	;# 
  1735  0F25                     	;# 
  1736  0F26                     	;# 
  1737  0F27                     	;# 
  1738  0F28                     	;# 
  1739  0F29                     	;# 
  1740  0F2A                     	;# 
  1741  0F2B                     	;# 
  1742  0F2C                     	;# 
  1743  0F2D                     	;# 
  1744  0F2E                     	;# 
  1745  0F2F                     	;# 
  1746  0F30                     	;# 
  1747  0F31                     	;# 
  1748  0F32                     	;# 
  1749  0F38                     	;# 
  1750  0F39                     	;# 
  1751  0F3A                     	;# 
  1752  0F3B                     	;# 
  1753  0F3C                     	;# 
  1754  0F3D                     	;# 
  1755  0F3E                     	;# 
  1756  0F3F                     	;# 
  1757  0F40                     	;# 
  1758  0F41                     	;# 
  1759  0F43                     	;# 
  1760  0F44                     	;# 
  1761  0F45                     	;# 
  1762  0F46                     	;# 
  1763  0F47                     	;# 
  1764  0F48                     	;# 
  1765  0F49                     	;# 
  1766  0F4A                     	;# 
  1767  0F4B                     	;# 
  1768  0F4C                     	;# 
  1769  0F4E                     	;# 
  1770  0F4F                     	;# 
  1771  0F50                     	;# 
  1772  0F51                     	;# 
  1773  0F52                     	;# 
  1774  0F53                     	;# 
  1775  0F54                     	;# 
  1776  0F55                     	;# 
  1777  0F56                     	;# 
  1778  0F57                     	;# 
  1779  0F59                     	;# 
  1780  0F5A                     	;# 
  1781  0F5B                     	;# 
  1782  0F5C                     	;# 
  1783  0F5D                     	;# 
  1784  0F61                     	;# 
  1785  0F62                     	;# 
  1786  0F64                     	;# 
  1787  0F65                     	;# 
  1788  0F66                     	;# 
  1789  0F67                     	;# 
  1790  0F68                     	;# 
  1791  0F69                     	;# 
  1792  0F6A                     	;# 
  1793  0F6B                     	;# 
  1794  0F6C                     	;# 
  1795  0F6D                     	;# 
  1796  0FE4                     	;# 
  1797  0FE5                     	;# 
  1798  0FE6                     	;# 
  1799  0FE7                     	;# 
  1800  0FE8                     	;# 
  1801  0FE9                     	;# 
  1802  0FEA                     	;# 
  1803  0FEB                     	;# 
  1804  0FED                     	;# 
  1805  0FEE                     	;# 
  1806  0FEF                     	;# 
  1807  0000                     	;# 
  1808  0001                     	;# 
  1809  0002                     	;# 
  1810  0003                     	;# 
  1811  0004                     	;# 
  1812  0005                     	;# 
  1813  0006                     	;# 
  1814  0007                     	;# 
  1815  0008                     	;# 
  1816  0009                     	;# 
  1817  000A                     	;# 
  1818  000B                     	;# 
  1819  000C                     	;# 
  1820  000D                     	;# 
  1821  000E                     	;# 
  1822  000F                     	;# 
  1823  0010                     	;# 
  1824  0011                     	;# 
  1825  0012                     	;# 
  1826  0013                     	;# 
  1827  0014                     	;# 
  1828  0015                     	;# 
  1829  0016                     	;# 
  1830  0017                     	;# 
  1831  0018                     	;# 
  1832  0019                     	;# 
  1833  001A                     	;# 
  1834  001C                     	;# 
  1835  001C                     	;# 
  1836  001D                     	;# 
  1837  001D                     	;# 
  1838  001E                     	;# 
  1839  001F                     	;# 
  1840  008C                     	;# 
  1841  008C                     	;# 
  1842  008D                     	;# 
  1843  008E                     	;# 
  1844  008E                     	;# 
  1845  008F                     	;# 
  1846  0090                     	;# 
  1847  0090                     	;# 
  1848  0091                     	;# 
  1849  0093                     	;# 
  1850  0094                     	;# 
  1851  0095                     	;# 
  1852  0096                     	;# 
  1853  0097                     	;# 
  1854  0098                     	;# 
  1855  0099                     	;# 
  1856  009A                     	;# 
  1857  009B                     	;# 
  1858  009C                     	;# 
  1859  009D                     	;# 
  1860  009E                     	;# 
  1861  010C                     	;# 
  1862  010D                     	;# 
  1863  010E                     	;# 
  1864  010E                     	;# 
  1865  010F                     	;# 
  1866  0110                     	;# 
  1867  0110                     	;# 
  1868  0111                     	;# 
  1869  0112                     	;# 
  1870  0112                     	;# 
  1871  0113                     	;# 
  1872  0114                     	;# 
  1873  0114                     	;# 
  1874  0115                     	;# 
  1875  0116                     	;# 
  1876  0116                     	;# 
  1877  0117                     	;# 
  1878  0119                     	;# 
  1879  0119                     	;# 
  1880  0119                     	;# 
  1881  011A                     	;# 
  1882  011A                     	;# 
  1883  011A                     	;# 
  1884  011B                     	;# 
  1885  011B                     	;# 
  1886  011B                     	;# 
  1887  011B                     	;# 
  1888  011B                     	;# 
  1889  011C                     	;# 
  1890  011C                     	;# 
  1891  011C                     	;# 
  1892  011D                     	;# 
  1893  011D                     	;# 
  1894  011D                     	;# 
  1895  011E                     	;# 
  1896  011E                     	;# 
  1897  011E                     	;# 
  1898  011F                     	;# 
  1899  011F                     	;# 
  1900  011F                     	;# 
  1901  011F                     	;# 
  1902  011F                     	;# 
  1903  018C                     	;# 
  1904  018D                     	;# 
  1905  018E                     	;# 
  1906  018F                     	;# 
  1907  0190                     	;# 
  1908  0191                     	;# 
  1909  0192                     	;# 
  1910  0196                     	;# 
  1911  0197                     	;# 
  1912  0198                     	;# 
  1913  0199                     	;# 
  1914  019A                     	;# 
  1915  019B                     	;# 
  1916  019C                     	;# 
  1917  020C                     	;# 
  1918  020C                     	;# 
  1919  020D                     	;# 
  1920  020E                     	;# 
  1921  020F                     	;# 
  1922  020F                     	;# 
  1923  0210                     	;# 
  1924  0210                     	;# 
  1925  0211                     	;# 
  1926  0211                     	;# 
  1927  0212                     	;# 
  1928  0212                     	;# 
  1929  0213                     	;# 
  1930  0214                     	;# 
  1931  0215                     	;# 
  1932  0215                     	;# 
  1933  0216                     	;# 
  1934  0216                     	;# 
  1935  0217                     	;# 
  1936  0217                     	;# 
  1937  0218                     	;# 
  1938  0218                     	;# 
  1939  0219                     	;# 
  1940  021A                     	;# 
  1941  021B                     	;# 
  1942  021B                     	;# 
  1943  021C                     	;# 
  1944  021C                     	;# 
  1945  021D                     	;# 
  1946  021D                     	;# 
  1947  021E                     	;# 
  1948  021F                     	;# 
  1949  028C                     	;# 
  1950  028C                     	;# 
  1951  028D                     	;# 
  1952  028D                     	;# 
  1953  028E                     	;# 
  1954  028F                     	;# 
  1955  0290                     	;# 
  1956  0290                     	;# 
  1957  0291                     	;# 
  1958  0292                     	;# 
  1959  0292                     	;# 
  1960  0293                     	;# 
  1961  0293                     	;# 
  1962  0294                     	;# 
  1963  0295                     	;# 
  1964  0296                     	;# 
  1965  0296                     	;# 
  1966  0297                     	;# 
  1967  0298                     	;# 
  1968  0298                     	;# 
  1969  0299                     	;# 
  1970  0299                     	;# 
  1971  029A                     	;# 
  1972  029B                     	;# 
  1973  029C                     	;# 
  1974  029C                     	;# 
  1975  029D                     	;# 
  1976  030C                     	;# 
  1977  030C                     	;# 
  1978  030D                     	;# 
  1979  030E                     	;# 
  1980  030F                     	;# 
  1981  0310                     	;# 
  1982  0310                     	;# 
  1983  0311                     	;# 
  1984  0312                     	;# 
  1985  0313                     	;# 
  1986  0314                     	;# 
  1987  0314                     	;# 
  1988  0315                     	;# 
  1989  0316                     	;# 
  1990  0317                     	;# 
  1991  0318                     	;# 
  1992  0318                     	;# 
  1993  0319                     	;# 
  1994  031A                     	;# 
  1995  031B                     	;# 
  1996  031C                     	;# 
  1997  031C                     	;# 
  1998  031D                     	;# 
  1999  031E                     	;# 
  2000  031F                     	;# 
  2001  038C                     	;# 
  2002  038C                     	;# 
  2003  038D                     	;# 
  2004  038E                     	;# 
  2005  0390                     	;# 
  2006  0390                     	;# 
  2007  0391                     	;# 
  2008  0392                     	;# 
  2009  040C                     	;# 
  2010  040D                     	;# 
  2011  040E                     	;# 
  2012  040F                     	;# 
  2013  0410                     	;# 
  2014  0411                     	;# 
  2015  0416                     	;# 
  2016  0416                     	;# 
  2017  0417                     	;# 
  2018  0418                     	;# 
  2019  0418                     	;# 
  2020  0419                     	;# 
  2021  041A                     	;# 
  2022  041A                     	;# 
  2023  041B                     	;# 
  2024  041C                     	;# 
  2025  041C                     	;# 
  2026  041D                     	;# 
  2027  041E                     	;# 
  2028  041F                     	;# 
  2029  048C                     	;# 
  2030  048C                     	;# 
  2031  048D                     	;# 
  2032  048E                     	;# 
  2033  048F                     	;# 
  2034  048F                     	;# 
  2035  0490                     	;# 
  2036  0491                     	;# 
  2037  0492                     	;# 
  2038  0492                     	;# 
  2039  0493                     	;# 
  2040  0494                     	;# 
  2041  0495                     	;# 
  2042  0495                     	;# 
  2043  0496                     	;# 
  2044  0497                     	;# 
  2045  0498                     	;# 
  2046  0499                     	;# 
  2047  049A                     	;# 
  2048  049B                     	;# 
  2049  049C                     	;# 
  2050  049D                     	;# 
  2051  050C                     	;# 
  2052  050C                     	;# 
  2053  050D                     	;# 
  2054  050E                     	;# 
  2055  050F                     	;# 
  2056  050F                     	;# 
  2057  0510                     	;# 
  2058  0511                     	;# 
  2059  0512                     	;# 
  2060  0512                     	;# 
  2061  0513                     	;# 
  2062  0514                     	;# 
  2063  0515                     	;# 
  2064  0515                     	;# 
  2065  0516                     	;# 
  2066  0517                     	;# 
  2067  0518                     	;# 
  2068  0519                     	;# 
  2069  051A                     	;# 
  2070  051B                     	;# 
  2071  051C                     	;# 
  2072  051D                     	;# 
  2073  058C                     	;# 
  2074  058C                     	;# 
  2075  058D                     	;# 
  2076  058E                     	;# 
  2077  058F                     	;# 
  2078  058F                     	;# 
  2079  0590                     	;# 
  2080  0591                     	;# 
  2081  0592                     	;# 
  2082  0593                     	;# 
  2083  060C                     	;# 
  2084  060D                     	;# 
  2085  060E                     	;# 
  2086  060F                     	;# 
  2087  0610                     	;# 
  2088  0611                     	;# 
  2089  0612                     	;# 
  2090  0613                     	;# 
  2091  0614                     	;# 
  2092  0616                     	;# 
  2093  0617                     	;# 
  2094  0618                     	;# 
  2095  0619                     	;# 
  2096  061A                     	;# 
  2097  061B                     	;# 
  2098  061C                     	;# 
  2099  061D                     	;# 
  2100  061E                     	;# 
  2101  068C                     	;# 
  2102  068D                     	;# 
  2103  068E                     	;# 
  2104  068F                     	;# 
  2105  0690                     	;# 
  2106  0691                     	;# 
  2107  0692                     	;# 
  2108  0693                     	;# 
  2109  0694                     	;# 
  2110  070C                     	;# 
  2111  070D                     	;# 
  2112  070E                     	;# 
  2113  070F                     	;# 
  2114  0710                     	;# 
  2115  0711                     	;# 
  2116  0712                     	;# 
  2117  0713                     	;# 
  2118  0714                     	;# 
  2119  0716                     	;# 
  2120  0717                     	;# 
  2121  0718                     	;# 
  2122  0719                     	;# 
  2123  071A                     	;# 
  2124  071B                     	;# 
  2125  071C                     	;# 
  2126  071D                     	;# 
  2127  071E                     	;# 
  2128  0796                     	;# 
  2129  0797                     	;# 
  2130  0798                     	;# 
  2131  0799                     	;# 
  2132  079A                     	;# 
  2133  079B                     	;# 
  2134  080C                     	;# 
  2135  080D                     	;# 
  2136  080E                     	;# 
  2137  080F                     	;# 
  2138  0810                     	;# 
  2139  0811                     	;# 
  2140  0812                     	;# 
  2141  0813                     	;# 
  2142  0814                     	;# 
  2143  081A                     	;# 
  2144  081B                     	;# 
  2145  081C                     	;# 
  2146  081D                     	;# 
  2147  081E                     	;# 
  2148  081F                     	;# 
  2149  088C                     	;# 
  2150  088D                     	;# 
  2151  088E                     	;# 
  2152  088F                     	;# 
  2153  0890                     	;# 
  2154  0891                     	;# 
  2155  0892                     	;# 
  2156  0893                     	;# 
  2157  0895                     	;# 
  2158  0896                     	;# 
  2159  0897                     	;# 
  2160  0898                     	;# 
  2161  0899                     	;# 
  2162  089A                     	;# 
  2163  089B                     	;# 
  2164  090C                     	;# 
  2165  090E                     	;# 
  2166  090F                     	;# 
  2167  091F                     	;# 
  2168  091F                     	;# 
  2169  098F                     	;# 
  2170  098F                     	;# 
  2171  0990                     	;# 
  2172  0991                     	;# 
  2173  0992                     	;# 
  2174  0993                     	;# 
  2175  0994                     	;# 
  2176  0995                     	;# 
  2177  0996                     	;# 
  2178  0997                     	;# 
  2179  0E0F                     	;# 
  2180  0E10                     	;# 
  2181  0E11                     	;# 
  2182  0E12                     	;# 
  2183  0E13                     	;# 
  2184  0E14                     	;# 
  2185  0E15                     	;# 
  2186  0E16                     	;# 
  2187  0E17                     	;# 
  2188  0E18                     	;# 
  2189  0E19                     	;# 
  2190  0E1A                     	;# 
  2191  0E1B                     	;# 
  2192  0E1C                     	;# 
  2193  0E1D                     	;# 
  2194  0E1E                     	;# 
  2195  0E1F                     	;# 
  2196  0E20                     	;# 
  2197  0E21                     	;# 
  2198  0E22                     	;# 
  2199  0E23                     	;# 
  2200  0E24                     	;# 
  2201  0E25                     	;# 
  2202  0E26                     	;# 
  2203  0E27                     	;# 
  2204  0E28                     	;# 
  2205  0E29                     	;# 
  2206  0E2A                     	;# 
  2207  0E2B                     	;# 
  2208  0E2C                     	;# 
  2209  0E2D                     	;# 
  2210  0E2E                     	;# 
  2211  0E2F                     	;# 
  2212  0E30                     	;# 
  2213  0E31                     	;# 
  2214  0E32                     	;# 
  2215  0E33                     	;# 
  2216  0E34                     	;# 
  2217  0E35                     	;# 
  2218  0E36                     	;# 
  2219  0E37                     	;# 
  2220  0E8F                     	;# 
  2221  0E90                     	;# 
  2222  0E91                     	;# 
  2223  0E92                     	;# 
  2224  0E93                     	;# 
  2225  0E94                     	;# 
  2226  0E95                     	;# 
  2227  0E96                     	;# 
  2228  0E97                     	;# 
  2229  0E9C                     	;# 
  2230  0E9D                     	;# 
  2231  0E9E                     	;# 
  2232  0EA1                     	;# 
  2233  0EA2                     	;# 
  2234  0EA3                     	;# 
  2235  0EA4                     	;# 
  2236  0EA5                     	;# 
  2237  0EA9                     	;# 
  2238  0EAA                     	;# 
  2239  0EAB                     	;# 
  2240  0EAC                     	;# 
  2241  0EB1                     	;# 
  2242  0EB2                     	;# 
  2243  0EB3                     	;# 
  2244  0EB8                     	;# 
  2245  0EB9                     	;# 
  2246  0EBA                     	;# 
  2247  0EBB                     	;# 
  2248  0EBC                     	;# 
  2249  0EBD                     	;# 
  2250  0EBE                     	;# 
  2251  0EC3                     	;# 
  2252  0EC5                     	;# 
  2253  0EC6                     	;# 
  2254  0EC7                     	;# 
  2255  0EC8                     	;# 
  2256  0EC9                     	;# 
  2257  0ECA                     	;# 
  2258  0ECB                     	;# 
  2259  0ECC                     	;# 
  2260  0F10                     	;# 
  2261  0F11                     	;# 
  2262  0F12                     	;# 
  2263  0F13                     	;# 
  2264  0F14                     	;# 
  2265  0F15                     	;# 
  2266  0F16                     	;# 
  2267  0F17                     	;# 
  2268  0F18                     	;# 
  2269  0F19                     	;# 
  2270  0F1A                     	;# 
  2271  0F1B                     	;# 
  2272  0F1C                     	;# 
  2273  0F1D                     	;# 
  2274  0F1E                     	;# 
  2275  0F1F                     	;# 
  2276  0F20                     	;# 
  2277  0F21                     	;# 
  2278  0F22                     	;# 
  2279  0F23                     	;# 
  2280  0F24                     	;# 
  2281  0F25                     	;# 
  2282  0F26                     	;# 
  2283  0F27                     	;# 
  2284  0F28                     	;# 
  2285  0F29                     	;# 
  2286  0F2A                     	;# 
  2287  0F2B                     	;# 
  2288  0F2C                     	;# 
  2289  0F2D                     	;# 
  2290  0F2E                     	;# 
  2291  0F2F                     	;# 
  2292  0F30                     	;# 
  2293  0F31                     	;# 
  2294  0F32                     	;# 
  2295  0F38                     	;# 
  2296  0F39                     	;# 
  2297  0F3A                     	;# 
  2298  0F3B                     	;# 
  2299  0F3C                     	;# 
  2300  0F3D                     	;# 
  2301  0F3E                     	;# 
  2302  0F3F                     	;# 
  2303  0F40                     	;# 
  2304  0F41                     	;# 
  2305  0F43                     	;# 
  2306  0F44                     	;# 
  2307  0F45                     	;# 
  2308  0F46                     	;# 
  2309  0F47                     	;# 
  2310  0F48                     	;# 
  2311  0F49                     	;# 
  2312  0F4A                     	;# 
  2313  0F4B                     	;# 
  2314  0F4C                     	;# 
  2315  0F4E                     	;# 
  2316  0F4F                     	;# 
  2317  0F50                     	;# 
  2318  0F51                     	;# 
  2319  0F52                     	;# 
  2320  0F53                     	;# 
  2321  0F54                     	;# 
  2322  0F55                     	;# 
  2323  0F56                     	;# 
  2324  0F57                     	;# 
  2325  0F59                     	;# 
  2326  0F5A                     	;# 
  2327  0F5B                     	;# 
  2328  0F5C                     	;# 
  2329  0F5D                     	;# 
  2330  0F61                     	;# 
  2331  0F62                     	;# 
  2332  0F64                     	;# 
  2333  0F65                     	;# 
  2334  0F66                     	;# 
  2335  0F67                     	;# 
  2336  0F68                     	;# 
  2337  0F69                     	;# 
  2338  0F6A                     	;# 
  2339  0F6B                     	;# 
  2340  0F6C                     	;# 
  2341  0F6D                     	;# 
  2342  0FE4                     	;# 
  2343  0FE5                     	;# 
  2344  0FE6                     	;# 
  2345  0FE7                     	;# 
  2346  0FE8                     	;# 
  2347  0FE9                     	;# 
  2348  0FEA                     	;# 
  2349  0FEB                     	;# 
  2350  0FED                     	;# 
  2351  0FEE                     	;# 
  2352  0FEF                     	;# 
  2353  0000                     	;# 
  2354  0001                     	;# 
  2355  0002                     	;# 
  2356  0003                     	;# 
  2357  0004                     	;# 
  2358  0005                     	;# 
  2359  0006                     	;# 
  2360  0007                     	;# 
  2361  0008                     	;# 
  2362  0009                     	;# 
  2363  000A                     	;# 
  2364  000B                     	;# 
  2365  000C                     	;# 
  2366  000D                     	;# 
  2367  000E                     	;# 
  2368  000F                     	;# 
  2369  0010                     	;# 
  2370  0011                     	;# 
  2371  0012                     	;# 
  2372  0013                     	;# 
  2373  0014                     	;# 
  2374  0015                     	;# 
  2375  0016                     	;# 
  2376  0017                     	;# 
  2377  0018                     	;# 
  2378  0019                     	;# 
  2379  001A                     	;# 
  2380  001C                     	;# 
  2381  001C                     	;# 
  2382  001D                     	;# 
  2383  001D                     	;# 
  2384  001E                     	;# 
  2385  001F                     	;# 
  2386  008C                     	;# 
  2387  008C                     	;# 
  2388  008D                     	;# 
  2389  008E                     	;# 
  2390  008E                     	;# 
  2391  008F                     	;# 
  2392  0090                     	;# 
  2393  0090                     	;# 
  2394  0091                     	;# 
  2395  0093                     	;# 
  2396  0094                     	;# 
  2397  0095                     	;# 
  2398  0096                     	;# 
  2399  0097                     	;# 
  2400  0098                     	;# 
  2401  0099                     	;# 
  2402  009A                     	;# 
  2403  009B                     	;# 
  2404  009C                     	;# 
  2405  009D                     	;# 
  2406  009E                     	;# 
  2407  010C                     	;# 
  2408  010D                     	;# 
  2409  010E                     	;# 
  2410  010E                     	;# 
  2411  010F                     	;# 
  2412  0110                     	;# 
  2413  0110                     	;# 
  2414  0111                     	;# 
  2415  0112                     	;# 
  2416  0112                     	;# 
  2417  0113                     	;# 
  2418  0114                     	;# 
  2419  0114                     	;# 
  2420  0115                     	;# 
  2421  0116                     	;# 
  2422  0116                     	;# 
  2423  0117                     	;# 
  2424  0119                     	;# 
  2425  0119                     	;# 
  2426  0119                     	;# 
  2427  011A                     	;# 
  2428  011A                     	;# 
  2429  011A                     	;# 
  2430  011B                     	;# 
  2431  011B                     	;# 
  2432  011B                     	;# 
  2433  011B                     	;# 
  2434  011B                     	;# 
  2435  011C                     	;# 
  2436  011C                     	;# 
  2437  011C                     	;# 
  2438  011D                     	;# 
  2439  011D                     	;# 
  2440  011D                     	;# 
  2441  011E                     	;# 
  2442  011E                     	;# 
  2443  011E                     	;# 
  2444  011F                     	;# 
  2445  011F                     	;# 
  2446  011F                     	;# 
  2447  011F                     	;# 
  2448  011F                     	;# 
  2449  018C                     	;# 
  2450  018D                     	;# 
  2451  018E                     	;# 
  2452  018F                     	;# 
  2453  0190                     	;# 
  2454  0191                     	;# 
  2455  0192                     	;# 
  2456  0196                     	;# 
  2457  0197                     	;# 
  2458  0198                     	;# 
  2459  0199                     	;# 
  2460  019A                     	;# 
  2461  019B                     	;# 
  2462  019C                     	;# 
  2463  020C                     	;# 
  2464  020C                     	;# 
  2465  020D                     	;# 
  2466  020E                     	;# 
  2467  020F                     	;# 
  2468  020F                     	;# 
  2469  0210                     	;# 
  2470  0210                     	;# 
  2471  0211                     	;# 
  2472  0211                     	;# 
  2473  0212                     	;# 
  2474  0212                     	;# 
  2475  0213                     	;# 
  2476  0214                     	;# 
  2477  0215                     	;# 
  2478  0215                     	;# 
  2479  0216                     	;# 
  2480  0216                     	;# 
  2481  0217                     	;# 
  2482  0217                     	;# 
  2483  0218                     	;# 
  2484  0218                     	;# 
  2485  0219                     	;# 
  2486  021A                     	;# 
  2487  021B                     	;# 
  2488  021B                     	;# 
  2489  021C                     	;# 
  2490  021C                     	;# 
  2491  021D                     	;# 
  2492  021D                     	;# 
  2493  021E                     	;# 
  2494  021F                     	;# 
  2495  028C                     	;# 
  2496  028C                     	;# 
  2497  028D                     	;# 
  2498  028D                     	;# 
  2499  028E                     	;# 
  2500  028F                     	;# 
  2501  0290                     	;# 
  2502  0290                     	;# 
  2503  0291                     	;# 
  2504  0292                     	;# 
  2505  0292                     	;# 
  2506  0293                     	;# 
  2507  0293                     	;# 
  2508  0294                     	;# 
  2509  0295                     	;# 
  2510  0296                     	;# 
  2511  0296                     	;# 
  2512  0297                     	;# 
  2513  0298                     	;# 
  2514  0298                     	;# 
  2515  0299                     	;# 
  2516  0299                     	;# 
  2517  029A                     	;# 
  2518  029B                     	;# 
  2519  029C                     	;# 
  2520  029C                     	;# 
  2521  029D                     	;# 
  2522  030C                     	;# 
  2523  030C                     	;# 
  2524  030D                     	;# 
  2525  030E                     	;# 
  2526  030F                     	;# 
  2527  0310                     	;# 
  2528  0310                     	;# 
  2529  0311                     	;# 
  2530  0312                     	;# 
  2531  0313                     	;# 
  2532  0314                     	;# 
  2533  0314                     	;# 
  2534  0315                     	;# 
  2535  0316                     	;# 
  2536  0317                     	;# 
  2537  0318                     	;# 
  2538  0318                     	;# 
  2539  0319                     	;# 
  2540  031A                     	;# 
  2541  031B                     	;# 
  2542  031C                     	;# 
  2543  031C                     	;# 
  2544  031D                     	;# 
  2545  031E                     	;# 
  2546  031F                     	;# 
  2547  038C                     	;# 
  2548  038C                     	;# 
  2549  038D                     	;# 
  2550  038E                     	;# 
  2551  0390                     	;# 
  2552  0390                     	;# 
  2553  0391                     	;# 
  2554  0392                     	;# 
  2555  040C                     	;# 
  2556  040D                     	;# 
  2557  040E                     	;# 
  2558  040F                     	;# 
  2559  0410                     	;# 
  2560  0411                     	;# 
  2561  0416                     	;# 
  2562  0416                     	;# 
  2563  0417                     	;# 
  2564  0418                     	;# 
  2565  0418                     	;# 
  2566  0419                     	;# 
  2567  041A                     	;# 
  2568  041A                     	;# 
  2569  041B                     	;# 
  2570  041C                     	;# 
  2571  041C                     	;# 
  2572  041D                     	;# 
  2573  041E                     	;# 
  2574  041F                     	;# 
  2575  048C                     	;# 
  2576  048C                     	;# 
  2577  048D                     	;# 
  2578  048E                     	;# 
  2579  048F                     	;# 
  2580  048F                     	;# 
  2581  0490                     	;# 
  2582  0491                     	;# 
  2583  0492                     	;# 
  2584  0492                     	;# 
  2585  0493                     	;# 
  2586  0494                     	;# 
  2587  0495                     	;# 
  2588  0495                     	;# 
  2589  0496                     	;# 
  2590  0497                     	;# 
  2591  0498                     	;# 
  2592  0499                     	;# 
  2593  049A                     	;# 
  2594  049B                     	;# 
  2595  049C                     	;# 
  2596  049D                     	;# 
  2597  050C                     	;# 
  2598  050C                     	;# 
  2599  050D                     	;# 
  2600  050E                     	;# 
  2601  050F                     	;# 
  2602  050F                     	;# 
  2603  0510                     	;# 
  2604  0511                     	;# 
  2605  0512                     	;# 
  2606  0512                     	;# 
  2607  0513                     	;# 
  2608  0514                     	;# 
  2609  0515                     	;# 
  2610  0515                     	;# 
  2611  0516                     	;# 
  2612  0517                     	;# 
  2613  0518                     	;# 
  2614  0519                     	;# 
  2615  051A                     	;# 
  2616  051B                     	;# 
  2617  051C                     	;# 
  2618  051D                     	;# 
  2619  058C                     	;# 
  2620  058C                     	;# 
  2621  058D                     	;# 
  2622  058E                     	;# 
  2623  058F                     	;# 
  2624  058F                     	;# 
  2625  0590                     	;# 
  2626  0591                     	;# 
  2627  0592                     	;# 
  2628  0593                     	;# 
  2629  060C                     	;# 
  2630  060D                     	;# 
  2631  060E                     	;# 
  2632  060F                     	;# 
  2633  0610                     	;# 
  2634  0611                     	;# 
  2635  0612                     	;# 
  2636  0613                     	;# 
  2637  0614                     	;# 
  2638  0616                     	;# 
  2639  0617                     	;# 
  2640  0618                     	;# 
  2641  0619                     	;# 
  2642  061A                     	;# 
  2643  061B                     	;# 
  2644  061C                     	;# 
  2645  061D                     	;# 
  2646  061E                     	;# 
  2647  068C                     	;# 
  2648  068D                     	;# 
  2649  068E                     	;# 
  2650  068F                     	;# 
  2651  0690                     	;# 
  2652  0691                     	;# 
  2653  0692                     	;# 
  2654  0693                     	;# 
  2655  0694                     	;# 
  2656  070C                     	;# 
  2657  070D                     	;# 
  2658  070E                     	;# 
  2659  070F                     	;# 
  2660  0710                     	;# 
  2661  0711                     	;# 
  2662  0712                     	;# 
  2663  0713                     	;# 
  2664  0714                     	;# 
  2665  0716                     	;# 
  2666  0717                     	;# 
  2667  0718                     	;# 
  2668  0719                     	;# 
  2669  071A                     	;# 
  2670  071B                     	;# 
  2671  071C                     	;# 
  2672  071D                     	;# 
  2673  071E                     	;# 
  2674  0796                     	;# 
  2675  0797                     	;# 
  2676  0798                     	;# 
  2677  0799                     	;# 
  2678  079A                     	;# 
  2679  079B                     	;# 
  2680  080C                     	;# 
  2681  080D                     	;# 
  2682  080E                     	;# 
  2683  080F                     	;# 
  2684  0810                     	;# 
  2685  0811                     	;# 
  2686  0812                     	;# 
  2687  0813                     	;# 
  2688  0814                     	;# 
  2689  081A                     	;# 
  2690  081B                     	;# 
  2691  081C                     	;# 
  2692  081D                     	;# 
  2693  081E                     	;# 
  2694  081F                     	;# 
  2695  088C                     	;# 
  2696  088D                     	;# 
  2697  088E                     	;# 
  2698  088F                     	;# 
  2699  0890                     	;# 
  2700  0891                     	;# 
  2701  0892                     	;# 
  2702  0893                     	;# 
  2703  0895                     	;# 
  2704  0896                     	;# 
  2705  0897                     	;# 
  2706  0898                     	;# 
  2707  0899                     	;# 
  2708  089A                     	;# 
  2709  089B                     	;# 
  2710  090C                     	;# 
  2711  090E                     	;# 
  2712  090F                     	;# 
  2713  091F                     	;# 
  2714  091F                     	;# 
  2715  098F                     	;# 
  2716  098F                     	;# 
  2717  0990                     	;# 
  2718  0991                     	;# 
  2719  0992                     	;# 
  2720  0993                     	;# 
  2721  0994                     	;# 
  2722  0995                     	;# 
  2723  0996                     	;# 
  2724  0997                     	;# 
  2725  0E0F                     	;# 
  2726  0E10                     	;# 
  2727  0E11                     	;# 
  2728  0E12                     	;# 
  2729  0E13                     	;# 
  2730  0E14                     	;# 
  2731  0E15                     	;# 
  2732  0E16                     	;# 
  2733  0E17                     	;# 
  2734  0E18                     	;# 
  2735  0E19                     	;# 
  2736  0E1A                     	;# 
  2737  0E1B                     	;# 
  2738  0E1C                     	;# 
  2739  0E1D                     	;# 
  2740  0E1E                     	;# 
  2741  0E1F                     	;# 
  2742  0E20                     	;# 
  2743  0E21                     	;# 
  2744  0E22                     	;# 
  2745  0E23                     	;# 
  2746  0E24                     	;# 
  2747  0E25                     	;# 
  2748  0E26                     	;# 
  2749  0E27                     	;# 
  2750  0E28                     	;# 
  2751  0E29                     	;# 
  2752  0E2A                     	;# 
  2753  0E2B                     	;# 
  2754  0E2C                     	;# 
  2755  0E2D                     	;# 
  2756  0E2E                     	;# 
  2757  0E2F                     	;# 
  2758  0E30                     	;# 
  2759  0E31                     	;# 
  2760  0E32                     	;# 
  2761  0E33                     	;# 
  2762  0E34                     	;# 
  2763  0E35                     	;# 
  2764  0E36                     	;# 
  2765  0E37                     	;# 
  2766  0E8F                     	;# 
  2767  0E90                     	;# 
  2768  0E91                     	;# 
  2769  0E92                     	;# 
  2770  0E93                     	;# 
  2771  0E94                     	;# 
  2772  0E95                     	;# 
  2773  0E96                     	;# 
  2774  0E97                     	;# 
  2775  0E9C                     	;# 
  2776  0E9D                     	;# 
  2777  0E9E                     	;# 
  2778  0EA1                     	;# 
  2779  0EA2                     	;# 
  2780  0EA3                     	;# 
  2781  0EA4                     	;# 
  2782  0EA5                     	;# 
  2783  0EA9                     	;# 
  2784  0EAA                     	;# 
  2785  0EAB                     	;# 
  2786  0EAC                     	;# 
  2787  0EB1                     	;# 
  2788  0EB2                     	;# 
  2789  0EB3                     	;# 
  2790  0EB8                     	;# 
  2791  0EB9                     	;# 
  2792  0EBA                     	;# 
  2793  0EBB                     	;# 
  2794  0EBC                     	;# 
  2795  0EBD                     	;# 
  2796  0EBE                     	;# 
  2797  0EC3                     	;# 
  2798  0EC5                     	;# 
  2799  0EC6                     	;# 
  2800  0EC7                     	;# 
  2801  0EC8                     	;# 
  2802  0EC9                     	;# 
  2803  0ECA                     	;# 
  2804  0ECB                     	;# 
  2805  0ECC                     	;# 
  2806  0F10                     	;# 
  2807  0F11                     	;# 
  2808  0F12                     	;# 
  2809  0F13                     	;# 
  2810  0F14                     	;# 
  2811  0F15                     	;# 
  2812  0F16                     	;# 
  2813  0F17                     	;# 
  2814  0F18                     	;# 
  2815  0F19                     	;# 
  2816  0F1A                     	;# 
  2817  0F1B                     	;# 
  2818  0F1C                     	;# 
  2819  0F1D                     	;# 
  2820  0F1E                     	;# 
  2821  0F1F                     	;# 
  2822  0F20                     	;# 
  2823  0F21                     	;# 
  2824  0F22                     	;# 
  2825  0F23                     	;# 
  2826  0F24                     	;# 
  2827  0F25                     	;# 
  2828  0F26                     	;# 
  2829  0F27                     	;# 
  2830  0F28                     	;# 
  2831  0F29                     	;# 
  2832  0F2A                     	;# 
  2833  0F2B                     	;# 
  2834  0F2C                     	;# 
  2835  0F2D                     	;# 
  2836  0F2E                     	;# 
  2837  0F2F                     	;# 
  2838  0F30                     	;# 
  2839  0F31                     	;# 
  2840  0F32                     	;# 
  2841  0F38                     	;# 
  2842  0F39                     	;# 
  2843  0F3A                     	;# 
  2844  0F3B                     	;# 
  2845  0F3C                     	;# 
  2846  0F3D                     	;# 
  2847  0F3E                     	;# 
  2848  0F3F                     	;# 
  2849  0F40                     	;# 
  2850  0F41                     	;# 
  2851  0F43                     	;# 
  2852  0F44                     	;# 
  2853  0F45                     	;# 
  2854  0F46                     	;# 
  2855  0F47                     	;# 
  2856  0F48                     	;# 
  2857  0F49                     	;# 
  2858  0F4A                     	;# 
  2859  0F4B                     	;# 
  2860  0F4C                     	;# 
  2861  0F4E                     	;# 
  2862  0F4F                     	;# 
  2863  0F50                     	;# 
  2864  0F51                     	;# 
  2865  0F52                     	;# 
  2866  0F53                     	;# 
  2867  0F54                     	;# 
  2868  0F55                     	;# 
  2869  0F56                     	;# 
  2870  0F57                     	;# 
  2871  0F59                     	;# 
  2872  0F5A                     	;# 
  2873  0F5B                     	;# 
  2874  0F5C                     	;# 
  2875  0F5D                     	;# 
  2876  0F61                     	;# 
  2877  0F62                     	;# 
  2878  0F64                     	;# 
  2879  0F65                     	;# 
  2880  0F66                     	;# 
  2881  0F67                     	;# 
  2882  0F68                     	;# 
  2883  0F69                     	;# 
  2884  0F6A                     	;# 
  2885  0F6B                     	;# 
  2886  0F6C                     	;# 
  2887  0F6D                     	;# 
  2888  0FE4                     	;# 
  2889  0FE5                     	;# 
  2890  0FE6                     	;# 
  2891  0FE7                     	;# 
  2892  0FE8                     	;# 
  2893  0FE9                     	;# 
  2894  0FEA                     	;# 
  2895  0FEB                     	;# 
  2896  0FED                     	;# 
  2897  0FEE                     	;# 
  2898  0FEF                     	;# 
  2899  0000                     	;# 
  2900  0001                     	;# 
  2901  0002                     	;# 
  2902  0003                     	;# 
  2903  0004                     	;# 
  2904  0005                     	;# 
  2905  0006                     	;# 
  2906  0007                     	;# 
  2907  0008                     	;# 
  2908  0009                     	;# 
  2909  000A                     	;# 
  2910  000B                     	;# 
  2911  000C                     	;# 
  2912  000D                     	;# 
  2913  000E                     	;# 
  2914  000F                     	;# 
  2915  0010                     	;# 
  2916  0011                     	;# 
  2917  0012                     	;# 
  2918  0013                     	;# 
  2919  0014                     	;# 
  2920  0015                     	;# 
  2921  0016                     	;# 
  2922  0017                     	;# 
  2923  0018                     	;# 
  2924  0019                     	;# 
  2925  001A                     	;# 
  2926  001C                     	;# 
  2927  001C                     	;# 
  2928  001D                     	;# 
  2929  001D                     	;# 
  2930  001E                     	;# 
  2931  001F                     	;# 
  2932  008C                     	;# 
  2933  008C                     	;# 
  2934  008D                     	;# 
  2935  008E                     	;# 
  2936  008E                     	;# 
  2937  008F                     	;# 
  2938  0090                     	;# 
  2939  0090                     	;# 
  2940  0091                     	;# 
  2941  0093                     	;# 
  2942  0094                     	;# 
  2943  0095                     	;# 
  2944  0096                     	;# 
  2945  0097                     	;# 
  2946  0098                     	;# 
  2947  0099                     	;# 
  2948  009A                     	;# 
  2949  009B                     	;# 
  2950  009C                     	;# 
  2951  009D                     	;# 
  2952  009E                     	;# 
  2953  010C                     	;# 
  2954  010D                     	;# 
  2955  010E                     	;# 
  2956  010E                     	;# 
  2957  010F                     	;# 
  2958  0110                     	;# 
  2959  0110                     	;# 
  2960  0111                     	;# 
  2961  0112                     	;# 
  2962  0112                     	;# 
  2963  0113                     	;# 
  2964  0114                     	;# 
  2965  0114                     	;# 
  2966  0115                     	;# 
  2967  0116                     	;# 
  2968  0116                     	;# 
  2969  0117                     	;# 
  2970  0119                     	;# 
  2971  0119                     	;# 
  2972  0119                     	;# 
  2973  011A                     	;# 
  2974  011A                     	;# 
  2975  011A                     	;# 
  2976  011B                     	;# 
  2977  011B                     	;# 
  2978  011B                     	;# 
  2979  011B                     	;# 
  2980  011B                     	;# 
  2981  011C                     	;# 
  2982  011C                     	;# 
  2983  011C                     	;# 
  2984  011D                     	;# 
  2985  011D                     	;# 
  2986  011D                     	;# 
  2987  011E                     	;# 
  2988  011E                     	;# 
  2989  011E                     	;# 
  2990  011F                     	;# 
  2991  011F                     	;# 
  2992  011F                     	;# 
  2993  011F                     	;# 
  2994  011F                     	;# 
  2995  018C                     	;# 
  2996  018D                     	;# 
  2997  018E                     	;# 
  2998  018F                     	;# 
  2999  0190                     	;# 
  3000  0191                     	;# 
  3001  0192                     	;# 
  3002  0196                     	;# 
  3003  0197                     	;# 
  3004  0198                     	;# 
  3005  0199                     	;# 
  3006  019A                     	;# 
  3007  019B                     	;# 
  3008  019C                     	;# 
  3009  020C                     	;# 
  3010  020C                     	;# 
  3011  020D                     	;# 
  3012  020E                     	;# 
  3013  020F                     	;# 
  3014  020F                     	;# 
  3015  0210                     	;# 
  3016  0210                     	;# 
  3017  0211                     	;# 
  3018  0211                     	;# 
  3019  0212                     	;# 
  3020  0212                     	;# 
  3021  0213                     	;# 
  3022  0214                     	;# 
  3023  0215                     	;# 
  3024  0215                     	;# 
  3025  0216                     	;# 
  3026  0216                     	;# 
  3027  0217                     	;# 
  3028  0217                     	;# 
  3029  0218                     	;# 
  3030  0218                     	;# 
  3031  0219                     	;# 
  3032  021A                     	;# 
  3033  021B                     	;# 
  3034  021B                     	;# 
  3035  021C                     	;# 
  3036  021C                     	;# 
  3037  021D                     	;# 
  3038  021D                     	;# 
  3039  021E                     	;# 
  3040  021F                     	;# 
  3041  028C                     	;# 
  3042  028C                     	;# 
  3043  028D                     	;# 
  3044  028D                     	;# 
  3045  028E                     	;# 
  3046  028F                     	;# 
  3047  0290                     	;# 
  3048  0290                     	;# 
  3049  0291                     	;# 
  3050  0292                     	;# 
  3051  0292                     	;# 
  3052  0293                     	;# 
  3053  0293                     	;# 
  3054  0294                     	;# 
  3055  0295                     	;# 
  3056  0296                     	;# 
  3057  0296                     	;# 
  3058  0297                     	;# 
  3059  0298                     	;# 
  3060  0298                     	;# 
  3061  0299                     	;# 
  3062  0299                     	;# 
  3063  029A                     	;# 
  3064  029B                     	;# 
  3065  029C                     	;# 
  3066  029C                     	;# 
  3067  029D                     	;# 
  3068  030C                     	;# 
  3069  030C                     	;# 
  3070  030D                     	;# 
  3071  030E                     	;# 
  3072  030F                     	;# 
  3073  0310                     	;# 
  3074  0310                     	;# 
  3075  0311                     	;# 
  3076  0312                     	;# 
  3077  0313                     	;# 
  3078  0314                     	;# 
  3079  0314                     	;# 
  3080  0315                     	;# 
  3081  0316                     	;# 
  3082  0317                     	;# 
  3083  0318                     	;# 
  3084  0318                     	;# 
  3085  0319                     	;# 
  3086  031A                     	;# 
  3087  031B                     	;# 
  3088  031C                     	;# 
  3089  031C                     	;# 
  3090  031D                     	;# 
  3091  031E                     	;# 
  3092  031F                     	;# 
  3093  038C                     	;# 
  3094  038C                     	;# 
  3095  038D                     	;# 
  3096  038E                     	;# 
  3097  0390                     	;# 
  3098  0390                     	;# 
  3099  0391                     	;# 
  3100  0392                     	;# 
  3101  040C                     	;# 
  3102  040D                     	;# 
  3103  040E                     	;# 
  3104  040F                     	;# 
  3105  0410                     	;# 
  3106  0411                     	;# 
  3107  0416                     	;# 
  3108  0416                     	;# 
  3109  0417                     	;# 
  3110  0418                     	;# 
  3111  0418                     	;# 
  3112  0419                     	;# 
  3113  041A                     	;# 
  3114  041A                     	;# 
  3115  041B                     	;# 
  3116  041C                     	;# 
  3117  041C                     	;# 
  3118  041D                     	;# 
  3119  041E                     	;# 
  3120  041F                     	;# 
  3121  048C                     	;# 
  3122  048C                     	;# 
  3123  048D                     	;# 
  3124  048E                     	;# 
  3125  048F                     	;# 
  3126  048F                     	;# 
  3127  0490                     	;# 
  3128  0491                     	;# 
  3129  0492                     	;# 
  3130  0492                     	;# 
  3131  0493                     	;# 
  3132  0494                     	;# 
  3133  0495                     	;# 
  3134  0495                     	;# 
  3135  0496                     	;# 
  3136  0497                     	;# 
  3137  0498                     	;# 
  3138  0499                     	;# 
  3139  049A                     	;# 
  3140  049B                     	;# 
  3141  049C                     	;# 
  3142  049D                     	;# 
  3143  050C                     	;# 
  3144  050C                     	;# 
  3145  050D                     	;# 
  3146  050E                     	;# 
  3147  050F                     	;# 
  3148  050F                     	;# 
  3149  0510                     	;# 
  3150  0511                     	;# 
  3151  0512                     	;# 
  3152  0512                     	;# 
  3153  0513                     	;# 
  3154  0514                     	;# 
  3155  0515                     	;# 
  3156  0515                     	;# 
  3157  0516                     	;# 
  3158  0517                     	;# 
  3159  0518                     	;# 
  3160  0519                     	;# 
  3161  051A                     	;# 
  3162  051B                     	;# 
  3163  051C                     	;# 
  3164  051D                     	;# 
  3165  058C                     	;# 
  3166  058C                     	;# 
  3167  058D                     	;# 
  3168  058E                     	;# 
  3169  058F                     	;# 
  3170  058F                     	;# 
  3171  0590                     	;# 
  3172  0591                     	;# 
  3173  0592                     	;# 
  3174  0593                     	;# 
  3175  060C                     	;# 
  3176  060D                     	;# 
  3177  060E                     	;# 
  3178  060F                     	;# 
  3179  0610                     	;# 
  3180  0611                     	;# 
  3181  0612                     	;# 
  3182  0613                     	;# 
  3183  0614                     	;# 
  3184  0616                     	;# 
  3185  0617                     	;# 
  3186  0618                     	;# 
  3187  0619                     	;# 
  3188  061A                     	;# 
  3189  061B                     	;# 
  3190  061C                     	;# 
  3191  061D                     	;# 
  3192  061E                     	;# 
  3193  068C                     	;# 
  3194  068D                     	;# 
  3195  068E                     	;# 
  3196  068F                     	;# 
  3197  0690                     	;# 
  3198  0691                     	;# 
  3199  0692                     	;# 
  3200  0693                     	;# 
  3201  0694                     	;# 
  3202  070C                     	;# 
  3203  070D                     	;# 
  3204  070E                     	;# 
  3205  070F                     	;# 
  3206  0710                     	;# 
  3207  0711                     	;# 
  3208  0712                     	;# 
  3209  0713                     	;# 
  3210  0714                     	;# 
  3211  0716                     	;# 
  3212  0717                     	;# 
  3213  0718                     	;# 
  3214  0719                     	;# 
  3215  071A                     	;# 
  3216  071B                     	;# 
  3217  071C                     	;# 
  3218  071D                     	;# 
  3219  071E                     	;# 
  3220  0796                     	;# 
  3221  0797                     	;# 
  3222  0798                     	;# 
  3223  0799                     	;# 
  3224  079A                     	;# 
  3225  079B                     	;# 
  3226  080C                     	;# 
  3227  080D                     	;# 
  3228  080E                     	;# 
  3229  080F                     	;# 
  3230  0810                     	;# 
  3231  0811                     	;# 
  3232  0812                     	;# 
  3233  0813                     	;# 
  3234  0814                     	;# 
  3235  081A                     	;# 
  3236  081B                     	;# 
  3237  081C                     	;# 
  3238  081D                     	;# 
  3239  081E                     	;# 
  3240  081F                     	;# 
  3241  088C                     	;# 
  3242  088D                     	;# 
  3243  088E                     	;# 
  3244  088F                     	;# 
  3245  0890                     	;# 
  3246  0891                     	;# 
  3247  0892                     	;# 
  3248  0893                     	;# 
  3249  0895                     	;# 
  3250  0896                     	;# 
  3251  0897                     	;# 
  3252  0898                     	;# 
  3253  0899                     	;# 
  3254  089A                     	;# 
  3255  089B                     	;# 
  3256  090C                     	;# 
  3257  090E                     	;# 
  3258  090F                     	;# 
  3259  091F                     	;# 
  3260  091F                     	;# 
  3261  098F                     	;# 
  3262  098F                     	;# 
  3263  0990                     	;# 
  3264  0991                     	;# 
  3265  0992                     	;# 
  3266  0993                     	;# 
  3267  0994                     	;# 
  3268  0995                     	;# 
  3269  0996                     	;# 
  3270  0997                     	;# 
  3271  0E0F                     	;# 
  3272  0E10                     	;# 
  3273  0E11                     	;# 
  3274  0E12                     	;# 
  3275  0E13                     	;# 
  3276  0E14                     	;# 
  3277  0E15                     	;# 
  3278  0E16                     	;# 
  3279  0E17                     	;# 
  3280  0E18                     	;# 
  3281  0E19                     	;# 
  3282  0E1A                     	;# 
  3283  0E1B                     	;# 
  3284  0E1C                     	;# 
  3285  0E1D                     	;# 
  3286  0E1E                     	;# 
  3287  0E1F                     	;# 
  3288  0E20                     	;# 
  3289  0E21                     	;# 
  3290  0E22                     	;# 
  3291  0E23                     	;# 
  3292  0E24                     	;# 
  3293  0E25                     	;# 
  3294  0E26                     	;# 
  3295  0E27                     	;# 
  3296  0E28                     	;# 
  3297  0E29                     	;# 
  3298  0E2A                     	;# 
  3299  0E2B                     	;# 
  3300  0E2C                     	;# 
  3301  0E2D                     	;# 
  3302  0E2E                     	;# 
  3303  0E2F                     	;# 
  3304  0E30                     	;# 
  3305  0E31                     	;# 
  3306  0E32                     	;# 
  3307  0E33                     	;# 
  3308  0E34                     	;# 
  3309  0E35                     	;# 
  3310  0E36                     	;# 
  3311  0E37                     	;# 
  3312  0E8F                     	;# 
  3313  0E90                     	;# 
  3314  0E91                     	;# 
  3315  0E92                     	;# 
  3316  0E93                     	;# 
  3317  0E94                     	;# 
  3318  0E95                     	;# 
  3319  0E96                     	;# 
  3320  0E97                     	;# 
  3321  0E9C                     	;# 
  3322  0E9D                     	;# 
  3323  0E9E                     	;# 
  3324  0EA1                     	;# 
  3325  0EA2                     	;# 
  3326  0EA3                     	;# 
  3327  0EA4                     	;# 
  3328  0EA5                     	;# 
  3329  0EA9                     	;# 
  3330  0EAA                     	;# 
  3331  0EAB                     	;# 
  3332  0EAC                     	;# 
  3333  0EB1                     	;# 
  3334  0EB2                     	;# 
  3335  0EB3                     	;# 
  3336  0EB8                     	;# 
  3337  0EB9                     	;# 
  3338  0EBA                     	;# 
  3339  0EBB                     	;# 
  3340  0EBC                     	;# 
  3341  0EBD                     	;# 
  3342  0EBE                     	;# 
  3343  0EC3                     	;# 
  3344  0EC5                     	;# 
  3345  0EC6                     	;# 
  3346  0EC7                     	;# 
  3347  0EC8                     	;# 
  3348  0EC9                     	;# 
  3349  0ECA                     	;# 
  3350  0ECB                     	;# 
  3351  0ECC                     	;# 
  3352  0F10                     	;# 
  3353  0F11                     	;# 
  3354  0F12                     	;# 
  3355  0F13                     	;# 
  3356  0F14                     	;# 
  3357  0F15                     	;# 
  3358  0F16                     	;# 
  3359  0F17                     	;# 
  3360  0F18                     	;# 
  3361  0F19                     	;# 
  3362  0F1A                     	;# 
  3363  0F1B                     	;# 
  3364  0F1C                     	;# 
  3365  0F1D                     	;# 
  3366  0F1E                     	;# 
  3367  0F1F                     	;# 
  3368  0F20                     	;# 
  3369  0F21                     	;# 
  3370  0F22                     	;# 
  3371  0F23                     	;# 
  3372  0F24                     	;# 
  3373  0F25                     	;# 
  3374  0F26                     	;# 
  3375  0F27                     	;# 
  3376  0F28                     	;# 
  3377  0F29                     	;# 
  3378  0F2A                     	;# 
  3379  0F2B                     	;# 
  3380  0F2C                     	;# 
  3381  0F2D                     	;# 
  3382  0F2E                     	;# 
  3383  0F2F                     	;# 
  3384  0F30                     	;# 
  3385  0F31                     	;# 
  3386  0F32                     	;# 
  3387  0F38                     	;# 
  3388  0F39                     	;# 
  3389  0F3A                     	;# 
  3390  0F3B                     	;# 
  3391  0F3C                     	;# 
  3392  0F3D                     	;# 
  3393  0F3E                     	;# 
  3394  0F3F                     	;# 
  3395  0F40                     	;# 
  3396  0F41                     	;# 
  3397  0F43                     	;# 
  3398  0F44                     	;# 
  3399  0F45                     	;# 
  3400  0F46                     	;# 
  3401  0F47                     	;# 
  3402  0F48                     	;# 
  3403  0F49                     	;# 
  3404  0F4A                     	;# 
  3405  0F4B                     	;# 
  3406  0F4C                     	;# 
  3407  0F4E                     	;# 
  3408  0F4F                     	;# 
  3409  0F50                     	;# 
  3410  0F51                     	;# 
  3411  0F52                     	;# 
  3412  0F53                     	;# 
  3413  0F54                     	;# 
  3414  0F55                     	;# 
  3415  0F56                     	;# 
  3416  0F57                     	;# 
  3417  0F59                     	;# 
  3418  0F5A                     	;# 
  3419  0F5B                     	;# 
  3420  0F5C                     	;# 
  3421  0F5D                     	;# 
  3422  0F61                     	;# 
  3423  0F62                     	;# 
  3424  0F64                     	;# 
  3425  0F65                     	;# 
  3426  0F66                     	;# 
  3427  0F67                     	;# 
  3428  0F68                     	;# 
  3429  0F69                     	;# 
  3430  0F6A                     	;# 
  3431  0F6B                     	;# 
  3432  0F6C                     	;# 
  3433  0F6D                     	;# 
  3434  0FE4                     	;# 
  3435  0FE5                     	;# 
  3436  0FE6                     	;# 
  3437  0FE7                     	;# 
  3438  0FE8                     	;# 
  3439  0FE9                     	;# 
  3440  0FEA                     	;# 
  3441  0FEB                     	;# 
  3442  0FED                     	;# 
  3443  0FEE                     	;# 
  3444  0FEF                     	;# 
  3445  0000                     	;# 
  3446  0001                     	;# 
  3447  0002                     	;# 
  3448  0003                     	;# 
  3449  0004                     	;# 
  3450  0005                     	;# 
  3451  0006                     	;# 
  3452  0007                     	;# 
  3453  0008                     	;# 
  3454  0009                     	;# 
  3455  000A                     	;# 
  3456  000B                     	;# 
  3457  000C                     	;# 
  3458  000D                     	;# 
  3459  000E                     	;# 
  3460  000F                     	;# 
  3461  0010                     	;# 
  3462  0011                     	;# 
  3463  0012                     	;# 
  3464  0013                     	;# 
  3465  0014                     	;# 
  3466  0015                     	;# 
  3467  0016                     	;# 
  3468  0017                     	;# 
  3469  0018                     	;# 
  3470  0019                     	;# 
  3471  001A                     	;# 
  3472  001C                     	;# 
  3473  001C                     	;# 
  3474  001D                     	;# 
  3475  001D                     	;# 
  3476  001E                     	;# 
  3477  001F                     	;# 
  3478  008C                     	;# 
  3479  008C                     	;# 
  3480  008D                     	;# 
  3481  008E                     	;# 
  3482  008E                     	;# 
  3483  008F                     	;# 
  3484  0090                     	;# 
  3485  0090                     	;# 
  3486  0091                     	;# 
  3487  0093                     	;# 
  3488  0094                     	;# 
  3489  0095                     	;# 
  3490  0096                     	;# 
  3491  0097                     	;# 
  3492  0098                     	;# 
  3493  0099                     	;# 
  3494  009A                     	;# 
  3495  009B                     	;# 
  3496  009C                     	;# 
  3497  009D                     	;# 
  3498  009E                     	;# 
  3499  010C                     	;# 
  3500  010D                     	;# 
  3501  010E                     	;# 
  3502  010E                     	;# 
  3503  010F                     	;# 
  3504  0110                     	;# 
  3505  0110                     	;# 
  3506  0111                     	;# 
  3507  0112                     	;# 
  3508  0112                     	;# 
  3509  0113                     	;# 
  3510  0114                     	;# 
  3511  0114                     	;# 
  3512  0115                     	;# 
  3513  0116                     	;# 
  3514  0116                     	;# 
  3515  0117                     	;# 
  3516  0119                     	;# 
  3517  0119                     	;# 
  3518  0119                     	;# 
  3519  011A                     	;# 
  3520  011A                     	;# 
  3521  011A                     	;# 
  3522  011B                     	;# 
  3523  011B                     	;# 
  3524  011B                     	;# 
  3525  011B                     	;# 
  3526  011B                     	;# 
  3527  011C                     	;# 
  3528  011C                     	;# 
  3529  011C                     	;# 
  3530  011D                     	;# 
  3531  011D                     	;# 
  3532  011D                     	;# 
  3533  011E                     	;# 
  3534  011E                     	;# 
  3535  011E                     	;# 
  3536  011F                     	;# 
  3537  011F                     	;# 
  3538  011F                     	;# 
  3539  011F                     	;# 
  3540  011F                     	;# 
  3541  018C                     	;# 
  3542  018D                     	;# 
  3543  018E                     	;# 
  3544  018F                     	;# 
  3545  0190                     	;# 
  3546  0191                     	;# 
  3547  0192                     	;# 
  3548  0196                     	;# 
  3549  0197                     	;# 
  3550  0198                     	;# 
  3551  0199                     	;# 
  3552  019A                     	;# 
  3553  019B                     	;# 
  3554  019C                     	;# 
  3555  020C                     	;# 
  3556  020C                     	;# 
  3557  020D                     	;# 
  3558  020E                     	;# 
  3559  020F                     	;# 
  3560  020F                     	;# 
  3561  0210                     	;# 
  3562  0210                     	;# 
  3563  0211                     	;# 
  3564  0211                     	;# 
  3565  0212                     	;# 
  3566  0212                     	;# 
  3567  0213                     	;# 
  3568  0214                     	;# 
  3569  0215                     	;# 
  3570  0215                     	;# 
  3571  0216                     	;# 
  3572  0216                     	;# 
  3573  0217                     	;# 
  3574  0217                     	;# 
  3575  0218                     	;# 
  3576  0218                     	;# 
  3577  0219                     	;# 
  3578  021A                     	;# 
  3579  021B                     	;# 
  3580  021B                     	;# 
  3581  021C                     	;# 
  3582  021C                     	;# 
  3583  021D                     	;# 
  3584  021D                     	;# 
  3585  021E                     	;# 
  3586  021F                     	;# 
  3587  028C                     	;# 
  3588  028C                     	;# 
  3589  028D                     	;# 
  3590  028D                     	;# 
  3591  028E                     	;# 
  3592  028F                     	;# 
  3593  0290                     	;# 
  3594  0290                     	;# 
  3595  0291                     	;# 
  3596  0292                     	;# 
  3597  0292                     	;# 
  3598  0293                     	;# 
  3599  0293                     	;# 
  3600  0294                     	;# 
  3601  0295                     	;# 
  3602  0296                     	;# 
  3603  0296                     	;# 
  3604  0297                     	;# 
  3605  0298                     	;# 
  3606  0298                     	;# 
  3607  0299                     	;# 
  3608  0299                     	;# 
  3609  029A                     	;# 
  3610  029B                     	;# 
  3611  029C                     	;# 
  3612  029C                     	;# 
  3613  029D                     	;# 
  3614  030C                     	;# 
  3615  030C                     	;# 
  3616  030D                     	;# 
  3617  030E                     	;# 
  3618  030F                     	;# 
  3619  0310                     	;# 
  3620  0310                     	;# 
  3621  0311                     	;# 
  3622  0312                     	;# 
  3623  0313                     	;# 
  3624  0314                     	;# 
  3625  0314                     	;# 
  3626  0315                     	;# 
  3627  0316                     	;# 
  3628  0317                     	;# 
  3629  0318                     	;# 
  3630  0318                     	;# 
  3631  0319                     	;# 
  3632  031A                     	;# 
  3633  031B                     	;# 
  3634  031C                     	;# 
  3635  031C                     	;# 
  3636  031D                     	;# 
  3637  031E                     	;# 
  3638  031F                     	;# 
  3639  038C                     	;# 
  3640  038C                     	;# 
  3641  038D                     	;# 
  3642  038E                     	;# 
  3643  0390                     	;# 
  3644  0390                     	;# 
  3645  0391                     	;# 
  3646  0392                     	;# 
  3647  040C                     	;# 
  3648  040D                     	;# 
  3649  040E                     	;# 
  3650  040F                     	;# 
  3651  0410                     	;# 
  3652  0411                     	;# 
  3653  0416                     	;# 
  3654  0416                     	;# 
  3655  0417                     	;# 
  3656  0418                     	;# 
  3657  0418                     	;# 
  3658  0419                     	;# 
  3659  041A                     	;# 
  3660  041A                     	;# 
  3661  041B                     	;# 
  3662  041C                     	;# 
  3663  041C                     	;# 
  3664  041D                     	;# 
  3665  041E                     	;# 
  3666  041F                     	;# 
  3667  048C                     	;# 
  3668  048C                     	;# 
  3669  048D                     	;# 
  3670  048E                     	;# 
  3671  048F                     	;# 
  3672  048F                     	;# 
  3673  0490                     	;# 
  3674  0491                     	;# 
  3675  0492                     	;# 
  3676  0492                     	;# 
  3677  0493                     	;# 
  3678  0494                     	;# 
  3679  0495                     	;# 
  3680  0495                     	;# 
  3681  0496                     	;# 
  3682  0497                     	;# 
  3683  0498                     	;# 
  3684  0499                     	;# 
  3685  049A                     	;# 
  3686  049B                     	;# 
  3687  049C                     	;# 
  3688  049D                     	;# 
  3689  050C                     	;# 
  3690  050C                     	;# 
  3691  050D                     	;# 
  3692  050E                     	;# 
  3693  050F                     	;# 
  3694  050F                     	;# 
  3695  0510                     	;# 
  3696  0511                     	;# 
  3697  0512                     	;# 
  3698  0512                     	;# 
  3699  0513                     	;# 
  3700  0514                     	;# 
  3701  0515                     	;# 
  3702  0515                     	;# 
  3703  0516                     	;# 
  3704  0517                     	;# 
  3705  0518                     	;# 
  3706  0519                     	;# 
  3707  051A                     	;# 
  3708  051B                     	;# 
  3709  051C                     	;# 
  3710  051D                     	;# 
  3711  058C                     	;# 
  3712  058C                     	;# 
  3713  058D                     	;# 
  3714  058E                     	;# 
  3715  058F                     	;# 
  3716  058F                     	;# 
  3717  0590                     	;# 
  3718  0591                     	;# 
  3719  0592                     	;# 
  3720  0593                     	;# 
  3721  060C                     	;# 
  3722  060D                     	;# 
  3723  060E                     	;# 
  3724  060F                     	;# 
  3725  0610                     	;# 
  3726  0611                     	;# 
  3727  0612                     	;# 
  3728  0613                     	;# 
  3729  0614                     	;# 
  3730  0616                     	;# 
  3731  0617                     	;# 
  3732  0618                     	;# 
  3733  0619                     	;# 
  3734  061A                     	;# 
  3735  061B                     	;# 
  3736  061C                     	;# 
  3737  061D                     	;# 
  3738  061E                     	;# 
  3739  068C                     	;# 
  3740  068D                     	;# 
  3741  068E                     	;# 
  3742  068F                     	;# 
  3743  0690                     	;# 
  3744  0691                     	;# 
  3745  0692                     	;# 
  3746  0693                     	;# 
  3747  0694                     	;# 
  3748  070C                     	;# 
  3749  070D                     	;# 
  3750  070E                     	;# 
  3751  070F                     	;# 
  3752  0710                     	;# 
  3753  0711                     	;# 
  3754  0712                     	;# 
  3755  0713                     	;# 
  3756  0714                     	;# 
  3757  0716                     	;# 
  3758  0717                     	;# 
  3759  0718                     	;# 
  3760  0719                     	;# 
  3761  071A                     	;# 
  3762  071B                     	;# 
  3763  071C                     	;# 
  3764  071D                     	;# 
  3765  071E                     	;# 
  3766  0796                     	;# 
  3767  0797                     	;# 
  3768  0798                     	;# 
  3769  0799                     	;# 
  3770  079A                     	;# 
  3771  079B                     	;# 
  3772  080C                     	;# 
  3773  080D                     	;# 
  3774  080E                     	;# 
  3775  080F                     	;# 
  3776  0810                     	;# 
  3777  0811                     	;# 
  3778  0812                     	;# 
  3779  0813                     	;# 
  3780  0814                     	;# 
  3781  081A                     	;# 
  3782  081B                     	;# 
  3783  081C                     	;# 
  3784  081D                     	;# 
  3785  081E                     	;# 
  3786  081F                     	;# 
  3787  088C                     	;# 
  3788  088D                     	;# 
  3789  088E                     	;# 
  3790  088F                     	;# 
  3791  0890                     	;# 
  3792  0891                     	;# 
  3793  0892                     	;# 
  3794  0893                     	;# 
  3795  0895                     	;# 
  3796  0896                     	;# 
  3797  0897                     	;# 
  3798  0898                     	;# 
  3799  0899                     	;# 
  3800  089A                     	;# 
  3801  089B                     	;# 
  3802  090C                     	;# 
  3803  090E                     	;# 
  3804  090F                     	;# 
  3805  091F                     	;# 
  3806  091F                     	;# 
  3807  098F                     	;# 
  3808  098F                     	;# 
  3809  0990                     	;# 
  3810  0991                     	;# 
  3811  0992                     	;# 
  3812  0993                     	;# 
  3813  0994                     	;# 
  3814  0995                     	;# 
  3815  0996                     	;# 
  3816  0997                     	;# 
  3817  0E0F                     	;# 
  3818  0E10                     	;# 
  3819  0E11                     	;# 
  3820  0E12                     	;# 
  3821  0E13                     	;# 
  3822  0E14                     	;# 
  3823  0E15                     	;# 
  3824  0E16                     	;# 
  3825  0E17                     	;# 
  3826  0E18                     	;# 
  3827  0E19                     	;# 
  3828  0E1A                     	;# 
  3829  0E1B                     	;# 
  3830  0E1C                     	;# 
  3831  0E1D                     	;# 
  3832  0E1E                     	;# 
  3833  0E1F                     	;# 
  3834  0E20                     	;# 
  3835  0E21                     	;# 
  3836  0E22                     	;# 
  3837  0E23                     	;# 
  3838  0E24                     	;# 
  3839  0E25                     	;# 
  3840  0E26                     	;# 
  3841  0E27                     	;# 
  3842  0E28                     	;# 
  3843  0E29                     	;# 
  3844  0E2A                     	;# 
  3845  0E2B                     	;# 
  3846  0E2C                     	;# 
  3847  0E2D                     	;# 
  3848  0E2E                     	;# 
  3849  0E2F                     	;# 
  3850  0E30                     	;# 
  3851  0E31                     	;# 
  3852  0E32                     	;# 
  3853  0E33                     	;# 
  3854  0E34                     	;# 
  3855  0E35                     	;# 
  3856  0E36                     	;# 
  3857  0E37                     	;# 
  3858  0E8F                     	;# 
  3859  0E90                     	;# 
  3860  0E91                     	;# 
  3861  0E92                     	;# 
  3862  0E93                     	;# 
  3863  0E94                     	;# 
  3864  0E95                     	;# 
  3865  0E96                     	;# 
  3866  0E97                     	;# 
  3867  0E9C                     	;# 
  3868  0E9D                     	;# 
  3869  0E9E                     	;# 
  3870  0EA1                     	;# 
  3871  0EA2                     	;# 
  3872  0EA3                     	;# 
  3873  0EA4                     	;# 
  3874  0EA5                     	;# 
  3875  0EA9                     	;# 
  3876  0EAA                     	;# 
  3877  0EAB                     	;# 
  3878  0EAC                     	;# 
  3879  0EB1                     	;# 
  3880  0EB2                     	;# 
  3881  0EB3                     	;# 
  3882  0EB8                     	;# 
  3883  0EB9                     	;# 
  3884  0EBA                     	;# 
  3885  0EBB                     	;# 
  3886  0EBC                     	;# 
  3887  0EBD                     	;# 
  3888  0EBE                     	;# 
  3889  0EC3                     	;# 
  3890  0EC5                     	;# 
  3891  0EC6                     	;# 
  3892  0EC7                     	;# 
  3893  0EC8                     	;# 
  3894  0EC9                     	;# 
  3895  0ECA                     	;# 
  3896  0ECB                     	;# 
  3897  0ECC                     	;# 
  3898  0F10                     	;# 
  3899  0F11                     	;# 
  3900  0F12                     	;# 
  3901  0F13                     	;# 
  3902  0F14                     	;# 
  3903  0F15                     	;# 
  3904  0F16                     	;# 
  3905  0F17                     	;# 
  3906  0F18                     	;# 
  3907  0F19                     	;# 
  3908  0F1A                     	;# 
  3909  0F1B                     	;# 
  3910  0F1C                     	;# 
  3911  0F1D                     	;# 
  3912  0F1E                     	;# 
  3913  0F1F                     	;# 
  3914  0F20                     	;# 
  3915  0F21                     	;# 
  3916  0F22                     	;# 
  3917  0F23                     	;# 
  3918  0F24                     	;# 
  3919  0F25                     	;# 
  3920  0F26                     	;# 
  3921  0F27                     	;# 
  3922  0F28                     	;# 
  3923  0F29                     	;# 
  3924  0F2A                     	;# 
  3925  0F2B                     	;# 
  3926  0F2C                     	;# 
  3927  0F2D                     	;# 
  3928  0F2E                     	;# 
  3929  0F2F                     	;# 
  3930  0F30                     	;# 
  3931  0F31                     	;# 
  3932  0F32                     	;# 
  3933  0F38                     	;# 
  3934  0F39                     	;# 
  3935  0F3A                     	;# 
  3936  0F3B                     	;# 
  3937  0F3C                     	;# 
  3938  0F3D                     	;# 
  3939  0F3E                     	;# 
  3940  0F3F                     	;# 
  3941  0F40                     	;# 
  3942  0F41                     	;# 
  3943  0F43                     	;# 
  3944  0F44                     	;# 
  3945  0F45                     	;# 
  3946  0F46                     	;# 
  3947  0F47                     	;# 
  3948  0F48                     	;# 
  3949  0F49                     	;# 
  3950  0F4A                     	;# 
  3951  0F4B                     	;# 
  3952  0F4C                     	;# 
  3953  0F4E                     	;# 
  3954  0F4F                     	;# 
  3955  0F50                     	;# 
  3956  0F51                     	;# 
  3957  0F52                     	;# 
  3958  0F53                     	;# 
  3959  0F54                     	;# 
  3960  0F55                     	;# 
  3961  0F56                     	;# 
  3962  0F57                     	;# 
  3963  0F59                     	;# 
  3964  0F5A                     	;# 
  3965  0F5B                     	;# 
  3966  0F5C                     	;# 
  3967  0F5D                     	;# 
  3968  0F61                     	;# 
  3969  0F62                     	;# 
  3970  0F64                     	;# 
  3971  0F65                     	;# 
  3972  0F66                     	;# 
  3973  0F67                     	;# 
  3974  0F68                     	;# 
  3975  0F69                     	;# 
  3976  0F6A                     	;# 
  3977  0F6B                     	;# 
  3978  0F6C                     	;# 
  3979  0F6D                     	;# 
  3980  0FE4                     	;# 
  3981  0FE5                     	;# 
  3982  0FE6                     	;# 
  3983  0FE7                     	;# 
  3984  0FE8                     	;# 
  3985  0FE9                     	;# 
  3986  0FEA                     	;# 
  3987  0FEB                     	;# 
  3988  0FED                     	;# 
  3989  0FEE                     	;# 
  3990  0FEF                     	;# 
  3991  0000                     	;# 
  3992  0001                     	;# 
  3993  0002                     	;# 
  3994  0003                     	;# 
  3995  0004                     	;# 
  3996  0005                     	;# 
  3997  0006                     	;# 
  3998  0007                     	;# 
  3999  0008                     	;# 
  4000  0009                     	;# 
  4001  000A                     	;# 
  4002  000B                     	;# 
  4003  000C                     	;# 
  4004  000D                     	;# 
  4005  000E                     	;# 
  4006  000F                     	;# 
  4007  0010                     	;# 
  4008  0011                     	;# 
  4009  0012                     	;# 
  4010  0013                     	;# 
  4011  0014                     	;# 
  4012  0015                     	;# 
  4013  0016                     	;# 
  4014  0017                     	;# 
  4015  0018                     	;# 
  4016  0019                     	;# 
  4017  001A                     	;# 
  4018  001C                     	;# 
  4019  001C                     	;# 
  4020  001D                     	;# 
  4021  001D                     	;# 
  4022  001E                     	;# 
  4023  001F                     	;# 
  4024  008C                     	;# 
  4025  008C                     	;# 
  4026  008D                     	;# 
  4027  008E                     	;# 
  4028  008E                     	;# 
  4029  008F                     	;# 
  4030  0090                     	;# 
  4031  0090                     	;# 
  4032  0091                     	;# 
  4033  0093                     	;# 
  4034  0094                     	;# 
  4035  0095                     	;# 
  4036  0096                     	;# 
  4037  0097                     	;# 
  4038  0098                     	;# 
  4039  0099                     	;# 
  4040  009A                     	;# 
  4041  009B                     	;# 
  4042  009C                     	;# 
  4043  009D                     	;# 
  4044  009E                     	;# 
  4045  010C                     	;# 
  4046  010D                     	;# 
  4047  010E                     	;# 
  4048  010E                     	;# 
  4049  010F                     	;# 
  4050  0110                     	;# 
  4051  0110                     	;# 
  4052  0111                     	;# 
  4053  0112                     	;# 
  4054  0112                     	;# 
  4055  0113                     	;# 
  4056  0114                     	;# 
  4057  0114                     	;# 
  4058  0115                     	;# 
  4059  0116                     	;# 
  4060  0116                     	;# 
  4061  0117                     	;# 
  4062  0119                     	;# 
  4063  0119                     	;# 
  4064  0119                     	;# 
  4065  011A                     	;# 
  4066  011A                     	;# 
  4067  011A                     	;# 
  4068  011B                     	;# 
  4069  011B                     	;# 
  4070  011B                     	;# 
  4071  011B                     	;# 
  4072  011B                     	;# 
  4073  011C                     	;# 
  4074  011C                     	;# 
  4075  011C                     	;# 
  4076  011D                     	;# 
  4077  011D                     	;# 
  4078  011D                     	;# 
  4079  011E                     	;# 
  4080  011E                     	;# 
  4081  011E                     	;# 
  4082  011F                     	;# 
  4083  011F                     	;# 
  4084  011F                     	;# 
  4085  011F                     	;# 
  4086  011F                     	;# 
  4087  018C                     	;# 
  4088  018D                     	;# 
  4089  018E                     	;# 
  4090  018F                     	;# 
  4091  0190                     	;# 
  4092  0191                     	;# 
  4093  0192                     	;# 
  4094  0196                     	;# 
  4095  0197                     	;# 
  4096  0198                     	;# 
  4097  0199                     	;# 
  4098  019A                     	;# 
  4099  019B                     	;# 
  4100  019C                     	;# 
  4101  020C                     	;# 
  4102  020C                     	;# 
  4103  020D                     	;# 
  4104  020E                     	;# 
  4105  020F                     	;# 
  4106  020F                     	;# 
  4107  0210                     	;# 
  4108  0210                     	;# 
  4109  0211                     	;# 
  4110  0211                     	;# 
  4111  0212                     	;# 
  4112  0212                     	;# 
  4113  0213                     	;# 
  4114  0214                     	;# 
  4115  0215                     	;# 
  4116  0215                     	;# 
  4117  0216                     	;# 
  4118  0216                     	;# 
  4119  0217                     	;# 
  4120  0217                     	;# 
  4121  0218                     	;# 
  4122  0218                     	;# 
  4123  0219                     	;# 
  4124  021A                     	;# 
  4125  021B                     	;# 
  4126  021B                     	;# 
  4127  021C                     	;# 
  4128  021C                     	;# 
  4129  021D                     	;# 
  4130  021D                     	;# 
  4131  021E                     	;# 
  4132  021F                     	;# 
  4133  028C                     	;# 
  4134  028C                     	;# 
  4135  028D                     	;# 
  4136  028D                     	;# 
  4137  028E                     	;# 
  4138  028F                     	;# 
  4139  0290                     	;# 
  4140  0290                     	;# 
  4141  0291                     	;# 
  4142  0292                     	;# 
  4143  0292                     	;# 
  4144  0293                     	;# 
  4145  0293                     	;# 
  4146  0294                     	;# 
  4147  0295                     	;# 
  4148  0296                     	;# 
  4149  0296                     	;# 
  4150  0297                     	;# 
  4151  0298                     	;# 
  4152  0298                     	;# 
  4153  0299                     	;# 
  4154  0299                     	;# 
  4155  029A                     	;# 
  4156  029B                     	;# 
  4157  029C                     	;# 
  4158  029C                     	;# 
  4159  029D                     	;# 
  4160  030C                     	;# 
  4161  030C                     	;# 
  4162  030D                     	;# 
  4163  030E                     	;# 
  4164  030F                     	;# 
  4165  0310                     	;# 
  4166  0310                     	;# 
  4167  0311                     	;# 
  4168  0312                     	;# 
  4169  0313                     	;# 
  4170  0314                     	;# 
  4171  0314                     	;# 
  4172  0315                     	;# 
  4173  0316                     	;# 
  4174  0317                     	;# 
  4175  0318                     	;# 
  4176  0318                     	;# 
  4177  0319                     	;# 
  4178  031A                     	;# 
  4179  031B                     	;# 
  4180  031C                     	;# 
  4181  031C                     	;# 
  4182  031D                     	;# 
  4183  031E                     	;# 
  4184  031F                     	;# 
  4185  038C                     	;# 
  4186  038C                     	;# 
  4187  038D                     	;# 
  4188  038E                     	;# 
  4189  0390                     	;# 
  4190  0390                     	;# 
  4191  0391                     	;# 
  4192  0392                     	;# 
  4193  040C                     	;# 
  4194  040D                     	;# 
  4195  040E                     	;# 
  4196  040F                     	;# 
  4197  0410                     	;# 
  4198  0411                     	;# 
  4199  0416                     	;# 
  4200  0416                     	;# 
  4201  0417                     	;# 
  4202  0418                     	;# 
  4203  0418                     	;# 
  4204  0419                     	;# 
  4205  041A                     	;# 
  4206  041A                     	;# 
  4207  041B                     	;# 
  4208  041C                     	;# 
  4209  041C                     	;# 
  4210  041D                     	;# 
  4211  041E                     	;# 
  4212  041F                     	;# 
  4213  048C                     	;# 
  4214  048C                     	;# 
  4215  048D                     	;# 
  4216  048E                     	;# 
  4217  048F                     	;# 
  4218  048F                     	;# 
  4219  0490                     	;# 
  4220  0491                     	;# 
  4221  0492                     	;# 
  4222  0492                     	;# 
  4223  0493                     	;# 
  4224  0494                     	;# 
  4225  0495                     	;# 
  4226  0495                     	;# 
  4227  0496                     	;# 
  4228  0497                     	;# 
  4229  0498                     	;# 
  4230  0499                     	;# 
  4231  049A                     	;# 
  4232  049B                     	;# 
  4233  049C                     	;# 
  4234  049D                     	;# 
  4235  050C                     	;# 
  4236  050C                     	;# 
  4237  050D                     	;# 
  4238  050E                     	;# 
  4239  050F                     	;# 
  4240  050F                     	;# 
  4241  0510                     	;# 
  4242  0511                     	;# 
  4243  0512                     	;# 
  4244  0512                     	;# 
  4245  0513                     	;# 
  4246  0514                     	;# 
  4247  0515                     	;# 
  4248  0515                     	;# 
  4249  0516                     	;# 
  4250  0517                     	;# 
  4251  0518                     	;# 
  4252  0519                     	;# 
  4253  051A                     	;# 
  4254  051B                     	;# 
  4255  051C                     	;# 
  4256  051D                     	;# 
  4257  058C                     	;# 
  4258  058C                     	;# 
  4259  058D                     	;# 
  4260  058E                     	;# 
  4261  058F                     	;# 
  4262  058F                     	;# 
  4263  0590                     	;# 
  4264  0591                     	;# 
  4265  0592                     	;# 
  4266  0593                     	;# 
  4267  060C                     	;# 
  4268  060D                     	;# 
  4269  060E                     	;# 
  4270  060F                     	;# 
  4271  0610                     	;# 
  4272  0611                     	;# 
  4273  0612                     	;# 
  4274  0613                     	;# 
  4275  0614                     	;# 
  4276  0616                     	;# 
  4277  0617                     	;# 
  4278  0618                     	;# 
  4279  0619                     	;# 
  4280  061A                     	;# 
  4281  061B                     	;# 
  4282  061C                     	;# 
  4283  061D                     	;# 
  4284  061E                     	;# 
  4285  068C                     	;# 
  4286  068D                     	;# 
  4287  068E                     	;# 
  4288  068F                     	;# 
  4289  0690                     	;# 
  4290  0691                     	;# 
  4291  0692                     	;# 
  4292  0693                     	;# 
  4293  0694                     	;# 
  4294  070C                     	;# 
  4295  070D                     	;# 
  4296  070E                     	;# 
  4297  070F                     	;# 
  4298  0710                     	;# 
  4299  0711                     	;# 
  4300  0712                     	;# 
  4301  0713                     	;# 
  4302  0714                     	;# 
  4303  0716                     	;# 
  4304  0717                     	;# 
  4305  0718                     	;# 
  4306  0719                     	;# 
  4307  071A                     	;# 
  4308  071B                     	;# 
  4309  071C                     	;# 
  4310  071D                     	;# 
  4311  071E                     	;# 
  4312  0796                     	;# 
  4313  0797                     	;# 
  4314  0798                     	;# 
  4315  0799                     	;# 
  4316  079A                     	;# 
  4317  079B                     	;# 
  4318  080C                     	;# 
  4319  080D                     	;# 
  4320  080E                     	;# 
  4321  080F                     	;# 
  4322  0810                     	;# 
  4323  0811                     	;# 
  4324  0812                     	;# 
  4325  0813                     	;# 
  4326  0814                     	;# 
  4327  081A                     	;# 
  4328  081B                     	;# 
  4329  081C                     	;# 
  4330  081D                     	;# 
  4331  081E                     	;# 
  4332  081F                     	;# 
  4333  088C                     	;# 
  4334  088D                     	;# 
  4335  088E                     	;# 
  4336  088F                     	;# 
  4337  0890                     	;# 
  4338  0891                     	;# 
  4339  0892                     	;# 
  4340  0893                     	;# 
  4341  0895                     	;# 
  4342  0896                     	;# 
  4343  0897                     	;# 
  4344  0898                     	;# 
  4345  0899                     	;# 
  4346  089A                     	;# 
  4347  089B                     	;# 
  4348  090C                     	;# 
  4349  090E                     	;# 
  4350  090F                     	;# 
  4351  091F                     	;# 
  4352  091F                     	;# 
  4353  098F                     	;# 
  4354  098F                     	;# 
  4355  0990                     	;# 
  4356  0991                     	;# 
  4357  0992                     	;# 
  4358  0993                     	;# 
  4359  0994                     	;# 
  4360  0995                     	;# 
  4361  0996                     	;# 
  4362  0997                     	;# 
  4363  0E0F                     	;# 
  4364  0E10                     	;# 
  4365  0E11                     	;# 
  4366  0E12                     	;# 
  4367  0E13                     	;# 
  4368  0E14                     	;# 
  4369  0E15                     	;# 
  4370  0E16                     	;# 
  4371  0E17                     	;# 
  4372  0E18                     	;# 
  4373  0E19                     	;# 
  4374  0E1A                     	;# 
  4375  0E1B                     	;# 
  4376  0E1C                     	;# 
  4377  0E1D                     	;# 
  4378  0E1E                     	;# 
  4379  0E1F                     	;# 
  4380  0E20                     	;# 
  4381  0E21                     	;# 
  4382  0E22                     	;# 
  4383  0E23                     	;# 
  4384  0E24                     	;# 
  4385  0E25                     	;# 
  4386  0E26                     	;# 
  4387  0E27                     	;# 
  4388  0E28                     	;# 
  4389  0E29                     	;# 
  4390  0E2A                     	;# 
  4391  0E2B                     	;# 
  4392  0E2C                     	;# 
  4393  0E2D                     	;# 
  4394  0E2E                     	;# 
  4395  0E2F                     	;# 
  4396  0E30                     	;# 
  4397  0E31                     	;# 
  4398  0E32                     	;# 
  4399  0E33                     	;# 
  4400  0E34                     	;# 
  4401  0E35                     	;# 
  4402  0E36                     	;# 
  4403  0E37                     	;# 
  4404  0E8F                     	;# 
  4405  0E90                     	;# 
  4406  0E91                     	;# 
  4407  0E92                     	;# 
  4408  0E93                     	;# 
  4409  0E94                     	;# 
  4410  0E95                     	;# 
  4411  0E96                     	;# 
  4412  0E97                     	;# 
  4413  0E9C                     	;# 
  4414  0E9D                     	;# 
  4415  0E9E                     	;# 
  4416  0EA1                     	;# 
  4417  0EA2                     	;# 
  4418  0EA3                     	;# 
  4419  0EA4                     	;# 
  4420  0EA5                     	;# 
  4421  0EA9                     	;# 
  4422  0EAA                     	;# 
  4423  0EAB                     	;# 
  4424  0EAC                     	;# 
  4425  0EB1                     	;# 
  4426  0EB2                     	;# 
  4427  0EB3                     	;# 
  4428  0EB8                     	;# 
  4429  0EB9                     	;# 
  4430  0EBA                     	;# 
  4431  0EBB                     	;# 
  4432  0EBC                     	;# 
  4433  0EBD                     	;# 
  4434  0EBE                     	;# 
  4435  0EC3                     	;# 
  4436  0EC5                     	;# 
  4437  0EC6                     	;# 
  4438  0EC7                     	;# 
  4439  0EC8                     	;# 
  4440  0EC9                     	;# 
  4441  0ECA                     	;# 
  4442  0ECB                     	;# 
  4443  0ECC                     	;# 
  4444  0F10                     	;# 
  4445  0F11                     	;# 
  4446  0F12                     	;# 
  4447  0F13                     	;# 
  4448  0F14                     	;# 
  4449  0F15                     	;# 
  4450  0F16                     	;# 
  4451  0F17                     	;# 
  4452  0F18                     	;# 
  4453  0F19                     	;# 
  4454  0F1A                     	;# 
  4455  0F1B                     	;# 
  4456  0F1C                     	;# 
  4457  0F1D                     	;# 
  4458  0F1E                     	;# 
  4459  0F1F                     	;# 
  4460  0F20                     	;# 
  4461  0F21                     	;# 
  4462  0F22                     	;# 
  4463  0F23                     	;# 
  4464  0F24                     	;# 
  4465  0F25                     	;# 
  4466  0F26                     	;# 
  4467  0F27                     	;# 
  4468  0F28                     	;# 
  4469  0F29                     	;# 
  4470  0F2A                     	;# 
  4471  0F2B                     	;# 
  4472  0F2C                     	;# 
  4473  0F2D                     	;# 
  4474  0F2E                     	;# 
  4475  0F2F                     	;# 
  4476  0F30                     	;# 
  4477  0F31                     	;# 
  4478  0F32                     	;# 
  4479  0F38                     	;# 
  4480  0F39                     	;# 
  4481  0F3A                     	;# 
  4482  0F3B                     	;# 
  4483  0F3C                     	;# 
  4484  0F3D                     	;# 
  4485  0F3E                     	;# 
  4486  0F3F                     	;# 
  4487  0F40                     	;# 
  4488  0F41                     	;# 
  4489  0F43                     	;# 
  4490  0F44                     	;# 
  4491  0F45                     	;# 
  4492  0F46                     	;# 
  4493  0F47                     	;# 
  4494  0F48                     	;# 
  4495  0F49                     	;# 
  4496  0F4A                     	;# 
  4497  0F4B                     	;# 
  4498  0F4C                     	;# 
  4499  0F4E                     	;# 
  4500  0F4F                     	;# 
  4501  0F50                     	;# 
  4502  0F51                     	;# 
  4503  0F52                     	;# 
  4504  0F53                     	;# 
  4505  0F54                     	;# 
  4506  0F55                     	;# 
  4507  0F56                     	;# 
  4508  0F57                     	;# 
  4509  0F59                     	;# 
  4510  0F5A                     	;# 
  4511  0F5B                     	;# 
  4512  0F5C                     	;# 
  4513  0F5D                     	;# 
  4514  0F61                     	;# 
  4515  0F62                     	;# 
  4516  0F64                     	;# 
  4517  0F65                     	;# 
  4518  0F66                     	;# 
  4519  0F67                     	;# 
  4520  0F68                     	;# 
  4521  0F69                     	;# 
  4522  0F6A                     	;# 
  4523  0F6B                     	;# 
  4524  0F6C                     	;# 
  4525  0F6D                     	;# 
  4526  0FE4                     	;# 
  4527  0FE5                     	;# 
  4528  0FE6                     	;# 
  4529  0FE7                     	;# 
  4530  0FE8                     	;# 
  4531  0FE9                     	;# 
  4532  0FEA                     	;# 
  4533  0FEB                     	;# 
  4534  0FED                     	;# 
  4535  0FEE                     	;# 
  4536  0FEF                     	;# 
  4537  0000                     	;# 
  4538  0001                     	;# 
  4539  0002                     	;# 
  4540  0003                     	;# 
  4541  0004                     	;# 
  4542  0005                     	;# 
  4543  0006                     	;# 
  4544  0007                     	;# 
  4545  0008                     	;# 
  4546  0009                     	;# 
  4547  000A                     	;# 
  4548  000B                     	;# 
  4549  000C                     	;# 
  4550  000D                     	;# 
  4551  000E                     	;# 
  4552  000F                     	;# 
  4553  0010                     	;# 
  4554  0011                     	;# 
  4555  0012                     	;# 
  4556  0013                     	;# 
  4557  0014                     	;# 
  4558  0015                     	;# 
  4559  0016                     	;# 
  4560  0017                     	;# 
  4561  0018                     	;# 
  4562  0019                     	;# 
  4563  001A                     	;# 
  4564  001C                     	;# 
  4565  001C                     	;# 
  4566  001D                     	;# 
  4567  001D                     	;# 
  4568  001E                     	;# 
  4569  001F                     	;# 
  4570  008C                     	;# 
  4571  008C                     	;# 
  4572  008D                     	;# 
  4573  008E                     	;# 
  4574  008E                     	;# 
  4575  008F                     	;# 
  4576  0090                     	;# 
  4577  0090                     	;# 
  4578  0091                     	;# 
  4579  0093                     	;# 
  4580  0094                     	;# 
  4581  0095                     	;# 
  4582  0096                     	;# 
  4583  0097                     	;# 
  4584  0098                     	;# 
  4585  0099                     	;# 
  4586  009A                     	;# 
  4587  009B                     	;# 
  4588  009C                     	;# 
  4589  009D                     	;# 
  4590  009E                     	;# 
  4591  010C                     	;# 
  4592  010D                     	;# 
  4593  010E                     	;# 
  4594  010E                     	;# 
  4595  010F                     	;# 
  4596  0110                     	;# 
  4597  0110                     	;# 
  4598  0111                     	;# 
  4599  0112                     	;# 
  4600  0112                     	;# 
  4601  0113                     	;# 
  4602  0114                     	;# 
  4603  0114                     	;# 
  4604  0115                     	;# 
  4605  0116                     	;# 
  4606  0116                     	;# 
  4607  0117                     	;# 
  4608  0119                     	;# 
  4609  0119                     	;# 
  4610  0119                     	;# 
  4611  011A                     	;# 
  4612  011A                     	;# 
  4613  011A                     	;# 
  4614  011B                     	;# 
  4615  011B                     	;# 
  4616  011B                     	;# 
  4617  011B                     	;# 
  4618  011B                     	;# 
  4619  011C                     	;# 
  4620  011C                     	;# 
  4621  011C                     	;# 
  4622  011D                     	;# 
  4623  011D                     	;# 
  4624  011D                     	;# 
  4625  011E                     	;# 
  4626  011E                     	;# 
  4627  011E                     	;# 
  4628  011F                     	;# 
  4629  011F                     	;# 
  4630  011F                     	;# 
  4631  011F                     	;# 
  4632  011F                     	;# 
  4633  018C                     	;# 
  4634  018D                     	;# 
  4635  018E                     	;# 
  4636  018F                     	;# 
  4637  0190                     	;# 
  4638  0191                     	;# 
  4639  0192                     	;# 
  4640  0196                     	;# 
  4641  0197                     	;# 
  4642  0198                     	;# 
  4643  0199                     	;# 
  4644  019A                     	;# 
  4645  019B                     	;# 
  4646  019C                     	;# 
  4647  020C                     	;# 
  4648  020C                     	;# 
  4649  020D                     	;# 
  4650  020E                     	;# 
  4651  020F                     	;# 
  4652  020F                     	;# 
  4653  0210                     	;# 
  4654  0210                     	;# 
  4655  0211                     	;# 
  4656  0211                     	;# 
  4657  0212                     	;# 
  4658  0212                     	;# 
  4659  0213                     	;# 
  4660  0214                     	;# 
  4661  0215                     	;# 
  4662  0215                     	;# 
  4663  0216                     	;# 
  4664  0216                     	;# 
  4665  0217                     	;# 
  4666  0217                     	;# 
  4667  0218                     	;# 
  4668  0218                     	;# 
  4669  0219                     	;# 
  4670  021A                     	;# 
  4671  021B                     	;# 
  4672  021B                     	;# 
  4673  021C                     	;# 
  4674  021C                     	;# 
  4675  021D                     	;# 
  4676  021D                     	;# 
  4677  021E                     	;# 
  4678  021F                     	;# 
  4679  028C                     	;# 
  4680  028C                     	;# 
  4681  028D                     	;# 
  4682  028D                     	;# 
  4683  028E                     	;# 
  4684  028F                     	;# 
  4685  0290                     	;# 
  4686  0290                     	;# 
  4687  0291                     	;# 
  4688  0292                     	;# 
  4689  0292                     	;# 
  4690  0293                     	;# 
  4691  0293                     	;# 
  4692  0294                     	;# 
  4693  0295                     	;# 
  4694  0296                     	;# 
  4695  0296                     	;# 
  4696  0297                     	;# 
  4697  0298                     	;# 
  4698  0298                     	;# 
  4699  0299                     	;# 
  4700  0299                     	;# 
  4701  029A                     	;# 
  4702  029B                     	;# 
  4703  029C                     	;# 
  4704  029C                     	;# 
  4705  029D                     	;# 
  4706  030C                     	;# 
  4707  030C                     	;# 
  4708  030D                     	;# 
  4709  030E                     	;# 
  4710  030F                     	;# 
  4711  0310                     	;# 
  4712  0310                     	;# 
  4713  0311                     	;# 
  4714  0312                     	;# 
  4715  0313                     	;# 
  4716  0314                     	;# 
  4717  0314                     	;# 
  4718  0315                     	;# 
  4719  0316                     	;# 
  4720  0317                     	;# 
  4721  0318                     	;# 
  4722  0318                     	;# 
  4723  0319                     	;# 
  4724  031A                     	;# 
  4725  031B                     	;# 
  4726  031C                     	;# 
  4727  031C                     	;# 
  4728  031D                     	;# 
  4729  031E                     	;# 
  4730  031F                     	;# 
  4731  038C                     	;# 
  4732  038C                     	;# 
  4733  038D                     	;# 
  4734  038E                     	;# 
  4735  0390                     	;# 
  4736  0390                     	;# 
  4737  0391                     	;# 
  4738  0392                     	;# 
  4739  040C                     	;# 
  4740  040D                     	;# 
  4741  040E                     	;# 
  4742  040F                     	;# 
  4743  0410                     	;# 
  4744  0411                     	;# 
  4745  0416                     	;# 
  4746  0416                     	;# 
  4747  0417                     	;# 
  4748  0418                     	;# 
  4749  0418                     	;# 
  4750  0419                     	;# 
  4751  041A                     	;# 
  4752  041A                     	;# 
  4753  041B                     	;# 
  4754  041C                     	;# 
  4755  041C                     	;# 
  4756  041D                     	;# 
  4757  041E                     	;# 
  4758  041F                     	;# 
  4759  048C                     	;# 
  4760  048C                     	;# 
  4761  048D                     	;# 
  4762  048E                     	;# 
  4763  048F                     	;# 
  4764  048F                     	;# 
  4765  0490                     	;# 
  4766  0491                     	;# 
  4767  0492                     	;# 
  4768  0492                     	;# 
  4769  0493                     	;# 
  4770  0494                     	;# 
  4771  0495                     	;# 
  4772  0495                     	;# 
  4773  0496                     	;# 
  4774  0497                     	;# 
  4775  0498                     	;# 
  4776  0499                     	;# 
  4777  049A                     	;# 
  4778  049B                     	;# 
  4779  049C                     	;# 
  4780  049D                     	;# 
  4781  050C                     	;# 
  4782  050C                     	;# 
  4783  050D                     	;# 
  4784  050E                     	;# 
  4785  050F                     	;# 
  4786  050F                     	;# 
  4787  0510                     	;# 
  4788  0511                     	;# 
  4789  0512                     	;# 
  4790  0512                     	;# 
  4791  0513                     	;# 
  4792  0514                     	;# 
  4793  0515                     	;# 
  4794  0515                     	;# 
  4795  0516                     	;# 
  4796  0517                     	;# 
  4797  0518                     	;# 
  4798  0519                     	;# 
  4799  051A                     	;# 
  4800  051B                     	;# 
  4801  051C                     	;# 
  4802  051D                     	;# 
  4803  058C                     	;# 
  4804  058C                     	;# 
  4805  058D                     	;# 
  4806  058E                     	;# 
  4807  058F                     	;# 
  4808  058F                     	;# 
  4809  0590                     	;# 
  4810  0591                     	;# 
  4811  0592                     	;# 
  4812  0593                     	;# 
  4813  060C                     	;# 
  4814  060D                     	;# 
  4815  060E                     	;# 
  4816  060F                     	;# 
  4817  0610                     	;# 
  4818  0611                     	;# 
  4819  0612                     	;# 
  4820  0613                     	;# 
  4821  0614                     	;# 
  4822  0616                     	;# 
  4823  0617                     	;# 
  4824  0618                     	;# 
  4825  0619                     	;# 
  4826  061A                     	;# 
  4827  061B                     	;# 
  4828  061C                     	;# 
  4829  061D                     	;# 
  4830  061E                     	;# 
  4831  068C                     	;# 
  4832  068D                     	;# 
  4833  068E                     	;# 
  4834  068F                     	;# 
  4835  0690                     	;# 
  4836  0691                     	;# 
  4837  0692                     	;# 
  4838  0693                     	;# 
  4839  0694                     	;# 
  4840  070C                     	;# 
  4841  070D                     	;# 
  4842  070E                     	;# 
  4843  070F                     	;# 
  4844  0710                     	;# 
  4845  0711                     	;# 
  4846  0712                     	;# 
  4847  0713                     	;# 
  4848  0714                     	;# 
  4849  0716                     	;# 
  4850  0717                     	;# 
  4851  0718                     	;# 
  4852  0719                     	;# 
  4853  071A                     	;# 
  4854  071B                     	;# 
  4855  071C                     	;# 
  4856  071D                     	;# 
  4857  071E                     	;# 
  4858  0796                     	;# 
  4859  0797                     	;# 
  4860  0798                     	;# 
  4861  0799                     	;# 
  4862  079A                     	;# 
  4863  079B                     	;# 
  4864  080C                     	;# 
  4865  080D                     	;# 
  4866  080E                     	;# 
  4867  080F                     	;# 
  4868  0810                     	;# 
  4869  0811                     	;# 
  4870  0812                     	;# 
  4871  0813                     	;# 
  4872  0814                     	;# 
  4873  081A                     	;# 
  4874  081B                     	;# 
  4875  081C                     	;# 
  4876  081D                     	;# 
  4877  081E                     	;# 
  4878  081F                     	;# 
  4879  088C                     	;# 
  4880  088D                     	;# 
  4881  088E                     	;# 
  4882  088F                     	;# 
  4883  0890                     	;# 
  4884  0891                     	;# 
  4885  0892                     	;# 
  4886  0893                     	;# 
  4887  0895                     	;# 
  4888  0896                     	;# 
  4889  0897                     	;# 
  4890  0898                     	;# 
  4891  0899                     	;# 
  4892  089A                     	;# 
  4893  089B                     	;# 
  4894  090C                     	;# 
  4895  090E                     	;# 
  4896  090F                     	;# 
  4897  091F                     	;# 
  4898  091F                     	;# 
  4899  098F                     	;# 
  4900  098F                     	;# 
  4901  0990                     	;# 
  4902  0991                     	;# 
  4903  0992                     	;# 
  4904  0993                     	;# 
  4905  0994                     	;# 
  4906  0995                     	;# 
  4907  0996                     	;# 
  4908  0997                     	;# 
  4909  0E0F                     	;# 
  4910  0E10                     	;# 
  4911  0E11                     	;# 
  4912  0E12                     	;# 
  4913  0E13                     	;# 
  4914  0E14                     	;# 
  4915  0E15                     	;# 
  4916  0E16                     	;# 
  4917  0E17                     	;# 
  4918  0E18                     	;# 
  4919  0E19                     	;# 
  4920  0E1A                     	;# 
  4921  0E1B                     	;# 
  4922  0E1C                     	;# 
  4923  0E1D                     	;# 
  4924  0E1E                     	;# 
  4925  0E1F                     	;# 
  4926  0E20                     	;# 
  4927  0E21                     	;# 
  4928  0E22                     	;# 
  4929  0E23                     	;# 
  4930  0E24                     	;# 
  4931  0E25                     	;# 
  4932  0E26                     	;# 
  4933  0E27                     	;# 
  4934  0E28                     	;# 
  4935  0E29                     	;# 
  4936  0E2A                     	;# 
  4937  0E2B                     	;# 
  4938  0E2C                     	;# 
  4939  0E2D                     	;# 
  4940  0E2E                     	;# 
  4941  0E2F                     	;# 
  4942  0E30                     	;# 
  4943  0E31                     	;# 
  4944  0E32                     	;# 
  4945  0E33                     	;# 
  4946  0E34                     	;# 
  4947  0E35                     	;# 
  4948  0E36                     	;# 
  4949  0E37                     	;# 
  4950  0E8F                     	;# 
  4951  0E90                     	;# 
  4952  0E91                     	;# 
  4953  0E92                     	;# 
  4954  0E93                     	;# 
  4955  0E94                     	;# 
  4956  0E95                     	;# 
  4957  0E96                     	;# 
  4958  0E97                     	;# 
  4959  0E9C                     	;# 
  4960  0E9D                     	;# 
  4961  0E9E                     	;# 
  4962  0EA1                     	;# 
  4963  0EA2                     	;# 
  4964  0EA3                     	;# 
  4965  0EA4                     	;# 
  4966  0EA5                     	;# 
  4967  0EA9                     	;# 
  4968  0EAA                     	;# 
  4969  0EAB                     	;# 
  4970  0EAC                     	;# 
  4971  0EB1                     	;# 
  4972  0EB2                     	;# 
  4973  0EB3                     	;# 
  4974  0EB8                     	;# 
  4975  0EB9                     	;# 
  4976  0EBA                     	;# 
  4977  0EBB                     	;# 
  4978  0EBC                     	;# 
  4979  0EBD                     	;# 
  4980  0EBE                     	;# 
  4981  0EC3                     	;# 
  4982  0EC5                     	;# 
  4983  0EC6                     	;# 
  4984  0EC7                     	;# 
  4985  0EC8                     	;# 
  4986  0EC9                     	;# 
  4987  0ECA                     	;# 
  4988  0ECB                     	;# 
  4989  0ECC                     	;# 
  4990  0F10                     	;# 
  4991  0F11                     	;# 
  4992  0F12                     	;# 
  4993  0F13                     	;# 
  4994  0F14                     	;# 
  4995  0F15                     	;# 
  4996  0F16                     	;# 
  4997  0F17                     	;# 
  4998  0F18                     	;# 
  4999  0F19                     	;# 
  5000  0F1A                     	;# 
  5001  0F1B                     	;# 
  5002  0F1C                     	;# 
  5003  0F1D                     	;# 
  5004  0F1E                     	;# 
  5005  0F1F                     	;# 
  5006  0F20                     	;# 
  5007  0F21                     	;# 
  5008  0F22                     	;# 
  5009  0F23                     	;# 
  5010  0F24                     	;# 
  5011  0F25                     	;# 
  5012  0F26                     	;# 
  5013  0F27                     	;# 
  5014  0F28                     	;# 
  5015  0F29                     	;# 
  5016  0F2A                     	;# 
  5017  0F2B                     	;# 
  5018  0F2C                     	;# 
  5019  0F2D                     	;# 
  5020  0F2E                     	;# 
  5021  0F2F                     	;# 
  5022  0F30                     	;# 
  5023  0F31                     	;# 
  5024  0F32                     	;# 
  5025  0F38                     	;# 
  5026  0F39                     	;# 
  5027  0F3A                     	;# 
  5028  0F3B                     	;# 
  5029  0F3C                     	;# 
  5030  0F3D                     	;# 
  5031  0F3E                     	;# 
  5032  0F3F                     	;# 
  5033  0F40                     	;# 
  5034  0F41                     	;# 
  5035  0F43                     	;# 
  5036  0F44                     	;# 
  5037  0F45                     	;# 
  5038  0F46                     	;# 
  5039  0F47                     	;# 
  5040  0F48                     	;# 
  5041  0F49                     	;# 
  5042  0F4A                     	;# 
  5043  0F4B                     	;# 
  5044  0F4C                     	;# 
  5045  0F4E                     	;# 
  5046  0F4F                     	;# 
  5047  0F50                     	;# 
  5048  0F51                     	;# 
  5049  0F52                     	;# 
  5050  0F53                     	;# 
  5051  0F54                     	;# 
  5052  0F55                     	;# 
  5053  0F56                     	;# 
  5054  0F57                     	;# 
  5055  0F59                     	;# 
  5056  0F5A                     	;# 
  5057  0F5B                     	;# 
  5058  0F5C                     	;# 
  5059  0F5D                     	;# 
  5060  0F61                     	;# 
  5061  0F62                     	;# 
  5062  0F64                     	;# 
  5063  0F65                     	;# 
  5064  0F66                     	;# 
  5065  0F67                     	;# 
  5066  0F68                     	;# 
  5067  0F69                     	;# 
  5068  0F6A                     	;# 
  5069  0F6B                     	;# 
  5070  0F6C                     	;# 
  5071  0F6D                     	;# 
  5072  0FE4                     	;# 
  5073  0FE5                     	;# 
  5074  0FE6                     	;# 
  5075  0FE7                     	;# 
  5076  0FE8                     	;# 
  5077  0FE9                     	;# 
  5078  0FEA                     	;# 
  5079  0FEB                     	;# 
  5080  0FED                     	;# 
  5081  0FEE                     	;# 
  5082  0FEF                     	;# 
  5083  0000                     	;# 
  5084  0001                     	;# 
  5085  0002                     	;# 
  5086  0003                     	;# 
  5087  0004                     	;# 
  5088  0005                     	;# 
  5089  0006                     	;# 
  5090  0007                     	;# 
  5091  0008                     	;# 
  5092  0009                     	;# 
  5093  000A                     	;# 
  5094  000B                     	;# 
  5095  000C                     	;# 
  5096  000D                     	;# 
  5097  000E                     	;# 
  5098  000F                     	;# 
  5099  0010                     	;# 
  5100  0011                     	;# 
  5101  0012                     	;# 
  5102  0013                     	;# 
  5103  0014                     	;# 
  5104  0015                     	;# 
  5105  0016                     	;# 
  5106  0017                     	;# 
  5107  0018                     	;# 
  5108  0019                     	;# 
  5109  001A                     	;# 
  5110  001C                     	;# 
  5111  001C                     	;# 
  5112  001D                     	;# 
  5113  001D                     	;# 
  5114  001E                     	;# 
  5115  001F                     	;# 
  5116  008C                     	;# 
  5117  008C                     	;# 
  5118  008D                     	;# 
  5119  008E                     	;# 
  5120  008E                     	;# 
  5121  008F                     	;# 
  5122  0090                     	;# 
  5123  0090                     	;# 
  5124  0091                     	;# 
  5125  0093                     	;# 
  5126  0094                     	;# 
  5127  0095                     	;# 
  5128  0096                     	;# 
  5129  0097                     	;# 
  5130  0098                     	;# 
  5131  0099                     	;# 
  5132  009A                     	;# 
  5133  009B                     	;# 
  5134  009C                     	;# 
  5135  009D                     	;# 
  5136  009E                     	;# 
  5137  010C                     	;# 
  5138  010D                     	;# 
  5139  010E                     	;# 
  5140  010E                     	;# 
  5141  010F                     	;# 
  5142  0110                     	;# 
  5143  0110                     	;# 
  5144  0111                     	;# 
  5145  0112                     	;# 
  5146  0112                     	;# 
  5147  0113                     	;# 
  5148  0114                     	;# 
  5149  0114                     	;# 
  5150  0115                     	;# 
  5151  0116                     	;# 
  5152  0116                     	;# 
  5153  0117                     	;# 
  5154  0119                     	;# 
  5155  0119                     	;# 
  5156  0119                     	;# 
  5157  011A                     	;# 
  5158  011A                     	;# 
  5159  011A                     	;# 
  5160  011B                     	;# 
  5161  011B                     	;# 
  5162  011B                     	;# 
  5163  011B                     	;# 
  5164  011B                     	;# 
  5165  011C                     	;# 
  5166  011C                     	;# 
  5167  011C                     	;# 
  5168  011D                     	;# 
  5169  011D                     	;# 
  5170  011D                     	;# 
  5171  011E                     	;# 
  5172  011E                     	;# 
  5173  011E                     	;# 
  5174  011F                     	;# 
  5175  011F                     	;# 
  5176  011F                     	;# 
  5177  011F                     	;# 
  5178  011F                     	;# 
  5179  018C                     	;# 
  5180  018D                     	;# 
  5181  018E                     	;# 
  5182  018F                     	;# 
  5183  0190                     	;# 
  5184  0191                     	;# 
  5185  0192                     	;# 
  5186  0196                     	;# 
  5187  0197                     	;# 
  5188  0198                     	;# 
  5189  0199                     	;# 
  5190  019A                     	;# 
  5191  019B                     	;# 
  5192  019C                     	;# 
  5193  020C                     	;# 
  5194  020C                     	;# 
  5195  020D                     	;# 
  5196  020E                     	;# 
  5197  020F                     	;# 
  5198  020F                     	;# 
  5199  0210                     	;# 
  5200  0210                     	;# 
  5201  0211                     	;# 
  5202  0211                     	;# 
  5203  0212                     	;# 
  5204  0212                     	;# 
  5205  0213                     	;# 
  5206  0214                     	;# 
  5207  0215                     	;# 
  5208  0215                     	;# 
  5209  0216                     	;# 
  5210  0216                     	;# 
  5211  0217                     	;# 
  5212  0217                     	;# 
  5213  0218                     	;# 
  5214  0218                     	;# 
  5215  0219                     	;# 
  5216  021A                     	;# 
  5217  021B                     	;# 
  5218  021B                     	;# 
  5219  021C                     	;# 
  5220  021C                     	;# 
  5221  021D                     	;# 
  5222  021D                     	;# 
  5223  021E                     	;# 
  5224  021F                     	;# 
  5225  028C                     	;# 
  5226  028C                     	;# 
  5227  028D                     	;# 
  5228  028D                     	;# 
  5229  028E                     	;# 
  5230  028F                     	;# 
  5231  0290                     	;# 
  5232  0290                     	;# 
  5233  0291                     	;# 
  5234  0292                     	;# 
  5235  0292                     	;# 
  5236  0293                     	;# 
  5237  0293                     	;# 
  5238  0294                     	;# 
  5239  0295                     	;# 
  5240  0296                     	;# 
  5241  0296                     	;# 
  5242  0297                     	;# 
  5243  0298                     	;# 
  5244  0298                     	;# 
  5245  0299                     	;# 
  5246  0299                     	;# 
  5247  029A                     	;# 
  5248  029B                     	;# 
  5249  029C                     	;# 
  5250  029C                     	;# 
  5251  029D                     	;# 
  5252  030C                     	;# 
  5253  030C                     	;# 
  5254  030D                     	;# 
  5255  030E                     	;# 
  5256  030F                     	;# 
  5257  0310                     	;# 
  5258  0310                     	;# 
  5259  0311                     	;# 
  5260  0312                     	;# 
  5261  0313                     	;# 
  5262  0314                     	;# 
  5263  0314                     	;# 
  5264  0315                     	;# 
  5265  0316                     	;# 
  5266  0317                     	;# 
  5267  0318                     	;# 
  5268  0318                     	;# 
  5269  0319                     	;# 
  5270  031A                     	;# 
  5271  031B                     	;# 
  5272  031C                     	;# 
  5273  031C                     	;# 
  5274  031D                     	;# 
  5275  031E                     	;# 
  5276  031F                     	;# 
  5277  038C                     	;# 
  5278  038C                     	;# 
  5279  038D                     	;# 
  5280  038E                     	;# 
  5281  0390                     	;# 
  5282  0390                     	;# 
  5283  0391                     	;# 
  5284  0392                     	;# 
  5285  040C                     	;# 
  5286  040D                     	;# 
  5287  040E                     	;# 
  5288  040F                     	;# 
  5289  0410                     	;# 
  5290  0411                     	;# 
  5291  0416                     	;# 
  5292  0416                     	;# 
  5293  0417                     	;# 
  5294  0418                     	;# 
  5295  0418                     	;# 
  5296  0419                     	;# 
  5297  041A                     	;# 
  5298  041A                     	;# 
  5299  041B                     	;# 
  5300  041C                     	;# 
  5301  041C                     	;# 
  5302  041D                     	;# 
  5303  041E                     	;# 
  5304  041F                     	;# 
  5305  048C                     	;# 
  5306  048C                     	;# 
  5307  048D                     	;# 
  5308  048E                     	;# 
  5309  048F                     	;# 
  5310  048F                     	;# 
  5311  0490                     	;# 
  5312  0491                     	;# 
  5313  0492                     	;# 
  5314  0492                     	;# 
  5315  0493                     	;# 
  5316  0494                     	;# 
  5317  0495                     	;# 
  5318  0495                     	;# 
  5319  0496                     	;# 
  5320  0497                     	;# 
  5321  0498                     	;# 
  5322  0499                     	;# 
  5323  049A                     	;# 
  5324  049B                     	;# 
  5325  049C                     	;# 
  5326  049D                     	;# 
  5327  050C                     	;# 
  5328  050C                     	;# 
  5329  050D                     	;# 
  5330  050E                     	;# 
  5331  050F                     	;# 
  5332  050F                     	;# 
  5333  0510                     	;# 
  5334  0511                     	;# 
  5335  0512                     	;# 
  5336  0512                     	;# 
  5337  0513                     	;# 
  5338  0514                     	;# 
  5339  0515                     	;# 
  5340  0515                     	;# 
  5341  0516                     	;# 
  5342  0517                     	;# 
  5343  0518                     	;# 
  5344  0519                     	;# 
  5345  051A                     	;# 
  5346  051B                     	;# 
  5347  051C                     	;# 
  5348  051D                     	;# 
  5349  058C                     	;# 
  5350  058C                     	;# 
  5351  058D                     	;# 
  5352  058E                     	;# 
  5353  058F                     	;# 
  5354  058F                     	;# 
  5355  0590                     	;# 
  5356  0591                     	;# 
  5357  0592                     	;# 
  5358  0593                     	;# 
  5359  060C                     	;# 
  5360  060D                     	;# 
  5361  060E                     	;# 
  5362  060F                     	;# 
  5363  0610                     	;# 
  5364  0611                     	;# 
  5365  0612                     	;# 
  5366  0613                     	;# 
  5367  0614                     	;# 
  5368  0616                     	;# 
  5369  0617                     	;# 
  5370  0618                     	;# 
  5371  0619                     	;# 
  5372  061A                     	;# 
  5373  061B                     	;# 
  5374  061C                     	;# 
  5375  061D                     	;# 
  5376  061E                     	;# 
  5377  068C                     	;# 
  5378  068D                     	;# 
  5379  068E                     	;# 
  5380  068F                     	;# 
  5381  0690                     	;# 
  5382  0691                     	;# 
  5383  0692                     	;# 
  5384  0693                     	;# 
  5385  0694                     	;# 
  5386  070C                     	;# 
  5387  070D                     	;# 
  5388  070E                     	;# 
  5389  070F                     	;# 
  5390  0710                     	;# 
  5391  0711                     	;# 
  5392  0712                     	;# 
  5393  0713                     	;# 
  5394  0714                     	;# 
  5395  0716                     	;# 
  5396  0717                     	;# 
  5397  0718                     	;# 
  5398  0719                     	;# 
  5399  071A                     	;# 
  5400  071B                     	;# 
  5401  071C                     	;# 
  5402  071D                     	;# 
  5403  071E                     	;# 
  5404  0796                     	;# 
  5405  0797                     	;# 
  5406  0798                     	;# 
  5407  0799                     	;# 
  5408  079A                     	;# 
  5409  079B                     	;# 
  5410  080C                     	;# 
  5411  080D                     	;# 
  5412  080E                     	;# 
  5413  080F                     	;# 
  5414  0810                     	;# 
  5415  0811                     	;# 
  5416  0812                     	;# 
  5417  0813                     	;# 
  5418  0814                     	;# 
  5419  081A                     	;# 
  5420  081B                     	;# 
  5421  081C                     	;# 
  5422  081D                     	;# 
  5423  081E                     	;# 
  5424  081F                     	;# 
  5425  088C                     	;# 
  5426  088D                     	;# 
  5427  088E                     	;# 
  5428  088F                     	;# 
  5429  0890                     	;# 
  5430  0891                     	;# 
  5431  0892                     	;# 
  5432  0893                     	;# 
  5433  0895                     	;# 
  5434  0896                     	;# 
  5435  0897                     	;# 
  5436  0898                     	;# 
  5437  0899                     	;# 
  5438  089A                     	;# 
  5439  089B                     	;# 
  5440  090C                     	;# 
  5441  090E                     	;# 
  5442  090F                     	;# 
  5443  091F                     	;# 
  5444  091F                     	;# 
  5445  098F                     	;# 
  5446  098F                     	;# 
  5447  0990                     	;# 
  5448  0991                     	;# 
  5449  0992                     	;# 
  5450  0993                     	;# 
  5451  0994                     	;# 
  5452  0995                     	;# 
  5453  0996                     	;# 
  5454  0997                     	;# 
  5455  0E0F                     	;# 
  5456  0E10                     	;# 
  5457  0E11                     	;# 
  5458  0E12                     	;# 
  5459  0E13                     	;# 
  5460  0E14                     	;# 
  5461  0E15                     	;# 
  5462  0E16                     	;# 
  5463  0E17                     	;# 
  5464  0E18                     	;# 
  5465  0E19                     	;# 
  5466  0E1A                     	;# 
  5467  0E1B                     	;# 
  5468  0E1C                     	;# 
  5469  0E1D                     	;# 
  5470  0E1E                     	;# 
  5471  0E1F                     	;# 
  5472  0E20                     	;# 
  5473  0E21                     	;# 
  5474  0E22                     	;# 
  5475  0E23                     	;# 
  5476  0E24                     	;# 
  5477  0E25                     	;# 
  5478  0E26                     	;# 
  5479  0E27                     	;# 
  5480  0E28                     	;# 
  5481  0E29                     	;# 
  5482  0E2A                     	;# 
  5483  0E2B                     	;# 
  5484  0E2C                     	;# 
  5485  0E2D                     	;# 
  5486  0E2E                     	;# 
  5487  0E2F                     	;# 
  5488  0E30                     	;# 
  5489  0E31                     	;# 
  5490  0E32                     	;# 
  5491  0E33                     	;# 
  5492  0E34                     	;# 
  5493  0E35                     	;# 
  5494  0E36                     	;# 
  5495  0E37                     	;# 
  5496  0E8F                     	;# 
  5497  0E90                     	;# 
  5498  0E91                     	;# 
  5499  0E92                     	;# 
  5500  0E93                     	;# 
  5501  0E94                     	;# 
  5502  0E95                     	;# 
  5503  0E96                     	;# 
  5504  0E97                     	;# 
  5505  0E9C                     	;# 
  5506  0E9D                     	;# 
  5507  0E9E                     	;# 
  5508  0EA1                     	;# 
  5509  0EA2                     	;# 
  5510  0EA3                     	;# 
  5511  0EA4                     	;# 
  5512  0EA5                     	;# 
  5513  0EA9                     	;# 
  5514  0EAA                     	;# 
  5515  0EAB                     	;# 
  5516  0EAC                     	;# 
  5517  0EB1                     	;# 
  5518  0EB2                     	;# 
  5519  0EB3                     	;# 
  5520  0EB8                     	;# 
  5521  0EB9                     	;# 
  5522  0EBA                     	;# 
  5523  0EBB                     	;# 
  5524  0EBC                     	;# 
  5525  0EBD                     	;# 
  5526  0EBE                     	;# 
  5527  0EC3                     	;# 
  5528  0EC5                     	;# 
  5529  0EC6                     	;# 
  5530  0EC7                     	;# 
  5531  0EC8                     	;# 
  5532  0EC9                     	;# 
  5533  0ECA                     	;# 
  5534  0ECB                     	;# 
  5535  0ECC                     	;# 
  5536  0F10                     	;# 
  5537  0F11                     	;# 
  5538  0F12                     	;# 
  5539  0F13                     	;# 
  5540  0F14                     	;# 
  5541  0F15                     	;# 
  5542  0F16                     	;# 
  5543  0F17                     	;# 
  5544  0F18                     	;# 
  5545  0F19                     	;# 
  5546  0F1A                     	;# 
  5547  0F1B                     	;# 
  5548  0F1C                     	;# 
  5549  0F1D                     	;# 
  5550  0F1E                     	;# 
  5551  0F1F                     	;# 
  5552  0F20                     	;# 
  5553  0F21                     	;# 
  5554  0F22                     	;# 
  5555  0F23                     	;# 
  5556  0F24                     	;# 
  5557  0F25                     	;# 
  5558  0F26                     	;# 
  5559  0F27                     	;# 
  5560  0F28                     	;# 
  5561  0F29                     	;# 
  5562  0F2A                     	;# 
  5563  0F2B                     	;# 
  5564  0F2C                     	;# 
  5565  0F2D                     	;# 
  5566  0F2E                     	;# 
  5567  0F2F                     	;# 
  5568  0F30                     	;# 
  5569  0F31                     	;# 
  5570  0F32                     	;# 
  5571  0F38                     	;# 
  5572  0F39                     	;# 
  5573  0F3A                     	;# 
  5574  0F3B                     	;# 
  5575  0F3C                     	;# 
  5576  0F3D                     	;# 
  5577  0F3E                     	;# 
  5578  0F3F                     	;# 
  5579  0F40                     	;# 
  5580  0F41                     	;# 
  5581  0F43                     	;# 
  5582  0F44                     	;# 
  5583  0F45                     	;# 
  5584  0F46                     	;# 
  5585  0F47                     	;# 
  5586  0F48                     	;# 
  5587  0F49                     	;# 
  5588  0F4A                     	;# 
  5589  0F4B                     	;# 
  5590  0F4C                     	;# 
  5591  0F4E                     	;# 
  5592  0F4F                     	;# 
  5593  0F50                     	;# 
  5594  0F51                     	;# 
  5595  0F52                     	;# 
  5596  0F53                     	;# 
  5597  0F54                     	;# 
  5598  0F55                     	;# 
  5599  0F56                     	;# 
  5600  0F57                     	;# 
  5601  0F59                     	;# 
  5602  0F5A                     	;# 
  5603  0F5B                     	;# 
  5604  0F5C                     	;# 
  5605  0F5D                     	;# 
  5606  0F61                     	;# 
  5607  0F62                     	;# 
  5608  0F64                     	;# 
  5609  0F65                     	;# 
  5610  0F66                     	;# 
  5611  0F67                     	;# 
  5612  0F68                     	;# 
  5613  0F69                     	;# 
  5614  0F6A                     	;# 
  5615  0F6B                     	;# 
  5616  0F6C                     	;# 
  5617  0F6D                     	;# 
  5618  0FE4                     	;# 
  5619  0FE5                     	;# 
  5620  0FE6                     	;# 
  5621  0FE7                     	;# 
  5622  0FE8                     	;# 
  5623  0FE9                     	;# 
  5624  0FEA                     	;# 
  5625  0FEB                     	;# 
  5626  0FED                     	;# 
  5627  0FEE                     	;# 
  5628  0FEF                     	;# 
  5629  0000                     	;# 
  5630  0001                     	;# 
  5631  0002                     	;# 
  5632  0003                     	;# 
  5633  0004                     	;# 
  5634  0005                     	;# 
  5635  0006                     	;# 
  5636  0007                     	;# 
  5637  0008                     	;# 
  5638  0009                     	;# 
  5639  000A                     	;# 
  5640  000B                     	;# 
  5641  000C                     	;# 
  5642  000D                     	;# 
  5643  000E                     	;# 
  5644  000F                     	;# 
  5645  0010                     	;# 
  5646  0011                     	;# 
  5647  0012                     	;# 
  5648  0013                     	;# 
  5649  0014                     	;# 
  5650  0015                     	;# 
  5651  0016                     	;# 
  5652  0017                     	;# 
  5653  0018                     	;# 
  5654  0019                     	;# 
  5655  001A                     	;# 
  5656  001C                     	;# 
  5657  001C                     	;# 
  5658  001D                     	;# 
  5659  001D                     	;# 
  5660  001E                     	;# 
  5661  001F                     	;# 
  5662  008C                     	;# 
  5663  008C                     	;# 
  5664  008D                     	;# 
  5665  008E                     	;# 
  5666  008E                     	;# 
  5667  008F                     	;# 
  5668  0090                     	;# 
  5669  0090                     	;# 
  5670  0091                     	;# 
  5671  0093                     	;# 
  5672  0094                     	;# 
  5673  0095                     	;# 
  5674  0096                     	;# 
  5675  0097                     	;# 
  5676  0098                     	;# 
  5677  0099                     	;# 
  5678  009A                     	;# 
  5679  009B                     	;# 
  5680  009C                     	;# 
  5681  009D                     	;# 
  5682  009E                     	;# 
  5683  010C                     	;# 
  5684  010D                     	;# 
  5685  010E                     	;# 
  5686  010E                     	;# 
  5687  010F                     	;# 
  5688  0110                     	;# 
  5689  0110                     	;# 
  5690  0111                     	;# 
  5691  0112                     	;# 
  5692  0112                     	;# 
  5693  0113                     	;# 
  5694  0114                     	;# 
  5695  0114                     	;# 
  5696  0115                     	;# 
  5697  0116                     	;# 
  5698  0116                     	;# 
  5699  0117                     	;# 
  5700  0119                     	;# 
  5701  0119                     	;# 
  5702  0119                     	;# 
  5703  011A                     	;# 
  5704  011A                     	;# 
  5705  011A                     	;# 
  5706  011B                     	;# 
  5707  011B                     	;# 
  5708  011B                     	;# 
  5709  011B                     	;# 
  5710  011B                     	;# 
  5711  011C                     	;# 
  5712  011C                     	;# 
  5713  011C                     	;# 
  5714  011D                     	;# 
  5715  011D                     	;# 
  5716  011D                     	;# 
  5717  011E                     	;# 
  5718  011E                     	;# 
  5719  011E                     	;# 
  5720  011F                     	;# 
  5721  011F                     	;# 
  5722  011F                     	;# 
  5723  011F                     	;# 
  5724  011F                     	;# 
  5725  018C                     	;# 
  5726  018D                     	;# 
  5727  018E                     	;# 
  5728  018F                     	;# 
  5729  0190                     	;# 
  5730  0191                     	;# 
  5731  0192                     	;# 
  5732  0196                     	;# 
  5733  0197                     	;# 
  5734  0198                     	;# 
  5735  0199                     	;# 
  5736  019A                     	;# 
  5737  019B                     	;# 
  5738  019C                     	;# 
  5739  020C                     	;# 
  5740  020C                     	;# 
  5741  020D                     	;# 
  5742  020E                     	;# 
  5743  020F                     	;# 
  5744  020F                     	;# 
  5745  0210                     	;# 
  5746  0210                     	;# 
  5747  0211                     	;# 
  5748  0211                     	;# 
  5749  0212                     	;# 
  5750  0212                     	;# 
  5751  0213                     	;# 
  5752  0214                     	;# 
  5753  0215                     	;# 
  5754  0215                     	;# 
  5755  0216                     	;# 
  5756  0216                     	;# 
  5757  0217                     	;# 
  5758  0217                     	;# 
  5759  0218                     	;# 
  5760  0218                     	;# 
  5761  0219                     	;# 
  5762  021A                     	;# 
  5763  021B                     	;# 
  5764  021B                     	;# 
  5765  021C                     	;# 
  5766  021C                     	;# 
  5767  021D                     	;# 
  5768  021D                     	;# 
  5769  021E                     	;# 
  5770  021F                     	;# 
  5771  028C                     	;# 
  5772  028C                     	;# 
  5773  028D                     	;# 
  5774  028D                     	;# 
  5775  028E                     	;# 
  5776  028F                     	;# 
  5777  0290                     	;# 
  5778  0290                     	;# 
  5779  0291                     	;# 
  5780  0292                     	;# 
  5781  0292                     	;# 
  5782  0293                     	;# 
  5783  0293                     	;# 
  5784  0294                     	;# 
  5785  0295                     	;# 
  5786  0296                     	;# 
  5787  0296                     	;# 
  5788  0297                     	;# 
  5789  0298                     	;# 
  5790  0298                     	;# 
  5791  0299                     	;# 
  5792  0299                     	;# 
  5793  029A                     	;# 
  5794  029B                     	;# 
  5795  029C                     	;# 
  5796  029C                     	;# 
  5797  029D                     	;# 
  5798  030C                     	;# 
  5799  030C                     	;# 
  5800  030D                     	;# 
  5801  030E                     	;# 
  5802  030F                     	;# 
  5803  0310                     	;# 
  5804  0310                     	;# 
  5805  0311                     	;# 
  5806  0312                     	;# 
  5807  0313                     	;# 
  5808  0314                     	;# 
  5809  0314                     	;# 
  5810  0315                     	;# 
  5811  0316                     	;# 
  5812  0317                     	;# 
  5813  0318                     	;# 
  5814  0318                     	;# 
  5815  0319                     	;# 
  5816  031A                     	;# 
  5817  031B                     	;# 
  5818  031C                     	;# 
  5819  031C                     	;# 
  5820  031D                     	;# 
  5821  031E                     	;# 
  5822  031F                     	;# 
  5823  038C                     	;# 
  5824  038C                     	;# 
  5825  038D                     	;# 
  5826  038E                     	;# 
  5827  0390                     	;# 
  5828  0390                     	;# 
  5829  0391                     	;# 
  5830  0392                     	;# 
  5831  040C                     	;# 
  5832  040D                     	;# 
  5833  040E                     	;# 
  5834  040F                     	;# 
  5835  0410                     	;# 
  5836  0411                     	;# 
  5837  0416                     	;# 
  5838  0416                     	;# 
  5839  0417                     	;# 
  5840  0418                     	;# 
  5841  0418                     	;# 
  5842  0419                     	;# 
  5843  041A                     	;# 
  5844  041A                     	;# 
  5845  041B                     	;# 
  5846  041C                     	;# 
  5847  041C                     	;# 
  5848  041D                     	;# 
  5849  041E                     	;# 
  5850  041F                     	;# 
  5851  048C                     	;# 
  5852  048C                     	;# 
  5853  048D                     	;# 
  5854  048E                     	;# 
  5855  048F                     	;# 
  5856  048F                     	;# 
  5857  0490                     	;# 
  5858  0491                     	;# 
  5859  0492                     	;# 
  5860  0492                     	;# 
  5861  0493                     	;# 
  5862  0494                     	;# 
  5863  0495                     	;# 
  5864  0495                     	;# 
  5865  0496                     	;# 
  5866  0497                     	;# 
  5867  0498                     	;# 
  5868  0499                     	;# 
  5869  049A                     	;# 
  5870  049B                     	;# 
  5871  049C                     	;# 
  5872  049D                     	;# 
  5873  050C                     	;# 
  5874  050C                     	;# 
  5875  050D                     	;# 
  5876  050E                     	;# 
  5877  050F                     	;# 
  5878  050F                     	;# 
  5879  0510                     	;# 
  5880  0511                     	;# 
  5881  0512                     	;# 
  5882  0512                     	;# 
  5883  0513                     	;# 
  5884  0514                     	;# 
  5885  0515                     	;# 
  5886  0515                     	;# 
  5887  0516                     	;# 
  5888  0517                     	;# 
  5889  0518                     	;# 
  5890  0519                     	;# 
  5891  051A                     	;# 
  5892  051B                     	;# 
  5893  051C                     	;# 
  5894  051D                     	;# 
  5895  058C                     	;# 
  5896  058C                     	;# 
  5897  058D                     	;# 
  5898  058E                     	;# 
  5899  058F                     	;# 
  5900  058F                     	;# 
  5901  0590                     	;# 
  5902  0591                     	;# 
  5903  0592                     	;# 
  5904  0593                     	;# 
  5905  060C                     	;# 
  5906  060D                     	;# 
  5907  060E                     	;# 
  5908  060F                     	;# 
  5909  0610                     	;# 
  5910  0611                     	;# 
  5911  0612                     	;# 
  5912  0613                     	;# 
  5913  0614                     	;# 
  5914  0616                     	;# 
  5915  0617                     	;# 
  5916  0618                     	;# 
  5917  0619                     	;# 
  5918  061A                     	;# 
  5919  061B                     	;# 
  5920  061C                     	;# 
  5921  061D                     	;# 
  5922  061E                     	;# 
  5923  068C                     	;# 
  5924  068D                     	;# 
  5925  068E                     	;# 
  5926  068F                     	;# 
  5927  0690                     	;# 
  5928  0691                     	;# 
  5929  0692                     	;# 
  5930  0693                     	;# 
  5931  0694                     	;# 
  5932  070C                     	;# 
  5933  070D                     	;# 
  5934  070E                     	;# 
  5935  070F                     	;# 
  5936  0710                     	;# 
  5937  0711                     	;# 
  5938  0712                     	;# 
  5939  0713                     	;# 
  5940  0714                     	;# 
  5941  0716                     	;# 
  5942  0717                     	;# 
  5943  0718                     	;# 
  5944  0719                     	;# 
  5945  071A                     	;# 
  5946  071B                     	;# 
  5947  071C                     	;# 
  5948  071D                     	;# 
  5949  071E                     	;# 
  5950  0796                     	;# 
  5951  0797                     	;# 
  5952  0798                     	;# 
  5953  0799                     	;# 
  5954  079A                     	;# 
  5955  079B                     	;# 
  5956  080C                     	;# 
  5957  080D                     	;# 
  5958  080E                     	;# 
  5959  080F                     	;# 
  5960  0810                     	;# 
  5961  0811                     	;# 
  5962  0812                     	;# 
  5963  0813                     	;# 
  5964  0814                     	;# 
  5965  081A                     	;# 
  5966  081B                     	;# 
  5967  081C                     	;# 
  5968  081D                     	;# 
  5969  081E                     	;# 
  5970  081F                     	;# 
  5971  088C                     	;# 
  5972  088D                     	;# 
  5973  088E                     	;# 
  5974  088F                     	;# 
  5975  0890                     	;# 
  5976  0891                     	;# 
  5977  0892                     	;# 
  5978  0893                     	;# 
  5979  0895                     	;# 
  5980  0896                     	;# 
  5981  0897                     	;# 
  5982  0898                     	;# 
  5983  0899                     	;# 
  5984  089A                     	;# 
  5985  089B                     	;# 
  5986  090C                     	;# 
  5987  090E                     	;# 
  5988  090F                     	;# 
  5989  091F                     	;# 
  5990  091F                     	;# 
  5991  098F                     	;# 
  5992  098F                     	;# 
  5993  0990                     	;# 
  5994  0991                     	;# 
  5995  0992                     	;# 
  5996  0993                     	;# 
  5997  0994                     	;# 
  5998  0995                     	;# 
  5999  0996                     	;# 
  6000  0997                     	;# 
  6001  0E0F                     	;# 
  6002  0E10                     	;# 
  6003  0E11                     	;# 
  6004  0E12                     	;# 
  6005  0E13                     	;# 
  6006  0E14                     	;# 
  6007  0E15                     	;# 
  6008  0E16                     	;# 
  6009  0E17                     	;# 
  6010  0E18                     	;# 
  6011  0E19                     	;# 
  6012  0E1A                     	;# 
  6013  0E1B                     	;# 
  6014  0E1C                     	;# 
  6015  0E1D                     	;# 
  6016  0E1E                     	;# 
  6017  0E1F                     	;# 
  6018  0E20                     	;# 
  6019  0E21                     	;# 
  6020  0E22                     	;# 
  6021  0E23                     	;# 
  6022  0E24                     	;# 
  6023  0E25                     	;# 
  6024  0E26                     	;# 
  6025  0E27                     	;# 
  6026  0E28                     	;# 
  6027  0E29                     	;# 
  6028  0E2A                     	;# 
  6029  0E2B                     	;# 
  6030  0E2C                     	;# 
  6031  0E2D                     	;# 
  6032  0E2E                     	;# 
  6033  0E2F                     	;# 
  6034  0E30                     	;# 
  6035  0E31                     	;# 
  6036  0E32                     	;# 
  6037  0E33                     	;# 
  6038  0E34                     	;# 
  6039  0E35                     	;# 
  6040  0E36                     	;# 
  6041  0E37                     	;# 
  6042  0E8F                     	;# 
  6043  0E90                     	;# 
  6044  0E91                     	;# 
  6045  0E92                     	;# 
  6046  0E93                     	;# 
  6047  0E94                     	;# 
  6048  0E95                     	;# 
  6049  0E96                     	;# 
  6050  0E97                     	;# 
  6051  0E9C                     	;# 
  6052  0E9D                     	;# 
  6053  0E9E                     	;# 
  6054  0EA1                     	;# 
  6055  0EA2                     	;# 
  6056  0EA3                     	;# 
  6057  0EA4                     	;# 
  6058  0EA5                     	;# 
  6059  0EA9                     	;# 
  6060  0EAA                     	;# 
  6061  0EAB                     	;# 
  6062  0EAC                     	;# 
  6063  0EB1                     	;# 
  6064  0EB2                     	;# 
  6065  0EB3                     	;# 
  6066  0EB8                     	;# 
  6067  0EB9                     	;# 
  6068  0EBA                     	;# 
  6069  0EBB                     	;# 
  6070  0EBC                     	;# 
  6071  0EBD                     	;# 
  6072  0EBE                     	;# 
  6073  0EC3                     	;# 
  6074  0EC5                     	;# 
  6075  0EC6                     	;# 
  6076  0EC7                     	;# 
  6077  0EC8                     	;# 
  6078  0EC9                     	;# 
  6079  0ECA                     	;# 
  6080  0ECB                     	;# 
  6081  0ECC                     	;# 
  6082  0F10                     	;# 
  6083  0F11                     	;# 
  6084  0F12                     	;# 
  6085  0F13                     	;# 
  6086  0F14                     	;# 
  6087  0F15                     	;# 
  6088  0F16                     	;# 
  6089  0F17                     	;# 
  6090  0F18                     	;# 
  6091  0F19                     	;# 
  6092  0F1A                     	;# 
  6093  0F1B                     	;# 
  6094  0F1C                     	;# 
  6095  0F1D                     	;# 
  6096  0F1E                     	;# 
  6097  0F1F                     	;# 
  6098  0F20                     	;# 
  6099  0F21                     	;# 
  6100  0F22                     	;# 
  6101  0F23                     	;# 
  6102  0F24                     	;# 
  6103  0F25                     	;# 
  6104  0F26                     	;# 
  6105  0F27                     	;# 
  6106  0F28                     	;# 
  6107  0F29                     	;# 
  6108  0F2A                     	;# 
  6109  0F2B                     	;# 
  6110  0F2C                     	;# 
  6111  0F2D                     	;# 
  6112  0F2E                     	;# 
  6113  0F2F                     	;# 
  6114  0F30                     	;# 
  6115  0F31                     	;# 
  6116  0F32                     	;# 
  6117  0F38                     	;# 
  6118  0F39                     	;# 
  6119  0F3A                     	;# 
  6120  0F3B                     	;# 
  6121  0F3C                     	;# 
  6122  0F3D                     	;# 
  6123  0F3E                     	;# 
  6124  0F3F                     	;# 
  6125  0F40                     	;# 
  6126  0F41                     	;# 
  6127  0F43                     	;# 
  6128  0F44                     	;# 
  6129  0F45                     	;# 
  6130  0F46                     	;# 
  6131  0F47                     	;# 
  6132  0F48                     	;# 
  6133  0F49                     	;# 
  6134  0F4A                     	;# 
  6135  0F4B                     	;# 
  6136  0F4C                     	;# 
  6137  0F4E                     	;# 
  6138  0F4F                     	;# 
  6139  0F50                     	;# 
  6140  0F51                     	;# 
  6141  0F52                     	;# 
  6142  0F53                     	;# 
  6143  0F54                     	;# 
  6144  0F55                     	;# 
  6145  0F56                     	;# 
  6146  0F57                     	;# 
  6147  0F59                     	;# 
  6148  0F5A                     	;# 
  6149  0F5B                     	;# 
  6150  0F5C                     	;# 
  6151  0F5D                     	;# 
  6152  0F61                     	;# 
  6153  0F62                     	;# 
  6154  0F64                     	;# 
  6155  0F65                     	;# 
  6156  0F66                     	;# 
  6157  0F67                     	;# 
  6158  0F68                     	;# 
  6159  0F69                     	;# 
  6160  0F6A                     	;# 
  6161  0F6B                     	;# 
  6162  0F6C                     	;# 
  6163  0F6D                     	;# 
  6164  0FE4                     	;# 
  6165  0FE5                     	;# 
  6166  0FE6                     	;# 
  6167  0FE7                     	;# 
  6168  0FE8                     	;# 
  6169  0FE9                     	;# 
  6170  0FEA                     	;# 
  6171  0FEB                     	;# 
  6172  0FED                     	;# 
  6173  0FEE                     	;# 
  6174  0FEF                     	;# 
  6175  0000                     	;# 
  6176  0001                     	;# 
  6177  0002                     	;# 
  6178  0003                     	;# 
  6179  0004                     	;# 
  6180  0005                     	;# 
  6181  0006                     	;# 
  6182  0007                     	;# 
  6183  0008                     	;# 
  6184  0009                     	;# 
  6185  000A                     	;# 
  6186  000B                     	;# 
  6187  000C                     	;# 
  6188  000D                     	;# 
  6189  000E                     	;# 
  6190  000F                     	;# 
  6191  0010                     	;# 
  6192  0011                     	;# 
  6193  0012                     	;# 
  6194  0013                     	;# 
  6195  0014                     	;# 
  6196  0015                     	;# 
  6197  0016                     	;# 
  6198  0017                     	;# 
  6199  0018                     	;# 
  6200  0019                     	;# 
  6201  001A                     	;# 
  6202  001C                     	;# 
  6203  001C                     	;# 
  6204  001D                     	;# 
  6205  001D                     	;# 
  6206  001E                     	;# 
  6207  001F                     	;# 
  6208  008C                     	;# 
  6209  008C                     	;# 
  6210  008D                     	;# 
  6211  008E                     	;# 
  6212  008E                     	;# 
  6213  008F                     	;# 
  6214  0090                     	;# 
  6215  0090                     	;# 
  6216  0091                     	;# 
  6217  0093                     	;# 
  6218  0094                     	;# 
  6219  0095                     	;# 
  6220  0096                     	;# 
  6221  0097                     	;# 
  6222  0098                     	;# 
  6223  0099                     	;# 
  6224  009A                     	;# 
  6225  009B                     	;# 
  6226  009C                     	;# 
  6227  009D                     	;# 
  6228  009E                     	;# 
  6229  010C                     	;# 
  6230  010D                     	;# 
  6231  010E                     	;# 
  6232  010E                     	;# 
  6233  010F                     	;# 
  6234  0110                     	;# 
  6235  0110                     	;# 
  6236  0111                     	;# 
  6237  0112                     	;# 
  6238  0112                     	;# 
  6239  0113                     	;# 
  6240  0114                     	;# 
  6241  0114                     	;# 
  6242  0115                     	;# 
  6243  0116                     	;# 
  6244  0116                     	;# 
  6245  0117                     	;# 
  6246  0119                     	;# 
  6247  0119                     	;# 
  6248  0119                     	;# 
  6249  011A                     	;# 
  6250  011A                     	;# 
  6251  011A                     	;# 
  6252  011B                     	;# 
  6253  011B                     	;# 
  6254  011B                     	;# 
  6255  011B                     	;# 
  6256  011B                     	;# 
  6257  011C                     	;# 
  6258  011C                     	;# 
  6259  011C                     	;# 
  6260  011D                     	;# 
  6261  011D                     	;# 
  6262  011D                     	;# 
  6263  011E                     	;# 
  6264  011E                     	;# 
  6265  011E                     	;# 
  6266  011F                     	;# 
  6267  011F                     	;# 
  6268  011F                     	;# 
  6269  011F                     	;# 
  6270  011F                     	;# 
  6271  018C                     	;# 
  6272  018D                     	;# 
  6273  018E                     	;# 
  6274  018F                     	;# 
  6275  0190                     	;# 
  6276  0191                     	;# 
  6277  0192                     	;# 
  6278  0196                     	;# 
  6279  0197                     	;# 
  6280  0198                     	;# 
  6281  0199                     	;# 
  6282  019A                     	;# 
  6283  019B                     	;# 
  6284  019C                     	;# 
  6285  020C                     	;# 
  6286  020C                     	;# 
  6287  020D                     	;# 
  6288  020E                     	;# 
  6289  020F                     	;# 
  6290  020F                     	;# 
  6291  0210                     	;# 
  6292  0210                     	;# 
  6293  0211                     	;# 
  6294  0211                     	;# 
  6295  0212                     	;# 
  6296  0212                     	;# 
  6297  0213                     	;# 
  6298  0214                     	;# 
  6299  0215                     	;# 
  6300  0215                     	;# 
  6301  0216                     	;# 
  6302  0216                     	;# 
  6303  0217                     	;# 
  6304  0217                     	;# 
  6305  0218                     	;# 
  6306  0218                     	;# 
  6307  0219                     	;# 
  6308  021A                     	;# 
  6309  021B                     	;# 
  6310  021B                     	;# 
  6311  021C                     	;# 
  6312  021C                     	;# 
  6313  021D                     	;# 
  6314  021D                     	;# 
  6315  021E                     	;# 
  6316  021F                     	;# 
  6317  028C                     	;# 
  6318  028C                     	;# 
  6319  028D                     	;# 
  6320  028D                     	;# 
  6321  028E                     	;# 
  6322  028F                     	;# 
  6323  0290                     	;# 
  6324  0290                     	;# 
  6325  0291                     	;# 
  6326  0292                     	;# 
  6327  0292                     	;# 
  6328  0293                     	;# 
  6329  0293                     	;# 
  6330  0294                     	;# 
  6331  0295                     	;# 
  6332  0296                     	;# 
  6333  0296                     	;# 
  6334  0297                     	;# 
  6335  0298                     	;# 
  6336  0298                     	;# 
  6337  0299                     	;# 
  6338  0299                     	;# 
  6339  029A                     	;# 
  6340  029B                     	;# 
  6341  029C                     	;# 
  6342  029C                     	;# 
  6343  029D                     	;# 
  6344  030C                     	;# 
  6345  030C                     	;# 
  6346  030D                     	;# 
  6347  030E                     	;# 
  6348  030F                     	;# 
  6349  0310                     	;# 
  6350  0310                     	;# 
  6351  0311                     	;# 
  6352  0312                     	;# 
  6353  0313                     	;# 
  6354  0314                     	;# 
  6355  0314                     	;# 
  6356  0315                     	;# 
  6357  0316                     	;# 
  6358  0317                     	;# 
  6359  0318                     	;# 
  6360  0318                     	;# 
  6361  0319                     	;# 
  6362  031A                     	;# 
  6363  031B                     	;# 
  6364  031C                     	;# 
  6365  031C                     	;# 
  6366  031D                     	;# 
  6367  031E                     	;# 
  6368  031F                     	;# 
  6369  038C                     	;# 
  6370  038C                     	;# 
  6371  038D                     	;# 
  6372  038E                     	;# 
  6373  0390                     	;# 
  6374  0390                     	;# 
  6375  0391                     	;# 
  6376  0392                     	;# 
  6377  040C                     	;# 
  6378  040D                     	;# 
  6379  040E                     	;# 
  6380  040F                     	;# 
  6381  0410                     	;# 
  6382  0411                     	;# 
  6383  0416                     	;# 
  6384  0416                     	;# 
  6385  0417                     	;# 
  6386  0418                     	;# 
  6387  0418                     	;# 
  6388  0419                     	;# 
  6389  041A                     	;# 
  6390  041A                     	;# 
  6391  041B                     	;# 
  6392  041C                     	;# 
  6393  041C                     	;# 
  6394  041D                     	;# 
  6395  041E                     	;# 
  6396  041F                     	;# 
  6397  048C                     	;# 
  6398  048C                     	;# 
  6399  048D                     	;# 
  6400  048E                     	;# 
  6401  048F                     	;# 
  6402  048F                     	;# 
  6403  0490                     	;# 
  6404  0491                     	;# 
  6405  0492                     	;# 
  6406  0492                     	;# 
  6407  0493                     	;# 
  6408  0494                     	;# 
  6409  0495                     	;# 
  6410  0495                     	;# 
  6411  0496                     	;# 
  6412  0497                     	;# 
  6413  0498                     	;# 
  6414  0499                     	;# 
  6415  049A                     	;# 
  6416  049B                     	;# 
  6417  049C                     	;# 
  6418  049D                     	;# 
  6419  050C                     	;# 
  6420  050C                     	;# 
  6421  050D                     	;# 
  6422  050E                     	;# 
  6423  050F                     	;# 
  6424  050F                     	;# 
  6425  0510                     	;# 
  6426  0511                     	;# 
  6427  0512                     	;# 
  6428  0512                     	;# 
  6429  0513                     	;# 
  6430  0514                     	;# 
  6431  0515                     	;# 
  6432  0515                     	;# 
  6433  0516                     	;# 
  6434  0517                     	;# 
  6435  0518                     	;# 
  6436  0519                     	;# 
  6437  051A                     	;# 
  6438  051B                     	;# 
  6439  051C                     	;# 
  6440  051D                     	;# 
  6441  058C                     	;# 
  6442  058C                     	;# 
  6443  058D                     	;# 
  6444  058E                     	;# 
  6445  058F                     	;# 
  6446  058F                     	;# 
  6447  0590                     	;# 
  6448  0591                     	;# 
  6449  0592                     	;# 
  6450  0593                     	;# 
  6451  060C                     	;# 
  6452  060D                     	;# 
  6453  060E                     	;# 
  6454  060F                     	;# 
  6455  0610                     	;# 
  6456  0611                     	;# 
  6457  0612                     	;# 
  6458  0613                     	;# 
  6459  0614                     	;# 
  6460  0616                     	;# 
  6461  0617                     	;# 
  6462  0618                     	;# 
  6463  0619                     	;# 
  6464  061A                     	;# 
  6465  061B                     	;# 
  6466  061C                     	;# 
  6467  061D                     	;# 
  6468  061E                     	;# 
  6469  068C                     	;# 
  6470  068D                     	;# 
  6471  068E                     	;# 
  6472  068F                     	;# 
  6473  0690                     	;# 
  6474  0691                     	;# 
  6475  0692                     	;# 
  6476  0693                     	;# 
  6477  0694                     	;# 
  6478  070C                     	;# 
  6479  070D                     	;# 
  6480  070E                     	;# 
  6481  070F                     	;# 
  6482  0710                     	;# 
  6483  0711                     	;# 
  6484  0712                     	;# 
  6485  0713                     	;# 
  6486  0714                     	;# 
  6487  0716                     	;# 
  6488  0717                     	;# 
  6489  0718                     	;# 
  6490  0719                     	;# 
  6491  071A                     	;# 
  6492  071B                     	;# 
  6493  071C                     	;# 
  6494  071D                     	;# 
  6495  071E                     	;# 
  6496  0796                     	;# 
  6497  0797                     	;# 
  6498  0798                     	;# 
  6499  0799                     	;# 
  6500  079A                     	;# 
  6501  079B                     	;# 
  6502  080C                     	;# 
  6503  080D                     	;# 
  6504  080E                     	;# 
  6505  080F                     	;# 
  6506  0810                     	;# 
  6507  0811                     	;# 
  6508  0812                     	;# 
  6509  0813                     	;# 
  6510  0814                     	;# 
  6511  081A                     	;# 
  6512  081B                     	;# 
  6513  081C                     	;# 
  6514  081D                     	;# 
  6515  081E                     	;# 
  6516  081F                     	;# 
  6517  088C                     	;# 
  6518  088D                     	;# 
  6519  088E                     	;# 
  6520  088F                     	;# 
  6521  0890                     	;# 
  6522  0891                     	;# 
  6523  0892                     	;# 
  6524  0893                     	;# 
  6525  0895                     	;# 
  6526  0896                     	;# 
  6527  0897                     	;# 
  6528  0898                     	;# 
  6529  0899                     	;# 
  6530  089A                     	;# 
  6531  089B                     	;# 
  6532  090C                     	;# 
  6533  090E                     	;# 
  6534  090F                     	;# 
  6535  091F                     	;# 
  6536  091F                     	;# 
  6537  098F                     	;# 
  6538  098F                     	;# 
  6539  0990                     	;# 
  6540  0991                     	;# 
  6541  0992                     	;# 
  6542  0993                     	;# 
  6543  0994                     	;# 
  6544  0995                     	;# 
  6545  0996                     	;# 
  6546  0997                     	;# 
  6547  0E0F                     	;# 
  6548  0E10                     	;# 
  6549  0E11                     	;# 
  6550  0E12                     	;# 
  6551  0E13                     	;# 
  6552  0E14                     	;# 
  6553  0E15                     	;# 
  6554  0E16                     	;# 
  6555  0E17                     	;# 
  6556  0E18                     	;# 
  6557  0E19                     	;# 
  6558  0E1A                     	;# 
  6559  0E1B                     	;# 
  6560  0E1C                     	;# 
  6561  0E1D                     	;# 
  6562  0E1E                     	;# 
  6563  0E1F                     	;# 
  6564  0E20                     	;# 
  6565  0E21                     	;# 
  6566  0E22                     	;# 
  6567  0E23                     	;# 
  6568  0E24                     	;# 
  6569  0E25                     	;# 
  6570  0E26                     	;# 
  6571  0E27                     	;# 
  6572  0E28                     	;# 
  6573  0E29                     	;# 
  6574  0E2A                     	;# 
  6575  0E2B                     	;# 
  6576  0E2C                     	;# 
  6577  0E2D                     	;# 
  6578  0E2E                     	;# 
  6579  0E2F                     	;# 
  6580  0E30                     	;# 
  6581  0E31                     	;# 
  6582  0E32                     	;# 
  6583  0E33                     	;# 
  6584  0E34                     	;# 
  6585  0E35                     	;# 
  6586  0E36                     	;# 
  6587  0E37                     	;# 
  6588  0E8F                     	;# 
  6589  0E90                     	;# 
  6590  0E91                     	;# 
  6591  0E92                     	;# 
  6592  0E93                     	;# 
  6593  0E94                     	;# 
  6594  0E95                     	;# 
  6595  0E96                     	;# 
  6596  0E97                     	;# 
  6597  0E9C                     	;# 
  6598  0E9D                     	;# 
  6599  0E9E                     	;# 
  6600  0EA1                     	;# 
  6601  0EA2                     	;# 
  6602  0EA3                     	;# 
  6603  0EA4                     	;# 
  6604  0EA5                     	;# 
  6605  0EA9                     	;# 
  6606  0EAA                     	;# 
  6607  0EAB                     	;# 
  6608  0EAC                     	;# 
  6609  0EB1                     	;# 
  6610  0EB2                     	;# 
  6611  0EB3                     	;# 
  6612  0EB8                     	;# 
  6613  0EB9                     	;# 
  6614  0EBA                     	;# 
  6615  0EBB                     	;# 
  6616  0EBC                     	;# 
  6617  0EBD                     	;# 
  6618  0EBE                     	;# 
  6619  0EC3                     	;# 
  6620  0EC5                     	;# 
  6621  0EC6                     	;# 
  6622  0EC7                     	;# 
  6623  0EC8                     	;# 
  6624  0EC9                     	;# 
  6625  0ECA                     	;# 
  6626  0ECB                     	;# 
  6627  0ECC                     	;# 
  6628  0F10                     	;# 
  6629  0F11                     	;# 
  6630  0F12                     	;# 
  6631  0F13                     	;# 
  6632  0F14                     	;# 
  6633  0F15                     	;# 
  6634  0F16                     	;# 
  6635  0F17                     	;# 
  6636  0F18                     	;# 
  6637  0F19                     	;# 
  6638  0F1A                     	;# 
  6639  0F1B                     	;# 
  6640  0F1C                     	;# 
  6641  0F1D                     	;# 
  6642  0F1E                     	;# 
  6643  0F1F                     	;# 
  6644  0F20                     	;# 
  6645  0F21                     	;# 
  6646  0F22                     	;# 
  6647  0F23                     	;# 
  6648  0F24                     	;# 
  6649  0F25                     	;# 
  6650  0F26                     	;# 
  6651  0F27                     	;# 
  6652  0F28                     	;# 
  6653  0F29                     	;# 
  6654  0F2A                     	;# 
  6655  0F2B                     	;# 
  6656  0F2C                     	;# 
  6657  0F2D                     	;# 
  6658  0F2E                     	;# 
  6659  0F2F                     	;# 
  6660  0F30                     	;# 
  6661  0F31                     	;# 
  6662  0F32                     	;# 
  6663  0F38                     	;# 
  6664  0F39                     	;# 
  6665  0F3A                     	;# 
  6666  0F3B                     	;# 
  6667  0F3C                     	;# 
  6668  0F3D                     	;# 
  6669  0F3E                     	;# 
  6670  0F3F                     	;# 
  6671  0F40                     	;# 
  6672  0F41                     	;# 
  6673  0F43                     	;# 
  6674  0F44                     	;# 
  6675  0F45                     	;# 
  6676  0F46                     	;# 
  6677  0F47                     	;# 
  6678  0F48                     	;# 
  6679  0F49                     	;# 
  6680  0F4A                     	;# 
  6681  0F4B                     	;# 
  6682  0F4C                     	;# 
  6683  0F4E                     	;# 
  6684  0F4F                     	;# 
  6685  0F50                     	;# 
  6686  0F51                     	;# 
  6687  0F52                     	;# 
  6688  0F53                     	;# 
  6689  0F54                     	;# 
  6690  0F55                     	;# 
  6691  0F56                     	;# 
  6692  0F57                     	;# 
  6693  0F59                     	;# 
  6694  0F5A                     	;# 
  6695  0F5B                     	;# 
  6696  0F5C                     	;# 
  6697  0F5D                     	;# 
  6698  0F61                     	;# 
  6699  0F62                     	;# 
  6700  0F64                     	;# 
  6701  0F65                     	;# 
  6702  0F66                     	;# 
  6703  0F67                     	;# 
  6704  0F68                     	;# 
  6705  0F69                     	;# 
  6706  0F6A                     	;# 
  6707  0F6B                     	;# 
  6708  0F6C                     	;# 
  6709  0F6D                     	;# 
  6710  0FE4                     	;# 
  6711  0FE5                     	;# 
  6712  0FE6                     	;# 
  6713  0FE7                     	;# 
  6714  0FE8                     	;# 
  6715  0FE9                     	;# 
  6716  0FEA                     	;# 
  6717  0FEB                     	;# 
  6718  0FED                     	;# 
  6719  0FEE                     	;# 
  6720  0FEF                     	;# 
  6721  0000                     	;# 
  6722  0001                     	;# 
  6723  0002                     	;# 
  6724  0003                     	;# 
  6725  0004                     	;# 
  6726  0005                     	;# 
  6727  0006                     	;# 
  6728  0007                     	;# 
  6729  0008                     	;# 
  6730  0009                     	;# 
  6731  000A                     	;# 
  6732  000B                     	;# 
  6733  000C                     	;# 
  6734  000D                     	;# 
  6735  000E                     	;# 
  6736  000F                     	;# 
  6737  0010                     	;# 
  6738  0011                     	;# 
  6739  0012                     	;# 
  6740  0013                     	;# 
  6741  0014                     	;# 
  6742  0015                     	;# 
  6743  0016                     	;# 
  6744  0017                     	;# 
  6745  0018                     	;# 
  6746  0019                     	;# 
  6747  001A                     	;# 
  6748  001C                     	;# 
  6749  001C                     	;# 
  6750  001D                     	;# 
  6751  001D                     	;# 
  6752  001E                     	;# 
  6753  001F                     	;# 
  6754  008C                     	;# 
  6755  008C                     	;# 
  6756  008D                     	;# 
  6757  008E                     	;# 
  6758  008E                     	;# 
  6759  008F                     	;# 
  6760  0090                     	;# 
  6761  0090                     	;# 
  6762  0091                     	;# 
  6763  0093                     	;# 
  6764  0094                     	;# 
  6765  0095                     	;# 
  6766  0096                     	;# 
  6767  0097                     	;# 
  6768  0098                     	;# 
  6769  0099                     	;# 
  6770  009A                     	;# 
  6771  009B                     	;# 
  6772  009C                     	;# 
  6773  009D                     	;# 
  6774  009E                     	;# 
  6775  010C                     	;# 
  6776  010D                     	;# 
  6777  010E                     	;# 
  6778  010E                     	;# 
  6779  010F                     	;# 
  6780  0110                     	;# 
  6781  0110                     	;# 
  6782  0111                     	;# 
  6783  0112                     	;# 
  6784  0112                     	;# 
  6785  0113                     	;# 
  6786  0114                     	;# 
  6787  0114                     	;# 
  6788  0115                     	;# 
  6789  0116                     	;# 
  6790  0116                     	;# 
  6791  0117                     	;# 
  6792  0119                     	;# 
  6793  0119                     	;# 
  6794  0119                     	;# 
  6795  011A                     	;# 
  6796  011A                     	;# 
  6797  011A                     	;# 
  6798  011B                     	;# 
  6799  011B                     	;# 
  6800  011B                     	;# 
  6801  011B                     	;# 
  6802  011B                     	;# 
  6803  011C                     	;# 
  6804  011C                     	;# 
  6805  011C                     	;# 
  6806  011D                     	;# 
  6807  011D                     	;# 
  6808  011D                     	;# 
  6809  011E                     	;# 
  6810  011E                     	;# 
  6811  011E                     	;# 
  6812  011F                     	;# 
  6813  011F                     	;# 
  6814  011F                     	;# 
  6815  011F                     	;# 
  6816  011F                     	;# 
  6817  018C                     	;# 
  6818  018D                     	;# 
  6819  018E                     	;# 
  6820  018F                     	;# 
  6821  0190                     	;# 
  6822  0191                     	;# 
  6823  0192                     	;# 
  6824  0196                     	;# 
  6825  0197                     	;# 
  6826  0198                     	;# 
  6827  0199                     	;# 
  6828  019A                     	;# 
  6829  019B                     	;# 
  6830  019C                     	;# 
  6831  020C                     	;# 
  6832  020C                     	;# 
  6833  020D                     	;# 
  6834  020E                     	;# 
  6835  020F                     	;# 
  6836  020F                     	;# 
  6837  0210                     	;# 
  6838  0210                     	;# 
  6839  0211                     	;# 
  6840  0211                     	;# 
  6841  0212                     	;# 
  6842  0212                     	;# 
  6843  0213                     	;# 
  6844  0214                     	;# 
  6845  0215                     	;# 
  6846  0215                     	;# 
  6847  0216                     	;# 
  6848  0216                     	;# 
  6849  0217                     	;# 
  6850  0217                     	;# 
  6851  0218                     	;# 
  6852  0218                     	;# 
  6853  0219                     	;# 
  6854  021A                     	;# 
  6855  021B                     	;# 
  6856  021B                     	;# 
  6857  021C                     	;# 
  6858  021C                     	;# 
  6859  021D                     	;# 
  6860  021D                     	;# 
  6861  021E                     	;# 
  6862  021F                     	;# 
  6863  028C                     	;# 
  6864  028C                     	;# 
  6865  028D                     	;# 
  6866  028D                     	;# 
  6867  028E                     	;# 
  6868  028F                     	;# 
  6869  0290                     	;# 
  6870  0290                     	;# 
  6871  0291                     	;# 
  6872  0292                     	;# 
  6873  0292                     	;# 
  6874  0293                     	;# 
  6875  0293                     	;# 
  6876  0294                     	;# 
  6877  0295                     	;# 
  6878  0296                     	;# 
  6879  0296                     	;# 
  6880  0297                     	;# 
  6881  0298                     	;# 
  6882  0298                     	;# 
  6883  0299                     	;# 
  6884  0299                     	;# 
  6885  029A                     	;# 
  6886  029B                     	;# 
  6887  029C                     	;# 
  6888  029C                     	;# 
  6889  029D                     	;# 
  6890  030C                     	;# 
  6891  030C                     	;# 
  6892  030D                     	;# 
  6893  030E                     	;# 
  6894  030F                     	;# 
  6895  0310                     	;# 
  6896  0310                     	;# 
  6897  0311                     	;# 
  6898  0312                     	;# 
  6899  0313                     	;# 
  6900  0314                     	;# 
  6901  0314                     	;# 
  6902  0315                     	;# 
  6903  0316                     	;# 
  6904  0317                     	;# 
  6905  0318                     	;# 
  6906  0318                     	;# 
  6907  0319                     	;# 
  6908  031A                     	;# 
  6909  031B                     	;# 
  6910  031C                     	;# 
  6911  031C                     	;# 
  6912  031D                     	;# 
  6913  031E                     	;# 
  6914  031F                     	;# 
  6915  038C                     	;# 
  6916  038C                     	;# 
  6917  038D                     	;# 
  6918  038E                     	;# 
  6919  0390                     	;# 
  6920  0390                     	;# 
  6921  0391                     	;# 
  6922  0392                     	;# 
  6923  040C                     	;# 
  6924  040D                     	;# 
  6925  040E                     	;# 
  6926  040F                     	;# 
  6927  0410                     	;# 
  6928  0411                     	;# 
  6929  0416                     	;# 
  6930  0416                     	;# 
  6931  0417                     	;# 
  6932  0418                     	;# 
  6933  0418                     	;# 
  6934  0419                     	;# 
  6935  041A                     	;# 
  6936  041A                     	;# 
  6937  041B                     	;# 
  6938  041C                     	;# 
  6939  041C                     	;# 
  6940  041D                     	;# 
  6941  041E                     	;# 
  6942  041F                     	;# 
  6943  048C                     	;# 
  6944  048C                     	;# 
  6945  048D                     	;# 
  6946  048E                     	;# 
  6947  048F                     	;# 
  6948  048F                     	;# 
  6949  0490                     	;# 
  6950  0491                     	;# 
  6951  0492                     	;# 
  6952  0492                     	;# 
  6953  0493                     	;# 
  6954  0494                     	;# 
  6955  0495                     	;# 
  6956  0495                     	;# 
  6957  0496                     	;# 
  6958  0497                     	;# 
  6959  0498                     	;# 
  6960  0499                     	;# 
  6961  049A                     	;# 
  6962  049B                     	;# 
  6963  049C                     	;# 
  6964  049D                     	;# 
  6965  050C                     	;# 
  6966  050C                     	;# 
  6967  050D                     	;# 
  6968  050E                     	;# 
  6969  050F                     	;# 
  6970  050F                     	;# 
  6971  0510                     	;# 
  6972  0511                     	;# 
  6973  0512                     	;# 
  6974  0512                     	;# 
  6975  0513                     	;# 
  6976  0514                     	;# 
  6977  0515                     	;# 
  6978  0515                     	;# 
  6979  0516                     	;# 
  6980  0517                     	;# 
  6981  0518                     	;# 
  6982  0519                     	;# 
  6983  051A                     	;# 
  6984  051B                     	;# 
  6985  051C                     	;# 
  6986  051D                     	;# 
  6987  058C                     	;# 
  6988  058C                     	;# 
  6989  058D                     	;# 
  6990  058E                     	;# 
  6991  058F                     	;# 
  6992  058F                     	;# 
  6993  0590                     	;# 
  6994  0591                     	;# 
  6995  0592                     	;# 
  6996  0593                     	;# 
  6997  060C                     	;# 
  6998  060D                     	;# 
  6999  060E                     	;# 
  7000  060F                     	;# 
  7001  0610                     	;# 
  7002  0611                     	;# 
  7003  0612                     	;# 
  7004  0613                     	;# 
  7005  0614                     	;# 
  7006  0616                     	;# 
  7007  0617                     	;# 
  7008  0618                     	;# 
  7009  0619                     	;# 
  7010  061A                     	;# 
  7011  061B                     	;# 
  7012  061C                     	;# 
  7013  061D                     	;# 
  7014  061E                     	;# 
  7015  068C                     	;# 
  7016  068D                     	;# 
  7017  068E                     	;# 
  7018  068F                     	;# 
  7019  0690                     	;# 
  7020  0691                     	;# 
  7021  0692                     	;# 
  7022  0693                     	;# 
  7023  0694                     	;# 
  7024  070C                     	;# 
  7025  070D                     	;# 
  7026  070E                     	;# 
  7027  070F                     	;# 
  7028  0710                     	;# 
  7029  0711                     	;# 
  7030  0712                     	;# 
  7031  0713                     	;# 
  7032  0714                     	;# 
  7033  0716                     	;# 
  7034  0717                     	;# 
  7035  0718                     	;# 
  7036  0719                     	;# 
  7037  071A                     	;# 
  7038  071B                     	;# 
  7039  071C                     	;# 
  7040  071D                     	;# 
  7041  071E                     	;# 
  7042  0796                     	;# 
  7043  0797                     	;# 
  7044  0798                     	;# 
  7045  0799                     	;# 
  7046  079A                     	;# 
  7047  079B                     	;# 
  7048  080C                     	;# 
  7049  080D                     	;# 
  7050  080E                     	;# 
  7051  080F                     	;# 
  7052  0810                     	;# 
  7053  0811                     	;# 
  7054  0812                     	;# 
  7055  0813                     	;# 
  7056  0814                     	;# 
  7057  081A                     	;# 
  7058  081B                     	;# 
  7059  081C                     	;# 
  7060  081D                     	;# 
  7061  081E                     	;# 
  7062  081F                     	;# 
  7063  088C                     	;# 
  7064  088D                     	;# 
  7065  088E                     	;# 
  7066  088F                     	;# 
  7067  0890                     	;# 
  7068  0891                     	;# 
  7069  0892                     	;# 
  7070  0893                     	;# 
  7071  0895                     	;# 
  7072  0896                     	;# 
  7073  0897                     	;# 
  7074  0898                     	;# 
  7075  0899                     	;# 
  7076  089A                     	;# 
  7077  089B                     	;# 
  7078  090C                     	;# 
  7079  090E                     	;# 
  7080  090F                     	;# 
  7081  091F                     	;# 
  7082  091F                     	;# 
  7083  098F                     	;# 
  7084  098F                     	;# 
  7085  0990                     	;# 
  7086  0991                     	;# 
  7087  0992                     	;# 
  7088  0993                     	;# 
  7089  0994                     	;# 
  7090  0995                     	;# 
  7091  0996                     	;# 
  7092  0997                     	;# 
  7093  0E0F                     	;# 
  7094  0E10                     	;# 
  7095  0E11                     	;# 
  7096  0E12                     	;# 
  7097  0E13                     	;# 
  7098  0E14                     	;# 
  7099  0E15                     	;# 
  7100  0E16                     	;# 
  7101  0E17                     	;# 
  7102  0E18                     	;# 
  7103  0E19                     	;# 
  7104  0E1A                     	;# 
  7105  0E1B                     	;# 
  7106  0E1C                     	;# 
  7107  0E1D                     	;# 
  7108  0E1E                     	;# 
  7109  0E1F                     	;# 
  7110  0E20                     	;# 
  7111  0E21                     	;# 
  7112  0E22                     	;# 
  7113  0E23                     	;# 
  7114  0E24                     	;# 
  7115  0E25                     	;# 
  7116  0E26                     	;# 
  7117  0E27                     	;# 
  7118  0E28                     	;# 
  7119  0E29                     	;# 
  7120  0E2A                     	;# 
  7121  0E2B                     	;# 
  7122  0E2C                     	;# 
  7123  0E2D                     	;# 
  7124  0E2E                     	;# 
  7125  0E2F                     	;# 
  7126  0E30                     	;# 
  7127  0E31                     	;# 
  7128  0E32                     	;# 
  7129  0E33                     	;# 
  7130  0E34                     	;# 
  7131  0E35                     	;# 
  7132  0E36                     	;# 
  7133  0E37                     	;# 
  7134  0E8F                     	;# 
  7135  0E90                     	;# 
  7136  0E91                     	;# 
  7137  0E92                     	;# 
  7138  0E93                     	;# 
  7139  0E94                     	;# 
  7140  0E95                     	;# 
  7141  0E96                     	;# 
  7142  0E97                     	;# 
  7143  0E9C                     	;# 
  7144  0E9D                     	;# 
  7145  0E9E                     	;# 
  7146  0EA1                     	;# 
  7147  0EA2                     	;# 
  7148  0EA3                     	;# 
  7149  0EA4                     	;# 
  7150  0EA5                     	;# 
  7151  0EA9                     	;# 
  7152  0EAA                     	;# 
  7153  0EAB                     	;# 
  7154  0EAC                     	;# 
  7155  0EB1                     	;# 
  7156  0EB2                     	;# 
  7157  0EB3                     	;# 
  7158  0EB8                     	;# 
  7159  0EB9                     	;# 
  7160  0EBA                     	;# 
  7161  0EBB                     	;# 
  7162  0EBC                     	;# 
  7163  0EBD                     	;# 
  7164  0EBE                     	;# 
  7165  0EC3                     	;# 
  7166  0EC5                     	;# 
  7167  0EC6                     	;# 
  7168  0EC7                     	;# 
  7169  0EC8                     	;# 
  7170  0EC9                     	;# 
  7171  0ECA                     	;# 
  7172  0ECB                     	;# 
  7173  0ECC                     	;# 
  7174  0F10                     	;# 
  7175  0F11                     	;# 
  7176  0F12                     	;# 
  7177  0F13                     	;# 
  7178  0F14                     	;# 
  7179  0F15                     	;# 
  7180  0F16                     	;# 
  7181  0F17                     	;# 
  7182  0F18                     	;# 
  7183  0F19                     	;# 
  7184  0F1A                     	;# 
  7185  0F1B                     	;# 
  7186  0F1C                     	;# 
  7187  0F1D                     	;# 
  7188  0F1E                     	;# 
  7189  0F1F                     	;# 
  7190  0F20                     	;# 
  7191  0F21                     	;# 
  7192  0F22                     	;# 
  7193  0F23                     	;# 
  7194  0F24                     	;# 
  7195  0F25                     	;# 
  7196  0F26                     	;# 
  7197  0F27                     	;# 
  7198  0F28                     	;# 
  7199  0F29                     	;# 
  7200  0F2A                     	;# 
  7201  0F2B                     	;# 
  7202  0F2C                     	;# 
  7203  0F2D                     	;# 
  7204  0F2E                     	;# 
  7205  0F2F                     	;# 
  7206  0F30                     	;# 
  7207  0F31                     	;# 
  7208  0F32                     	;# 
  7209  0F38                     	;# 
  7210  0F39                     	;# 
  7211  0F3A                     	;# 
  7212  0F3B                     	;# 
  7213  0F3C                     	;# 
  7214  0F3D                     	;# 
  7215  0F3E                     	;# 
  7216  0F3F                     	;# 
  7217  0F40                     	;# 
  7218  0F41                     	;# 
  7219  0F43                     	;# 
  7220  0F44                     	;# 
  7221  0F45                     	;# 
  7222  0F46                     	;# 
  7223  0F47                     	;# 
  7224  0F48                     	;# 
  7225  0F49                     	;# 
  7226  0F4A                     	;# 
  7227  0F4B                     	;# 
  7228  0F4C                     	;# 
  7229  0F4E                     	;# 
  7230  0F4F                     	;# 
  7231  0F50                     	;# 
  7232  0F51                     	;# 
  7233  0F52                     	;# 
  7234  0F53                     	;# 
  7235  0F54                     	;# 
  7236  0F55                     	;# 
  7237  0F56                     	;# 
  7238  0F57                     	;# 
  7239  0F59                     	;# 
  7240  0F5A                     	;# 
  7241  0F5B                     	;# 
  7242  0F5C                     	;# 
  7243  0F5D                     	;# 
  7244  0F61                     	;# 
  7245  0F62                     	;# 
  7246  0F64                     	;# 
  7247  0F65                     	;# 
  7248  0F66                     	;# 
  7249  0F67                     	;# 
  7250  0F68                     	;# 
  7251  0F69                     	;# 
  7252  0F6A                     	;# 
  7253  0F6B                     	;# 
  7254  0F6C                     	;# 
  7255  0F6D                     	;# 
  7256  0FE4                     	;# 
  7257  0FE5                     	;# 
  7258  0FE6                     	;# 
  7259  0FE7                     	;# 
  7260  0FE8                     	;# 
  7261  0FE9                     	;# 
  7262  0FEA                     	;# 
  7263  0FEB                     	;# 
  7264  0FED                     	;# 
  7265  0FEE                     	;# 
  7266  0FEF                     	;# 
  7267  0000                     	;# 
  7268  0001                     	;# 
  7269  0002                     	;# 
  7270  0003                     	;# 
  7271  0004                     	;# 
  7272  0005                     	;# 
  7273  0006                     	;# 
  7274  0007                     	;# 
  7275  0008                     	;# 
  7276  0009                     	;# 
  7277  000A                     	;# 
  7278  000B                     	;# 
  7279  000C                     	;# 
  7280  000D                     	;# 
  7281  000E                     	;# 
  7282  000F                     	;# 
  7283  0010                     	;# 
  7284  0011                     	;# 
  7285  0012                     	;# 
  7286  0013                     	;# 
  7287  0014                     	;# 
  7288  0015                     	;# 
  7289  0016                     	;# 
  7290  0017                     	;# 
  7291  0018                     	;# 
  7292  0019                     	;# 
  7293  001A                     	;# 
  7294  001C                     	;# 
  7295  001C                     	;# 
  7296  001D                     	;# 
  7297  001D                     	;# 
  7298  001E                     	;# 
  7299  001F                     	;# 
  7300  008C                     	;# 
  7301  008C                     	;# 
  7302  008D                     	;# 
  7303  008E                     	;# 
  7304  008E                     	;# 
  7305  008F                     	;# 
  7306  0090                     	;# 
  7307  0090                     	;# 
  7308  0091                     	;# 
  7309  0093                     	;# 
  7310  0094                     	;# 
  7311  0095                     	;# 
  7312  0096                     	;# 
  7313  0097                     	;# 
  7314  0098                     	;# 
  7315  0099                     	;# 
  7316  009A                     	;# 
  7317  009B                     	;# 
  7318  009C                     	;# 
  7319  009D                     	;# 
  7320  009E                     	;# 
  7321  010C                     	;# 
  7322  010D                     	;# 
  7323  010E                     	;# 
  7324  010E                     	;# 
  7325  010F                     	;# 
  7326  0110                     	;# 
  7327  0110                     	;# 
  7328  0111                     	;# 
  7329  0112                     	;# 
  7330  0112                     	;# 
  7331  0113                     	;# 
  7332  0114                     	;# 
  7333  0114                     	;# 
  7334  0115                     	;# 
  7335  0116                     	;# 
  7336  0116                     	;# 
  7337  0117                     	;# 
  7338  0119                     	;# 
  7339  0119                     	;# 
  7340  0119                     	;# 
  7341  011A                     	;# 
  7342  011A                     	;# 
  7343  011A                     	;# 
  7344  011B                     	;# 
  7345  011B                     	;# 
  7346  011B                     	;# 
  7347  011B                     	;# 
  7348  011B                     	;# 
  7349  011C                     	;# 
  7350  011C                     	;# 
  7351  011C                     	;# 
  7352  011D                     	;# 
  7353  011D                     	;# 
  7354  011D                     	;# 
  7355  011E                     	;# 
  7356  011E                     	;# 
  7357  011E                     	;# 
  7358  011F                     	;# 
  7359  011F                     	;# 
  7360  011F                     	;# 
  7361  011F                     	;# 
  7362  011F                     	;# 
  7363  018C                     	;# 
  7364  018D                     	;# 
  7365  018E                     	;# 
  7366  018F                     	;# 
  7367  0190                     	;# 
  7368  0191                     	;# 
  7369  0192                     	;# 
  7370  0196                     	;# 
  7371  0197                     	;# 
  7372  0198                     	;# 
  7373  0199                     	;# 
  7374  019A                     	;# 
  7375  019B                     	;# 
  7376  019C                     	;# 
  7377  020C                     	;# 
  7378  020C                     	;# 
  7379  020D                     	;# 
  7380  020E                     	;# 
  7381  020F                     	;# 
  7382  020F                     	;# 
  7383  0210                     	;# 
  7384  0210                     	;# 
  7385  0211                     	;# 
  7386  0211                     	;# 
  7387  0212                     	;# 
  7388  0212                     	;# 
  7389  0213                     	;# 
  7390  0214                     	;# 
  7391  0215                     	;# 
  7392  0215                     	;# 
  7393  0216                     	;# 
  7394  0216                     	;# 
  7395  0217                     	;# 
  7396  0217                     	;# 
  7397  0218                     	;# 
  7398  0218                     	;# 
  7399  0219                     	;# 
  7400  021A                     	;# 
  7401  021B                     	;# 
  7402  021B                     	;# 
  7403  021C                     	;# 
  7404  021C                     	;# 
  7405  021D                     	;# 
  7406  021D                     	;# 
  7407  021E                     	;# 
  7408  021F                     	;# 
  7409  028C                     	;# 
  7410  028C                     	;# 
  7411  028D                     	;# 
  7412  028D                     	;# 
  7413  028E                     	;# 
  7414  028F                     	;# 
  7415  0290                     	;# 
  7416  0290                     	;# 
  7417  0291                     	;# 
  7418  0292                     	;# 
  7419  0292                     	;# 
  7420  0293                     	;# 
  7421  0293                     	;# 
  7422  0294                     	;# 
  7423  0295                     	;# 
  7424  0296                     	;# 
  7425  0296                     	;# 
  7426  0297                     	;# 
  7427  0298                     	;# 
  7428  0298                     	;# 
  7429  0299                     	;# 
  7430  0299                     	;# 
  7431  029A                     	;# 
  7432  029B                     	;# 
  7433  029C                     	;# 
  7434  029C                     	;# 
  7435  029D                     	;# 
  7436  030C                     	;# 
  7437  030C                     	;# 
  7438  030D                     	;# 
  7439  030E                     	;# 
  7440  030F                     	;# 
  7441  0310                     	;# 
  7442  0310                     	;# 
  7443  0311                     	;# 
  7444  0312                     	;# 
  7445  0313                     	;# 
  7446  0314                     	;# 
  7447  0314                     	;# 
  7448  0315                     	;# 
  7449  0316                     	;# 
  7450  0317                     	;# 
  7451  0318                     	;# 
  7452  0318                     	;# 
  7453  0319                     	;# 
  7454  031A                     	;# 
  7455  031B                     	;# 
  7456  031C                     	;# 
  7457  031C                     	;# 
  7458  031D                     	;# 
  7459  031E                     	;# 
  7460  031F                     	;# 
  7461  038C                     	;# 
  7462  038C                     	;# 
  7463  038D                     	;# 
  7464  038E                     	;# 
  7465  0390                     	;# 
  7466  0390                     	;# 
  7467  0391                     	;# 
  7468  0392                     	;# 
  7469  040C                     	;# 
  7470  040D                     	;# 
  7471  040E                     	;# 
  7472  040F                     	;# 
  7473  0410                     	;# 
  7474  0411                     	;# 
  7475  0416                     	;# 
  7476  0416                     	;# 
  7477  0417                     	;# 
  7478  0418                     	;# 
  7479  0418                     	;# 
  7480  0419                     	;# 
  7481  041A                     	;# 
  7482  041A                     	;# 
  7483  041B                     	;# 
  7484  041C                     	;# 
  7485  041C                     	;# 
  7486  041D                     	;# 
  7487  041E                     	;# 
  7488  041F                     	;# 
  7489  048C                     	;# 
  7490  048C                     	;# 
  7491  048D                     	;# 
  7492  048E                     	;# 
  7493  048F                     	;# 
  7494  048F                     	;# 
  7495  0490                     	;# 
  7496  0491                     	;# 
  7497  0492                     	;# 
  7498  0492                     	;# 
  7499  0493                     	;# 
  7500  0494                     	;# 
  7501  0495                     	;# 
  7502  0495                     	;# 
  7503  0496                     	;# 
  7504  0497                     	;# 
  7505  0498                     	;# 
  7506  0499                     	;# 
  7507  049A                     	;# 
  7508  049B                     	;# 
  7509  049C                     	;# 
  7510  049D                     	;# 
  7511  050C                     	;# 
  7512  050C                     	;# 
  7513  050D                     	;# 
  7514  050E                     	;# 
  7515  050F                     	;# 
  7516  050F                     	;# 
  7517  0510                     	;# 
  7518  0511                     	;# 
  7519  0512                     	;# 
  7520  0512                     	;# 
  7521  0513                     	;# 
  7522  0514                     	;# 
  7523  0515                     	;# 
  7524  0515                     	;# 
  7525  0516                     	;# 
  7526  0517                     	;# 
  7527  0518                     	;# 
  7528  0519                     	;# 
  7529  051A                     	;# 
  7530  051B                     	;# 
  7531  051C                     	;# 
  7532  051D                     	;# 
  7533  058C                     	;# 
  7534  058C                     	;# 
  7535  058D                     	;# 
  7536  058E                     	;# 
  7537  058F                     	;# 
  7538  058F                     	;# 
  7539  0590                     	;# 
  7540  0591                     	;# 
  7541  0592                     	;# 
  7542  0593                     	;# 
  7543  060C                     	;# 
  7544  060D                     	;# 
  7545  060E                     	;# 
  7546  060F                     	;# 
  7547  0610                     	;# 
  7548  0611                     	;# 
  7549  0612                     	;# 
  7550  0613                     	;# 
  7551  0614                     	;# 
  7552  0616                     	;# 
  7553  0617                     	;# 
  7554  0618                     	;# 
  7555  0619                     	;# 
  7556  061A                     	;# 
  7557  061B                     	;# 
  7558  061C                     	;# 
  7559  061D                     	;# 
  7560  061E                     	;# 
  7561  068C                     	;# 
  7562  068D                     	;# 
  7563  068E                     	;# 
  7564  068F                     	;# 
  7565  0690                     	;# 
  7566  0691                     	;# 
  7567  0692                     	;# 
  7568  0693                     	;# 
  7569  0694                     	;# 
  7570  070C                     	;# 
  7571  070D                     	;# 
  7572  070E                     	;# 
  7573  070F                     	;# 
  7574  0710                     	;# 
  7575  0711                     	;# 
  7576  0712                     	;# 
  7577  0713                     	;# 
  7578  0714                     	;# 
  7579  0716                     	;# 
  7580  0717                     	;# 
  7581  0718                     	;# 
  7582  0719                     	;# 
  7583  071A                     	;# 
  7584  071B                     	;# 
  7585  071C                     	;# 
  7586  071D                     	;# 
  7587  071E                     	;# 
  7588  0796                     	;# 
  7589  0797                     	;# 
  7590  0798                     	;# 
  7591  0799                     	;# 
  7592  079A                     	;# 
  7593  079B                     	;# 
  7594  080C                     	;# 
  7595  080D                     	;# 
  7596  080E                     	;# 
  7597  080F                     	;# 
  7598  0810                     	;# 
  7599  0811                     	;# 
  7600  0812                     	;# 
  7601  0813                     	;# 
  7602  0814                     	;# 
  7603  081A                     	;# 
  7604  081B                     	;# 
  7605  081C                     	;# 
  7606  081D                     	;# 
  7607  081E                     	;# 
  7608  081F                     	;# 
  7609  088C                     	;# 
  7610  088D                     	;# 
  7611  088E                     	;# 
  7612  088F                     	;# 
  7613  0890                     	;# 
  7614  0891                     	;# 
  7615  0892                     	;# 
  7616  0893                     	;# 
  7617  0895                     	;# 
  7618  0896                     	;# 
  7619  0897                     	;# 
  7620  0898                     	;# 
  7621  0899                     	;# 
  7622  089A                     	;# 
  7623  089B                     	;# 
  7624  090C                     	;# 
  7625  090E                     	;# 
  7626  090F                     	;# 
  7627  091F                     	;# 
  7628  091F                     	;# 
  7629  098F                     	;# 
  7630  098F                     	;# 
  7631  0990                     	;# 
  7632  0991                     	;# 
  7633  0992                     	;# 
  7634  0993                     	;# 
  7635  0994                     	;# 
  7636  0995                     	;# 
  7637  0996                     	;# 
  7638  0997                     	;# 
  7639  0E0F                     	;# 
  7640  0E10                     	;# 
  7641  0E11                     	;# 
  7642  0E12                     	;# 
  7643  0E13                     	;# 
  7644  0E14                     	;# 
  7645  0E15                     	;# 
  7646  0E16                     	;# 
  7647  0E17                     	;# 
  7648  0E18                     	;# 
  7649  0E19                     	;# 
  7650  0E1A                     	;# 
  7651  0E1B                     	;# 
  7652  0E1C                     	;# 
  7653  0E1D                     	;# 
  7654  0E1E                     	;# 
  7655  0E1F                     	;# 
  7656  0E20                     	;# 
  7657  0E21                     	;# 
  7658  0E22                     	;# 
  7659  0E23                     	;# 
  7660  0E24                     	;# 
  7661  0E25                     	;# 
  7662  0E26                     	;# 
  7663  0E27                     	;# 
  7664  0E28                     	;# 
  7665  0E29                     	;# 
  7666  0E2A                     	;# 
  7667  0E2B                     	;# 
  7668  0E2C                     	;# 
  7669  0E2D                     	;# 
  7670  0E2E                     	;# 
  7671  0E2F                     	;# 
  7672  0E30                     	;# 
  7673  0E31                     	;# 
  7674  0E32                     	;# 
  7675  0E33                     	;# 
  7676  0E34                     	;# 
  7677  0E35                     	;# 
  7678  0E36                     	;# 
  7679  0E37                     	;# 
  7680  0E8F                     	;# 
  7681  0E90                     	;# 
  7682  0E91                     	;# 
  7683  0E92                     	;# 
  7684  0E93                     	;# 
  7685  0E94                     	;# 
  7686  0E95                     	;# 
  7687  0E96                     	;# 
  7688  0E97                     	;# 
  7689  0E9C                     	;# 
  7690  0E9D                     	;# 
  7691  0E9E                     	;# 
  7692  0EA1                     	;# 
  7693  0EA2                     	;# 
  7694  0EA3                     	;# 
  7695  0EA4                     	;# 
  7696  0EA5                     	;# 
  7697  0EA9                     	;# 
  7698  0EAA                     	;# 
  7699  0EAB                     	;# 
  7700  0EAC                     	;# 
  7701  0EB1                     	;# 
  7702  0EB2                     	;# 
  7703  0EB3                     	;# 
  7704  0EB8                     	;# 
  7705  0EB9                     	;# 
  7706  0EBA                     	;# 
  7707  0EBB                     	;# 
  7708  0EBC                     	;# 
  7709  0EBD                     	;# 
  7710  0EBE                     	;# 
  7711  0EC3                     	;# 
  7712  0EC5                     	;# 
  7713  0EC6                     	;# 
  7714  0EC7                     	;# 
  7715  0EC8                     	;# 
  7716  0EC9                     	;# 
  7717  0ECA                     	;# 
  7718  0ECB                     	;# 
  7719  0ECC                     	;# 
  7720  0F10                     	;# 
  7721  0F11                     	;# 
  7722  0F12                     	;# 
  7723  0F13                     	;# 
  7724  0F14                     	;# 
  7725  0F15                     	;# 
  7726  0F16                     	;# 
  7727  0F17                     	;# 
  7728  0F18                     	;# 
  7729  0F19                     	;# 
  7730  0F1A                     	;# 
  7731  0F1B                     	;# 
  7732  0F1C                     	;# 
  7733  0F1D                     	;# 
  7734  0F1E                     	;# 
  7735  0F1F                     	;# 
  7736  0F20                     	;# 
  7737  0F21                     	;# 
  7738  0F22                     	;# 
  7739  0F23                     	;# 
  7740  0F24                     	;# 
  7741  0F25                     	;# 
  7742  0F26                     	;# 
  7743  0F27                     	;# 
  7744  0F28                     	;# 
  7745  0F29                     	;# 
  7746  0F2A                     	;# 
  7747  0F2B                     	;# 
  7748  0F2C                     	;# 
  7749  0F2D                     	;# 
  7750  0F2E                     	;# 
  7751  0F2F                     	;# 
  7752  0F30                     	;# 
  7753  0F31                     	;# 
  7754  0F32                     	;# 
  7755  0F38                     	;# 
  7756  0F39                     	;# 
  7757  0F3A                     	;# 
  7758  0F3B                     	;# 
  7759  0F3C                     	;# 
  7760  0F3D                     	;# 
  7761  0F3E                     	;# 
  7762  0F3F                     	;# 
  7763  0F40                     	;# 
  7764  0F41                     	;# 
  7765  0F43                     	;# 
  7766  0F44                     	;# 
  7767  0F45                     	;# 
  7768  0F46                     	;# 
  7769  0F47                     	;# 
  7770  0F48                     	;# 
  7771  0F49                     	;# 
  7772  0F4A                     	;# 
  7773  0F4B                     	;# 
  7774  0F4C                     	;# 
  7775  0F4E                     	;# 
  7776  0F4F                     	;# 
  7777  0F50                     	;# 
  7778  0F51                     	;# 
  7779  0F52                     	;# 
  7780  0F53                     	;# 
  7781  0F54                     	;# 
  7782  0F55                     	;# 
  7783  0F56                     	;# 
  7784  0F57                     	;# 
  7785  0F59                     	;# 
  7786  0F5A                     	;# 
  7787  0F5B                     	;# 
  7788  0F5C                     	;# 
  7789  0F5D                     	;# 
  7790  0F61                     	;# 
  7791  0F62                     	;# 
  7792  0F64                     	;# 
  7793  0F65                     	;# 
  7794  0F66                     	;# 
  7795  0F67                     	;# 
  7796  0F68                     	;# 
  7797  0F69                     	;# 
  7798  0F6A                     	;# 
  7799  0F6B                     	;# 
  7800  0F6C                     	;# 
  7801  0F6D                     	;# 
  7802  0FE4                     	;# 
  7803  0FE5                     	;# 
  7804  0FE6                     	;# 
  7805  0FE7                     	;# 
  7806  0FE8                     	;# 
  7807  0FE9                     	;# 
  7808  0FEA                     	;# 
  7809  0FEB                     	;# 
  7810  0FED                     	;# 
  7811  0FEE                     	;# 
  7812  0FEF                     	;# 
  7813  0000                     	;# 
  7814  0001                     	;# 
  7815  0002                     	;# 
  7816  0003                     	;# 
  7817  0004                     	;# 
  7818  0005                     	;# 
  7819  0006                     	;# 
  7820  0007                     	;# 
  7821  0008                     	;# 
  7822  0009                     	;# 
  7823  000A                     	;# 
  7824  000B                     	;# 
  7825  000C                     	;# 
  7826  000D                     	;# 
  7827  000E                     	;# 
  7828  000F                     	;# 
  7829  0010                     	;# 
  7830  0011                     	;# 
  7831  0012                     	;# 
  7832  0013                     	;# 
  7833  0014                     	;# 
  7834  0015                     	;# 
  7835  0016                     	;# 
  7836  0017                     	;# 
  7837  0018                     	;# 
  7838  0019                     	;# 
  7839  001A                     	;# 
  7840  001C                     	;# 
  7841  001C                     	;# 
  7842  001D                     	;# 
  7843  001D                     	;# 
  7844  001E                     	;# 
  7845  001F                     	;# 
  7846  008C                     	;# 
  7847  008C                     	;# 
  7848  008D                     	;# 
  7849  008E                     	;# 
  7850  008E                     	;# 
  7851  008F                     	;# 
  7852  0090                     	;# 
  7853  0090                     	;# 
  7854  0091                     	;# 
  7855  0093                     	;# 
  7856  0094                     	;# 
  7857  0095                     	;# 
  7858  0096                     	;# 
  7859  0097                     	;# 
  7860  0098                     	;# 
  7861  0099                     	;# 
  7862  009A                     	;# 
  7863  009B                     	;# 
  7864  009C                     	;# 
  7865  009D                     	;# 
  7866  009E                     	;# 
  7867  010C                     	;# 
  7868  010D                     	;# 
  7869  010E                     	;# 
  7870  010E                     	;# 
  7871  010F                     	;# 
  7872  0110                     	;# 
  7873  0110                     	;# 
  7874  0111                     	;# 
  7875  0112                     	;# 
  7876  0112                     	;# 
  7877  0113                     	;# 
  7878  0114                     	;# 
  7879  0114                     	;# 
  7880  0115                     	;# 
  7881  0116                     	;# 
  7882  0116                     	;# 
  7883  0117                     	;# 
  7884  0119                     	;# 
  7885  0119                     	;# 
  7886  0119                     	;# 
  7887  011A                     	;# 
  7888  011A                     	;# 
  7889  011A                     	;# 
  7890  011B                     	;# 
  7891  011B                     	;# 
  7892  011B                     	;# 
  7893  011B                     	;# 
  7894  011B                     	;# 
  7895  011C                     	;# 
  7896  011C                     	;# 
  7897  011C                     	;# 
  7898  011D                     	;# 
  7899  011D                     	;# 
  7900  011D                     	;# 
  7901  011E                     	;# 
  7902  011E                     	;# 
  7903  011E                     	;# 
  7904  011F                     	;# 
  7905  011F                     	;# 
  7906  011F                     	;# 
  7907  011F                     	;# 
  7908  011F                     	;# 
  7909  018C                     	;# 
  7910  018D                     	;# 
  7911  018E                     	;# 
  7912  018F                     	;# 
  7913  0190                     	;# 
  7914  0191                     	;# 
  7915  0192                     	;# 
  7916  0196                     	;# 
  7917  0197                     	;# 
  7918  0198                     	;# 
  7919  0199                     	;# 
  7920  019A                     	;# 
  7921  019B                     	;# 
  7922  019C                     	;# 
  7923  020C                     	;# 
  7924  020C                     	;# 
  7925  020D                     	;# 
  7926  020E                     	;# 
  7927  020F                     	;# 
  7928  020F                     	;# 
  7929  0210                     	;# 
  7930  0210                     	;# 
  7931  0211                     	;# 
  7932  0211                     	;# 
  7933  0212                     	;# 
  7934  0212                     	;# 
  7935  0213                     	;# 
  7936  0214                     	;# 
  7937  0215                     	;# 
  7938  0215                     	;# 
  7939  0216                     	;# 
  7940  0216                     	;# 
  7941  0217                     	;# 
  7942  0217                     	;# 
  7943  0218                     	;# 
  7944  0218                     	;# 
  7945  0219                     	;# 
  7946  021A                     	;# 
  7947  021B                     	;# 
  7948  021B                     	;# 
  7949  021C                     	;# 
  7950  021C                     	;# 
  7951  021D                     	;# 
  7952  021D                     	;# 
  7953  021E                     	;# 
  7954  021F                     	;# 
  7955  028C                     	;# 
  7956  028C                     	;# 
  7957  028D                     	;# 
  7958  028D                     	;# 
  7959  028E                     	;# 
  7960  028F                     	;# 
  7961  0290                     	;# 
  7962  0290                     	;# 
  7963  0291                     	;# 
  7964  0292                     	;# 
  7965  0292                     	;# 
  7966  0293                     	;# 
  7967  0293                     	;# 
  7968  0294                     	;# 
  7969  0295                     	;# 
  7970  0296                     	;# 
  7971  0296                     	;# 
  7972  0297                     	;# 
  7973  0298                     	;# 
  7974  0298                     	;# 
  7975  0299                     	;# 
  7976  0299                     	;# 
  7977  029A                     	;# 
  7978  029B                     	;# 
  7979  029C                     	;# 
  7980  029C                     	;# 
  7981  029D                     	;# 
  7982  030C                     	;# 
  7983  030C                     	;# 
  7984  030D                     	;# 
  7985  030E                     	;# 
  7986  030F                     	;# 
  7987  0310                     	;# 
  7988  0310                     	;# 
  7989  0311                     	;# 
  7990  0312                     	;# 
  7991  0313                     	;# 
  7992  0314                     	;# 
  7993  0314                     	;# 
  7994  0315                     	;# 
  7995  0316                     	;# 
  7996  0317                     	;# 
  7997  0318                     	;# 
  7998  0318                     	;# 
  7999  0319                     	;# 
  8000  031A                     	;# 
  8001  031B                     	;# 
  8002  031C                     	;# 
  8003  031C                     	;# 
  8004  031D                     	;# 
  8005  031E                     	;# 
  8006  031F                     	;# 
  8007  038C                     	;# 
  8008  038C                     	;# 
  8009  038D                     	;# 
  8010  038E                     	;# 
  8011  0390                     	;# 
  8012  0390                     	;# 
  8013  0391                     	;# 
  8014  0392                     	;# 
  8015  040C                     	;# 
  8016  040D                     	;# 
  8017  040E                     	;# 
  8018  040F                     	;# 
  8019  0410                     	;# 
  8020  0411                     	;# 
  8021  0416                     	;# 
  8022  0416                     	;# 
  8023  0417                     	;# 
  8024  0418                     	;# 
  8025  0418                     	;# 
  8026  0419                     	;# 
  8027  041A                     	;# 
  8028  041A                     	;# 
  8029  041B                     	;# 
  8030  041C                     	;# 
  8031  041C                     	;# 
  8032  041D                     	;# 
  8033  041E                     	;# 
  8034  041F                     	;# 
  8035  048C                     	;# 
  8036  048C                     	;# 
  8037  048D                     	;# 
  8038  048E                     	;# 
  8039  048F                     	;# 
  8040  048F                     	;# 
  8041  0490                     	;# 
  8042  0491                     	;# 
  8043  0492                     	;# 
  8044  0492                     	;# 
  8045  0493                     	;# 
  8046  0494                     	;# 
  8047  0495                     	;# 
  8048  0495                     	;# 
  8049  0496                     	;# 
  8050  0497                     	;# 
  8051  0498                     	;# 
  8052  0499                     	;# 
  8053  049A                     	;# 
  8054  049B                     	;# 
  8055  049C                     	;# 
  8056  049D                     	;# 
  8057  050C                     	;# 
  8058  050C                     	;# 
  8059  050D                     	;# 
  8060  050E                     	;# 
  8061  050F                     	;# 
  8062  050F                     	;# 
  8063  0510                     	;# 
  8064  0511                     	;# 
  8065  0512                     	;# 
  8066  0512                     	;# 
  8067  0513                     	;# 
  8068  0514                     	;# 
  8069  0515                     	;# 
  8070  0515                     	;# 
  8071  0516                     	;# 
  8072  0517                     	;# 
  8073  0518                     	;# 
  8074  0519                     	;# 
  8075  051A                     	;# 
  8076  051B                     	;# 
  8077  051C                     	;# 
  8078  051D                     	;# 
  8079  058C                     	;# 
  8080  058C                     	;# 
  8081  058D                     	;# 
  8082  058E                     	;# 
  8083  058F                     	;# 
  8084  058F                     	;# 
  8085  0590                     	;# 
  8086  0591                     	;# 
  8087  0592                     	;# 
  8088  0593                     	;# 
  8089  060C                     	;# 
  8090  060D                     	;# 
  8091  060E                     	;# 
  8092  060F                     	;# 
  8093  0610                     	;# 
  8094  0611                     	;# 
  8095  0612                     	;# 
  8096  0613                     	;# 
  8097  0614                     	;# 
  8098  0616                     	;# 
  8099  0617                     	;# 
  8100  0618                     	;# 
  8101  0619                     	;# 
  8102  061A                     	;# 
  8103  061B                     	;# 
  8104  061C                     	;# 
  8105  061D                     	;# 
  8106  061E                     	;# 
  8107  068C                     	;# 
  8108  068D                     	;# 
  8109  068E                     	;# 
  8110  068F                     	;# 
  8111  0690                     	;# 
  8112  0691                     	;# 
  8113  0692                     	;# 
  8114  0693                     	;# 
  8115  0694                     	;# 
  8116  070C                     	;# 
  8117  070D                     	;# 
  8118  070E                     	;# 
  8119  070F                     	;# 
  8120  0710                     	;# 
  8121  0711                     	;# 
  8122  0712                     	;# 
  8123  0713                     	;# 
  8124  0714                     	;# 
  8125  0716                     	;# 
  8126  0717                     	;# 
  8127  0718                     	;# 
  8128  0719                     	;# 
  8129  071A                     	;# 
  8130  071B                     	;# 
  8131  071C                     	;# 
  8132  071D                     	;# 
  8133  071E                     	;# 
  8134  0796                     	;# 
  8135  0797                     	;# 
  8136  0798                     	;# 
  8137  0799                     	;# 
  8138  079A                     	;# 
  8139  079B                     	;# 
  8140  080C                     	;# 
  8141  080D                     	;# 
  8142  080E                     	;# 
  8143  080F                     	;# 
  8144  0810                     	;# 
  8145  0811                     	;# 
  8146  0812                     	;# 
  8147  0813                     	;# 
  8148  0814                     	;# 
  8149  081A                     	;# 
  8150  081B                     	;# 
  8151  081C                     	;# 
  8152  081D                     	;# 
  8153  081E                     	;# 
  8154  081F                     	;# 
  8155  088C                     	;# 
  8156  088D                     	;# 
  8157  088E                     	;# 
  8158  088F                     	;# 
  8159  0890                     	;# 
  8160  0891                     	;# 
  8161  0892                     	;# 
  8162  0893                     	;# 
  8163  0895                     	;# 
  8164  0896                     	;# 
  8165  0897                     	;# 
  8166  0898                     	;# 
  8167  0899                     	;# 
  8168  089A                     	;# 
  8169  089B                     	;# 
  8170  090C                     	;# 
  8171  090E                     	;# 
  8172  090F                     	;# 
  8173  091F                     	;# 
  8174  091F                     	;# 
  8175  098F                     	;# 
  8176  098F                     	;# 
  8177  0990                     	;# 
  8178  0991                     	;# 
  8179  0992                     	;# 
  8180  0993                     	;# 
  8181  0994                     	;# 
  8182  0995                     	;# 
  8183  0996                     	;# 
  8184  0997                     	;# 
  8185  0E0F                     	;# 
  8186  0E10                     	;# 
  8187  0E11                     	;# 
  8188  0E12                     	;# 
  8189  0E13                     	;# 
  8190  0E14                     	;# 
  8191  0E15                     	;# 
  8192  0E16                     	;# 
  8193  0E17                     	;# 
  8194  0E18                     	;# 
  8195  0E19                     	;# 
  8196  0E1A                     	;# 
  8197  0E1B                     	;# 
  8198  0E1C                     	;# 
  8199  0E1D                     	;# 
  8200  0E1E                     	;# 
  8201  0E1F                     	;# 
  8202  0E20                     	;# 
  8203  0E21                     	;# 
  8204  0E22                     	;# 
  8205  0E23                     	;# 
  8206  0E24                     	;# 
  8207  0E25                     	;# 
  8208  0E26                     	;# 
  8209  0E27                     	;# 
  8210  0E28                     	;# 
  8211  0E29                     	;# 
  8212  0E2A                     	;# 
  8213  0E2B                     	;# 
  8214  0E2C                     	;# 
  8215  0E2D                     	;# 
  8216  0E2E                     	;# 
  8217  0E2F                     	;# 
  8218  0E30                     	;# 
  8219  0E31                     	;# 
  8220  0E32                     	;# 
  8221  0E33                     	;# 
  8222  0E34                     	;# 
  8223  0E35                     	;# 
  8224  0E36                     	;# 
  8225  0E37                     	;# 
  8226  0E8F                     	;# 
  8227  0E90                     	;# 
  8228  0E91                     	;# 
  8229  0E92                     	;# 
  8230  0E93                     	;# 
  8231  0E94                     	;# 
  8232  0E95                     	;# 
  8233  0E96                     	;# 
  8234  0E97                     	;# 
  8235  0E9C                     	;# 
  8236  0E9D                     	;# 
  8237  0E9E                     	;# 
  8238  0EA1                     	;# 
  8239  0EA2                     	;# 
  8240  0EA3                     	;# 
  8241  0EA4                     	;# 
  8242  0EA5                     	;# 
  8243  0EA9                     	;# 
  8244  0EAA                     	;# 
  8245  0EAB                     	;# 
  8246  0EAC                     	;# 
  8247  0EB1                     	;# 
  8248  0EB2                     	;# 
  8249  0EB3                     	;# 
  8250  0EB8                     	;# 
  8251  0EB9                     	;# 
  8252  0EBA                     	;# 
  8253  0EBB                     	;# 
  8254  0EBC                     	;# 
  8255  0EBD                     	;# 
  8256  0EBE                     	;# 
  8257  0EC3                     	;# 
  8258  0EC5                     	;# 
  8259  0EC6                     	;# 
  8260  0EC7                     	;# 
  8261  0EC8                     	;# 
  8262  0EC9                     	;# 
  8263  0ECA                     	;# 
  8264  0ECB                     	;# 
  8265  0ECC                     	;# 
  8266  0F10                     	;# 
  8267  0F11                     	;# 
  8268  0F12                     	;# 
  8269  0F13                     	;# 
  8270  0F14                     	;# 
  8271  0F15                     	;# 
  8272  0F16                     	;# 
  8273  0F17                     	;# 
  8274  0F18                     	;# 
  8275  0F19                     	;# 
  8276  0F1A                     	;# 
  8277  0F1B                     	;# 
  8278  0F1C                     	;# 
  8279  0F1D                     	;# 
  8280  0F1E                     	;# 
  8281  0F1F                     	;# 
  8282  0F20                     	;# 
  8283  0F21                     	;# 
  8284  0F22                     	;# 
  8285  0F23                     	;# 
  8286  0F24                     	;# 
  8287  0F25                     	;# 
  8288  0F26                     	;# 
  8289  0F27                     	;# 
  8290  0F28                     	;# 
  8291  0F29                     	;# 
  8292  0F2A                     	;# 
  8293  0F2B                     	;# 
  8294  0F2C                     	;# 
  8295  0F2D                     	;# 
  8296  0F2E                     	;# 
  8297  0F2F                     	;# 
  8298  0F30                     	;# 
  8299  0F31                     	;# 
  8300  0F32                     	;# 
  8301  0F38                     	;# 
  8302  0F39                     	;# 
  8303  0F3A                     	;# 
  8304  0F3B                     	;# 
  8305  0F3C                     	;# 
  8306  0F3D                     	;# 
  8307  0F3E                     	;# 
  8308  0F3F                     	;# 
  8309  0F40                     	;# 
  8310  0F41                     	;# 
  8311  0F43                     	;# 
  8312  0F44                     	;# 
  8313  0F45                     	;# 
  8314  0F46                     	;# 
  8315  0F47                     	;# 
  8316  0F48                     	;# 
  8317  0F49                     	;# 
  8318  0F4A                     	;# 
  8319  0F4B                     	;# 
  8320  0F4C                     	;# 
  8321  0F4E                     	;# 
  8322  0F4F                     	;# 
  8323  0F50                     	;# 
  8324  0F51                     	;# 
  8325  0F52                     	;# 
  8326  0F53                     	;# 
  8327  0F54                     	;# 
  8328  0F55                     	;# 
  8329  0F56                     	;# 
  8330  0F57                     	;# 
  8331  0F59                     	;# 
  8332  0F5A                     	;# 
  8333  0F5B                     	;# 
  8334  0F5C                     	;# 
  8335  0F5D                     	;# 
  8336  0F61                     	;# 
  8337  0F62                     	;# 
  8338  0F64                     	;# 
  8339  0F65                     	;# 
  8340  0F66                     	;# 
  8341  0F67                     	;# 
  8342  0F68                     	;# 
  8343  0F69                     	;# 
  8344  0F6A                     	;# 
  8345  0F6B                     	;# 
  8346  0F6C                     	;# 
  8347  0F6D                     	;# 
  8348  0FE4                     	;# 
  8349  0FE5                     	;# 
  8350  0FE6                     	;# 
  8351  0FE7                     	;# 
  8352  0FE8                     	;# 
  8353  0FE9                     	;# 
  8354  0FEA                     	;# 
  8355  0FEB                     	;# 
  8356  0FED                     	;# 
  8357  0FEE                     	;# 
  8358  0FEF                     	;# 
  8359  0000                     	;# 
  8360  0001                     	;# 
  8361  0002                     	;# 
  8362  0003                     	;# 
  8363  0004                     	;# 
  8364  0005                     	;# 
  8365  0006                     	;# 
  8366  0007                     	;# 
  8367  0008                     	;# 
  8368  0009                     	;# 
  8369  000A                     	;# 
  8370  000B                     	;# 
  8371  000C                     	;# 
  8372  000D                     	;# 
  8373  000E                     	;# 
  8374  000F                     	;# 
  8375  0010                     	;# 
  8376  0011                     	;# 
  8377  0012                     	;# 
  8378  0013                     	;# 
  8379  0014                     	;# 
  8380  0015                     	;# 
  8381  0016                     	;# 
  8382  0017                     	;# 
  8383  0018                     	;# 
  8384  0019                     	;# 
  8385  001A                     	;# 
  8386  001C                     	;# 
  8387  001C                     	;# 
  8388  001D                     	;# 
  8389  001D                     	;# 
  8390  001E                     	;# 
  8391  001F                     	;# 
  8392  008C                     	;# 
  8393  008C                     	;# 
  8394  008D                     	;# 
  8395  008E                     	;# 
  8396  008E                     	;# 
  8397  008F                     	;# 
  8398  0090                     	;# 
  8399  0090                     	;# 
  8400  0091                     	;# 
  8401  0093                     	;# 
  8402  0094                     	;# 
  8403  0095                     	;# 
  8404  0096                     	;# 
  8405  0097                     	;# 
  8406  0098                     	;# 
  8407  0099                     	;# 
  8408  009A                     	;# 
  8409  009B                     	;# 
  8410  009C                     	;# 
  8411  009D                     	;# 
  8412  009E                     	;# 
  8413  010C                     	;# 
  8414  010D                     	;# 
  8415  010E                     	;# 
  8416  010E                     	;# 
  8417  010F                     	;# 
  8418  0110                     	;# 
  8419  0110                     	;# 
  8420  0111                     	;# 
  8421  0112                     	;# 
  8422  0112                     	;# 
  8423  0113                     	;# 
  8424  0114                     	;# 
  8425  0114                     	;# 
  8426  0115                     	;# 
  8427  0116                     	;# 
  8428  0116                     	;# 
  8429  0117                     	;# 
  8430  0119                     	;# 
  8431  0119                     	;# 
  8432  0119                     	;# 
  8433  011A                     	;# 
  8434  011A                     	;# 
  8435  011A                     	;# 
  8436  011B                     	;# 
  8437  011B                     	;# 
  8438  011B                     	;# 
  8439  011B                     	;# 
  8440  011B                     	;# 
  8441  011C                     	;# 
  8442  011C                     	;# 
  8443  011C                     	;# 
  8444  011D                     	;# 
  8445  011D                     	;# 
  8446  011D                     	;# 
  8447  011E                     	;# 
  8448  011E                     	;# 
  8449  011E                     	;# 
  8450  011F                     	;# 
  8451  011F                     	;# 
  8452  011F                     	;# 
  8453  011F                     	;# 
  8454  011F                     	;# 
  8455  018C                     	;# 
  8456  018D                     	;# 
  8457  018E                     	;# 
  8458  018F                     	;# 
  8459  0190                     	;# 
  8460  0191                     	;# 
  8461  0192                     	;# 
  8462  0196                     	;# 
  8463  0197                     	;# 
  8464  0198                     	;# 
  8465  0199                     	;# 
  8466  019A                     	;# 
  8467  019B                     	;# 
  8468  019C                     	;# 
  8469  020C                     	;# 
  8470  020C                     	;# 
  8471  020D                     	;# 
  8472  020E                     	;# 
  8473  020F                     	;# 
  8474  020F                     	;# 
  8475  0210                     	;# 
  8476  0210                     	;# 
  8477  0211                     	;# 
  8478  0211                     	;# 
  8479  0212                     	;# 
  8480  0212                     	;# 
  8481  0213                     	;# 
  8482  0214                     	;# 
  8483  0215                     	;# 
  8484  0215                     	;# 
  8485  0216                     	;# 
  8486  0216                     	;# 
  8487  0217                     	;# 
  8488  0217                     	;# 
  8489  0218                     	;# 
  8490  0218                     	;# 
  8491  0219                     	;# 
  8492  021A                     	;# 
  8493  021B                     	;# 
  8494  021B                     	;# 
  8495  021C                     	;# 
  8496  021C                     	;# 
  8497  021D                     	;# 
  8498  021D                     	;# 
  8499  021E                     	;# 
  8500  021F                     	;# 
  8501  028C                     	;# 
  8502  028C                     	;# 
  8503  028D                     	;# 
  8504  028D                     	;# 
  8505  028E                     	;# 
  8506  028F                     	;# 
  8507  0290                     	;# 
  8508  0290                     	;# 
  8509  0291                     	;# 
  8510  0292                     	;# 
  8511  0292                     	;# 
  8512  0293                     	;# 
  8513  0293                     	;# 
  8514  0294                     	;# 
  8515  0295                     	;# 
  8516  0296                     	;# 
  8517  0296                     	;# 
  8518  0297                     	;# 
  8519  0298                     	;# 
  8520  0298                     	;# 
  8521  0299                     	;# 
  8522  0299                     	;# 
  8523  029A                     	;# 
  8524  029B                     	;# 
  8525  029C                     	;# 
  8526  029C                     	;# 
  8527  029D                     	;# 
  8528  030C                     	;# 
  8529  030C                     	;# 
  8530  030D                     	;# 
  8531  030E                     	;# 
  8532  030F                     	;# 
  8533  0310                     	;# 
  8534  0310                     	;# 
  8535  0311                     	;# 
  8536  0312                     	;# 
  8537  0313                     	;# 
  8538  0314                     	;# 
  8539  0314                     	;# 
  8540  0315                     	;# 
  8541  0316                     	;# 
  8542  0317                     	;# 
  8543  0318                     	;# 
  8544  0318                     	;# 
  8545  0319                     	;# 
  8546  031A                     	;# 
  8547  031B                     	;# 
  8548  031C                     	;# 
  8549  031C                     	;# 
  8550  031D                     	;# 
  8551  031E                     	;# 
  8552  031F                     	;# 
  8553  038C                     	;# 
  8554  038C                     	;# 
  8555  038D                     	;# 
  8556  038E                     	;# 
  8557  0390                     	;# 
  8558  0390                     	;# 
  8559  0391                     	;# 
  8560  0392                     	;# 
  8561  040C                     	;# 
  8562  040D                     	;# 
  8563  040E                     	;# 
  8564  040F                     	;# 
  8565  0410                     	;# 
  8566  0411                     	;# 
  8567  0416                     	;# 
  8568  0416                     	;# 
  8569  0417                     	;# 
  8570  0418                     	;# 
  8571  0418                     	;# 
  8572  0419                     	;# 
  8573  041A                     	;# 
  8574  041A                     	;# 
  8575  041B                     	;# 
  8576  041C                     	;# 
  8577  041C                     	;# 
  8578  041D                     	;# 
  8579  041E                     	;# 
  8580  041F                     	;# 
  8581  048C                     	;# 
  8582  048C                     	;# 
  8583  048D                     	;# 
  8584  048E                     	;# 
  8585  048F                     	;# 
  8586  048F                     	;# 
  8587  0490                     	;# 
  8588  0491                     	;# 
  8589  0492                     	;# 
  8590  0492                     	;# 
  8591  0493                     	;# 
  8592  0494                     	;# 
  8593  0495                     	;# 
  8594  0495                     	;# 
  8595  0496                     	;# 
  8596  0497                     	;# 
  8597  0498                     	;# 
  8598  0499                     	;# 
  8599  049A                     	;# 
  8600  049B                     	;# 
  8601  049C                     	;# 
  8602  049D                     	;# 
  8603  050C                     	;# 
  8604  050C                     	;# 
  8605  050D                     	;# 
  8606  050E                     	;# 
  8607  050F                     	;# 
  8608  050F                     	;# 
  8609  0510                     	;# 
  8610  0511                     	;# 
  8611  0512                     	;# 
  8612  0512                     	;# 
  8613  0513                     	;# 
  8614  0514                     	;# 
  8615  0515                     	;# 
  8616  0515                     	;# 
  8617  0516                     	;# 
  8618  0517                     	;# 
  8619  0518                     	;# 
  8620  0519                     	;# 
  8621  051A                     	;# 
  8622  051B                     	;# 
  8623  051C                     	;# 
  8624  051D                     	;# 
  8625  058C                     	;# 
  8626  058C                     	;# 
  8627  058D                     	;# 
  8628  058E                     	;# 
  8629  058F                     	;# 
  8630  058F                     	;# 
  8631  0590                     	;# 
  8632  0591                     	;# 
  8633  0592                     	;# 
  8634  0593                     	;# 
  8635  060C                     	;# 
  8636  060D                     	;# 
  8637  060E                     	;# 
  8638  060F                     	;# 
  8639  0610                     	;# 
  8640  0611                     	;# 
  8641  0612                     	;# 
  8642  0613                     	;# 
  8643  0614                     	;# 
  8644  0616                     	;# 
  8645  0617                     	;# 
  8646  0618                     	;# 
  8647  0619                     	;# 
  8648  061A                     	;# 
  8649  061B                     	;# 
  8650  061C                     	;# 
  8651  061D                     	;# 
  8652  061E                     	;# 
  8653  068C                     	;# 
  8654  068D                     	;# 
  8655  068E                     	;# 
  8656  068F                     	;# 
  8657  0690                     	;# 
  8658  0691                     	;# 
  8659  0692                     	;# 
  8660  0693                     	;# 
  8661  0694                     	;# 
  8662  070C                     	;# 
  8663  070D                     	;# 
  8664  070E                     	;# 
  8665  070F                     	;# 
  8666  0710                     	;# 
  8667  0711                     	;# 
  8668  0712                     	;# 
  8669  0713                     	;# 
  8670  0714                     	;# 
  8671  0716                     	;# 
  8672  0717                     	;# 
  8673  0718                     	;# 
  8674  0719                     	;# 
  8675  071A                     	;# 
  8676  071B                     	;# 
  8677  071C                     	;# 
  8678  071D                     	;# 
  8679  071E                     	;# 
  8680  0796                     	;# 
  8681  0797                     	;# 
  8682  0798                     	;# 
  8683  0799                     	;# 
  8684  079A                     	;# 
  8685  079B                     	;# 
  8686  080C                     	;# 
  8687  080D                     	;# 
  8688  080E                     	;# 
  8689  080F                     	;# 
  8690  0810                     	;# 
  8691  0811                     	;# 
  8692  0812                     	;# 
  8693  0813                     	;# 
  8694  0814                     	;# 
  8695  081A                     	;# 
  8696  081B                     	;# 
  8697  081C                     	;# 
  8698  081D                     	;# 
  8699  081E                     	;# 
  8700  081F                     	;# 
  8701  088C                     	;# 
  8702  088D                     	;# 
  8703  088E                     	;# 
  8704  088F                     	;# 
  8705  0890                     	;# 
  8706  0891                     	;# 
  8707  0892                     	;# 
  8708  0893                     	;# 
  8709  0895                     	;# 
  8710  0896                     	;# 
  8711  0897                     	;# 
  8712  0898                     	;# 
  8713  0899                     	;# 
  8714  089A                     	;# 
  8715  089B                     	;# 
  8716  090C                     	;# 
  8717  090E                     	;# 
  8718  090F                     	;# 
  8719  091F                     	;# 
  8720  091F                     	;# 
  8721  098F                     	;# 
  8722  098F                     	;# 
  8723  0990                     	;# 
  8724  0991                     	;# 
  8725  0992                     	;# 
  8726  0993                     	;# 
  8727  0994                     	;# 
  8728  0995                     	;# 
  8729  0996                     	;# 
  8730  0997                     	;# 
  8731  0E0F                     	;# 
  8732  0E10                     	;# 
  8733  0E11                     	;# 
  8734  0E12                     	;# 
  8735  0E13                     	;# 
  8736  0E14                     	;# 
  8737  0E15                     	;# 
  8738  0E16                     	;# 
  8739  0E17                     	;# 
  8740  0E18                     	;# 
  8741  0E19                     	;# 
  8742  0E1A                     	;# 
  8743  0E1B                     	;# 
  8744  0E1C                     	;# 
  8745  0E1D                     	;# 
  8746  0E1E                     	;# 
  8747  0E1F                     	;# 
  8748  0E20                     	;# 
  8749  0E21                     	;# 
  8750  0E22                     	;# 
  8751  0E23                     	;# 
  8752  0E24                     	;# 
  8753  0E25                     	;# 
  8754  0E26                     	;# 
  8755  0E27                     	;# 
  8756  0E28                     	;# 
  8757  0E29                     	;# 
  8758  0E2A                     	;# 
  8759  0E2B                     	;# 
  8760  0E2C                     	;# 
  8761  0E2D                     	;# 
  8762  0E2E                     	;# 
  8763  0E2F                     	;# 
  8764  0E30                     	;# 
  8765  0E31                     	;# 
  8766  0E32                     	;# 
  8767  0E33                     	;# 
  8768  0E34                     	;# 
  8769  0E35                     	;# 
  8770  0E36                     	;# 
  8771  0E37                     	;# 
  8772  0E8F                     	;# 
  8773  0E90                     	;# 
  8774  0E91                     	;# 
  8775  0E92                     	;# 
  8776  0E93                     	;# 
  8777  0E94                     	;# 
  8778  0E95                     	;# 
  8779  0E96                     	;# 
  8780  0E97                     	;# 
  8781  0E9C                     	;# 
  8782  0E9D                     	;# 
  8783  0E9E                     	;# 
  8784  0EA1                     	;# 
  8785  0EA2                     	;# 
  8786  0EA3                     	;# 
  8787  0EA4                     	;# 
  8788  0EA5                     	;# 
  8789  0EA9                     	;# 
  8790  0EAA                     	;# 
  8791  0EAB                     	;# 
  8792  0EAC                     	;# 
  8793  0EB1                     	;# 
  8794  0EB2                     	;# 
  8795  0EB3                     	;# 
  8796  0EB8                     	;# 
  8797  0EB9                     	;# 
  8798  0EBA                     	;# 
  8799  0EBB                     	;# 
  8800  0EBC                     	;# 
  8801  0EBD                     	;# 
  8802  0EBE                     	;# 
  8803  0EC3                     	;# 
  8804  0EC5                     	;# 
  8805  0EC6                     	;# 
  8806  0EC7                     	;# 
  8807  0EC8                     	;# 
  8808  0EC9                     	;# 
  8809  0ECA                     	;# 
  8810  0ECB                     	;# 
  8811  0ECC                     	;# 
  8812  0F10                     	;# 
  8813  0F11                     	;# 
  8814  0F12                     	;# 
  8815  0F13                     	;# 
  8816  0F14                     	;# 
  8817  0F15                     	;# 
  8818  0F16                     	;# 
  8819  0F17                     	;# 
  8820  0F18                     	;# 
  8821  0F19                     	;# 
  8822  0F1A                     	;# 
  8823  0F1B                     	;# 
  8824  0F1C                     	;# 
  8825  0F1D                     	;# 
  8826  0F1E                     	;# 
  8827  0F1F                     	;# 
  8828  0F20                     	;# 
  8829  0F21                     	;# 
  8830  0F22                     	;# 
  8831  0F23                     	;# 
  8832  0F24                     	;# 
  8833  0F25                     	;# 
  8834  0F26                     	;# 
  8835  0F27                     	;# 
  8836  0F28                     	;# 
  8837  0F29                     	;# 
  8838  0F2A                     	;# 
  8839  0F2B                     	;# 
  8840  0F2C                     	;# 
  8841  0F2D                     	;# 
  8842  0F2E                     	;# 
  8843  0F2F                     	;# 
  8844  0F30                     	;# 
  8845  0F31                     	;# 
  8846  0F32                     	;# 
  8847  0F38                     	;# 
  8848  0F39                     	;# 
  8849  0F3A                     	;# 
  8850  0F3B                     	;# 
  8851  0F3C                     	;# 
  8852  0F3D                     	;# 
  8853  0F3E                     	;# 
  8854  0F3F                     	;# 
  8855  0F40                     	;# 
  8856  0F41                     	;# 
  8857  0F43                     	;# 
  8858  0F44                     	;# 
  8859  0F45                     	;# 
  8860  0F46                     	;# 
  8861  0F47                     	;# 
  8862  0F48                     	;# 
  8863  0F49                     	;# 
  8864  0F4A                     	;# 
  8865  0F4B                     	;# 
  8866  0F4C                     	;# 
  8867  0F4E                     	;# 
  8868  0F4F                     	;# 
  8869  0F50                     	;# 
  8870  0F51                     	;# 
  8871  0F52                     	;# 
  8872  0F53                     	;# 
  8873  0F54                     	;# 
  8874  0F55                     	;# 
  8875  0F56                     	;# 
  8876  0F57                     	;# 
  8877  0F59                     	;# 
  8878  0F5A                     	;# 
  8879  0F5B                     	;# 
  8880  0F5C                     	;# 
  8881  0F5D                     	;# 
  8882  0F61                     	;# 
  8883  0F62                     	;# 
  8884  0F64                     	;# 
  8885  0F65                     	;# 
  8886  0F66                     	;# 
  8887  0F67                     	;# 
  8888  0F68                     	;# 
  8889  0F69                     	;# 
  8890  0F6A                     	;# 
  8891  0F6B                     	;# 
  8892  0F6C                     	;# 
  8893  0F6D                     	;# 
  8894  0FE4                     	;# 
  8895  0FE5                     	;# 
  8896  0FE6                     	;# 
  8897  0FE7                     	;# 
  8898  0FE8                     	;# 
  8899  0FE9                     	;# 
  8900  0FEA                     	;# 
  8901  0FEB                     	;# 
  8902  0FED                     	;# 
  8903  0FEE                     	;# 
  8904  0FEF                     	;# 
  8905  0000                     	;# 
  8906  0001                     	;# 
  8907  0002                     	;# 
  8908  0003                     	;# 
  8909  0004                     	;# 
  8910  0005                     	;# 
  8911  0006                     	;# 
  8912  0007                     	;# 
  8913  0008                     	;# 
  8914  0009                     	;# 
  8915  000A                     	;# 
  8916  000B                     	;# 
  8917  000C                     	;# 
  8918  000D                     	;# 
  8919  000E                     	;# 
  8920  000F                     	;# 
  8921  0010                     	;# 
  8922  0011                     	;# 
  8923  0012                     	;# 
  8924  0013                     	;# 
  8925  0014                     	;# 
  8926  0015                     	;# 
  8927  0016                     	;# 
  8928  0017                     	;# 
  8929  0018                     	;# 
  8930  0019                     	;# 
  8931  001A                     	;# 
  8932  001C                     	;# 
  8933  001C                     	;# 
  8934  001D                     	;# 
  8935  001D                     	;# 
  8936  001E                     	;# 
  8937  001F                     	;# 
  8938  008C                     	;# 
  8939  008C                     	;# 
  8940  008D                     	;# 
  8941  008E                     	;# 
  8942  008E                     	;# 
  8943  008F                     	;# 
  8944  0090                     	;# 
  8945  0090                     	;# 
  8946  0091                     	;# 
  8947  0093                     	;# 
  8948  0094                     	;# 
  8949  0095                     	;# 
  8950  0096                     	;# 
  8951  0097                     	;# 
  8952  0098                     	;# 
  8953  0099                     	;# 
  8954  009A                     	;# 
  8955  009B                     	;# 
  8956  009C                     	;# 
  8957  009D                     	;# 
  8958  009E                     	;# 
  8959  010C                     	;# 
  8960  010D                     	;# 
  8961  010E                     	;# 
  8962  010E                     	;# 
  8963  010F                     	;# 
  8964  0110                     	;# 
  8965  0110                     	;# 
  8966  0111                     	;# 
  8967  0112                     	;# 
  8968  0112                     	;# 
  8969  0113                     	;# 
  8970  0114                     	;# 
  8971  0114                     	;# 
  8972  0115                     	;# 
  8973  0116                     	;# 
  8974  0116                     	;# 
  8975  0117                     	;# 
  8976  0119                     	;# 
  8977  0119                     	;# 
  8978  0119                     	;# 
  8979  011A                     	;# 
  8980  011A                     	;# 
  8981  011A                     	;# 
  8982  011B                     	;# 
  8983  011B                     	;# 
  8984  011B                     	;# 
  8985  011B                     	;# 
  8986  011B                     	;# 
  8987  011C                     	;# 
  8988  011C                     	;# 
  8989  011C                     	;# 
  8990  011D                     	;# 
  8991  011D                     	;# 
  8992  011D                     	;# 
  8993  011E                     	;# 
  8994  011E                     	;# 
  8995  011E                     	;# 
  8996  011F                     	;# 
  8997  011F                     	;# 
  8998  011F                     	;# 
  8999  011F                     	;# 
  9000  011F                     	;# 
  9001  018C                     	;# 
  9002  018D                     	;# 
  9003  018E                     	;# 
  9004  018F                     	;# 
  9005  0190                     	;# 
  9006  0191                     	;# 
  9007  0192                     	;# 
  9008  0196                     	;# 
  9009  0197                     	;# 
  9010  0198                     	;# 
  9011  0199                     	;# 
  9012  019A                     	;# 
  9013  019B                     	;# 
  9014  019C                     	;# 
  9015  020C                     	;# 
  9016  020C                     	;# 
  9017  020D                     	;# 
  9018  020E                     	;# 
  9019  020F                     	;# 
  9020  020F                     	;# 
  9021  0210                     	;# 
  9022  0210                     	;# 
  9023  0211                     	;# 
  9024  0211                     	;# 
  9025  0212                     	;# 
  9026  0212                     	;# 
  9027  0213                     	;# 
  9028  0214                     	;# 
  9029  0215                     	;# 
  9030  0215                     	;# 
  9031  0216                     	;# 
  9032  0216                     	;# 
  9033  0217                     	;# 
  9034  0217                     	;# 
  9035  0218                     	;# 
  9036  0218                     	;# 
  9037  0219                     	;# 
  9038  021A                     	;# 
  9039  021B                     	;# 
  9040  021B                     	;# 
  9041  021C                     	;# 
  9042  021C                     	;# 
  9043  021D                     	;# 
  9044  021D                     	;# 
  9045  021E                     	;# 
  9046  021F                     	;# 
  9047  028C                     	;# 
  9048  028C                     	;# 
  9049  028D                     	;# 
  9050  028D                     	;# 
  9051  028E                     	;# 
  9052  028F                     	;# 
  9053  0290                     	;# 
  9054  0290                     	;# 
  9055  0291                     	;# 
  9056  0292                     	;# 
  9057  0292                     	;# 
  9058  0293                     	;# 
  9059  0293                     	;# 
  9060  0294                     	;# 
  9061  0295                     	;# 
  9062  0296                     	;# 
  9063  0296                     	;# 
  9064  0297                     	;# 
  9065  0298                     	;# 
  9066  0298                     	;# 
  9067  0299                     	;# 
  9068  0299                     	;# 
  9069  029A                     	;# 
  9070  029B                     	;# 
  9071  029C                     	;# 
  9072  029C                     	;# 
  9073  029D                     	;# 
  9074  030C                     	;# 
  9075  030C                     	;# 
  9076  030D                     	;# 
  9077  030E                     	;# 
  9078  030F                     	;# 
  9079  0310                     	;# 
  9080  0310                     	;# 
  9081  0311                     	;# 
  9082  0312                     	;# 
  9083  0313                     	;# 
  9084  0314                     	;# 
  9085  0314                     	;# 
  9086  0315                     	;# 
  9087  0316                     	;# 
  9088  0317                     	;# 
  9089  0318                     	;# 
  9090  0318                     	;# 
  9091  0319                     	;# 
  9092  031A                     	;# 
  9093  031B                     	;# 
  9094  031C                     	;# 
  9095  031C                     	;# 
  9096  031D                     	;# 
  9097  031E                     	;# 
  9098  031F                     	;# 
  9099  038C                     	;# 
  9100  038C                     	;# 
  9101  038D                     	;# 
  9102  038E                     	;# 
  9103  0390                     	;# 
  9104  0390                     	;# 
  9105  0391                     	;# 
  9106  0392                     	;# 
  9107  040C                     	;# 
  9108  040D                     	;# 
  9109  040E                     	;# 
  9110  040F                     	;# 
  9111  0410                     	;# 
  9112  0411                     	;# 
  9113  0416                     	;# 
  9114  0416                     	;# 
  9115  0417                     	;# 
  9116  0418                     	;# 
  9117  0418                     	;# 
  9118  0419                     	;# 
  9119  041A                     	;# 
  9120  041A                     	;# 
  9121  041B                     	;# 
  9122  041C                     	;# 
  9123  041C                     	;# 
  9124  041D                     	;# 
  9125  041E                     	;# 
  9126  041F                     	;# 
  9127  048C                     	;# 
  9128  048C                     	;# 
  9129  048D                     	;# 
  9130  048E                     	;# 
  9131  048F                     	;# 
  9132  048F                     	;# 
  9133  0490                     	;# 
  9134  0491                     	;# 
  9135  0492                     	;# 
  9136  0492                     	;# 
  9137  0493                     	;# 
  9138  0494                     	;# 
  9139  0495                     	;# 
  9140  0495                     	;# 
  9141  0496                     	;# 
  9142  0497                     	;# 
  9143  0498                     	;# 
  9144  0499                     	;# 
  9145  049A                     	;# 
  9146  049B                     	;# 
  9147  049C                     	;# 
  9148  049D                     	;# 
  9149  050C                     	;# 
  9150  050C                     	;# 
  9151  050D                     	;# 
  9152  050E                     	;# 
  9153  050F                     	;# 
  9154  050F                     	;# 
  9155  0510                     	;# 
  9156  0511                     	;# 
  9157  0512                     	;# 
  9158  0512                     	;# 
  9159  0513                     	;# 
  9160  0514                     	;# 
  9161  0515                     	;# 
  9162  0515                     	;# 
  9163  0516                     	;# 
  9164  0517                     	;# 
  9165  0518                     	;# 
  9166  0519                     	;# 
  9167  051A                     	;# 
  9168  051B                     	;# 
  9169  051C                     	;# 
  9170  051D                     	;# 
  9171  058C                     	;# 
  9172  058C                     	;# 
  9173  058D                     	;# 
  9174  058E                     	;# 
  9175  058F                     	;# 
  9176  058F                     	;# 
  9177  0590                     	;# 
  9178  0591                     	;# 
  9179  0592                     	;# 
  9180  0593                     	;# 
  9181  060C                     	;# 
  9182  060D                     	;# 
  9183  060E                     	;# 
  9184  060F                     	;# 
  9185  0610                     	;# 
  9186  0611                     	;# 
  9187  0612                     	;# 
  9188  0613                     	;# 
  9189  0614                     	;# 
  9190  0616                     	;# 
  9191  0617                     	;# 
  9192  0618                     	;# 
  9193  0619                     	;# 
  9194  061A                     	;# 
  9195  061B                     	;# 
  9196  061C                     	;# 
  9197  061D                     	;# 
  9198  061E                     	;# 
  9199  068C                     	;# 
  9200  068D                     	;# 
  9201  068E                     	;# 
  9202  068F                     	;# 
  9203  0690                     	;# 
  9204  0691                     	;# 
  9205  0692                     	;# 
  9206  0693                     	;# 
  9207  0694                     	;# 
  9208  070C                     	;# 
  9209  070D                     	;# 
  9210  070E                     	;# 
  9211  070F                     	;# 
  9212  0710                     	;# 
  9213  0711                     	;# 
  9214  0712                     	;# 
  9215  0713                     	;# 
  9216  0714                     	;# 
  9217  0716                     	;# 
  9218  0717                     	;# 
  9219  0718                     	;# 
  9220  0719                     	;# 
  9221  071A                     	;# 
  9222  071B                     	;# 
  9223  071C                     	;# 
  9224  071D                     	;# 
  9225  071E                     	;# 
  9226  0796                     	;# 
  9227  0797                     	;# 
  9228  0798                     	;# 
  9229  0799                     	;# 
  9230  079A                     	;# 
  9231  079B                     	;# 
  9232  080C                     	;# 
  9233  080D                     	;# 
  9234  080E                     	;# 
  9235  080F                     	;# 
  9236  0810                     	;# 
  9237  0811                     	;# 
  9238  0812                     	;# 
  9239  0813                     	;# 
  9240  0814                     	;# 
  9241  081A                     	;# 
  9242  081B                     	;# 
  9243  081C                     	;# 
  9244  081D                     	;# 
  9245  081E                     	;# 
  9246  081F                     	;# 
  9247  088C                     	;# 
  9248  088D                     	;# 
  9249  088E                     	;# 
  9250  088F                     	;# 
  9251  0890                     	;# 
  9252  0891                     	;# 
  9253  0892                     	;# 
  9254  0893                     	;# 
  9255  0895                     	;# 
  9256  0896                     	;# 
  9257  0897                     	;# 
  9258  0898                     	;# 
  9259  0899                     	;# 
  9260  089A                     	;# 
  9261  089B                     	;# 
  9262  090C                     	;# 
  9263  090E                     	;# 
  9264  090F                     	;# 
  9265  091F                     	;# 
  9266  091F                     	;# 
  9267  098F                     	;# 
  9268  098F                     	;# 
  9269  0990                     	;# 
  9270  0991                     	;# 
  9271  0992                     	;# 
  9272  0993                     	;# 
  9273  0994                     	;# 
  9274  0995                     	;# 
  9275  0996                     	;# 
  9276  0997                     	;# 
  9277  0E0F                     	;# 
  9278  0E10                     	;# 
  9279  0E11                     	;# 
  9280  0E12                     	;# 
  9281  0E13                     	;# 
  9282  0E14                     	;# 
  9283  0E15                     	;# 
  9284  0E16                     	;# 
  9285  0E17                     	;# 
  9286  0E18                     	;# 
  9287  0E19                     	;# 
  9288  0E1A                     	;# 
  9289  0E1B                     	;# 
  9290  0E1C                     	;# 
  9291  0E1D                     	;# 
  9292  0E1E                     	;# 
  9293  0E1F                     	;# 
  9294  0E20                     	;# 
  9295  0E21                     	;# 
  9296  0E22                     	;# 
  9297  0E23                     	;# 
  9298  0E24                     	;# 
  9299  0E25                     	;# 
  9300  0E26                     	;# 
  9301  0E27                     	;# 
  9302  0E28                     	;# 
  9303  0E29                     	;# 
  9304  0E2A                     	;# 
  9305  0E2B                     	;# 
  9306  0E2C                     	;# 
  9307  0E2D                     	;# 
  9308  0E2E                     	;# 
  9309  0E2F                     	;# 
  9310  0E30                     	;# 
  9311  0E31                     	;# 
  9312  0E32                     	;# 
  9313  0E33                     	;# 
  9314  0E34                     	;# 
  9315  0E35                     	;# 
  9316  0E36                     	;# 
  9317  0E37                     	;# 
  9318  0E8F                     	;# 
  9319  0E90                     	;# 
  9320  0E91                     	;# 
  9321  0E92                     	;# 
  9322  0E93                     	;# 
  9323  0E94                     	;# 
  9324  0E95                     	;# 
  9325  0E96                     	;# 
  9326  0E97                     	;# 
  9327  0E9C                     	;# 
  9328  0E9D                     	;# 
  9329  0E9E                     	;# 
  9330  0EA1                     	;# 
  9331  0EA2                     	;# 
  9332  0EA3                     	;# 
  9333  0EA4                     	;# 
  9334  0EA5                     	;# 
  9335  0EA9                     	;# 
  9336  0EAA                     	;# 
  9337  0EAB                     	;# 
  9338  0EAC                     	;# 
  9339  0EB1                     	;# 
  9340  0EB2                     	;# 
  9341  0EB3                     	;# 
  9342  0EB8                     	;# 
  9343  0EB9                     	;# 
  9344  0EBA                     	;# 
  9345  0EBB                     	;# 
  9346  0EBC                     	;# 
  9347  0EBD                     	;# 
  9348  0EBE                     	;# 
  9349  0EC3                     	;# 
  9350  0EC5                     	;# 
  9351  0EC6                     	;# 
  9352  0EC7                     	;# 
  9353  0EC8                     	;# 
  9354  0EC9                     	;# 
  9355  0ECA                     	;# 
  9356  0ECB                     	;# 
  9357  0ECC                     	;# 
  9358  0F10                     	;# 
  9359  0F11                     	;# 
  9360  0F12                     	;# 
  9361  0F13                     	;# 
  9362  0F14                     	;# 
  9363  0F15                     	;# 
  9364  0F16                     	;# 
  9365  0F17                     	;# 
  9366  0F18                     	;# 
  9367  0F19                     	;# 
  9368  0F1A                     	;# 
  9369  0F1B                     	;# 
  9370  0F1C                     	;# 
  9371  0F1D                     	;# 
  9372  0F1E                     	;# 
  9373  0F1F                     	;# 
  9374  0F20                     	;# 
  9375  0F21                     	;# 
  9376  0F22                     	;# 
  9377  0F23                     	;# 
  9378  0F24                     	;# 
  9379  0F25                     	;# 
  9380  0F26                     	;# 
  9381  0F27                     	;# 
  9382  0F28                     	;# 
  9383  0F29                     	;# 
  9384  0F2A                     	;# 
  9385  0F2B                     	;# 
  9386  0F2C                     	;# 
  9387  0F2D                     	;# 
  9388  0F2E                     	;# 
  9389  0F2F                     	;# 
  9390  0F30                     	;# 
  9391  0F31                     	;# 
  9392  0F32                     	;# 
  9393  0F38                     	;# 
  9394  0F39                     	;# 
  9395  0F3A                     	;# 
  9396  0F3B                     	;# 
  9397  0F3C                     	;# 
  9398  0F3D                     	;# 
  9399  0F3E                     	;# 
  9400  0F3F                     	;# 
  9401  0F40                     	;# 
  9402  0F41                     	;# 
  9403  0F43                     	;# 
  9404  0F44                     	;# 
  9405  0F45                     	;# 
  9406  0F46                     	;# 
  9407  0F47                     	;# 
  9408  0F48                     	;# 
  9409  0F49                     	;# 
  9410  0F4A                     	;# 
  9411  0F4B                     	;# 
  9412  0F4C                     	;# 
  9413  0F4E                     	;# 
  9414  0F4F                     	;# 
  9415  0F50                     	;# 
  9416  0F51                     	;# 
  9417  0F52                     	;# 
  9418  0F53                     	;# 
  9419  0F54                     	;# 
  9420  0F55                     	;# 
  9421  0F56                     	;# 
  9422  0F57                     	;# 
  9423  0F59                     	;# 
  9424  0F5A                     	;# 
  9425  0F5B                     	;# 
  9426  0F5C                     	;# 
  9427  0F5D                     	;# 
  9428  0F61                     	;# 
  9429  0F62                     	;# 
  9430  0F64                     	;# 
  9431  0F65                     	;# 
  9432  0F66                     	;# 
  9433  0F67                     	;# 
  9434  0F68                     	;# 
  9435  0F69                     	;# 
  9436  0F6A                     	;# 
  9437  0F6B                     	;# 
  9438  0F6C                     	;# 
  9439  0F6D                     	;# 
  9440  0FE4                     	;# 
  9441  0FE5                     	;# 
  9442  0FE6                     	;# 
  9443  0FE7                     	;# 
  9444  0FE8                     	;# 
  9445  0FE9                     	;# 
  9446  0FEA                     	;# 
  9447  0FEB                     	;# 
  9448  0FED                     	;# 
  9449  0FEE                     	;# 
  9450  0FEF                     	;# 
  9451  0000                     	;# 
  9452  0001                     	;# 
  9453  0002                     	;# 
  9454  0003                     	;# 
  9455  0004                     	;# 
  9456  0005                     	;# 
  9457  0006                     	;# 
  9458  0007                     	;# 
  9459  0008                     	;# 
  9460  0009                     	;# 
  9461  000A                     	;# 
  9462  000B                     	;# 
  9463  000C                     	;# 
  9464  000D                     	;# 
  9465  000E                     	;# 
  9466  000F                     	;# 
  9467  0010                     	;# 
  9468  0011                     	;# 
  9469  0012                     	;# 
  9470  0013                     	;# 
  9471  0014                     	;# 
  9472  0015                     	;# 
  9473  0016                     	;# 
  9474  0017                     	;# 
  9475  0018                     	;# 
  9476  0019                     	;# 
  9477  001A                     	;# 
  9478  001C                     	;# 
  9479  001C                     	;# 
  9480  001D                     	;# 
  9481  001D                     	;# 
  9482  001E                     	;# 
  9483  001F                     	;# 
  9484  008C                     	;# 
  9485  008C                     	;# 
  9486  008D                     	;# 
  9487  008E                     	;# 
  9488  008E                     	;# 
  9489  008F                     	;# 
  9490  0090                     	;# 
  9491  0090                     	;# 
  9492  0091                     	;# 
  9493  0093                     	;# 
  9494  0094                     	;# 
  9495  0095                     	;# 
  9496  0096                     	;# 
  9497  0097                     	;# 
  9498  0098                     	;# 
  9499  0099                     	;# 
  9500  009A                     	;# 
  9501  009B                     	;# 
  9502  009C                     	;# 
  9503  009D                     	;# 
  9504  009E                     	;# 
  9505  010C                     	;# 
  9506  010D                     	;# 
  9507  010E                     	;# 
  9508  010E                     	;# 
  9509  010F                     	;# 
  9510  0110                     	;# 
  9511  0110                     	;# 
  9512  0111                     	;# 
  9513  0112                     	;# 
  9514  0112                     	;# 
  9515  0113                     	;# 
  9516  0114                     	;# 
  9517  0114                     	;# 
  9518  0115                     	;# 
  9519  0116                     	;# 
  9520  0116                     	;# 
  9521  0117                     	;# 
  9522  0119                     	;# 
  9523  0119                     	;# 
  9524  0119                     	;# 
  9525  011A                     	;# 
  9526  011A                     	;# 
  9527  011A                     	;# 
  9528  011B                     	;# 
  9529  011B                     	;# 
  9530  011B                     	;# 
  9531  011B                     	;# 
  9532  011B                     	;# 
  9533  011C                     	;# 
  9534  011C                     	;# 
  9535  011C                     	;# 
  9536  011D                     	;# 
  9537  011D                     	;# 
  9538  011D                     	;# 
  9539  011E                     	;# 
  9540  011E                     	;# 
  9541  011E                     	;# 
  9542  011F                     	;# 
  9543  011F                     	;# 
  9544  011F                     	;# 
  9545  011F                     	;# 
  9546  011F                     	;# 
  9547  018C                     	;# 
  9548  018D                     	;# 
  9549  018E                     	;# 
  9550  018F                     	;# 
  9551  0190                     	;# 
  9552  0191                     	;# 
  9553  0192                     	;# 
  9554  0196                     	;# 
  9555  0197                     	;# 
  9556  0198                     	;# 
  9557  0199                     	;# 
  9558  019A                     	;# 
  9559  019B                     	;# 
  9560  019C                     	;# 
  9561  020C                     	;# 
  9562  020C                     	;# 
  9563  020D                     	;# 
  9564  020E                     	;# 
  9565  020F                     	;# 
  9566  020F                     	;# 
  9567  0210                     	;# 
  9568  0210                     	;# 
  9569  0211                     	;# 
  9570  0211                     	;# 
  9571  0212                     	;# 
  9572  0212                     	;# 
  9573  0213                     	;# 
  9574  0214                     	;# 
  9575  0215                     	;# 
  9576  0215                     	;# 
  9577  0216                     	;# 
  9578  0216                     	;# 
  9579  0217                     	;# 
  9580  0217                     	;# 
  9581  0218                     	;# 
  9582  0218                     	;# 
  9583  0219                     	;# 
  9584  021A                     	;# 
  9585  021B                     	;# 
  9586  021B                     	;# 
  9587  021C                     	;# 
  9588  021C                     	;# 
  9589  021D                     	;# 
  9590  021D                     	;# 
  9591  021E                     	;# 
  9592  021F                     	;# 
  9593  028C                     	;# 
  9594  028C                     	;# 
  9595  028D                     	;# 
  9596  028D                     	;# 
  9597  028E                     	;# 
  9598  028F                     	;# 
  9599  0290                     	;# 
  9600  0290                     	;# 
  9601  0291                     	;# 
  9602  0292                     	;# 
  9603  0292                     	;# 
  9604  0293                     	;# 
  9605  0293                     	;# 
  9606  0294                     	;# 
  9607  0295                     	;# 
  9608  0296                     	;# 
  9609  0296                     	;# 
  9610  0297                     	;# 
  9611  0298                     	;# 
  9612  0298                     	;# 
  9613  0299                     	;# 
  9614  0299                     	;# 
  9615  029A                     	;# 
  9616  029B                     	;# 
  9617  029C                     	;# 
  9618  029C                     	;# 
  9619  029D                     	;# 
  9620  030C                     	;# 
  9621  030C                     	;# 
  9622  030D                     	;# 
  9623  030E                     	;# 
  9624  030F                     	;# 
  9625  0310                     	;# 
  9626  0310                     	;# 
  9627  0311                     	;# 
  9628  0312                     	;# 
  9629  0313                     	;# 
  9630  0314                     	;# 
  9631  0314                     	;# 
  9632  0315                     	;# 
  9633  0316                     	;# 
  9634  0317                     	;# 
  9635  0318                     	;# 
  9636  0318                     	;# 
  9637  0319                     	;# 
  9638  031A                     	;# 
  9639  031B                     	;# 
  9640  031C                     	;# 
  9641  031C                     	;# 
  9642  031D                     	;# 
  9643  031E                     	;# 
  9644  031F                     	;# 
  9645  038C                     	;# 
  9646  038C                     	;# 
  9647  038D                     	;# 
  9648  038E                     	;# 
  9649  0390                     	;# 
  9650  0390                     	;# 
  9651  0391                     	;# 
  9652  0392                     	;# 
  9653  040C                     	;# 
  9654  040D                     	;# 
  9655  040E                     	;# 
  9656  040F                     	;# 
  9657  0410                     	;# 
  9658  0411                     	;# 
  9659  0416                     	;# 
  9660  0416                     	;# 
  9661  0417                     	;# 
  9662  0418                     	;# 
  9663  0418                     	;# 
  9664  0419                     	;# 
  9665  041A                     	;# 
  9666  041A                     	;# 
  9667  041B                     	;# 
  9668  041C                     	;# 
  9669  041C                     	;# 
  9670  041D                     	;# 
  9671  041E                     	;# 
  9672  041F                     	;# 
  9673  048C                     	;# 
  9674  048C                     	;# 
  9675  048D                     	;# 
  9676  048E                     	;# 
  9677  048F                     	;# 
  9678  048F                     	;# 
  9679  0490                     	;# 
  9680  0491                     	;# 
  9681  0492                     	;# 
  9682  0492                     	;# 
  9683  0493                     	;# 
  9684  0494                     	;# 
  9685  0495                     	;# 
  9686  0495                     	;# 
  9687  0496                     	;# 
  9688  0497                     	;# 
  9689  0498                     	;# 
  9690  0499                     	;# 
  9691  049A                     	;# 
  9692  049B                     	;# 
  9693  049C                     	;# 
  9694  049D                     	;# 
  9695  050C                     	;# 
  9696  050C                     	;# 
  9697  050D                     	;# 
  9698  050E                     	;# 
  9699  050F                     	;# 
  9700  050F                     	;# 
  9701  0510                     	;# 
  9702  0511                     	;# 
  9703  0512                     	;# 
  9704  0512                     	;# 
  9705  0513                     	;# 
  9706  0514                     	;# 
  9707  0515                     	;# 
  9708  0515                     	;# 
  9709  0516                     	;# 
  9710  0517                     	;# 
  9711  0518                     	;# 
  9712  0519                     	;# 
  9713  051A                     	;# 
  9714  051B                     	;# 
  9715  051C                     	;# 
  9716  051D                     	;# 
  9717  058C                     	;# 
  9718  058C                     	;# 
  9719  058D                     	;# 
  9720  058E                     	;# 
  9721  058F                     	;# 
  9722  058F                     	;# 
  9723  0590                     	;# 
  9724  0591                     	;# 
  9725  0592                     	;# 
  9726  0593                     	;# 
  9727  060C                     	;# 
  9728  060D                     	;# 
  9729  060E                     	;# 
  9730  060F                     	;# 
  9731  0610                     	;# 
  9732  0611                     	;# 
  9733  0612                     	;# 
  9734  0613                     	;# 
  9735  0614                     	;# 
  9736  0616                     	;# 
  9737  0617                     	;# 
  9738  0618                     	;# 
  9739  0619                     	;# 
  9740  061A                     	;# 
  9741  061B                     	;# 
  9742  061C                     	;# 
  9743  061D                     	;# 
  9744  061E                     	;# 
  9745  068C                     	;# 
  9746  068D                     	;# 
  9747  068E                     	;# 
  9748  068F                     	;# 
  9749  0690                     	;# 
  9750  0691                     	;# 
  9751  0692                     	;# 
  9752  0693                     	;# 
  9753  0694                     	;# 
  9754  070C                     	;# 
  9755  070D                     	;# 
  9756  070E                     	;# 
  9757  070F                     	;# 
  9758  0710                     	;# 
  9759  0711                     	;# 
  9760  0712                     	;# 
  9761  0713                     	;# 
  9762  0714                     	;# 
  9763  0716                     	;# 
  9764  0717                     	;# 
  9765  0718                     	;# 
  9766  0719                     	;# 
  9767  071A                     	;# 
  9768  071B                     	;# 
  9769  071C                     	;# 
  9770  071D                     	;# 
  9771  071E                     	;# 
  9772  0796                     	;# 
  9773  0797                     	;# 
  9774  0798                     	;# 
  9775  0799                     	;# 
  9776  079A                     	;# 
  9777  079B                     	;# 
  9778  080C                     	;# 
  9779  080D                     	;# 
  9780  080E                     	;# 
  9781  080F                     	;# 
  9782  0810                     	;# 
  9783  0811                     	;# 
  9784  0812                     	;# 
  9785  0813                     	;# 
  9786  0814                     	;# 
  9787  081A                     	;# 
  9788  081B                     	;# 
  9789  081C                     	;# 
  9790  081D                     	;# 
  9791  081E                     	;# 
  9792  081F                     	;# 
  9793  088C                     	;# 
  9794  088D                     	;# 
  9795  088E                     	;# 
  9796  088F                     	;# 
  9797  0890                     	;# 
  9798  0891                     	;# 
  9799  0892                     	;# 
  9800  0893                     	;# 
  9801  0895                     	;# 
  9802  0896                     	;# 
  9803  0897                     	;# 
  9804  0898                     	;# 
  9805  0899                     	;# 
  9806  089A                     	;# 
  9807  089B                     	;# 
  9808  090C                     	;# 
  9809  090E                     	;# 
  9810  090F                     	;# 
  9811  091F                     	;# 
  9812  091F                     	;# 
  9813  098F                     	;# 
  9814  098F                     	;# 
  9815  0990                     	;# 
  9816  0991                     	;# 
  9817  0992                     	;# 
  9818  0993                     	;# 
  9819  0994                     	;# 
  9820  0995                     	;# 
  9821  0996                     	;# 
  9822  0997                     	;# 
  9823  0E0F                     	;# 
  9824  0E10                     	;# 
  9825  0E11                     	;# 
  9826  0E12                     	;# 
  9827  0E13                     	;# 
  9828  0E14                     	;# 
  9829  0E15                     	;# 
  9830  0E16                     	;# 
  9831  0E17                     	;# 
  9832  0E18                     	;# 
  9833  0E19                     	;# 
  9834  0E1A                     	;# 
  9835  0E1B                     	;# 
  9836  0E1C                     	;# 
  9837  0E1D                     	;# 
  9838  0E1E                     	;# 
  9839  0E1F                     	;# 
  9840  0E20                     	;# 
  9841  0E21                     	;# 
  9842  0E22                     	;# 
  9843  0E23                     	;# 
  9844  0E24                     	;# 
  9845  0E25                     	;# 
  9846  0E26                     	;# 
  9847  0E27                     	;# 
  9848  0E28                     	;# 
  9849  0E29                     	;# 
  9850  0E2A                     	;# 
  9851  0E2B                     	;# 
  9852  0E2C                     	;# 
  9853  0E2D                     	;# 
  9854  0E2E                     	;# 
  9855  0E2F                     	;# 
  9856  0E30                     	;# 
  9857  0E31                     	;# 
  9858  0E32                     	;# 
  9859  0E33                     	;# 
  9860  0E34                     	;# 
  9861  0E35                     	;# 
  9862  0E36                     	;# 
  9863  0E37                     	;# 
  9864  0E8F                     	;# 
  9865  0E90                     	;# 
  9866  0E91                     	;# 
  9867  0E92                     	;# 
  9868  0E93                     	;# 
  9869  0E94                     	;# 
  9870  0E95                     	;# 
  9871  0E96                     	;# 
  9872  0E97                     	;# 
  9873  0E9C                     	;# 
  9874  0E9D                     	;# 
  9875  0E9E                     	;# 
  9876  0EA1                     	;# 
  9877  0EA2                     	;# 
  9878  0EA3                     	;# 
  9879  0EA4                     	;# 
  9880  0EA5                     	;# 
  9881  0EA9                     	;# 
  9882  0EAA                     	;# 
  9883  0EAB                     	;# 
  9884  0EAC                     	;# 
  9885  0EB1                     	;# 
  9886  0EB2                     	;# 
  9887  0EB3                     	;# 
  9888  0EB8                     	;# 
  9889  0EB9                     	;# 
  9890  0EBA                     	;# 
  9891  0EBB                     	;# 
  9892  0EBC                     	;# 
  9893  0EBD                     	;# 
  9894  0EBE                     	;# 
  9895  0EC3                     	;# 
  9896  0EC5                     	;# 
  9897  0EC6                     	;# 
  9898  0EC7                     	;# 
  9899  0EC8                     	;# 
  9900  0EC9                     	;# 
  9901  0ECA                     	;# 
  9902  0ECB                     	;# 
  9903  0ECC                     	;# 
  9904  0F10                     	;# 
  9905  0F11                     	;# 
  9906  0F12                     	;# 
  9907  0F13                     	;# 
  9908  0F14                     	;# 
  9909  0F15                     	;# 
  9910  0F16                     	;# 
  9911  0F17                     	;# 
  9912  0F18                     	;# 
  9913  0F19                     	;# 
  9914  0F1A                     	;# 
  9915  0F1B                     	;# 
  9916  0F1C                     	;# 
  9917  0F1D                     	;# 
  9918  0F1E                     	;# 
  9919  0F1F                     	;# 
  9920  0F20                     	;# 
  9921  0F21                     	;# 
  9922  0F22                     	;# 
  9923  0F23                     	;# 
  9924  0F24                     	;# 
  9925  0F25                     	;# 
  9926  0F26                     	;# 
  9927  0F27                     	;# 
  9928  0F28                     	;# 
  9929  0F29                     	;# 
  9930  0F2A                     	;# 
  9931  0F2B                     	;# 
  9932  0F2C                     	;# 
  9933  0F2D                     	;# 
  9934  0F2E                     	;# 
  9935  0F2F                     	;# 
  9936  0F30                     	;# 
  9937  0F31                     	;# 
  9938  0F32                     	;# 
  9939  0F38                     	;# 
  9940  0F39                     	;# 
  9941  0F3A                     	;# 
  9942  0F3B                     	;# 
  9943  0F3C                     	;# 
  9944  0F3D                     	;# 
  9945  0F3E                     	;# 
  9946  0F3F                     	;# 
  9947  0F40                     	;# 
  9948  0F41                     	;# 
  9949  0F43                     	;# 
  9950  0F44                     	;# 
  9951  0F45                     	;# 
  9952  0F46                     	;# 
  9953  0F47                     	;# 
  9954  0F48                     	;# 
  9955  0F49                     	;# 
  9956  0F4A                     	;# 
  9957  0F4B                     	;# 
  9958  0F4C                     	;# 
  9959  0F4E                     	;# 
  9960  0F4F                     	;# 
  9961  0F50                     	;# 
  9962  0F51                     	;# 
  9963  0F52                     	;# 
  9964  0F53                     	;# 
  9965  0F54                     	;# 
  9966  0F55                     	;# 
  9967  0F56                     	;# 
  9968  0F57                     	;# 
  9969  0F59                     	;# 
  9970  0F5A                     	;# 
  9971  0F5B                     	;# 
  9972  0F5C                     	;# 
  9973  0F5D                     	;# 
  9974  0F61                     	;# 
  9975  0F62                     	;# 
  9976  0F64                     	;# 
  9977  0F65                     	;# 
  9978  0F66                     	;# 
  9979  0F67                     	;# 
  9980  0F68                     	;# 
  9981  0F69                     	;# 
  9982  0F6A                     	;# 
  9983  0F6B                     	;# 
  9984  0F6C                     	;# 
  9985  0F6D                     	;# 
  9986  0FE4                     	;# 
  9987  0FE5                     	;# 
  9988  0FE6                     	;# 
  9989  0FE7                     	;# 
  9990  0FE8                     	;# 
  9991  0FE9                     	;# 
  9992  0FEA                     	;# 
  9993  0FEB                     	;# 
  9994  0FED                     	;# 
  9995  0FEE                     	;# 
  9996  0FEF                     	;# 
  9997                           
  9998                           	psect	nvBANK1
  9999  00DF                     __pnvBANK1:	
 10000  00DF                     _EUSART_ErrorHandler:	
 10001  00DF                     	ds	2
 10002  00E1                     _EUSART_OverrunErrorHandler:	
 10003  00E1                     	ds	2
 10004  00E3                     _EUSART_FramingErrorHandler:	
 10005  00E3                     	ds	2
 10006  00E5                     _EUSART_RxDefaultInterruptHandler:	
 10007  00E5                     	ds	2
 10008  00E7                     _EUSART_TxDefaultInterruptHandler:	
 10009  00E7                     	ds	2
 10010  00E9                     _INT_InterruptHandler:	
 10011  00E9                     	ds	2
 10012  00EB                     _TMR1_InterruptHandler:	
 10013  00EB                     	ds	2
 10014  00ED                     _timer1ReloadVal:	
 10015  00ED                     	ds	2
 10016  00EF                     _eusartTxBufferRemaining:	
 10017  00EF                     	ds	1
 10018  000E                     _PORTCbits	set	14
 10019  000D                     _PORTBbits	set	13
 10020  0013                     _TRISCbits	set	19
 10021  0016                     _LATAbits	set	22
 10022  0014                     _TRISD	set	20
 10023  0013                     _TRISC	set	19
 10024  0012                     _TRISB	set	18
 10025  0011                     _TRISA	set	17
 10026  0015                     _TRISE	set	21
 10027  0018                     _LATC	set	24
 10028  0017                     _LATB	set	23
 10029  0016                     _LATA	set	22
 10030  0019                     _LATD	set	25
 10031  001A                     _LATE	set	26
 10032  000B                     _INTCONbits	set	11
 10033  0094                     _ADCON1bits	set	148
 10034  008E                     _ADPREVL	set	142
 10035  008F                     _ADPREVH	set	143
 10036  0097                     _ADSTATbits	set	151
 10037  0090                     _ADACCL	set	144
 10038  0091                     _ADACCH	set	145
 10039  0095                     _ADCON2bits	set	149
 10040  009C                     _ADPRE	set	156
 10041  0096                     _ADCON3bits	set	150
 10042  008C                     _ADRESL	set	140
 10043  008D                     _ADRESH	set	141
 10044  0093                     _ADCON0bits	set	147
 10045  009D                     _ADACQ	set	157
 10046  0093                     _ADCON0	set	147
 10047  0098                     _ADCLK	set	152
 10048  0099                     _ADACT	set	153
 10049  009A                     _ADREF	set	154
 10050  0097                     _ADSTAT	set	151
 10051  0096                     _ADCON3	set	150
 10052  0095                     _ADCON2	set	149
 10053  0094                     _ADCON1	set	148
 10054  009B                     _ADCAP	set	155
 10055  009E                     _ADPCH	set	158
 10056  0119                     _RC1REG	set	281
 10057  011D                     _RC1STAbits	set	285
 10058  011A                     _TX1REG	set	282
 10059  011E                     _TX1STAbits	set	286
 10060  011C                     _SP1BRGH	set	284
 10061  011B                     _SP1BRGL	set	283
 10062  011E                     _TX1STA	set	286
 10063  011D                     _RC1STA	set	285
 10064  011F                     _BAUD1CON	set	287
 10065  0116                     _ADERRL	set	278
 10066  0117                     _ADERRH	set	279
 10067  0114                     _ADFLTRL	set	276
 10068  0115                     _ADFLTRH	set	277
 10069  010C                     _ADCNT	set	268
 10070  010D                     _ADRPT	set	269
 10071  0113                     _ADSTPTH	set	275
 10072  0112                     _ADSTPTL	set	274
 10073  0111                     _ADUTHH	set	273
 10074  0110                     _ADUTHL	set	272
 10075  010F                     _ADLTHH	set	271
 10076  010E                     _ADLTHL	set	270
 10077  018F                     _SSP1STATbits	set	399
 10078  018E                     _SSP1MSK	set	398
 10079  018C                     _SSP1BUF	set	396
 10080  0191                     _SSP1CON2bits	set	401
 10081  018D                     _SSP1ADD	set	397
 10082  0191                     _SSP1CON2	set	401
 10083  0190                     _SSP1CON1	set	400
 10084  018F                     _SSP1STAT	set	399
 10085  0190                     _SSP1CON1bits	set	400
 10086  021F                     _CCPTMRS1bits	set	543
 10087  020F                     _T1GCONbits	set	527
 10088  020E                     _T1CONbits	set	526
 10089  020E                     _T1CON	set	526
 10090  020C                     _TMR1L	set	524
 10091  020D                     _TMR1H	set	525
 10092  0211                     _T1CLK	set	529
 10093  0210                     _T1GATE	set	528
 10094  020F                     _T1GCON	set	527
 10095  028D                     _PR2	set	653
 10096  028C                     _TMR2	set	652
 10097  028E                     _T2CONbits	set	654
 10098  0291                     _T2RSTbits	set	657
 10099  028F                     _T2HLTbits	set	655
 10100  028E                     _T2CON	set	654
 10101  028C                     _T2TMR	set	652
 10102  028D                     _T2PR	set	653
 10103  0291                     _T2RST	set	657
 10104  028F                     _T2HLT	set	655
 10105  0290                     _T2CLKCON	set	656
 10106  038C                     _PWM6DCL	set	908
 10107  038D                     _PWM6DCH	set	909
 10108  038E                     _PWM6CON	set	910
 10109  070F                     _PIR3bits	set	1807
 10110  0719                     _PIE3bits	set	1817
 10111  0716                     _PIE0bits	set	1814
 10112  070C                     _PIR0bits	set	1804
 10113  071A                     _PIE4bits	set	1818
 10114  0710                     _PIR4bits	set	1808
 10115  079B                     _PMD5	set	1947
 10116  079A                     _PMD4	set	1946
 10117  0799                     _PMD3	set	1945
 10118  0798                     _PMD2	set	1944
 10119  0797                     _PMD1	set	1943
 10120  0796                     _PMD0	set	1942
 10121  081F                     _NVMCON2	set	2079
 10122  081C                     _NVMDATL	set	2076
 10123  081D                     _NVMDATH	set	2077
 10124  081E                     _NVMCON1bits	set	2078
 10125  081B                     _NVMADRH	set	2075
 10126  081A                     _NVMADRL	set	2074
 10127  0892                     _OSCTUNE	set	2194
 10128  0893                     _OSCFRQ	set	2195
 10129  0891                     _OSCEN	set	2193
 10130  088F                     _OSCCON3	set	2191
 10131  088D                     _OSCCON1	set	2189
 10132  0E8F                     _PPSLOCKbits	set	3727
 10133  0E8F                     _PPSLOCK	set	3727
 10134  0EC6                     _SSP1DATPPS	set	3782
 10135  0EC5                     _SSP1CLKPPS	set	3781
 10136  0ECB                     _RXPPS	set	3787
 10137  0E90                     _INTPPS	set	3728
 10138  0F16                     _RA6PPS	set	3862
 10139  0F26                     _RC6PPS	set	3878
 10140  0F24                     _RC4PPS	set	3876
 10141  0F23                     _RC3PPS	set	3875
 10142  0F68                     _INLVLE	set	3944
 10143  0F5D                     _INLVLD	set	3933
 10144  0F52                     _INLVLC	set	3922
 10145  0F47                     _INLVLB	set	3911
 10146  0F3C                     _INLVLA	set	3900
 10147  0F67                     _SLRCONE	set	3943
 10148  0F5C                     _SLRCOND	set	3932
 10149  0F51                     _SLRCONC	set	3921
 10150  0F46                     _SLRCONB	set	3910
 10151  0F3B                     _SLRCONA	set	3899
 10152  0F5B                     _ODCOND	set	3931
 10153  0F50                     _ODCONC	set	3920
 10154  0F45                     _ODCONB	set	3909
 10155  0F3A                     _ODCONA	set	3898
 10156  0F66                     _ODCONE	set	3942
 10157  0F4F                     _WPUC	set	3919
 10158  0F39                     _WPUA	set	3897
 10159  0F44                     _WPUB	set	3908
 10160  0F65                     _WPUE	set	3941
 10161  0F5A                     _WPUD	set	3930
 10162  0F38                     _ANSELA	set	3896
 10163  0F64                     _ANSELE	set	3940
 10164  0F43                     _ANSELB	set	3907
 10165  0F4E                     _ANSELC	set	3918
 10166  0F59                     _ANSELD	set	3929
 10167  7A7C                     _WPUC4	set	31356
 10168  7A7B                     _WPUC3	set	31355
 10169                           
 10170                           ; #config settings
 10171  0000                     
 10172                           	psect	cinit
 10173  0057                     start_initialization:	
 10174  0057                     __initialization:	
 10175                           
 10176                           ; Clear objects allocated to COMMON
 10177  0057  01FA               	clrf	__pbssCOMMON& (0+127)
 10178  0058  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
 10179                           
 10180                           ; Clear objects allocated to BANK0
 10181  0059  3068               	movlw	low __pbssBANK0
 10182  005A  0084               	movwf	4
 10183  005B  3000               	movlw	high __pbssBANK0
 10184  005C  0085               	movwf	5
 10185  005D  3008               	movlw	8
 10186  005E  3193  232E  3180   	fcall	clear_ram0
 10187                           
 10188                           ; Clear objects allocated to BANK1
 10189  0061  30A0               	movlw	low __pbssBANK1
 10190  0062  0084               	movwf	4
 10191  0063  3000               	movlw	high __pbssBANK1
 10192  0064  0085               	movwf	5
 10193  0065  303F               	movlw	63
 10194  0066  3193  232E  3180   	fcall	clear_ram0
 10195                           
 10196                           ; Clear objects allocated to BANK2
 10197  0069  3020               	movlw	low __pbssBANK2
 10198  006A  0084               	movwf	4
 10199  006B  3001               	movlw	high __pbssBANK2
 10200  006C  0085               	movwf	5
 10201  006D  3016               	movlw	22
 10202  006E  3193  232E  3180   	fcall	clear_ram0
 10203  0071                     end_of_initialization:	
 10204                           ;End of C runtime variable initialization code
 10205                           
 10206  0071                     __end_of__initialization:	
 10207  0071  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10208  0072  0020               	movlb	0
 10209  0073  3180  2875         	ljmp	_main	;jump to C main() function
 10210                           
 10211                           	psect	bssCOMMON
 10212  007A                     __pbssCOMMON:	
 10213  007A                     _iread:	
 10214  007A                     	ds	1
 10215  007B                     _eusartRxHead:	
 10216  007B                     	ds	1
 10217                           
 10218                           	psect	bssBANK0
 10219  0068                     __pbssBANK0:	
 10220  0068                     _clks:	
 10221  0068                     	ds	1
 10222  0069                     _clkm:	
 10223  0069                     	ds	1
 10224  006A                     _clkh:	
 10225  006A                     	ds	1
 10226  006B                     _alaf:	
 10227  006B                     	ds	1
 10228  006C                     _alat:	
 10229  006C                     	ds	1
 10230  006D                     _pmon:	
 10231  006D                     	ds	1
 10232  006E                     _mode:	
 10233  006E                     	ds	1
 10234  006F                     _eusartRxTail:	
 10235  006F                     	ds	1
 10236                           
 10237                           	psect	bssBANK1
 10238  00A0                     __pbssBANK1:	
 10239  00A0                     _eusartRxStatusBuffer:	
 10240  00A0                     	ds	8
 10241  00A8                     _eusartRxBuffer:	
 10242  00A8                     	ds	8
 10243  00B0                     _eusartTxBuffer:	
 10244  00B0                     	ds	8
 10245  00B8                     read_param@F13181:	
 10246  00B8                     	ds	4
 10247  00BC                     read_temp_lum@F13178:	
 10248  00BC                     	ds	4
 10249  00C0                     send_confirmation@F13232:	
 10250  00C0                     	ds	3
 10251  00C3                     _initial_time:	
 10252  00C3                     	ds	2
 10253  00C5                     _i2c1_driver_i2cISR:	
 10254  00C5                     	ds	2
 10255  00C7                     _i2c1_driver_busCollisionISR:	
 10256  00C7                     	ds	2
 10257  00C9                     _btn2State:	
 10258  00C9                     	ds	1
 10259  00CA                     _btn1State:	
 10260  00CA                     	ds	1
 10261  00CB                     _nreg:	
 10262  00CB                     	ds	1
 10263  00CC                     _s1flag:	
 10264  00CC                     	ds	1
 10265  00CD                     _s2flag:	
 10266  00CD                     	ds	1
 10267  00CE                     _num_msgs:	
 10268  00CE                     	ds	1
 10269  00CF                     _msgs:	
 10270  00CF                     	ds	1
 10271  00D0                     _alarm:	
 10272  00D0                     	ds	1
 10273  00D1                     _illum:	
 10274  00D1                     	ds	1
 10275  00D2                     _temp:	
 10276  00D2                     	ds	1
 10277  00D3                     _seconds:	
 10278  00D3                     	ds	1
 10279  00D4                     _minutes:	
 10280  00D4                     	ds	1
 10281  00D5                     _hours:	
 10282  00D5                     	ds	1
 10283  00D6                     _alal:	
 10284  00D6                     	ds	1
 10285  00D7                     _tala:	
 10286  00D7                     	ds	1
 10287  00D8                     _flag_timer:	
 10288  00D8                     	ds	1
 10289  00D9                     _switch1:	
 10290  00D9                     	ds	1
 10291  00DA                     _timer:	
 10292  00DA                     	ds	1
 10293  00DB                     _eusartRxLastError:	
 10294  00DB                     	ds	1
 10295  00DC                     _eusartRxCount:	
 10296  00DC                     	ds	1
 10297  00DD                     _eusartTxTail:	
 10298  00DD                     	ds	1
 10299  00DE                     _eusartTxHead:	
 10300  00DE                     	ds	1
 10301                           
 10302                           	psect	bssBANK2
 10303  0120                     __pbssBANK2:	
 10304  0120                     notification_memory@F13227:	
 10305  0120                     	ds	6
 10306  0126                     registers_info@F13199:	
 10307  0126                     	ds	6
 10308  012C                     read_alarms@F13188:	
 10309  012C                     	ds	5
 10310  0131                     read_clock@F13170:	
 10311  0131                     	ds	5
 10312                           
 10313                           	psect	clrtext
 10314  132E                     clear_ram0:	
 10315                           ;	Called with FSR0 containing the base address, and
 10316                           ;	WREG with the size to clear
 10317                           
 10318  132E  0064               	clrwdt	;clear the watchdog before getting into this loop
 10319  132F                     clrloop0:	
 10320  132F  0180               	clrf	0	;clear RAM location pointed to by FSR
 10321  1330  3101               	addfsr 0,1
 10322  1331  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 10323  1332  2B2F               	goto	clrloop0	;have we reached the end yet?
 10324  1333  3400               	retlw	0	;all done for this memory range, return
 10325                           
 10326                           	psect	cstackBANK2
 10327  0136                     __pcstackBANK2:	
 10328  0136                     main@i:	
 10329                           
 10330                           ; 2 bytes @ 0x0
 10331  0136                     	ds	2
 10332                           
 10333                           	psect	cstackCOMMON
 10334  0070                     __pcstackCOMMON:	
 10335  0070                     ?_i2c1_driver_open:	
 10336  0070                     ?_TMR1_DefaultInterruptHandler:	
 10337                           ; 1 bit 
 10338                           
 10339  0070                     ??_TMR1_DefaultInterruptHandler:	
 10340                           ; 1 bytes @ 0x0
 10341                           
 10342  0070                     ?_INT_CallBack:	
 10343                           ; 1 bytes @ 0x0
 10344                           
 10345  0070                     ?_PMD_Initialize:	
 10346                           ; 1 bytes @ 0x0
 10347                           
 10348  0070                     ?_PIN_MANAGER_Initialize:	
 10349                           ; 1 bytes @ 0x0
 10350                           
 10351  0070                     ?_OSCILLATOR_Initialize:	
 10352                           ; 1 bytes @ 0x0
 10353                           
 10354  0070                     ?_PWM6_Initialize:	
 10355                           ; 1 bytes @ 0x0
 10356                           
 10357  0070                     ?_ADCC_Initialize:	
 10358                           ; 1 bytes @ 0x0
 10359                           
 10360  0070                     ?_TMR2_Initialize:	
 10361                           ; 1 bytes @ 0x0
 10362                           
 10363  0070                     ?_EUSART_Initialize:	
 10364                           ; 1 bytes @ 0x0
 10365                           
 10366  0070                     ?_EUSART_Receive_ISR:	
 10367                           ; 1 bytes @ 0x0
 10368                           
 10369  0070                     ?_EUSART_Transmit_ISR:	
 10370                           ; 1 bytes @ 0x0
 10371                           
 10372  0070                     ??_EUSART_Transmit_ISR:	
 10373                           ; 1 bytes @ 0x0
 10374                           
 10375  0070                     ?_EUSART_DefaultFramingErrorHandler:	
 10376                           ; 1 bytes @ 0x0
 10377                           
 10378  0070                     ??_EUSART_DefaultFramingErrorHandler:	
 10379                           ; 1 bytes @ 0x0
 10380                           
 10381  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
 10382                           ; 1 bytes @ 0x0
 10383                           
 10384  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
 10385                           ; 1 bytes @ 0x0
 10386                           
 10387  0070                     ?_EUSART_DefaultErrorHandler:	
 10388                           ; 1 bytes @ 0x0
 10389                           
 10390  0070                     ?_EUSART_RxDataHandler:	
 10391                           ; 1 bytes @ 0x0
 10392                           
 10393  0070                     ??_EUSART_RxDataHandler:	
 10394                           ; 1 bytes @ 0x0
 10395                           
 10396  0070                     ?_PWM_Output_D4_Disable:	
 10397                           ; 1 bytes @ 0x0
 10398                           
 10399  0070                     ?_PWM_Output_D4_Enable:	
 10400                           ; 1 bytes @ 0x0
 10401                           
 10402  0070                     ?_load_eeprom:	
 10403                           ; 1 bytes @ 0x0
 10404                           
 10405  0070                     ?_countMsg:	
 10406                           ; 1 bytes @ 0x0
 10407                           
 10408  0070                     ?_read_nreg:	
 10409                           ; 1 bytes @ 0x0
 10410                           
 10411  0070                     ?_update_clk:	
 10412                           ; 1 bytes @ 0x0
 10413                           
 10414  0070                     ?_ReadIllum:	
 10415                           ; 1 bytes @ 0x0
 10416                           
 10417  0070                     ?_ReadTemp:	
 10418                           ; 1 bytes @ 0x0
 10419                           
 10420  0070                     ?_notification_memory:	
 10421                           ; 1 bytes @ 0x0
 10422                           
 10423  0070                     ?_read_msgs:	
 10424                           ; 1 bytes @ 0x0
 10425                           
 10426  0070                     ?_Menus:	
 10427                           ; 1 bytes @ 0x0
 10428                           
 10429  0070                     ?_submenu_clock:	
 10430                           ; 1 bytes @ 0x0
 10431                           
 10432  0070                     ?_submenu_alarm:	
 10433                           ; 1 bytes @ 0x0
 10434                           
 10435  0070                     ?_submenu_temp:	
 10436                           ; 1 bytes @ 0x0
 10437                           
 10438  0070                     ?_submenu_illum:	
 10439                           ; 1 bytes @ 0x0
 10440                           
 10441  0070                     ?_ShowOnLEDs:	
 10442                           ; 1 bytes @ 0x0
 10443                           
 10444  0070                     ?_checkButtonS1:	
 10445                           ; 1 bytes @ 0x0
 10446                           
 10447  0070                     ?_checkButtonS2:	
 10448                           ; 1 bytes @ 0x0
 10449                           
 10450  0070                     ?_write_alaf:	
 10451                           ; 1 bytes @ 0x0
 10452                           
 10453  0070                     ?_write_alat:	
 10454                           ; 1 bytes @ 0x0
 10455                           
 10456  0070                     ?_write_alal:	
 10457                           ; 1 bytes @ 0x0
 10458                           
 10459  0070                     ?_Blink:	
 10460                           ; 1 bytes @ 0x0
 10461                           
 10462  0070                     ??_Blink:	
 10463                           ; 1 bytes @ 0x0
 10464                           
 10465  0070                     ?_used:	
 10466                           ; 1 bytes @ 0x0
 10467                           
 10468  0070                     ?_check_corruption:	
 10469                           ; 1 bytes @ 0x0
 10470                           
 10471  0070                     ?_read_pmon:	
 10472                           ; 1 bytes @ 0x0
 10473                           
 10474  0070                     ?_read_tala:	
 10475                           ; 1 bytes @ 0x0
 10476                           
 10477  0070                     ?_read_alat:	
 10478                           ; 1 bytes @ 0x0
 10479                           
 10480  0070                     ?_read_alal:	
 10481                           ; 1 bytes @ 0x0
 10482                           
 10483  0070                     ?_read_alaf:	
 10484                           ; 1 bytes @ 0x0
 10485                           
 10486  0070                     ?_read_clkh:	
 10487                           ; 1 bytes @ 0x0
 10488                           
 10489  0070                     ?_read_clkm:	
 10490                           ; 1 bytes @ 0x0
 10491                           
 10492  0070                     ?_default_setup:	
 10493                           ; 1 bytes @ 0x0
 10494                           
 10495  0070                     ?_not_transferred:	
 10496                           ; 1 bytes @ 0x0
 10497                           
 10498  0070                     ?_interpret_message:	
 10499                           ; 1 bytes @ 0x0
 10500                           
 10501  0070                     ?_read_clock:	
 10502                           ; 1 bytes @ 0x0
 10503                           
 10504  0070                     ?_set_clock:	
 10505                           ; 1 bytes @ 0x0
 10506                           
 10507  0070                     ?_read_temp_lum:	
 10508                           ; 1 bytes @ 0x0
 10509                           
 10510  0070                     ?_read_param:	
 10511                           ; 1 bytes @ 0x0
 10512                           
 10513  0070                     ?_modify_pmon:	
 10514                           ; 1 bytes @ 0x0
 10515                           
 10516  0070                     ?_modify_time_alarm:	
 10517                           ; 1 bytes @ 0x0
 10518                           
 10519  0070                     ?_read_alarms:	
 10520                           ; 1 bytes @ 0x0
 10521                           
 10522  0070                     ?_define_alarm:	
 10523                           ; 1 bytes @ 0x0
 10524                           
 10525  0070                     ?_switch_alarm:	
 10526                           ; 1 bytes @ 0x0
 10527                           
 10528  0070                     ?_registers_info:	
 10529                           ; 1 bytes @ 0x0
 10530                           
 10531  0070                     ?_transfer_n_registers:	
 10532                           ; 1 bytes @ 0x0
 10533                           
 10534  0070                     ?_transfer_registers_i:	
 10535                           ; 1 bytes @ 0x0
 10536                           
 10537  0070                     ?_send_msg:	
 10538                           ; 1 bytes @ 0x0
 10539                           
 10540  0070                     ?_send_register:	
 10541                           ; 1 bytes @ 0x0
 10542                           
 10543  0070                     ?_TMR1_Initialize:	
 10544                           ; 1 bytes @ 0x0
 10545                           
 10546  0070                     ?_TMR1_StartTimer:	
 10547                           ; 1 bytes @ 0x0
 10548                           
 10549  0070                     ?_TMR1_StopTimer:	
 10550                           ; 1 bytes @ 0x0
 10551                           
 10552  0070                     ?_TMR1_WriteTimer:	
 10553                           ; 1 bytes @ 0x0
 10554                           
 10555  0070                     ?_TMR1_ISR:	
 10556                           ; 1 bytes @ 0x0
 10557                           
 10558  0070                     ?_INT_ISR:	
 10559                           ; 1 bytes @ 0x0
 10560                           
 10561  0070                     ?_INT_DefaultInterruptHandler:	
 10562                           ; 1 bytes @ 0x0
 10563                           
 10564  0070                     ??_INT_DefaultInterruptHandler:	
 10565                           ; 1 bytes @ 0x0
 10566                           
 10567  0070                     ?_EXT_INT_Initialize:	
 10568                           ; 1 bytes @ 0x0
 10569                           
 10570  0070                     ?_INTERRUPT_InterruptManager:	
 10571                           ; 1 bytes @ 0x0
 10572                           
 10573  0070                     ?_SYSTEM_Initialize:	
 10574                           ; 1 bytes @ 0x0
 10575                           
 10576  0070                     ?_EUSART_is_rx_ready:	
 10577                           ; 1 bytes @ 0x0
 10578                           
 10579  0070                     ?_EUSART_Read:	
 10580                           ; 1 bytes @ 0x0
 10581                           
 10582  0070                     ?_EUSART_Write:	
 10583                           ; 1 bytes @ 0x0
 10584                           
 10585  0070                     ?_putch:	
 10586                           ; 1 bytes @ 0x0
 10587                           
 10588  0070                     ?_EUSART_LastByte:	
 10589                           ; 1 bytes @ 0x0
 10590                           
 10591  0070                     ??_EUSART_LastByte:	
 10592                           ; 1 bytes @ 0x0
 10593                           
 10594  0070                     ?_sys_init:	
 10595                           ; 1 bytes @ 0x0
 10596                           
 10597  0070                     ?_Timer:	
 10598                           ; 1 bytes @ 0x0
 10599                           
 10600  0070                     ??_Timer:	
 10601                           ; 1 bytes @ 0x0
 10602                           
 10603  0070                     ?_clear_alarm:	
 10604                           ; 1 bytes @ 0x0
 10605                           
 10606  0070                     ?_Switch1:	
 10607                           ; 1 bytes @ 0x0
 10608                           
 10609  0070                     ??_Switch1:	
 10610                           ; 1 bytes @ 0x0
 10611                           
 10612  0070                     ?_main:	
 10613                           ; 1 bytes @ 0x0
 10614                           
 10615  0070                     ?_ReadI2C:	
 10616                           ; 1 bytes @ 0x0
 10617                           
 10618  0070                     ?_WriteI2C:	
 10619                           ; 1 bytes @ 0x0
 10620                           
 10621  0070                     ?_Menu:	
 10622                           ; 1 bytes @ 0x0
 10623                           
 10624  0070                     ?_get_check_up_value:	
 10625                           ; 1 bytes @ 0x0
 10626                           
 10627  0070                     ?_ring_buffer_laped:	
 10628                           ; 1 bytes @ 0x0
 10629                           
 10630  0070                     ?_read_iwrt:	
 10631                           ; 1 bytes @ 0x0
 10632                           
 10633  0070                     ?_write_pmon:	
 10634                           ; 1 bytes @ 0x0
 10635                           
 10636  0070                     ?_write_tala:	
 10637                           ; 1 bytes @ 0x0
 10638                           
 10639  0070                     ?i1_clear_alarm:	
 10640                           ; 1 bytes @ 0x0
 10641                           
 10642  0070                     ??i1_clear_alarm:	
 10643                           ; 1 bytes @ 0x0
 10644                           
 10645  0070                     ?i1_PWM_Output_D4_Disable:	
 10646                           ; 1 bytes @ 0x0
 10647                           
 10648  0070                     ??i1_PWM_Output_D4_Disable:	
 10649                           ; 1 bytes @ 0x0
 10650                           
 10651  0070                     TMR1_WriteTimer@timerVal:	
 10652                           ; 1 bytes @ 0x0
 10653                           
 10654                           
 10655                           ; 2 bytes @ 0x0
 10656  0070                     	ds	1
 10657  0071                     ??_INT_CallBack:	
 10658  0071                     ??_EUSART_Receive_ISR:	
 10659                           ; 1 bytes @ 0x1
 10660                           
 10661  0071                     ??_EUSART_DefaultErrorHandler:	
 10662                           ; 1 bytes @ 0x1
 10663                           
 10664  0071                     ??_countMsg:	
 10665                           ; 1 bytes @ 0x1
 10666                           
 10667  0071                     ??_INT_ISR:	
 10668                           ; 1 bytes @ 0x1
 10669                           
 10670                           
 10671                           ; 1 bytes @ 0x1
 10672  0071                     	ds	1
 10673  0072                     ?_TMR1_SetInterruptHandler:	
 10674  0072                     ??_PMD_Initialize:	
 10675                           ; 1 bytes @ 0x2
 10676                           
 10677  0072                     ??_PIN_MANAGER_Initialize:	
 10678                           ; 1 bytes @ 0x2
 10679                           
 10680  0072                     ??_OSCILLATOR_Initialize:	
 10681                           ; 1 bytes @ 0x2
 10682                           
 10683  0072                     ??_PWM6_Initialize:	
 10684                           ; 1 bytes @ 0x2
 10685                           
 10686  0072                     ??_ADCC_Initialize:	
 10687                           ; 1 bytes @ 0x2
 10688                           
 10689  0072                     ??_TMR2_Initialize:	
 10690                           ; 1 bytes @ 0x2
 10691                           
 10692  0072                     ?_EUSART_SetRxInterruptHandler:	
 10693                           ; 1 bytes @ 0x2
 10694                           
 10695  0072                     ?_EUSART_SetTxInterruptHandler:	
 10696                           ; 1 bytes @ 0x2
 10697                           
 10698  0072                     ?_EUSART_SetFramingErrorHandler:	
 10699                           ; 1 bytes @ 0x2
 10700                           
 10701  0072                     ?_EUSART_SetOverrunErrorHandler:	
 10702                           ; 1 bytes @ 0x2
 10703                           
 10704  0072                     ?_EUSART_SetErrorHandler:	
 10705                           ; 1 bytes @ 0x2
 10706                           
 10707  0072                     ??_PWM_Output_D4_Disable:	
 10708                           ; 1 bytes @ 0x2
 10709                           
 10710  0072                     ??_PWM_Output_D4_Enable:	
 10711                           ; 1 bytes @ 0x2
 10712                           
 10713  0072                     ??_ShowOnLEDs:	
 10714                           ; 1 bytes @ 0x2
 10715                           
 10716  0072                     ??_checkButtonS1:	
 10717                           ; 1 bytes @ 0x2
 10718                           
 10719  0072                     ??_checkButtonS2:	
 10720                           ; 1 bytes @ 0x2
 10721                           
 10722  0072                     ??_TMR1_StartTimer:	
 10723                           ; 1 bytes @ 0x2
 10724                           
 10725  0072                     ??_TMR1_StopTimer:	
 10726                           ; 1 bytes @ 0x2
 10727                           
 10728  0072                     ??_TMR1_WriteTimer:	
 10729                           ; 1 bytes @ 0x2
 10730                           
 10731  0072                     ??_TMR1_ISR:	
 10732                           ; 1 bytes @ 0x2
 10733                           
 10734  0072                     ?_INT_SetInterruptHandler:	
 10735                           ; 1 bytes @ 0x2
 10736                           
 10737  0072                     ??_INTERRUPT_InterruptManager:	
 10738                           ; 1 bytes @ 0x2
 10739                           
 10740  0072                     ??_i2c1_driver_open:	
 10741                           ; 1 bytes @ 0x2
 10742                           
 10743  0072                     ?_DATAEE_ReadByte:	
 10744                           ; 1 bytes @ 0x2
 10745                           
 10746  0072                     ?_PWM6_LoadDutyValue:	
 10747                           ; 1 bytes @ 0x2
 10748                           
 10749  0072                     ??_EUSART_is_rx_ready:	
 10750                           ; 1 bytes @ 0x2
 10751                           
 10752  0072                     ??_EUSART_Read:	
 10753                           ; 1 bytes @ 0x2
 10754                           
 10755  0072                     ??_EUSART_Write:	
 10756                           ; 1 bytes @ 0x2
 10757                           
 10758  0072                     ??_sys_init:	
 10759                           ; 1 bytes @ 0x2
 10760                           
 10761  0072                     ??_clear_alarm:	
 10762                           ; 1 bytes @ 0x2
 10763                           
 10764  0072                     ??_ReadI2C:	
 10765                           ; 1 bytes @ 0x2
 10766                           
 10767  0072                     ??_WriteI2C:	
 10768                           ; 1 bytes @ 0x2
 10769                           
 10770  0072                     ?___bmul:	
 10771                           ; 1 bytes @ 0x2
 10772                           
 10773  0072                     ?_strlen:	
 10774                           ; 1 bytes @ 0x2
 10775                           
 10776  0072                     ?_ADCC_GetSingleConversion:	
 10777                           ; 2 bytes @ 0x2
 10778                           
 10779  0072                     ?___awmod:	
 10780                           ; 2 bytes @ 0x2
 10781                           
 10782  0072                     ?___lwdiv:	
 10783                           ; 2 bytes @ 0x2
 10784                           
 10785  0072                     ___bmul@multiplicand:	
 10786                           ; 2 bytes @ 0x2
 10787                           
 10788  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
 10789                           ; 1 bytes @ 0x2
 10790                           
 10791  0072                     INT_SetInterruptHandler@InterruptHandler:	
 10792                           ; 2 bytes @ 0x2
 10793                           
 10794  0072                     DATAEE_ReadByte@bAdd:	
 10795                           ; 2 bytes @ 0x2
 10796                           
 10797  0072                     PWM6_LoadDutyValue@dutyValue:	
 10798                           ; 2 bytes @ 0x2
 10799                           
 10800  0072                     EUSART_SetFramingErrorHandler@interruptHandler:	
 10801                           ; 2 bytes @ 0x2
 10802                           
 10803  0072                     EUSART_SetOverrunErrorHandler@interruptHandler:	
 10804                           ; 2 bytes @ 0x2
 10805                           
 10806  0072                     EUSART_SetErrorHandler@interruptHandler:	
 10807                           ; 2 bytes @ 0x2
 10808                           
 10809  0072                     EUSART_SetTxInterruptHandler@interruptHandler:	
 10810                           ; 2 bytes @ 0x2
 10811                           
 10812  0072                     EUSART_SetRxInterruptHandler@interruptHandler:	
 10813                           ; 2 bytes @ 0x2
 10814                           
 10815  0072                     ___awmod@divisor:	
 10816                           ; 2 bytes @ 0x2
 10817                           
 10818  0072                     ___lwdiv@divisor:	
 10819                           ; 2 bytes @ 0x2
 10820                           
 10821                           
 10822                           ; 2 bytes @ 0x2
 10823  0072                     	ds	1
 10824  0073                     ??___bmul:	
 10825  0073                     EUSART_Read@readValue:	
 10826                           ; 1 bytes @ 0x3
 10827                           
 10828  0073                     EUSART_Write@txData:	
 10829                           ; 1 bytes @ 0x3
 10830                           
 10831  0073                     WriteI2C@data_out:	
 10832                           ; 1 bytes @ 0x3
 10833                           
 10834  0073                     ShowOnLEDs@num:	
 10835                           ; 1 bytes @ 0x3
 10836                           
 10837                           
 10838                           ; 1 bytes @ 0x3
 10839  0073                     	ds	1
 10840  0074                     ??_TMR1_SetInterruptHandler:	
 10841  0074                     ??_EUSART_Initialize:	
 10842                           ; 1 bytes @ 0x4
 10843                           
 10844  0074                     ??_EUSART_SetRxInterruptHandler:	
 10845                           ; 1 bytes @ 0x4
 10846                           
 10847  0074                     ??_EUSART_SetTxInterruptHandler:	
 10848                           ; 1 bytes @ 0x4
 10849                           
 10850  0074                     ??_EUSART_SetFramingErrorHandler:	
 10851                           ; 1 bytes @ 0x4
 10852                           
 10853  0074                     ??_EUSART_SetOverrunErrorHandler:	
 10854                           ; 1 bytes @ 0x4
 10855                           
 10856  0074                     ??_EUSART_SetErrorHandler:	
 10857                           ; 1 bytes @ 0x4
 10858                           
 10859  0074                     ??_read_nreg:	
 10860                           ; 1 bytes @ 0x4
 10861                           
 10862  0074                     ??_ReadTemp:	
 10863                           ; 1 bytes @ 0x4
 10864                           
 10865  0074                     ??_used:	
 10866                           ; 1 bytes @ 0x4
 10867                           
 10868  0074                     ??_read_pmon:	
 10869                           ; 1 bytes @ 0x4
 10870                           
 10871  0074                     ??_read_tala:	
 10872                           ; 1 bytes @ 0x4
 10873                           
 10874  0074                     ??_read_alat:	
 10875                           ; 1 bytes @ 0x4
 10876                           
 10877  0074                     ??_read_alal:	
 10878                           ; 1 bytes @ 0x4
 10879                           
 10880  0074                     ??_read_alaf:	
 10881                           ; 1 bytes @ 0x4
 10882                           
 10883  0074                     ??_read_clkh:	
 10884                           ; 1 bytes @ 0x4
 10885                           
 10886  0074                     ??_read_clkm:	
 10887                           ; 1 bytes @ 0x4
 10888                           
 10889  0074                     ??_not_transferred:	
 10890                           ; 1 bytes @ 0x4
 10891                           
 10892  0074                     ??_strlen:	
 10893                           ; 1 bytes @ 0x4
 10894                           
 10895  0074                     ??_TMR1_Initialize:	
 10896                           ; 1 bytes @ 0x4
 10897                           
 10898  0074                     ??_INT_SetInterruptHandler:	
 10899                           ; 1 bytes @ 0x4
 10900                           
 10901  0074                     ??_EXT_INT_Initialize:	
 10902                           ; 1 bytes @ 0x4
 10903                           
 10904  0074                     ??_DATAEE_ReadByte:	
 10905                           ; 1 bytes @ 0x4
 10906                           
 10907  0074                     ??_PWM6_LoadDutyValue:	
 10908                           ; 1 bytes @ 0x4
 10909                           
 10910  0074                     ??_putch:	
 10911                           ; 1 bytes @ 0x4
 10912                           
 10913  0074                     ?_Update:	
 10914                           ; 1 bytes @ 0x4
 10915                           
 10916  0074                     ??_ring_buffer_laped:	
 10917                           ; 1 bytes @ 0x4
 10918                           
 10919  0074                     ??_read_iwrt:	
 10920                           ; 1 bytes @ 0x4
 10921                           
 10922  0074                     ?___wmul:	
 10923                           ; 1 bytes @ 0x4
 10924                           
 10925  0074                     ?___awdiv:	
 10926                           ; 2 bytes @ 0x4
 10927                           
 10928  0074                     putch@txData:	
 10929                           ; 2 bytes @ 0x4
 10930                           
 10931  0074                     Update@thr:	
 10932                           ; 1 bytes @ 0x4
 10933                           
 10934  0074                     get_check_up_value@check:	
 10935                           ; 1 bytes @ 0x4
 10936                           
 10937  0074                     ___bmul@product:	
 10938                           ; 1 bytes @ 0x4
 10939                           
 10940  0074                     ___wmul@multiplier:	
 10941                           ; 1 bytes @ 0x4
 10942                           
 10943  0074                     ___awdiv@divisor:	
 10944                           ; 2 bytes @ 0x4
 10945                           
 10946  0074                     ___awmod@dividend:	
 10947                           ; 2 bytes @ 0x4
 10948                           
 10949  0074                     ___lwdiv@dividend:	
 10950                           ; 2 bytes @ 0x4
 10951                           
 10952                           
 10953                           ; 2 bytes @ 0x4
 10954  0074                     	ds	1
 10955  0075                     ??_check_corruption:	
 10956  0075                     ??_SYSTEM_Initialize:	
 10957                           ; 1 bytes @ 0x5
 10958                           
 10959  0075                     ??_ADCC_GetSingleConversion:	
 10960                           ; 1 bytes @ 0x5
 10961                           
 10962  0075                     ??_Update:	
 10963                           ; 1 bytes @ 0x5
 10964                           
 10965  0075                     ADCC_GetSingleConversion@channel:	
 10966                           ; 1 bytes @ 0x5
 10967                           
 10968  0075                     ReadTemp@value:	
 10969                           ; 1 bytes @ 0x5
 10970                           
 10971  0075                     _used$2624:	
 10972                           ; 1 bytes @ 0x5
 10973                           
 10974  0075                     ___bmul@multiplier:	
 10975                           ; 1 bytes @ 0x5
 10976                           
 10977  0075                     strlen@a:	
 10978                           ; 1 bytes @ 0x5
 10979                           
 10980                           
 10981                           ; 1 bytes @ 0x5
 10982  0075                     	ds	1
 10983  0076                     ??_ReadIllum:	
 10984  0076                     ??___awmod:	
 10985                           ; 1 bytes @ 0x6
 10986                           
 10987  0076                     ??___lwdiv:	
 10988                           ; 1 bytes @ 0x6
 10989                           
 10990  0076                     Update@var:	
 10991                           ; 1 bytes @ 0x6
 10992                           
 10993  0076                     check_corruption@check:	
 10994                           ; 1 bytes @ 0x6
 10995                           
 10996  0076                     used@val:	
 10997                           ; 1 bytes @ 0x6
 10998                           
 10999  0076                     strlen@s:	
 11000                           ; 1 bytes @ 0x6
 11001                           
 11002  0076                     _not_transferred$2652:	
 11003                           ; 1 bytes @ 0x6
 11004                           
 11005  0076                     ___wmul@multiplicand:	
 11006                           ; 2 bytes @ 0x6
 11007                           
 11008  0076                     ___awdiv@dividend:	
 11009                           ; 2 bytes @ 0x6
 11010                           
 11011                           
 11012                           ; 2 bytes @ 0x6
 11013  0076                     	ds	1
 11014  0077                     ??_send_msg:	
 11015  0077                     ___awmod@counter:	
 11016                           ; 1 bytes @ 0x7
 11017                           
 11018  0077                     ___lwdiv@counter:	
 11019                           ; 1 bytes @ 0x7
 11020                           
 11021                           
 11022                           ; 1 bytes @ 0x7
 11023  0077                     	ds	1
 11024  0078                     ??_notification_memory:	
 11025  0078                     ??_read_clock:	
 11026                           ; 1 bytes @ 0x8
 11027                           
 11028  0078                     ??_read_temp_lum:	
 11029                           ; 1 bytes @ 0x8
 11030                           
 11031  0078                     ??_read_param:	
 11032                           ; 1 bytes @ 0x8
 11033                           
 11034  0078                     ??_read_alarms:	
 11035                           ; 1 bytes @ 0x8
 11036                           
 11037  0078                     ??_registers_info:	
 11038                           ; 1 bytes @ 0x8
 11039                           
 11040  0078                     ?_send_confirmation:	
 11041                           ; 1 bytes @ 0x8
 11042                           
 11043  0078                     ??___wmul:	
 11044                           ; 1 bytes @ 0x8
 11045                           
 11046  0078                     ??___awdiv:	
 11047                           ; 1 bytes @ 0x8
 11048                           
 11049  0078                     not_transferred@unread:	
 11050                           ; 1 bytes @ 0x8
 11051                           
 11052  0078                     send_confirmation@error:	
 11053                           ; 1 bytes @ 0x8
 11054                           
 11055  0078                     ___awmod@sign:	
 11056                           ; 1 bytes @ 0x8
 11057                           
 11058  0078                     ___wmul@product:	
 11059                           ; 1 bytes @ 0x8
 11060                           
 11061  0078                     ___lwdiv@quotient:	
 11062                           ; 2 bytes @ 0x8
 11063                           
 11064                           
 11065                           ; 2 bytes @ 0x8
 11066  0078                     	ds	1
 11067  0079                     ??_send_confirmation:	
 11068                           
 11069                           ; 1 bytes @ 0x9
 11070  0079                     	ds	1
 11071  007A                     ??_DATAEE_WriteByte:	
 11072                           
 11073                           	psect	cstackBANK0
 11074  0020                     __pcstackBANK0:	
 11075                           ; 1 bytes @ 0xA
 11076                           
 11077  0020                     ?_DATAEE_WriteByte:	
 11078  0020                     ?_Alarm:	
 11079                           ; 1 bytes @ 0x0
 11080                           
 11081  0020                     ??_get_check_up_value:	
 11082                           ; 1 bytes @ 0x0
 11083                           
 11084  0020                     ?_read_buffer:	
 11085                           ; 1 bytes @ 0x0
 11086                           
 11087  0020                     Alarm@m:	
 11088                           ; 1 bytes @ 0x0
 11089                           
 11090  0020                     read_buffer@j:	
 11091                           ; 1 bytes @ 0x0
 11092                           
 11093  0020                     ___awdiv@counter:	
 11094                           ; 1 bytes @ 0x0
 11095                           
 11096  0020                     DATAEE_WriteByte@bAdd:	
 11097                           ; 1 bytes @ 0x0
 11098                           
 11099  0020                     send_msg@i:	
 11100                           ; 2 bytes @ 0x0
 11101                           
 11102                           
 11103                           ; 2 bytes @ 0x0
 11104  0020                     	ds	1
 11105  0021                     ??_read_buffer:	
 11106  0021                     Alarm@s:	
 11107                           ; 1 bytes @ 0x1
 11108                           
 11109  0021                     ___awdiv@sign:	
 11110                           ; 1 bytes @ 0x1
 11111                           
 11112                           
 11113                           ; 1 bytes @ 0x1
 11114  0021                     	ds	1
 11115  0022                     ??_Alarm:	
 11116  0022                     DATAEE_WriteByte@bData:	
 11117                           ; 1 bytes @ 0x2
 11118                           
 11119  0022                     send_msg@msg:	
 11120                           ; 1 bytes @ 0x2
 11121                           
 11122  0022                     ___awdiv@quotient:	
 11123                           ; 1 bytes @ 0x2
 11124                           
 11125                           
 11126                           ; 2 bytes @ 0x2
 11127  0022                     	ds	1
 11128  0023                     DATAEE_WriteByte@GIEBitValue:	
 11129  0023                     read_clock@hours:	
 11130                           ; 1 bytes @ 0x3
 11131                           
 11132  0023                     send_confirmation@cmd:	
 11133                           ; 1 bytes @ 0x3
 11134                           
 11135  0023                     read_temp_lum@msg:	
 11136                           ; 1 bytes @ 0x3
 11137                           
 11138  0023                     read_param@msg:	
 11139                           ; 4 bytes @ 0x3
 11140                           
 11141  0023                     read_alarms@msg:	
 11142                           ; 4 bytes @ 0x3
 11143                           
 11144  0023                     registers_info@msg:	
 11145                           ; 5 bytes @ 0x3
 11146                           
 11147  0023                     notification_memory@msg:	
 11148                           ; 6 bytes @ 0x3
 11149                           
 11150                           
 11151                           ; 6 bytes @ 0x3
 11152  0023                     	ds	1
 11153  0024                     ?_ring_buffer_write:	
 11154  0024                     ??_write_alaf:	
 11155                           ; 1 bytes @ 0x4
 11156                           
 11157  0024                     ??_write_alat:	
 11158                           ; 1 bytes @ 0x4
 11159                           
 11160  0024                     ??_write_alal:	
 11161                           ; 1 bytes @ 0x4
 11162                           
 11163  0024                     ?_eeprom_setup:	
 11164                           ; 1 bytes @ 0x4
 11165                           
 11166  0024                     ?_eeprom_clk_update:	
 11167                           ; 1 bytes @ 0x4
 11168                           
 11169  0024                     ??_write_pmon:	
 11170                           ; 1 bytes @ 0x4
 11171                           
 11172  0024                     ??_write_tala:	
 11173                           ; 1 bytes @ 0x4
 11174                           
 11175  0024                     eeprom_setup@nreg:	
 11176                           ; 1 bytes @ 0x4
 11177                           
 11178  0024                     eeprom_clk_update@clkm:	
 11179                           ; 1 bytes @ 0x4
 11180                           
 11181  0024                     ring_buffer_write@m:	
 11182                           ; 1 bytes @ 0x4
 11183                           
 11184  0024                     read_clock@minutes:	
 11185                           ; 1 bytes @ 0x4
 11186                           
 11187  0024                     send_confirmation@msg:	
 11188                           ; 1 bytes @ 0x4
 11189                           
 11190                           
 11191                           ; 3 bytes @ 0x4
 11192  0024                     	ds	1
 11193  0025                     ??_eeprom_clk_update:	
 11194  0025                     eeprom_setup@pmon:	
 11195                           ; 1 bytes @ 0x5
 11196                           
 11197  0025                     ring_buffer_write@s:	
 11198                           ; 1 bytes @ 0x5
 11199                           
 11200  0025                     read_clock@seconds:	
 11201                           ; 1 bytes @ 0x5
 11202                           
 11203                           
 11204                           ; 1 bytes @ 0x5
 11205  0025                     	ds	1
 11206  0026                     eeprom_setup@tala:	
 11207  0026                     ring_buffer_write@T:	
 11208                           ; 1 bytes @ 0x6
 11209                           
 11210  0026                     read_clock@msg:	
 11211                           ; 1 bytes @ 0x6
 11212                           
 11213                           
 11214                           ; 5 bytes @ 0x6
 11215  0026                     	ds	1
 11216  0027                     ??_define_alarm:	
 11217  0027                     eeprom_setup@alat:	
 11218                           ; 1 bytes @ 0x7
 11219                           
 11220  0027                     ring_buffer_write@L:	
 11221                           ; 1 bytes @ 0x7
 11222                           
 11223  0027                     read_buffer@i:	
 11224                           ; 1 bytes @ 0x7
 11225                           
 11226  0027                     write_pmon@x:	
 11227                           ; 1 bytes @ 0x7
 11228                           
 11229  0027                     write_tala@x:	
 11230                           ; 1 bytes @ 0x7
 11231                           
 11232  0027                     write_alat@x:	
 11233                           ; 1 bytes @ 0x7
 11234                           
 11235  0027                     write_alal@x:	
 11236                           ; 1 bytes @ 0x7
 11237                           
 11238  0027                     write_alaf@x:	
 11239                           ; 1 bytes @ 0x7
 11240                           
 11241                           
 11242                           ; 1 bytes @ 0x7
 11243  0027                     	ds	1
 11244  0028                     ??_ring_buffer_write:	
 11245  0028                     ??_submenu_alarm:	
 11246                           ; 1 bytes @ 0x8
 11247                           
 11248  0028                     ??_submenu_temp:	
 11249                           ; 1 bytes @ 0x8
 11250                           
 11251  0028                     ??_submenu_illum:	
 11252                           ; 1 bytes @ 0x8
 11253                           
 11254  0028                     ??_modify_pmon:	
 11255                           ; 1 bytes @ 0x8
 11256                           
 11257  0028                     ??_modify_time_alarm:	
 11258                           ; 1 bytes @ 0x8
 11259                           
 11260  0028                     ??_switch_alarm:	
 11261                           ; 1 bytes @ 0x8
 11262                           
 11263  0028                     ??_send_register:	
 11264                           ; 1 bytes @ 0x8
 11265                           
 11266  0028                     eeprom_setup@alal:	
 11267                           ; 1 bytes @ 0x8
 11268                           
 11269  0028                     define_alarm@data:	
 11270                           ; 1 bytes @ 0x8
 11271                           
 11272                           
 11273                           ; 1 bytes @ 0x8
 11274  0028                     	ds	1
 11275  0029                     eeprom_setup@alaf:	
 11276  0029                     modify_pmon@data:	
 11277                           ; 1 bytes @ 0x9
 11278                           
 11279  0029                     modify_time_alarm@data:	
 11280                           ; 1 bytes @ 0x9
 11281                           
 11282  0029                     switch_alarm@data:	
 11283                           ; 1 bytes @ 0x9
 11284                           
 11285  0029                     registers_info@nr:	
 11286                           ; 1 bytes @ 0x9
 11287                           
 11288  0029                     notification_memory@nr:	
 11289                           ; 1 bytes @ 0x9
 11290                           
 11291  0029                     send_register@i:	
 11292                           ; 1 bytes @ 0x9
 11293                           
 11294                           
 11295                           ; 1 bytes @ 0x9
 11296  0029                     	ds	1
 11297  002A                     eeprom_setup@clkh:	
 11298  002A                     eeprom_clk_update@clkh:	
 11299                           ; 1 bytes @ 0xA
 11300                           
 11301  002A                     registers_info@ri:	
 11302                           ; 1 bytes @ 0xA
 11303                           
 11304  002A                     notification_memory@ri:	
 11305                           ; 1 bytes @ 0xA
 11306                           
 11307  002A                     send_register@k:	
 11308                           ; 1 bytes @ 0xA
 11309                           
 11310                           
 11311                           ; 2 bytes @ 0xA
 11312  002A                     	ds	1
 11313  002B                     ??_update_clk:	
 11314  002B                     submenu_temp@temperature_units:	
 11315                           ; 1 bytes @ 0xB
 11316                           
 11317  002B                     eeprom_setup@clkm:	
 11318                           ; 1 bytes @ 0xB
 11319                           
 11320  002B                     _registers_info$2827:	
 11321                           ; 1 bytes @ 0xB
 11322                           
 11323  002B                     _notification_memory$2859:	
 11324                           ; 2 bytes @ 0xB
 11325                           
 11326                           
 11327                           ; 2 bytes @ 0xB
 11328  002B                     	ds	1
 11329  002C                     ??_submenu_clock:	
 11330  002C                     ??_eeprom_setup:	
 11331                           ; 1 bytes @ 0xC
 11332                           
 11333  002C                     ??_set_clock:	
 11334                           ; 1 bytes @ 0xC
 11335                           
 11336  002C                     ?_transfer_registers:	
 11337                           ; 1 bytes @ 0xC
 11338                           
 11339  002C                     Alarm@h:	
 11340                           ; 1 bytes @ 0xC
 11341                           
 11342  002C                     submenu_temp@temperature_tens:	
 11343                           ; 1 bytes @ 0xC
 11344                           
 11345  002C                     ring_buffer_write@h:	
 11346                           ; 1 bytes @ 0xC
 11347                           
 11348  002C                     transfer_registers@i:	
 11349                           ; 1 bytes @ 0xC
 11350                           
 11351                           
 11352                           ; 1 bytes @ 0xC
 11353  002C                     	ds	1
 11354  002D                     ??_transfer_registers:	
 11355  002D                     eeprom_setup@reset_buffer:	
 11356                           ; 1 bytes @ 0xD
 11357                           
 11358  002D                     set_clock@hours:	
 11359                           ; 1 bytes @ 0xD
 11360                           
 11361  002D                     registers_info@N:	
 11362                           ; 1 bytes @ 0xD
 11363                           
 11364  002D                     notification_memory@N:	
 11365                           ; 1 bytes @ 0xD
 11366                           
 11367  002D                     ring_buffer_write@ring_pos_:	
 11368                           ; 1 bytes @ 0xD
 11369                           
 11370                           
 11371                           ; 2 bytes @ 0xD
 11372  002D                     	ds	1
 11373  002E                     ??_default_setup:	
 11374  002E                     set_clock@minutes:	
 11375                           ; 1 bytes @ 0xE
 11376                           
 11377  002E                     registers_info@wi:	
 11378                           ; 1 bytes @ 0xE
 11379                           
 11380  002E                     notification_memory@wi:	
 11381                           ; 1 bytes @ 0xE
 11382                           
 11383                           
 11384                           ; 1 bytes @ 0xE
 11385  002E                     	ds	1
 11386  002F                     submenu_clock@minutes_tens:	
 11387  002F                     set_clock@seconds:	
 11388                           ; 1 bytes @ 0xF
 11389                           
 11390  002F                     ring_buffer_write@ring_pos:	
 11391                           ; 1 bytes @ 0xF
 11392                           
 11393                           
 11394                           ; 2 bytes @ 0xF
 11395  002F                     	ds	1
 11396  0030                     submenu_clock@minutes_units:	
 11397  0030                     set_clock@data:	
 11398                           ; 1 bytes @ 0x10
 11399                           
 11400                           
 11401                           ; 1 bytes @ 0x10
 11402  0030                     	ds	1
 11403  0031                     submenu_clock@hours_tens:	
 11404                           
 11405                           ; 1 bytes @ 0x11
 11406  0031                     	ds	1
 11407  0032                     submenu_clock@hours_units:	
 11408                           
 11409                           ; 1 bytes @ 0x12
 11410  0032                     	ds	1
 11411  0033                     ??_load_eeprom:	
 11412  0033                     ??_Menu:	
 11413                           ; 1 bytes @ 0x13
 11414                           
 11415  0033                     transfer_registers@nr:	
 11416                           ; 1 bytes @ 0x13
 11417                           
 11418                           
 11419                           ; 1 bytes @ 0x13
 11420  0033                     	ds	1
 11421  0034                     _transfer_registers$2853:	
 11422                           
 11423                           ; 2 bytes @ 0x14
 11424  0034                     	ds	1
 11425  0035                     Menu@mode:	
 11426                           
 11427                           ; 1 bytes @ 0x15
 11428  0035                     	ds	1
 11429  0036                     ??_Menus:	
 11430  0036                     transfer_registers@c:	
 11431                           ; 1 bytes @ 0x16
 11432                           
 11433                           
 11434                           ; 2 bytes @ 0x16
 11435  0036                     	ds	2
 11436  0038                     transfer_registers@n:	
 11437                           
 11438                           ; 1 bytes @ 0x18
 11439  0038                     	ds	1
 11440  0039                     transfer_registers@N:	
 11441                           
 11442                           ; 1 bytes @ 0x19
 11443  0039                     	ds	1
 11444  003A                     transfer_registers@wi:	
 11445                           
 11446                           ; 1 bytes @ 0x1A
 11447  003A                     	ds	1
 11448  003B                     ??_transfer_n_registers:	
 11449  003B                     ??_transfer_registers_i:	
 11450                           ; 1 bytes @ 0x1B
 11451                           
 11452                           
 11453                           ; 1 bytes @ 0x1B
 11454  003B                     	ds	3
 11455  003E                     transfer_n_registers@nr:	
 11456                           
 11457                           ; 1 bytes @ 0x1E
 11458  003E                     	ds	1
 11459  003F                     transfer_n_registers@n:	
 11460                           
 11461                           ; 1 bytes @ 0x1F
 11462  003F                     	ds	1
 11463  0040                     transfer_registers_i@N:	
 11464  0040                     _transfer_n_registers$2834:	
 11465                           ; 1 bytes @ 0x20
 11466                           
 11467                           
 11468                           ; 2 bytes @ 0x20
 11469  0040                     	ds	1
 11470  0041                     transfer_registers_i@n:	
 11471                           
 11472                           ; 1 bytes @ 0x21
 11473  0041                     	ds	1
 11474  0042                     transfer_n_registers@data:	
 11475  0042                     _transfer_registers_i$2842:	
 11476                           ; 1 bytes @ 0x22
 11477                           
 11478                           
 11479                           ; 2 bytes @ 0x22
 11480  0042                     	ds	2
 11481  0044                     transfer_registers_i@wi:	
 11482                           
 11483                           ; 1 bytes @ 0x24
 11484  0044                     	ds	1
 11485  0045                     transfer_registers_i@i:	
 11486                           
 11487                           ; 1 bytes @ 0x25
 11488  0045                     	ds	1
 11489  0046                     transfer_registers_i@nr:	
 11490                           
 11491                           ; 1 bytes @ 0x26
 11492  0046                     	ds	1
 11493  0047                     transfer_registers_i@data:	
 11494                           
 11495                           ; 1 bytes @ 0x27
 11496  0047                     	ds	1
 11497  0048                     ??_interpret_message:	
 11498                           
 11499                           ; 1 bytes @ 0x28
 11500  0048                     	ds	2
 11501  004A                     interpret_message@cmd:	
 11502                           
 11503                           ; 1 bytes @ 0x2A
 11504  004A                     	ds	1
 11505  004B                     interpret_message@msg:	
 11506                           
 11507                           ; 1 bytes @ 0x2B
 11508  004B                     	ds	1
 11509  004C                     interpret_message@data:	
 11510                           
 11511                           ; 1 bytes @ 0x2C
 11512  004C                     	ds	1
 11513  004D                     ??_read_msgs:	
 11514                           
 11515                           ; 1 bytes @ 0x2D
 11516  004D                     	ds	1
 11517  004E                     read_msgs@aux:	
 11518                           
 11519                           ; 8 bytes @ 0x2E
 11520  004E                     	ds	8
 11521  0056                     read_msgs@i:	
 11522                           
 11523                           ; 2 bytes @ 0x36
 11524  0056                     	ds	2
 11525  0058                     read_msgs@cmd:	
 11526                           
 11527                           ; 1 bytes @ 0x38
 11528  0058                     	ds	1
 11529  0059                     ??_main:	
 11530                           
 11531                           ; 1 bytes @ 0x39
 11532  0059                     	ds	15
 11533                           
 11534                           	psect	maintext
 11535  0075                     __pmaintext:	
 11536 ;;
 11537 ;;Main: autosize = 0, tempsize = 15, incstack = 0, save=0
 11538 ;;
 11539 ;; *************** function _main *****************
 11540 ;; Defined at:
 11541 ;;		line 99 in file "main.c"
 11542 ;; Parameters:    Size  Location     Type
 11543 ;;		None
 11544 ;; Auto vars:     Size  Location     Type
 11545 ;;  i               2    0[BANK2 ] int 
 11546 ;; Return value:  Size  Location     Type
 11547 ;;                  1    wreg      void 
 11548 ;; Registers used:
 11549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11550 ;; Tracked objects:
 11551 ;;		On entry : B1F/0
 11552 ;;		On exit  : 0/0
 11553 ;;		Unchanged: 0/0
 11554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11556 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 11557 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11558 ;;      Totals:         0      15       0       2       0       0       0       0       0       0       0       0       
      +0       0
 11559 ;;Total ram usage:       17 bytes
 11560 ;; Hardware stack levels required when called:   13
 11561 ;; This function calls:
 11562 ;;		_Alarm
 11563 ;;		_EUSART_SetRxInterruptHandler
 11564 ;;		_EUSART_Write
 11565 ;;		_INT_SetInterruptHandler
 11566 ;;		_Menus
 11567 ;;		_PWM_Output_D4_Disable
 11568 ;;		_ReadIllum
 11569 ;;		_ReadTemp
 11570 ;;		_SYSTEM_Initialize
 11571 ;;		_TMR1_SetInterruptHandler
 11572 ;;		___wmul
 11573 ;;		_clear_alarm
 11574 ;;		_i2c1_driver_open
 11575 ;;		_load_eeprom
 11576 ;;		_notification_memory
 11577 ;;		_putch
 11578 ;;		_read_msgs
 11579 ;;		_read_nreg
 11580 ;;		_ring_buffer_write
 11581 ;;		_sys_init
 11582 ;;		_update_clk
 11583 ;; This function is called by:
 11584 ;;		Startup code after reset
 11585 ;; This function uses a non-reentrant model
 11586 ;;
 11587                           
 11588                           
 11589                           ;psect for function _main
 11590  0075                     _main:	
 11591  0075                     l7069:	
 11592                           ;incstack = 0
 11593                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11594                           
 11595                           
 11596                           ;main.c: 102:     SYSTEM_Initialize();
 11597  0075  3195  25A4  3180   	fcall	_SYSTEM_Initialize
 11598  0078                     l7071:	
 11599                           
 11600                           ;main.c: 103:     sys_init();
 11601  0078  3193  23B0  3180   	fcall	_sys_init
 11602  007B                     l7073:	
 11603                           
 11604                           ;main.c: 104:     load_eeprom();
 11605  007B  318D  253B  3180   	fcall	_load_eeprom
 11606  007E                     l7075:	
 11607                           
 11608                           ;main.c: 105:     clear_alarm();
 11609  007E  3193  2344  3180   	fcall	_clear_alarm
 11610  0081                     l7077:	
 11611                           
 11612                           ;main.c: 108:     (INTCONbits.GIE = 1);
 11613  0081  178B               	bsf	11,7	;volatile
 11614  0082                     l7079:	
 11615                           
 11616                           ;main.c: 111:     (INTCONbits.PEIE = 1);
 11617  0082  170B               	bsf	11,6	;volatile
 11618  0083                     l7081:	
 11619                           
 11620                           ;main.c: 113:     TMR1_SetInterruptHandler(Timer);
 11621  0083  3087               	movlw	low _Timer
 11622  0084  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 11623  0085  300B               	movlw	high _Timer
 11624  0086  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 11625  0087  3192  22FE  3180   	fcall	_TMR1_SetInterruptHandler
 11626  008A                     l7083:	
 11627                           
 11628                           ;main.c: 114:     INT_SetInterruptHandler(Switch1);
 11629  008A  3015               	movlw	low _Switch1
 11630  008B  00F2               	movwf	INT_SetInterruptHandler@InterruptHandler
 11631  008C  3014               	movlw	high _Switch1
 11632  008D  00F3               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 11633  008E  3193  2322  3180   	fcall	_INT_SetInterruptHandler
 11634  0091                     l7085:	
 11635                           
 11636                           ;main.c: 115:     EUSART_SetRxInterruptHandler(countMsg);
 11637  0091  3082               	movlw	low _countMsg
 11638  0092  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 11639  0093  3014               	movlw	high _countMsg
 11640  0094  00F3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 11641  0095  3193  2316  3180   	fcall	_EUSART_SetRxInterruptHandler
 11642  0098                     l7087:	
 11643                           
 11644                           ;main.c: 117:     i2c1_driver_open();
 11645  0098  3193  23D3  3180   	fcall	_i2c1_driver_open
 11646  009B                     l7089:	
 11647                           
 11648                           ;main.c: 118:     TRISCbits.TRISC3 = 1;
 11649  009B  0020               	movlb	0	; select bank0
 11650  009C  1593               	bsf	19,3	;volatile
 11651  009D                     l7091:	
 11652                           
 11653                           ;main.c: 119:     TRISCbits.TRISC4 = 1;
 11654  009D  1613               	bsf	19,4	;volatile
 11655  009E                     l7093:	
 11656                           
 11657                           ;main.c: 120:     WPUC3 = 1;
 11658  009E  003E               	movlb	30	; select bank30
 11659  009F  15CF               	bsf	79,3	;volatile
 11660  00A0                     l7095:	
 11661                           
 11662                           ;main.c: 121:     WPUC4 = 1;
 11663  00A0  164F               	bsf	79,4	;volatile
 11664  00A1                     l7097:	
 11665                           
 11666                           ;main.c: 123:     EUSART_Write(0x57);
 11667  00A1  3057               	movlw	87
 11668  00A2  3197  274E  3180   	fcall	_EUSART_Write
 11669  00A5                     l7099:	
 11670                           
 11671                           ;main.c: 124:     putch(read_nreg());
 11672  00A5  3193  2374  3180   	fcall	_read_nreg
 11673  00A8  3193  2328  3180   	fcall	_putch
 11674  00AB                     l7101:	
 11675                           
 11676                           ;main.c: 127:     {;main.c: 128:         (INTCONbits.PEIE = 0);
 11677  00AB  130B               	bcf	11,6	;volatile
 11678  00AC                     l7103:	
 11679                           
 11680                           ;main.c: 129:         if(flag_timer){
 11681  00AC  0021               	movlb	1	; select bank1
 11682  00AD  0858               	movf	_flag_timer^(0+128),w	;volatile
 11683  00AE  1903               	btfsc	3,2
 11684  00AF  28B1               	goto	u6181
 11685  00B0  28B2               	goto	u6180
 11686  00B1                     u6181:	
 11687  00B1  28B6               	goto	l7109
 11688  00B2                     u6180:	
 11689  00B2                     l7105:	
 11690                           
 11691                           ;main.c: 130:             flag_timer = 0;
 11692  00B2  01D8               	clrf	_flag_timer^(0+128)	;volatile
 11693  00B3                     l7107:	
 11694                           
 11695                           ;main.c: 131:             update_clk();
 11696  00B3  3193  23A6  3180   	fcall	_update_clk
 11697  00B6                     l7109:	
 11698                           
 11699                           ;main.c: 134:         hours = clkh; minutes = clkm; seconds = clks;
 11700  00B6  0020               	movlb	0	; select bank0
 11701  00B7  086A               	movf	_clkh,w	;volatile
 11702  00B8  00D9               	movwf	??_main
 11703  00B9  0859               	movf	??_main,w
 11704  00BA  0021               	movlb	1	; select bank1
 11705  00BB  00D5               	movwf	_hours^(0+128)
 11706  00BC                     l7111:	
 11707  00BC  0020               	movlb	0	; select bank0
 11708  00BD  0869               	movf	_clkm,w	;volatile
 11709  00BE  00D9               	movwf	??_main
 11710  00BF  0859               	movf	??_main,w
 11711  00C0  0021               	movlb	1	; select bank1
 11712  00C1  00D4               	movwf	_minutes^(0+128)
 11713  00C2                     l7113:	
 11714  00C2  0020               	movlb	0	; select bank0
 11715  00C3  0868               	movf	_clks,w	;volatile
 11716  00C4  00D9               	movwf	??_main
 11717  00C5  0859               	movf	??_main,w
 11718  00C6  0021               	movlb	1	; select bank1
 11719  00C7  00D3               	movwf	_seconds^(0+128)
 11720  00C8                     l7115:	
 11721                           
 11722                           ;main.c: 136:         if(msgs) {
 11723  00C8  084F               	movf	_msgs^(0+128),w	;volatile
 11724  00C9  1903               	btfsc	3,2
 11725  00CA  28CC               	goto	u6191
 11726  00CB  28CD               	goto	u6190
 11727  00CC                     u6191:	
 11728  00CC  28D4               	goto	l7121
 11729  00CD                     u6190:	
 11730  00CD                     l7117:	
 11731                           
 11732                           ;main.c: 137:             num_msgs = msgs;
 11733  00CD  084F               	movf	_msgs^(0+128),w	;volatile
 11734  00CE  0020               	movlb	0	; select bank0
 11735  00CF  00D9               	movwf	??_main
 11736  00D0  0859               	movf	??_main,w
 11737  00D1  0021               	movlb	1	; select bank1
 11738  00D2  00CE               	movwf	_num_msgs^(0+128)
 11739  00D3                     l7119:	
 11740                           
 11741                           ;main.c: 138:             msgs = 0;
 11742  00D3  01CF               	clrf	_msgs^(0+128)	;volatile
 11743  00D4                     l7121:	
 11744                           
 11745                           ;main.c: 141:         if((timer == 0 || timer > pmon) && pmon != 0){
 11746  00D4  085A               	movf	_timer^(0+128),w	;volatile
 11747  00D5  1903               	btfsc	3,2
 11748  00D6  28D8               	goto	u6201
 11749  00D7  28D9               	goto	u6200
 11750  00D8                     u6201:	
 11751  00D8  28E0               	goto	l7125
 11752  00D9                     u6200:	
 11753  00D9                     l7123:	
 11754  00D9  085A               	movf	_timer^(0+128),w	;volatile
 11755  00DA  0020               	movlb	0	; select bank0
 11756  00DB  026D               	subwf	_pmon,w
 11757  00DC  1803               	skipnc
 11758  00DD  28DF               	goto	u6211
 11759  00DE  28E0               	goto	u6210
 11760  00DF                     u6211:	
 11761  00DF  2961               	goto	l1006
 11762  00E0                     u6210:	
 11763  00E0                     l7125:	
 11764  00E0  0020               	movlb	0	; select bank0
 11765  00E1  086D               	movf	_pmon,w
 11766  00E2  1903               	btfsc	3,2
 11767  00E3  28E5               	goto	u6221
 11768  00E4  28E6               	goto	u6220
 11769  00E5                     u6221:	
 11770  00E5  2961               	goto	l1006
 11771  00E6                     u6220:	
 11772  00E6                     l7127:	
 11773                           
 11774                           ;main.c: 142:             timer = 1;
 11775  00E6  3001               	movlw	1
 11776  00E7  00D9               	movwf	??_main
 11777  00E8  0859               	movf	??_main,w
 11778  00E9  0021               	movlb	1	; select bank1
 11779  00EA  00DA               	movwf	_timer^(0+128)	;volatile
 11780  00EB                     l7129:	
 11781                           
 11782                           ;main.c: 143:             (INTCONbits.PEIE = 1);
 11783  00EB  170B               	bsf	11,6	;volatile
 11784  00EC                     l7131:	
 11785                           
 11786                           ;main.c: 144:             illum = ReadIllum();
 11787  00EC  3194  2424  3180   	fcall	_ReadIllum
 11788  00EF  0020               	movlb	0	; select bank0
 11789  00F0  00D9               	movwf	??_main
 11790  00F1  0859               	movf	??_main,w
 11791  00F2  0021               	movlb	1	; select bank1
 11792  00F3  00D1               	movwf	_illum^(0+128)
 11793  00F4                     l7133:	
 11794                           
 11795                           ;main.c: 145:             LATAbits.LATA4 = illum & 1;
 11796  00F4  0851               	movf	_illum^(0+128),w
 11797  00F5  3901               	andlw	1
 11798  00F6  0020               	movlb	0	; select bank0
 11799  00F7  00D9               	movwf	??_main
 11800  00F8  0ED9               	swapf	??_main,f
 11801  00F9  0816               	movf	22,w	;volatile
 11802  00FA  0659               	xorwf	??_main,w
 11803  00FB  39EF               	andlw	-17
 11804  00FC  0659               	xorwf	??_main,w
 11805  00FD  0096               	movwf	22	;volatile
 11806  00FE                     l7135:	
 11807                           
 11808                           ;main.c: 146:             LATAbits.LATA5 = (illum & 2) >> 1;
 11809  00FE  0021               	movlb	1	; select bank1
 11810  00FF  3651               	lsrf	_illum^(0+128),w
 11811  0100  3901               	andlw	1
 11812  0101  0020               	movlb	0	; select bank0
 11813  0102  00D9               	movwf	??_main
 11814  0103  0ED9               	swapf	??_main,f
 11815  0104  0DD9               	rlf	??_main,f
 11816  0105  0816               	movf	22,w	;volatile
 11817  0106  0659               	xorwf	??_main,w
 11818  0107  39DF               	andlw	-33
 11819  0108  0659               	xorwf	??_main,w
 11820  0109  0096               	movwf	22	;volatile
 11821  010A                     l7137:	
 11822                           
 11823                           ;main.c: 147:             temp = ReadTemp();
 11824  010A  3183  2329  3180   	fcall	_ReadTemp
 11825  010D  0020               	movlb	0	; select bank0
 11826  010E  00D9               	movwf	??_main
 11827  010F  0859               	movf	??_main,w
 11828  0110  0021               	movlb	1	; select bank1
 11829  0111  00D2               	movwf	_temp^(0+128)
 11830  0112                     l7139:	
 11831                           
 11832                           ;main.c: 148:             if(ring_buffer_write(hours, minutes, seconds, temp, illum))
 11833  0112  0854               	movf	_minutes^(0+128),w
 11834  0113  0020               	movlb	0	; select bank0
 11835  0114  00D9               	movwf	??_main
 11836  0115  0859               	movf	??_main,w
 11837  0116  00A4               	movwf	ring_buffer_write@m
 11838  0117  0021               	movlb	1	; select bank1
 11839  0118  0853               	movf	_seconds^(0+128),w
 11840  0119  0020               	movlb	0	; select bank0
 11841  011A  00DA               	movwf	??_main+1
 11842  011B  085A               	movf	??_main+1,w
 11843  011C  00A5               	movwf	ring_buffer_write@s
 11844  011D  0021               	movlb	1	; select bank1
 11845  011E  0852               	movf	_temp^(0+128),w
 11846  011F  0020               	movlb	0	; select bank0
 11847  0120  00DB               	movwf	??_main+2
 11848  0121  085B               	movf	??_main+2,w
 11849  0122  00A6               	movwf	ring_buffer_write@T
 11850  0123  0021               	movlb	1	; select bank1
 11851  0124  0851               	movf	_illum^(0+128),w
 11852  0125  0020               	movlb	0	; select bank0
 11853  0126  00DC               	movwf	??_main+3
 11854  0127  085C               	movf	??_main+3,w
 11855  0128  00A7               	movwf	ring_buffer_write@L
 11856  0129  0021               	movlb	1	; select bank1
 11857  012A  0855               	movf	_hours^(0+128),w
 11858  012B  3181  21FE  3180   	fcall	_ring_buffer_write
 11859  012E  3A00               	xorlw	0
 11860  012F  1903               	skipnz
 11861  0130  2932               	goto	u6231
 11862  0131  2933               	goto	u6230
 11863  0132                     u6231:	
 11864  0132  2936               	goto	l7143
 11865  0133                     u6230:	
 11866  0133                     l7141:	
 11867                           
 11868                           ;main.c: 149:                 notification_memory();
 11869  0133  318D  25DE  3180   	fcall	_notification_memory
 11870  0136                     l7143:	
 11871                           
 11872                           ;main.c: 150:             if((illum < alal || temp > alat) && alaf == 1){
 11873  0136  0021               	movlb	1	; select bank1
 11874  0137  0856               	movf	_alal^(0+128),w
 11875  0138  0251               	subwf	_illum^(0+128),w
 11876  0139  1C03               	skipc
 11877  013A  293C               	goto	u6241
 11878  013B  293D               	goto	u6240
 11879  013C                     u6241:	
 11880  013C  2944               	goto	l7147
 11881  013D                     u6240:	
 11882  013D                     l7145:	
 11883  013D  0852               	movf	_temp^(0+128),w
 11884  013E  0020               	movlb	0	; select bank0
 11885  013F  026C               	subwf	_alat,w
 11886  0140  1803               	skipnc
 11887  0141  2943               	goto	u6251
 11888  0142  2944               	goto	u6250
 11889  0143                     u6251:	
 11890  0143  2962               	goto	l7153
 11891  0144                     u6250:	
 11892  0144                     l7147:	
 11893  0144  0020               	movlb	0	; select bank0
 11894  0145  036B               	decf	_alaf,w
 11895  0146  1D03               	btfss	3,2
 11896  0147  2949               	goto	u6261
 11897  0148  294A               	goto	u6260
 11898  0149                     u6261:	
 11899  0149  2962               	goto	l7153
 11900  014A                     u6260:	
 11901  014A                     l7149:	
 11902                           
 11903                           ;main.c: 151:                 if(!alarm)
 11904  014A  0021               	movlb	1	; select bank1
 11905  014B  0850               	movf	_alarm^(0+128),w
 11906  014C  1D03               	btfss	3,2
 11907  014D  294F               	goto	u6271
 11908  014E  2950               	goto	u6270
 11909  014F                     u6271:	
 11910  014F  2962               	goto	l7153
 11911  0150                     u6270:	
 11912  0150                     l7151:	
 11913                           
 11914                           ;main.c: 152:                     Alarm(hours, minutes, seconds);
 11915  0150  0854               	movf	_minutes^(0+128),w
 11916  0151  0020               	movlb	0	; select bank0
 11917  0152  00D9               	movwf	??_main
 11918  0153  0859               	movf	??_main,w
 11919  0154  00A0               	movwf	Alarm@m
 11920  0155  0021               	movlb	1	; select bank1
 11921  0156  0853               	movf	_seconds^(0+128),w
 11922  0157  0020               	movlb	0	; select bank0
 11923  0158  00DA               	movwf	??_main+1
 11924  0159  085A               	movf	??_main+1,w
 11925  015A  00A1               	movwf	Alarm@s
 11926  015B  0021               	movlb	1	; select bank1
 11927  015C  0855               	movf	_hours^(0+128),w
 11928  015D  318B  2342  3180   	fcall	_Alarm
 11929  0160  2962               	goto	l7153
 11930  0161                     l1006:	
 11931                           
 11932                           ;main.c: 155:             (INTCONbits.PEIE = 1);
 11933  0161  170B               	bsf	11,6	;volatile
 11934  0162                     l7153:	
 11935                           
 11936                           ;main.c: 157:         for(int i = 0; i < num_msgs; i++) {
 11937  0162  0022               	movlb	2	; select bank2
 11938  0163  01B6               	clrf	main@i^(0+256)
 11939  0164  01B7               	clrf	(main@i+1)^(0+256)
 11940  0165  296E               	goto	l7159
 11941  0166                     l7155:	
 11942                           
 11943                           ;main.c: 158:             read_msgs();
 11944  0166  318C  2414  3180   	fcall	_read_msgs
 11945  0169                     l7157:	
 11946                           
 11947                           ;main.c: 159:         }
 11948  0169  3001               	movlw	1
 11949  016A  0022               	movlb	2	; select bank2
 11950  016B  07B6               	addwf	main@i^(0+256),f
 11951  016C  3000               	movlw	0
 11952  016D  3DB7               	addwfc	(main@i+1)^(0+256),f
 11953  016E                     l7159:	
 11954  016E  0837               	movf	(main@i+1)^(0+256),w
 11955  016F  3A80               	xorlw	128
 11956  0170  0020               	movlb	0	; select bank0
 11957  0171  00D9               	movwf	??_main
 11958  0172  3080               	movlw	128
 11959  0173  0259               	subwf	??_main,w
 11960  0174  1D03               	skipz
 11961  0175  297A               	goto	u6285
 11962  0176  0021               	movlb	1	; select bank1
 11963  0177  084E               	movf	_num_msgs^(0+128),w
 11964  0178  0022               	movlb	2	; select bank2
 11965  0179  0236               	subwf	main@i^(0+256),w
 11966  017A                     u6285:	
 11967  017A  1C03               	skipc
 11968  017B  297D               	goto	u6281
 11969  017C  297E               	goto	u6280
 11970  017D                     u6281:	
 11971  017D  2966               	goto	l7155
 11972  017E                     u6280:	
 11973  017E                     l7161:	
 11974                           
 11975                           ;main.c: 160:         num_msgs = 0;
 11976  017E  0021               	movlb	1	; select bank1
 11977  017F  01CE               	clrf	_num_msgs^(0+128)
 11978  0180                     l7163:	
 11979                           
 11980                           ;main.c: 162:         (PIE0bits.INTE = 0);
 11981  0180  002E               	movlb	14	; select bank14
 11982  0181  1016               	bcf	22,0	;volatile
 11983  0182                     l7165:	
 11984                           
 11985                           ;main.c: 163:         if(alarm){
 11986  0182  0021               	movlb	1	; select bank1
 11987  0183  0850               	movf	_alarm^(0+128),w
 11988  0184  1903               	btfsc	3,2
 11989  0185  2987               	goto	u6291
 11990  0186  2988               	goto	u6290
 11991  0187                     u6291:	
 11992  0187  29E0               	goto	l1018
 11993  0188                     u6290:	
 11994  0188                     l7167:	
 11995                           
 11996                           ;main.c: 164:             (PIE0bits.INTE = 1);
 11997  0188  002E               	movlb	14	; select bank14
 11998  0189  1416               	bsf	22,0	;volatile
 11999  018A                     l7169:	
 12000                           
 12001                           ;main.c: 165:             if(hours * 3600 + minutes * 60 + seconds - initial_time >= tal
      +                          a){
 12002  018A  0021               	movlb	1	; select bank1
 12003  018B  0853               	movf	_seconds^(0+128),w
 12004  018C  0020               	movlb	0	; select bank0
 12005  018D  00D9               	movwf	??_main
 12006  018E  01DA               	clrf	??_main+1
 12007  018F  0021               	movlb	1	; select bank1
 12008  0190  0855               	movf	_hours^(0+128),w
 12009  0191  0020               	movlb	0	; select bank0
 12010  0192  00DB               	movwf	??_main+2
 12011  0193  01DC               	clrf	??_main+3
 12012  0194  085B               	movf	??_main+2,w
 12013  0195  00F4               	movwf	___wmul@multiplier
 12014  0196  085C               	movf	??_main+3,w
 12015  0197  00F5               	movwf	___wmul@multiplier+1
 12016  0198  3010               	movlw	16
 12017  0199  00F6               	movwf	___wmul@multiplicand
 12018  019A  300E               	movlw	14
 12019  019B  00F7               	movwf	___wmul@multiplicand+1
 12020  019C  3195  25FB  3180   	fcall	___wmul
 12021  019F  0874               	movf	?___wmul,w
 12022  01A0  0020               	movlb	0	; select bank0
 12023  01A1  00DD               	movwf	??_main+4
 12024  01A2  0875               	movf	?___wmul+1,w
 12025  01A3  00DE               	movwf	??_main+5
 12026  01A4  0021               	movlb	1	; select bank1
 12027  01A5  0854               	movf	_minutes^(0+128),w
 12028  01A6  0020               	movlb	0	; select bank0
 12029  01A7  00DF               	movwf	??_main+6
 12030  01A8  01E0               	clrf	??_main+7
 12031  01A9  085F               	movf	??_main+6,w
 12032  01AA  00F4               	movwf	___wmul@multiplier
 12033  01AB  0860               	movf	??_main+7,w
 12034  01AC  00F5               	movwf	___wmul@multiplier+1
 12035  01AD  303C               	movlw	60
 12036  01AE  00F6               	movwf	___wmul@multiplicand
 12037  01AF  3000               	movlw	0
 12038  01B0  00F7               	movwf	___wmul@multiplicand+1
 12039  01B1  3195  25FB  3180   	fcall	___wmul
 12040  01B4  0874               	movf	?___wmul,w
 12041  01B5  0020               	movlb	0	; select bank0
 12042  01B6  075D               	addwf	??_main+4,w
 12043  01B7  00E1               	movwf	??_main+8
 12044  01B8  0875               	movf	?___wmul+1,w
 12045  01B9  3D5E               	addwfc	??_main+5,w
 12046  01BA  00E2               	movwf	??_main+9
 12047  01BB  0859               	movf	??_main,w
 12048  01BC  0761               	addwf	??_main+8,w
 12049  01BD  00E3               	movwf	??_main+10
 12050  01BE  085A               	movf	??_main+1,w
 12051  01BF  3D62               	addwfc	??_main+9,w
 12052  01C0  00E4               	movwf	??_main+11
 12053  01C1  0021               	movlb	1	; select bank1
 12054  01C2  0843               	movf	_initial_time^(0+128),w
 12055  01C3  0020               	movlb	0	; select bank0
 12056  01C4  0263               	subwf	??_main+10,w
 12057  01C5  00E5               	movwf	??_main+12
 12058  01C6  0021               	movlb	1	; select bank1
 12059  01C7  0844               	movf	(_initial_time+1)^(0+128),w
 12060  01C8  0020               	movlb	0	; select bank0
 12061  01C9  3B64               	subwfb	??_main+11,w
 12062  01CA  00E6               	movwf	??_main+13
 12063  01CB  0866               	movf	??_main+13,w
 12064  01CC  3A80               	xorlw	128
 12065  01CD  00E7               	movwf	??_main+14
 12066  01CE  3080               	movlw	128
 12067  01CF  0267               	subwf	??_main+14,w
 12068  01D0  1D03               	skipz
 12069  01D1  29D6               	goto	u6305
 12070  01D2  0021               	movlb	1	; select bank1
 12071  01D3  0857               	movf	_tala^(0+128),w
 12072  01D4  0020               	movlb	0	; select bank0
 12073  01D5  0265               	subwf	??_main+12,w
 12074  01D6                     u6305:	
 12075  01D6  1C03               	skipc
 12076  01D7  29D9               	goto	u6301
 12077  01D8  29DA               	goto	u6300
 12078  01D9                     u6301:	
 12079  01D9  29E2               	goto	l1022
 12080  01DA                     u6300:	
 12081  01DA                     l7171:	
 12082                           
 12083                           ;main.c: 166:                 PWM_Output_D4_Disable();
 12084  01DA  3194  2433  3180   	fcall	_PWM_Output_D4_Disable
 12085  01DD                     l7173:	
 12086  01DD  0020               	movlb	0	; select bank0
 12087  01DE  1716               	bsf	22,6	;volatile
 12088  01DF  29E2               	goto	l1022
 12089  01E0                     l1018:	
 12090                           
 12091                           ;main.c: 171:             (PIE0bits.INTE = 1);
 12092  01E0  002E               	movlb	14	; select bank14
 12093  01E1  1416               	bsf	22,0	;volatile
 12094  01E2                     l1022:	
 12095                           ;main.c: 173:         }
 12096                           
 12097                           
 12098                           ;main.c: 175:         (PIE0bits.INTE = 0);
 12099  01E2  002E               	movlb	14	; select bank14
 12100  01E3  1016               	bcf	22,0	;volatile
 12101  01E4                     l7175:	
 12102                           
 12103                           ;main.c: 176:         if(switch1){
 12104  01E4  0021               	movlb	1	; select bank1
 12105  01E5  0859               	movf	_switch1^(0+128),w	;volatile
 12106  01E6  1903               	btfsc	3,2
 12107  01E7  29E9               	goto	u6311
 12108  01E8  29EA               	goto	u6310
 12109  01E9                     u6311:	
 12110  01E9  29F9               	goto	l7189
 12111  01EA                     u6310:	
 12112  01EA                     l7177:	
 12113                           
 12114                           ;main.c: 177:             switch1 = 0;
 12115  01EA  01D9               	clrf	_switch1^(0+128)	;volatile
 12116  01EB                     l7179:	
 12117                           
 12118                           ;main.c: 178:             Menus();
 12119  01EB  318A  22FF  3180   	fcall	_Menus
 12120  01EE                     l7181:	
 12121                           
 12122                           ;main.c: 179:             (INTCONbits.PEIE = 0);
 12123  01EE  130B               	bcf	11,6	;volatile
 12124  01EF                     l7183:	
 12125                           
 12126                           ;main.c: 180:             TMR1_SetInterruptHandler(Timer);
 12127  01EF  3087               	movlw	low _Timer
 12128  01F0  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 12129  01F1  300B               	movlw	high _Timer
 12130  01F2  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 12131  01F3  3192  22FE  3180   	fcall	_TMR1_SetInterruptHandler
 12132  01F6                     l7185:	
 12133                           
 12134                           ;main.c: 181:             (INTCONbits.PEIE = 1);
 12135  01F6  170B               	bsf	11,6	;volatile
 12136  01F7                     l7187:	
 12137                           
 12138                           ;main.c: 182:             (PIR0bits.INTF = 0);
 12139  01F7  002E               	movlb	14	; select bank14
 12140  01F8  100C               	bcf	12,0	;volatile
 12141  01F9                     l7189:	
 12142                           
 12143                           ;main.c: 184:         (PIE0bits.INTE = 1);
 12144  01F9  002E               	movlb	14	; select bank14
 12145  01FA  1416               	bsf	22,0	;volatile
 12146  01FB  28AB               	goto	l7101
 12147  01FC  3180  2855         	ljmp	start
 12148  01FE                     __end_of_main:	
 12149                           
 12150                           	psect	text1
 12151  13B0                     __ptext1:	
 12152 ;; *************** function _sys_init *****************
 12153 ;; Defined at:
 12154 ;;		line 38 in file "main.c"
 12155 ;; Parameters:    Size  Location     Type
 12156 ;;		None
 12157 ;; Auto vars:     Size  Location     Type
 12158 ;;		None
 12159 ;; Return value:  Size  Location     Type
 12160 ;;                  1    wreg      void 
 12161 ;; Registers used:
 12162 ;;		status,2
 12163 ;; Tracked objects:
 12164 ;;		On entry : 0/0
 12165 ;;		On exit  : 0/0
 12166 ;;		Unchanged: 0/0
 12167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12172 ;;Total ram usage:        0 bytes
 12173 ;; Hardware stack levels used:    1
 12174 ;; Hardware stack levels required when called:    6
 12175 ;; This function calls:
 12176 ;;		Nothing
 12177 ;; This function is called by:
 12178 ;;		_main
 12179 ;; This function uses a non-reentrant model
 12180 ;;
 12181                           
 12182                           
 12183                           ;psect for function _sys_init
 12184  13B0                     _sys_init:	
 12185  13B0                     l6873:	
 12186                           ;incstack = 0
 12187                           ; Regs used in _sys_init: [status,2]
 12188                           
 12189                           
 12190                           ;main.c: 39:     iread = 0;
 12191  13B0  01FA               	clrf	_iread	;volatile
 12192                           
 12193                           ;main.c: 40:     msgs = 0;
 12194  13B1  0021               	movlb	1	; select bank1
 12195  13B2  01CF               	clrf	_msgs^(0+128)	;volatile
 12196                           
 12197                           ;main.c: 41:     num_msgs = 0;
 12198  13B3  01CE               	clrf	_num_msgs^(0+128)
 12199                           
 12200                           ;main.c: 42:     timer = 0;
 12201  13B4  01DA               	clrf	_timer^(0+128)	;volatile
 12202                           
 12203                           ;main.c: 43:     switch1 = 0;
 12204  13B5  01D9               	clrf	_switch1^(0+128)	;volatile
 12205                           
 12206                           ;main.c: 44:     flag_timer = 0;
 12207  13B6  01D8               	clrf	_flag_timer^(0+128)	;volatile
 12208                           
 12209                           ;main.c: 45:     initial_time = 0;
 12210  13B7  01C3               	clrf	_initial_time^(0+128)
 12211  13B8  01C4               	clrf	(_initial_time+1)^(0+128)
 12212                           
 12213                           ;main.c: 46:     alarm = 0;
 12214  13B9  01D0               	clrf	_alarm^(0+128)
 12215  13BA                     l969:	
 12216  13BA  0008               	return
 12217  13BB                     __end_of_sys_init:	
 12218                           
 12219                           	psect	text2
 12220  01FE                     __ptext2:	
 12221 ;; *************** function _ring_buffer_write *****************
 12222 ;; Defined at:
 12223 ;;		line 81 in file "eeprom.c"
 12224 ;; Parameters:    Size  Location     Type
 12225 ;;  h               1    wreg     unsigned char 
 12226 ;;  m               1    4[BANK0 ] unsigned char 
 12227 ;;  s               1    5[BANK0 ] unsigned char 
 12228 ;;  T               1    6[BANK0 ] unsigned char 
 12229 ;;  L               1    7[BANK0 ] unsigned char 
 12230 ;; Auto vars:     Size  Location     Type
 12231 ;;  h               1   12[BANK0 ] unsigned char 
 12232 ;;  ring_pos        2   15[BANK0 ] unsigned short 
 12233 ;;  ring_pos_       2   13[BANK0 ] unsigned short 
 12234 ;; Return value:  Size  Location     Type
 12235 ;;                  1    wreg      _Bool 
 12236 ;; Registers used:
 12237 ;;		wreg, status,2, status,0, pclath, cstack
 12238 ;; Tracked objects:
 12239 ;;		On entry : 0/0
 12240 ;;		On exit  : 0/0
 12241 ;;		Unchanged: 0/0
 12242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12243 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12244 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12245 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12246 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12247 ;;Total ram usage:       13 bytes
 12248 ;; Hardware stack levels used:    1
 12249 ;; Hardware stack levels required when called:    9
 12250 ;; This function calls:
 12251 ;;		_DATAEE_ReadByte
 12252 ;;		_DATAEE_WriteByte
 12253 ;;		___awdiv
 12254 ;;		___lwdiv
 12255 ;;		___wmul
 12256 ;;		_not_transferred
 12257 ;;		_read_nreg
 12258 ;; This function is called by:
 12259 ;;		_main
 12260 ;; This function uses a non-reentrant model
 12261 ;;
 12262                           
 12263                           
 12264                           ;psect for function _ring_buffer_write
 12265  01FE                     _ring_buffer_write:	
 12266                           
 12267                           ;incstack = 0
 12268                           ; Regs used in _ring_buffer_write: [wreg+status,2+status,0+pclath+cstack]
 12269                           ;ring_buffer_write@h stored from wreg
 12270  01FE  0020               	movlb	0	; select bank0
 12271  01FF  00AC               	movwf	ring_buffer_write@h
 12272  0200                     l6949:	
 12273                           
 12274                           ;eeprom.c: 82:     uint16_t ring_pos_ = DATAEE_ReadByte(0xF00A);
 12275  0200  300A               	movlw	10
 12276  0201  00F2               	movwf	DATAEE_ReadByte@bAdd
 12277  0202  30F0               	movlw	240
 12278  0203  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 12279  0204  3193  23C7  3181   	fcall	_DATAEE_ReadByte
 12280  0207  0020               	movlb	0	; select bank0
 12281  0208  00A8               	movwf	??_ring_buffer_write
 12282  0209  01A9               	clrf	??_ring_buffer_write+1
 12283  020A  0828               	movf	??_ring_buffer_write,w
 12284  020B  00AD               	movwf	ring_buffer_write@ring_pos_
 12285  020C  0829               	movf	??_ring_buffer_write+1,w
 12286  020D  00AE               	movwf	ring_buffer_write@ring_pos_+1
 12287  020E                     l6951:	
 12288                           
 12289                           ;eeprom.c: 83:     uint16_t ring_pos = 5*ring_pos_ + 0xF00B;
 12290  020E  082E               	movf	ring_buffer_write@ring_pos_+1,w
 12291  020F  00F5               	movwf	___wmul@multiplier+1
 12292  0210  082D               	movf	ring_buffer_write@ring_pos_,w
 12293  0211  00F4               	movwf	___wmul@multiplier
 12294  0212  3005               	movlw	5
 12295  0213  00F6               	movwf	___wmul@multiplicand
 12296  0214  3000               	movlw	0
 12297  0215  00F7               	movwf	___wmul@multiplicand+1
 12298  0216  3195  25FB  3181   	fcall	___wmul
 12299  0219  0874               	movf	?___wmul,w
 12300  021A  3E0B               	addlw	11
 12301  021B  0020               	movlb	0	; select bank0
 12302  021C  00AF               	movwf	ring_buffer_write@ring_pos
 12303  021D  30F0               	movlw	240
 12304  021E  3D75               	addwfc	?___wmul+1,w
 12305  021F  00B0               	movwf	ring_buffer_write@ring_pos+1
 12306  0220                     l6953:	
 12307                           
 12308                           ;eeprom.c: 86:     if (ring_pos_ != 0 && T == DATAEE_ReadByte(ring_pos - 2) && L == DATA
      +                          EE_ReadByte(ring_pos - 1))
 12309  0220  082D               	movf	ring_buffer_write@ring_pos_,w
 12310  0221  042E               	iorwf	ring_buffer_write@ring_pos_+1,w
 12311  0222  1903               	btfsc	3,2
 12312  0223  2A25               	goto	u6031
 12313  0224  2A26               	goto	u6030
 12314  0225                     u6031:	
 12315  0225  2A6B               	goto	l6963
 12316  0226                     u6030:	
 12317  0226                     l6955:	
 12318  0226  082F               	movf	ring_buffer_write@ring_pos,w
 12319  0227  3EFE               	addlw	254
 12320  0228  00F2               	movwf	DATAEE_ReadByte@bAdd
 12321  0229  30FF               	movlw	255
 12322  022A  3D30               	addwfc	ring_buffer_write@ring_pos+1,w
 12323  022B  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 12324  022C  3193  23C7  3181   	fcall	_DATAEE_ReadByte
 12325  022F  0020               	movlb	0	; select bank0
 12326  0230  0626               	xorwf	ring_buffer_write@T,w
 12327  0231  1D03               	skipz
 12328  0232  2A34               	goto	u6041
 12329  0233  2A35               	goto	u6040
 12330  0234                     u6041:	
 12331  0234  2A6B               	goto	l6963
 12332  0235                     u6040:	
 12333  0235                     l6957:	
 12334  0235  082F               	movf	ring_buffer_write@ring_pos,w
 12335  0236  3EFF               	addlw	255
 12336  0237  00F2               	movwf	DATAEE_ReadByte@bAdd
 12337  0238  30FF               	movlw	255
 12338  0239  3D30               	addwfc	ring_buffer_write@ring_pos+1,w
 12339  023A  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 12340  023B  3193  23C7  3181   	fcall	_DATAEE_ReadByte
 12341  023E  0020               	movlb	0	; select bank0
 12342  023F  0627               	xorwf	ring_buffer_write@L,w
 12343  0240  1D03               	skipz
 12344  0241  2A43               	goto	u6051
 12345  0242  2A44               	goto	u6050
 12346  0243                     u6051:	
 12347  0243  2A6B               	goto	l6963
 12348  0244                     u6050:	
 12349  0244                     l6959:	
 12350                           
 12351                           ;eeprom.c: 87:         return not_transferred() > read_nreg()/2;
 12352  0244  3196  2639  3181   	fcall	_not_transferred
 12353  0247  0020               	movlb	0	; select bank0
 12354  0248  00A8               	movwf	??_ring_buffer_write
 12355  0249  3002               	movlw	2
 12356  024A  00F4               	movwf	___awdiv@divisor
 12357  024B  3000               	movlw	0
 12358  024C  00F5               	movwf	___awdiv@divisor+1
 12359  024D  3193  2374  3181   	fcall	_read_nreg
 12360  0250  0020               	movlb	0	; select bank0
 12361  0251  00A9               	movwf	??_ring_buffer_write+1
 12362  0252  01AA               	clrf	??_ring_buffer_write+2
 12363  0253  0829               	movf	??_ring_buffer_write+1,w
 12364  0254  00F6               	movwf	___awdiv@dividend
 12365  0255  082A               	movf	??_ring_buffer_write+2,w
 12366  0256  00F7               	movwf	___awdiv@dividend+1
 12367  0257  318F  273D  3181   	fcall	___awdiv
 12368  025A  0875               	movf	?___awdiv+1,w
 12369  025B  3A80               	xorlw	128
 12370  025C  0020               	movlb	0	; select bank0
 12371  025D  00AB               	movwf	??_ring_buffer_write+3
 12372  025E  3080               	movlw	128
 12373  025F  022B               	subwf	??_ring_buffer_write+3,w
 12374  0260  1D03               	skipz
 12375  0261  2A64               	goto	u6065
 12376  0262  0828               	movf	??_ring_buffer_write,w
 12377  0263  0274               	subwf	?___awdiv,w
 12378  0264                     u6065:	
 12379  0264  1C03               	skipc
 12380  0265  2A67               	goto	u6061
 12381  0266  2A69               	goto	u6060
 12382  0267                     u6061:	
 12383  0267  3001               	movlw	1
 12384  0268  2A6A               	goto	u6070
 12385  0269                     u6060:	
 12386  0269  3000               	movlw	0
 12387  026A                     u6070:	
 12388  026A  2B28               	goto	l1420
 12389  026B                     l6963:	
 12390                           
 12391                           ;eeprom.c: 90:     if (ring_pos > (0xF00B + DATAEE_ReadByte(0xF001)*5 - 5) ){
 12392  026B  3001               	movlw	1
 12393  026C  00F2               	movwf	DATAEE_ReadByte@bAdd
 12394  026D  30F0               	movlw	240
 12395  026E  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 12396  026F  3193  23C7  3181   	fcall	_DATAEE_ReadByte
 12397  0272  0020               	movlb	0	; select bank0
 12398  0273  00A8               	movwf	??_ring_buffer_write
 12399  0274  01A9               	clrf	??_ring_buffer_write+1
 12400  0275  0828               	movf	??_ring_buffer_write,w
 12401  0276  00F4               	movwf	___wmul@multiplier
 12402  0277  0829               	movf	??_ring_buffer_write+1,w
 12403  0278  00F5               	movwf	___wmul@multiplier+1
 12404  0279  3005               	movlw	5
 12405  027A  00F6               	movwf	___wmul@multiplicand
 12406  027B  3000               	movlw	0
 12407  027C  00F7               	movwf	___wmul@multiplicand+1
 12408  027D  3195  25FB  3181   	fcall	___wmul
 12409  0280  0874               	movf	?___wmul,w
 12410  0281  3E06               	addlw	6
 12411  0282  0020               	movlb	0	; select bank0
 12412  0283  00AA               	movwf	??_ring_buffer_write+2
 12413  0284  30F0               	movlw	240
 12414  0285  3D75               	addwfc	?___wmul+1,w
 12415  0286  00AB               	movwf	??_ring_buffer_write+3
 12416  0287  0830               	movf	ring_buffer_write@ring_pos+1,w
 12417  0288  022B               	subwf	??_ring_buffer_write+3,w
 12418  0289  1D03               	skipz
 12419  028A  2A8D               	goto	u6085
 12420  028B  082F               	movf	ring_buffer_write@ring_pos,w
 12421  028C  022A               	subwf	??_ring_buffer_write+2,w
 12422  028D                     u6085:	
 12423  028D  1803               	skipnc
 12424  028E  2A90               	goto	u6081
 12425  028F  2A91               	goto	u6080
 12426  0290                     u6081:	
 12427  0290  2AA0               	goto	l6969
 12428  0291                     u6080:	
 12429  0291                     l6965:	
 12430                           
 12431                           ;eeprom.c: 91:         ring_pos = 0xF00B;
 12432  0291  300B               	movlw	11
 12433  0292  00AF               	movwf	ring_buffer_write@ring_pos
 12434  0293  30F0               	movlw	240
 12435  0294  00B0               	movwf	ring_buffer_write@ring_pos+1
 12436  0295                     l6967:	
 12437                           
 12438                           ;eeprom.c: 92:         DATAEE_WriteByte(0xF009, 0x55);
 12439  0295  3009               	movlw	9
 12440  0296  00A0               	movwf	DATAEE_WriteByte@bAdd
 12441  0297  30F0               	movlw	240
 12442  0298  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12443  0299  3055               	movlw	85
 12444  029A  00A8               	movwf	??_ring_buffer_write
 12445  029B  0828               	movf	??_ring_buffer_write,w
 12446  029C  00A2               	movwf	DATAEE_WriteByte@bData
 12447  029D  3197  2700  3181   	fcall	_DATAEE_WriteByte
 12448  02A0                     l6969:	
 12449                           
 12450                           ;eeprom.c: 94:     DATAEE_WriteByte(ring_pos , h);
 12451  02A0  0020               	movlb	0	; select bank0
 12452  02A1  0830               	movf	ring_buffer_write@ring_pos+1,w
 12453  02A2  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12454  02A3  082F               	movf	ring_buffer_write@ring_pos,w
 12455  02A4  00A0               	movwf	DATAEE_WriteByte@bAdd
 12456  02A5  082C               	movf	ring_buffer_write@h,w
 12457  02A6  00A8               	movwf	??_ring_buffer_write
 12458  02A7  0828               	movf	??_ring_buffer_write,w
 12459  02A8  00A2               	movwf	DATAEE_WriteByte@bData
 12460  02A9  3197  2700  3181   	fcall	_DATAEE_WriteByte
 12461  02AC                     l6971:	
 12462                           
 12463                           ;eeprom.c: 95:     DATAEE_WriteByte(ring_pos+1, m);
 12464  02AC  0020               	movlb	0	; select bank0
 12465  02AD  082F               	movf	ring_buffer_write@ring_pos,w
 12466  02AE  3E01               	addlw	1
 12467  02AF  00A0               	movwf	DATAEE_WriteByte@bAdd
 12468  02B0  3000               	movlw	0
 12469  02B1  3D30               	addwfc	ring_buffer_write@ring_pos+1,w
 12470  02B2  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12471  02B3  0824               	movf	ring_buffer_write@m,w
 12472  02B4  00A8               	movwf	??_ring_buffer_write
 12473  02B5  0828               	movf	??_ring_buffer_write,w
 12474  02B6  00A2               	movwf	DATAEE_WriteByte@bData
 12475  02B7  3197  2700  3181   	fcall	_DATAEE_WriteByte
 12476  02BA                     l6973:	
 12477                           
 12478                           ;eeprom.c: 96:     DATAEE_WriteByte(ring_pos+2, s);
 12479  02BA  0020               	movlb	0	; select bank0
 12480  02BB  082F               	movf	ring_buffer_write@ring_pos,w
 12481  02BC  3E02               	addlw	2
 12482  02BD  00A0               	movwf	DATAEE_WriteByte@bAdd
 12483  02BE  3000               	movlw	0
 12484  02BF  3D30               	addwfc	ring_buffer_write@ring_pos+1,w
 12485  02C0  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12486  02C1  0825               	movf	ring_buffer_write@s,w
 12487  02C2  00A8               	movwf	??_ring_buffer_write
 12488  02C3  0828               	movf	??_ring_buffer_write,w
 12489  02C4  00A2               	movwf	DATAEE_WriteByte@bData
 12490  02C5  3197  2700  3181   	fcall	_DATAEE_WriteByte
 12491  02C8                     l6975:	
 12492                           
 12493                           ;eeprom.c: 97:     DATAEE_WriteByte(ring_pos+3, T);
 12494  02C8  0020               	movlb	0	; select bank0
 12495  02C9  082F               	movf	ring_buffer_write@ring_pos,w
 12496  02CA  3E03               	addlw	3
 12497  02CB  00A0               	movwf	DATAEE_WriteByte@bAdd
 12498  02CC  3000               	movlw	0
 12499  02CD  3D30               	addwfc	ring_buffer_write@ring_pos+1,w
 12500  02CE  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12501  02CF  0826               	movf	ring_buffer_write@T,w
 12502  02D0  00A8               	movwf	??_ring_buffer_write
 12503  02D1  0828               	movf	??_ring_buffer_write,w
 12504  02D2  00A2               	movwf	DATAEE_WriteByte@bData
 12505  02D3  3197  2700  3181   	fcall	_DATAEE_WriteByte
 12506  02D6                     l6977:	
 12507                           
 12508                           ;eeprom.c: 98:     DATAEE_WriteByte(ring_pos+4, L);
 12509  02D6  0020               	movlb	0	; select bank0
 12510  02D7  082F               	movf	ring_buffer_write@ring_pos,w
 12511  02D8  3E04               	addlw	4
 12512  02D9  00A0               	movwf	DATAEE_WriteByte@bAdd
 12513  02DA  3000               	movlw	0
 12514  02DB  3D30               	addwfc	ring_buffer_write@ring_pos+1,w
 12515  02DC  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12516  02DD  0827               	movf	ring_buffer_write@L,w
 12517  02DE  00A8               	movwf	??_ring_buffer_write
 12518  02DF  0828               	movf	??_ring_buffer_write,w
 12519  02E0  00A2               	movwf	DATAEE_WriteByte@bData
 12520  02E1  3197  2700  3181   	fcall	_DATAEE_WriteByte
 12521  02E4                     l6979:	
 12522                           
 12523                           ;eeprom.c: 101:     DATAEE_WriteByte(0xF00A, (ring_pos+5-0xF00B)/5 );
 12524  02E4  300A               	movlw	10
 12525  02E5  0020               	movlb	0	; select bank0
 12526  02E6  00A0               	movwf	DATAEE_WriteByte@bAdd
 12527  02E7  30F0               	movlw	240
 12528  02E8  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12529  02E9  3005               	movlw	5
 12530  02EA  00F2               	movwf	___lwdiv@divisor
 12531  02EB  3000               	movlw	0
 12532  02EC  00F3               	movwf	___lwdiv@divisor+1
 12533  02ED  082F               	movf	ring_buffer_write@ring_pos,w
 12534  02EE  3EFA               	addlw	250
 12535  02EF  00F4               	movwf	___lwdiv@dividend
 12536  02F0  300F               	movlw	15
 12537  02F1  3D30               	addwfc	ring_buffer_write@ring_pos+1,w
 12538  02F2  00F5               	movwf	___lwdiv@dividend+1
 12539  02F3  318A  2240  3181   	fcall	___lwdiv
 12540  02F6  0872               	movf	?___lwdiv,w
 12541  02F7  0020               	movlb	0	; select bank0
 12542  02F8  00A8               	movwf	??_ring_buffer_write
 12543  02F9  0828               	movf	??_ring_buffer_write,w
 12544  02FA  00A2               	movwf	DATAEE_WriteByte@bData
 12545  02FB  3197  2700  3181   	fcall	_DATAEE_WriteByte
 12546  02FE                     l6981:	
 12547                           
 12548                           ;eeprom.c: 104:     DATAEE_WriteByte(0xF000, DATAEE_ReadByte(0xF000) + ((ring_pos+5-0xF0
      +                          0B)/5) - ring_pos_);
 12549  02FE  3000               	movlw	0
 12550  02FF  0020               	movlb	0	; select bank0
 12551  0300  00A0               	movwf	DATAEE_WriteByte@bAdd
 12552  0301  30F0               	movlw	240
 12553  0302  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12554  0303  3005               	movlw	5
 12555  0304  00F2               	movwf	___lwdiv@divisor
 12556  0305  3000               	movlw	0
 12557  0306  00F3               	movwf	___lwdiv@divisor+1
 12558  0307  082F               	movf	ring_buffer_write@ring_pos,w
 12559  0308  3EFA               	addlw	250
 12560  0309  00F4               	movwf	___lwdiv@dividend
 12561  030A  300F               	movlw	15
 12562  030B  3D30               	addwfc	ring_buffer_write@ring_pos+1,w
 12563  030C  00F5               	movwf	___lwdiv@dividend+1
 12564  030D  318A  2240  3181   	fcall	___lwdiv
 12565  0310  0872               	movf	?___lwdiv,w
 12566  0311  0020               	movlb	0	; select bank0
 12567  0312  00A8               	movwf	??_ring_buffer_write
 12568  0313  0873               	movf	?___lwdiv+1,w
 12569  0314  00A9               	movwf	??_ring_buffer_write+1
 12570  0315  3000               	movlw	0
 12571  0316  00F2               	movwf	DATAEE_ReadByte@bAdd
 12572  0317  30F0               	movlw	240
 12573  0318  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 12574  0319  3193  23C7  3181   	fcall	_DATAEE_ReadByte
 12575  031C  0020               	movlb	0	; select bank0
 12576  031D  0728               	addwf	??_ring_buffer_write,w
 12577  031E  00AA               	movwf	??_ring_buffer_write+2
 12578  031F  082D               	movf	ring_buffer_write@ring_pos_,w
 12579  0320  022A               	subwf	??_ring_buffer_write+2,w
 12580  0321  00AB               	movwf	??_ring_buffer_write+3
 12581  0322  082B               	movf	??_ring_buffer_write+3,w
 12582  0323  00A2               	movwf	DATAEE_WriteByte@bData
 12583  0324  3197  2700  3181   	fcall	_DATAEE_WriteByte
 12584  0327  2A44               	goto	l6959
 12585  0328                     l1420:	
 12586  0328  0008               	return
 12587  0329                     __end_of_ring_buffer_write:	
 12588                           
 12589                           	psect	text3
 12590  1639                     __ptext3:	
 12591 ;; *************** function _not_transferred *****************
 12592 ;; Defined at:
 12593 ;;		line 170 in file "eeprom.c"
 12594 ;; Parameters:    Size  Location     Type
 12595 ;;		None
 12596 ;; Auto vars:     Size  Location     Type
 12597 ;;  unread          1    8[COMMON] unsigned char 
 12598 ;; Return value:  Size  Location     Type
 12599 ;;                  1    wreg      unsigned char 
 12600 ;; Registers used:
 12601 ;;		wreg, status,2, status,0, pclath, cstack
 12602 ;; Tracked objects:
 12603 ;;		On entry : 0/0
 12604 ;;		On exit  : 0/0
 12605 ;;		Unchanged: 0/0
 12606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12608 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12610 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12611 ;;Total ram usage:        5 bytes
 12612 ;; Hardware stack levels used:    1
 12613 ;; Hardware stack levels required when called:    8
 12614 ;; This function calls:
 12615 ;;		_read_iwrt
 12616 ;;		_read_nreg
 12617 ;; This function is called by:
 12618 ;;		_ring_buffer_write
 12619 ;; This function uses a non-reentrant model
 12620 ;;
 12621                           
 12622                           
 12623                           ;psect for function _not_transferred
 12624  1639                     _not_transferred:	
 12625  1639                     l6765:	
 12626                           ;incstack = 0
 12627                           ; Regs used in _not_transferred: [wreg+status,2+status,0+pclath+cstack]
 12628                           
 12629                           
 12630                           ;eeprom.c: 171:     uint8_t unread = read_iwrt() - iread;
 12631  1639  3193  238C  3196   	fcall	_read_iwrt
 12632  163C  00F4               	movwf	??_not_transferred
 12633  163D  087A               	movf	_iread,w	;volatile
 12634  163E  0274               	subwf	??_not_transferred,w
 12635  163F  00F5               	movwf	??_not_transferred+1
 12636  1640  0875               	movf	??_not_transferred+1,w
 12637  1641  00F8               	movwf	not_transferred@unread
 12638  1642                     l6767:	
 12639                           
 12640                           ;eeprom.c: 172:     return unread > 0 ? unread : read_nreg() + unread;
 12641  1642  0878               	movf	not_transferred@unread,w
 12642  1643  1D03               	btfss	3,2
 12643  1644  2E46               	goto	u5651
 12644  1645  2E47               	goto	u5650
 12645  1646                     u5651:	
 12646  1646  2E4F               	goto	l6771
 12647  1647                     u5650:	
 12648  1647                     l6769:	
 12649  1647  3193  2374  3196   	fcall	_read_nreg
 12650  164A  0778               	addwf	not_transferred@unread,w
 12651  164B  00F6               	movwf	_not_transferred$2652
 12652  164C  01F7               	clrf	_not_transferred$2652+1
 12653  164D  0DF7               	rlf	_not_transferred$2652+1,f
 12654  164E  2E56               	goto	l1483
 12655  164F                     l6771:	
 12656  164F  0878               	movf	not_transferred@unread,w
 12657  1650  00F4               	movwf	??_not_transferred
 12658  1651  01F5               	clrf	??_not_transferred+1
 12659  1652  0874               	movf	??_not_transferred,w
 12660  1653  00F6               	movwf	_not_transferred$2652
 12661  1654  0875               	movf	??_not_transferred+1,w
 12662  1655  00F7               	movwf	_not_transferred$2652+1
 12663  1656                     l1483:	
 12664  1656  0876               	movf	_not_transferred$2652,w
 12665  1657                     l1484:	
 12666  1657  0008               	return
 12667  1658                     __end_of_not_transferred:	
 12668                           
 12669                           	psect	text4
 12670  0A40                     __ptext4:	
 12671 ;; *************** function ___lwdiv *****************
 12672 ;; Defined at:
 12673 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/lwdiv.c"
 12674 ;; Parameters:    Size  Location     Type
 12675 ;;  divisor         2    2[COMMON] unsigned int 
 12676 ;;  dividend        2    4[COMMON] unsigned int 
 12677 ;; Auto vars:     Size  Location     Type
 12678 ;;  quotient        2    8[COMMON] unsigned int 
 12679 ;;  counter         1    7[COMMON] unsigned char 
 12680 ;; Return value:  Size  Location     Type
 12681 ;;                  2    2[COMMON] unsigned int 
 12682 ;; Registers used:
 12683 ;;		wreg, status,2, status,0
 12684 ;; Tracked objects:
 12685 ;;		On entry : 0/0
 12686 ;;		On exit  : 0/0
 12687 ;;		Unchanged: 0/0
 12688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12689 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12690 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12692 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12693 ;;Total ram usage:        8 bytes
 12694 ;; Hardware stack levels used:    1
 12695 ;; Hardware stack levels required when called:    6
 12696 ;; This function calls:
 12697 ;;		Nothing
 12698 ;; This function is called by:
 12699 ;;		_ring_buffer_write
 12700 ;; This function uses a non-reentrant model
 12701 ;;
 12702                           
 12703                           
 12704                           ;psect for function ___lwdiv
 12705  0A40                     ___lwdiv:	
 12706  0A40                     l6817:	
 12707                           ;incstack = 0
 12708                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 12709                           
 12710  0A40  01F8               	clrf	___lwdiv@quotient
 12711  0A41  01F9               	clrf	___lwdiv@quotient+1
 12712  0A42                     l6819:	
 12713  0A42  0872               	movf	___lwdiv@divisor,w
 12714  0A43  0473               	iorwf	___lwdiv@divisor+1,w
 12715  0A44  1903               	btfsc	3,2
 12716  0A45  2A47               	goto	u5671
 12717  0A46  2A48               	goto	u5670
 12718  0A47                     u5671:	
 12719  0A47  2A77               	goto	l6839
 12720  0A48                     u5670:	
 12721  0A48                     l6821:	
 12722  0A48  01F7               	clrf	___lwdiv@counter
 12723  0A49  0AF7               	incf	___lwdiv@counter,f
 12724  0A4A  2A54               	goto	l6827
 12725  0A4B                     l6823:	
 12726  0A4B  3001               	movlw	1
 12727  0A4C                     u5685:	
 12728  0A4C  35F2               	lslf	___lwdiv@divisor,f
 12729  0A4D  0DF3               	rlf	___lwdiv@divisor+1,f
 12730  0A4E  0B89               	decfsz	9,f
 12731  0A4F  2A4C               	goto	u5685
 12732  0A50                     l6825:	
 12733  0A50  3001               	movlw	1
 12734  0A51  00F6               	movwf	??___lwdiv
 12735  0A52  0876               	movf	??___lwdiv,w
 12736  0A53  07F7               	addwf	___lwdiv@counter,f
 12737  0A54                     l6827:	
 12738  0A54  1FF3               	btfss	___lwdiv@divisor+1,7
 12739  0A55  2A57               	goto	u5691
 12740  0A56  2A58               	goto	u5690
 12741  0A57                     u5691:	
 12742  0A57  2A4B               	goto	l6823
 12743  0A58                     u5690:	
 12744  0A58                     l6829:	
 12745  0A58  3001               	movlw	1
 12746  0A59                     u5705:	
 12747  0A59  35F8               	lslf	___lwdiv@quotient,f
 12748  0A5A  0DF9               	rlf	___lwdiv@quotient+1,f
 12749  0A5B  0B89               	decfsz	9,f
 12750  0A5C  2A59               	goto	u5705
 12751  0A5D  0873               	movf	___lwdiv@divisor+1,w
 12752  0A5E  0275               	subwf	___lwdiv@dividend+1,w
 12753  0A5F  1D03               	skipz
 12754  0A60  2A63               	goto	u5715
 12755  0A61  0872               	movf	___lwdiv@divisor,w
 12756  0A62  0274               	subwf	___lwdiv@dividend,w
 12757  0A63                     u5715:	
 12758  0A63  1C03               	skipc
 12759  0A64  2A66               	goto	u5711
 12760  0A65  2A67               	goto	u5710
 12761  0A66                     u5711:	
 12762  0A66  2A6C               	goto	l6835
 12763  0A67                     u5710:	
 12764  0A67                     l6831:	
 12765  0A67  0872               	movf	___lwdiv@divisor,w
 12766  0A68  02F4               	subwf	___lwdiv@dividend,f
 12767  0A69  0873               	movf	___lwdiv@divisor+1,w
 12768  0A6A  3BF5               	subwfb	___lwdiv@dividend+1,f
 12769  0A6B                     l6833:	
 12770  0A6B  1478               	bsf	___lwdiv@quotient,0
 12771  0A6C                     l6835:	
 12772  0A6C  3001               	movlw	1
 12773  0A6D                     u5725:	
 12774  0A6D  36F3               	lsrf	___lwdiv@divisor+1,f
 12775  0A6E  0CF2               	rrf	___lwdiv@divisor,f
 12776  0A6F  0B89               	decfsz	9,f
 12777  0A70  2A6D               	goto	u5725
 12778  0A71                     l6837:	
 12779  0A71  3001               	movlw	1
 12780  0A72  02F7               	subwf	___lwdiv@counter,f
 12781  0A73  1D03               	btfss	3,2
 12782  0A74  2A76               	goto	u5731
 12783  0A75  2A77               	goto	u5730
 12784  0A76                     u5731:	
 12785  0A76  2A58               	goto	l6829
 12786  0A77                     u5730:	
 12787  0A77                     l6839:	
 12788  0A77  0879               	movf	___lwdiv@quotient+1,w
 12789  0A78  00F3               	movwf	?___lwdiv+1
 12790  0A79  0878               	movf	___lwdiv@quotient,w
 12791  0A7A  00F2               	movwf	?___lwdiv
 12792  0A7B                     l2177:	
 12793  0A7B  0008               	return
 12794  0A7C                     __end_of___lwdiv:	
 12795                           
 12796                           	psect	text5
 12797  0C14                     __ptext5:	
 12798 ;; *************** function _read_msgs *****************
 12799 ;; Defined at:
 12800 ;;		line 26 in file "communications.c"
 12801 ;; Parameters:    Size  Location     Type
 12802 ;;		None
 12803 ;; Auto vars:     Size  Location     Type
 12804 ;;  aux             8   46[BANK0 ] unsigned char [8]
 12805 ;;  i               2   54[BANK0 ] int 
 12806 ;;  cmd             1   56[BANK0 ] unsigned char 
 12807 ;; Return value:  Size  Location     Type
 12808 ;;                  1    wreg      void 
 12809 ;; Registers used:
 12810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12811 ;; Tracked objects:
 12812 ;;		On entry : 0/0
 12813 ;;		On exit  : 0/0
 12814 ;;		Unchanged: 0/0
 12815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12817 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12818 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12819 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12820 ;;Total ram usage:       12 bytes
 12821 ;; Hardware stack levels used:    1
 12822 ;; Hardware stack levels required when called:   12
 12823 ;; This function calls:
 12824 ;;		_EUSART_Read
 12825 ;;		_EUSART_is_rx_ready
 12826 ;;		_interpret_message
 12827 ;; This function is called by:
 12828 ;;		_main
 12829 ;; This function uses a non-reentrant model
 12830 ;;
 12831                           
 12832                           
 12833                           ;psect for function _read_msgs
 12834  0C14                     _read_msgs:	
 12835  0C14                     l7009:	
 12836                           ;incstack = 0
 12837                           ; Regs used in _read_msgs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12838                           
 12839                           
 12840                           ;communications.c: 29:     int i = 0;
 12841  0C14  0020               	movlb	0	; select bank0
 12842  0C15  01D6               	clrf	read_msgs@i
 12843  0C16  01D7               	clrf	read_msgs@i+1
 12844  0C17                     l7011:	
 12845                           
 12846                           ;communications.c: 32:         cmd = EUSART_Read();
 12847  0C17  3197  27A5  318C   	fcall	_EUSART_Read
 12848  0C1A  0020               	movlb	0	; select bank0
 12849  0C1B  00CD               	movwf	??_read_msgs
 12850  0C1C  084D               	movf	??_read_msgs,w
 12851  0C1D  00D8               	movwf	read_msgs@cmd
 12852  0C1E                     l7013:	
 12853                           
 12854                           ;communications.c: 34:     } while (cmd != 0xFD && EUSART_is_rx_ready());
 12855  0C1E  30FD               	movlw	253
 12856  0C1F  0658               	xorwf	read_msgs@cmd,w
 12857  0C20  1903               	btfsc	3,2
 12858  0C21  2C23               	goto	u6111
 12859  0C22  2C24               	goto	u6110
 12860  0C23                     u6111:	
 12861  0C23  2C2C               	goto	l7017
 12862  0C24                     u6110:	
 12863  0C24                     l7015:	
 12864  0C24  3193  239D  318C   	fcall	_EUSART_is_rx_ready
 12865  0C27  3A00               	xorlw	0
 12866  0C28  1D03               	skipz
 12867  0C29  2C2B               	goto	u6121
 12868  0C2A  2C2C               	goto	u6120
 12869  0C2B                     u6121:	
 12870  0C2B  2C17               	goto	l7011
 12871  0C2C                     u6120:	
 12872  0C2C                     l7017:	
 12873                           
 12874                           ;communications.c: 36:     for(i = 0; cmd != 0xFE && EUSART_is_rx_ready(); i++) {
 12875  0C2C  0020               	movlb	0	; select bank0
 12876  0C2D  01D6               	clrf	read_msgs@i
 12877  0C2E  01D7               	clrf	read_msgs@i+1
 12878  0C2F  2C43               	goto	l7025
 12879  0C30                     l7019:	
 12880                           
 12881                           ;communications.c: 37:         cmd = EUSART_Read();
 12882  0C30  3197  27A5  318C   	fcall	_EUSART_Read
 12883  0C33  0020               	movlb	0	; select bank0
 12884  0C34  00CD               	movwf	??_read_msgs
 12885  0C35  084D               	movf	??_read_msgs,w
 12886  0C36  00D8               	movwf	read_msgs@cmd
 12887  0C37                     l7021:	
 12888                           
 12889                           ;communications.c: 38:         aux[i] = cmd;
 12890  0C37  0858               	movf	read_msgs@cmd,w
 12891  0C38  00CD               	movwf	??_read_msgs
 12892  0C39  0856               	movf	read_msgs@i,w
 12893  0C3A  3E4E               	addlw	(low (read_msgs@aux| 0))& (0+255)
 12894  0C3B  0086               	movwf	6
 12895  0C3C  0187               	clrf	7
 12896  0C3D  084D               	movf	??_read_msgs,w
 12897  0C3E  0081               	movwf	1
 12898  0C3F                     l7023:	
 12899                           
 12900                           ;communications.c: 39:     }
 12901  0C3F  3001               	movlw	1
 12902  0C40  07D6               	addwf	read_msgs@i,f
 12903  0C41  3000               	movlw	0
 12904  0C42  3DD7               	addwfc	read_msgs@i+1,f
 12905  0C43                     l7025:	
 12906  0C43  30FE               	movlw	254
 12907  0C44  0658               	xorwf	read_msgs@cmd,w
 12908  0C45  1903               	btfsc	3,2
 12909  0C46  2C48               	goto	u6131
 12910  0C47  2C49               	goto	u6130
 12911  0C48                     u6131:	
 12912  0C48  2C51               	goto	l7029
 12913  0C49                     u6130:	
 12914  0C49                     l7027:	
 12915  0C49  3193  239D  318C   	fcall	_EUSART_is_rx_ready
 12916  0C4C  3A00               	xorlw	0
 12917  0C4D  1D03               	skipz
 12918  0C4E  2C50               	goto	u6141
 12919  0C4F  2C51               	goto	u6140
 12920  0C50                     u6141:	
 12921  0C50  2C30               	goto	l7019
 12922  0C51                     u6140:	
 12923  0C51                     l7029:	
 12924                           
 12925                           ;communications.c: 40:     aux[i] = '\0';
 12926  0C51  0020               	movlb	0	; select bank0
 12927  0C52  0856               	movf	read_msgs@i,w
 12928  0C53  3E4E               	addlw	(low (read_msgs@aux| 0))& (0+255)
 12929  0C54  0086               	movwf	6
 12930  0C55  0187               	clrf	7
 12931  0C56  0181               	clrf	1
 12932  0C57                     l7031:	
 12933                           
 12934                           ;communications.c: 42:     interpret_message(aux);
 12935  0C57  304E               	movlw	(low (read_msgs@aux| 0))& (0+255)
 12936  0C58  3186  26E1  318C   	fcall	_interpret_message
 12937  0C5B                     l1596:	
 12938  0C5B  0008               	return
 12939  0C5C                     __end_of_read_msgs:	
 12940                           
 12941                           	psect	text6
 12942  06E1                     __ptext6:	
 12943 ;; *************** function _interpret_message *****************
 12944 ;; Defined at:
 12945 ;;		line 45 in file "communications.c"
 12946 ;; Parameters:    Size  Location     Type
 12947 ;;  msg             1    wreg     PTR unsigned char 
 12948 ;;		 -> read_msgs@aux(8), 
 12949 ;; Auto vars:     Size  Location     Type
 12950 ;;  msg             1   43[BANK0 ] PTR unsigned char 
 12951 ;;		 -> read_msgs@aux(8), 
 12952 ;;  data            1   44[BANK0 ] PTR unsigned char 
 12953 ;;		 -> NULL(0), read_msgs@aux(8), 
 12954 ;;  cmd             1   42[BANK0 ] unsigned char 
 12955 ;; Return value:  Size  Location     Type
 12956 ;;                  1    wreg      void 
 12957 ;; Registers used:
 12958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12959 ;; Tracked objects:
 12960 ;;		On entry : 0/0
 12961 ;;		On exit  : 0/0
 12962 ;;		Unchanged: 0/0
 12963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12965 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12966 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12967 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12968 ;;Total ram usage:        5 bytes
 12969 ;; Hardware stack levels used:    1
 12970 ;; Hardware stack levels required when called:   11
 12971 ;; This function calls:
 12972 ;;		_define_alarm
 12973 ;;		_modify_pmon
 12974 ;;		_modify_time_alarm
 12975 ;;		_read_alarms
 12976 ;;		_read_clock
 12977 ;;		_read_param
 12978 ;;		_read_temp_lum
 12979 ;;		_registers_info
 12980 ;;		_send_confirmation
 12981 ;;		_set_clock
 12982 ;;		_strlen
 12983 ;;		_switch_alarm
 12984 ;;		_transfer_n_registers
 12985 ;;		_transfer_registers_i
 12986 ;; This function is called by:
 12987 ;;		_read_msgs
 12988 ;; This function uses a non-reentrant model
 12989 ;;
 12990                           
 12991                           
 12992                           ;psect for function _interpret_message
 12993  06E1                     _interpret_message:	
 12994                           
 12995                           ;incstack = 0
 12996                           ; Regs used in _interpret_message: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12997                           ;interpret_message@msg stored from wreg
 12998  06E1  0020               	movlb	0	; select bank0
 12999  06E2  00CB               	movwf	interpret_message@msg
 13000  06E3                     l6775:	
 13001                           
 13002                           ;communications.c: 46:     uint8_t cmd = msg[0];
 13003  06E3  084B               	movf	interpret_message@msg,w
 13004  06E4  0086               	movwf	6
 13005  06E5  0187               	clrf	7
 13006  06E6  0801               	movf	1,w
 13007  06E7  00C8               	movwf	??_interpret_message
 13008  06E8  0848               	movf	??_interpret_message,w
 13009  06E9  00CA               	movwf	interpret_message@cmd
 13010  06EA                     l6777:	
 13011                           
 13012                           ;communications.c: 47:     char * data = strlen(msg) != 1 ? msg + 1 : ((void*)0);
 13013  06EA  084B               	movf	interpret_message@msg,w
 13014  06EB  3195  253C  3186   	fcall	_strlen
 13015  06EE  0372               	decf	?_strlen,w
 13016  06EF  0473               	iorwf	?_strlen+1,w
 13017  06F0  1D03               	btfss	3,2
 13018  06F1  2EF3               	goto	u5661
 13019  06F2  2EF4               	goto	u5660
 13020  06F3                     u5661:	
 13021  06F3  2EF7               	goto	l6781
 13022  06F4                     u5660:	
 13023  06F4                     l6779:	
 13024  06F4  0020               	movlb	0	; select bank0
 13025  06F5  01CC               	clrf	interpret_message@data
 13026  06F6  2F3E               	goto	l6811
 13027  06F7                     l6781:	
 13028  06F7  0020               	movlb	0	; select bank0
 13029  06F8  084B               	movf	interpret_message@msg,w
 13030  06F9  3E01               	addlw	1
 13031  06FA  00C8               	movwf	??_interpret_message
 13032  06FB  0848               	movf	??_interpret_message,w
 13033  06FC  00CC               	movwf	interpret_message@data
 13034  06FD  2F3E               	goto	l6811
 13035  06FE                     l6783:	
 13036                           
 13037                           ;communications.c: 51:             read_clock();
 13038  06FE  3188  20C6  3186   	fcall	_read_clock
 13039                           
 13040                           ;communications.c: 52:             break;
 13041  0701  2F6C               	goto	l1618
 13042  0702                     l6785:	
 13043                           
 13044                           ;communications.c: 54:             set_clock(data);
 13045  0702  084C               	movf	interpret_message@data,w
 13046  0703  3187  276D  3186   	fcall	_set_clock
 13047                           
 13048                           ;communications.c: 55:             break;
 13049  0706  2F6C               	goto	l1618
 13050  0707                     l6787:	
 13051                           
 13052                           ;communications.c: 57:             read_temp_lum();
 13053  0707  3196  261A  3186   	fcall	_read_temp_lum
 13054                           
 13055                           ;communications.c: 58:             break;
 13056  070A  2F6C               	goto	l1618
 13057  070B                     l6789:	
 13058                           
 13059                           ;communications.c: 60:             read_param();
 13060  070B  3195  25C0  3186   	fcall	_read_param
 13061                           
 13062                           ;communications.c: 61:             break;
 13063  070E  2F6C               	goto	l1618
 13064  070F                     l6791:	
 13065                           
 13066                           ;communications.c: 63:             modify_pmon(data);
 13067  070F  084C               	movf	interpret_message@data,w
 13068  0710  3189  212A  3186   	fcall	_modify_pmon
 13069                           
 13070                           ;communications.c: 64:             break;
 13071  0713  2F6C               	goto	l1618
 13072  0714                     l6793:	
 13073                           
 13074                           ;communications.c: 66:             modify_time_alarm(data);
 13075  0714  084C               	movf	interpret_message@data,w
 13076  0715  3189  2196  3186   	fcall	_modify_time_alarm
 13077                           
 13078                           ;communications.c: 67:             break;
 13079  0718  2F6C               	goto	l1618
 13080  0719                     l6795:	
 13081                           
 13082                           ;communications.c: 69:             read_alarms();
 13083  0719  3196  26BA  3186   	fcall	_read_alarms
 13084                           
 13085                           ;communications.c: 70:             break;
 13086  071C  2F6C               	goto	l1618
 13087  071D                     l6797:	
 13088                           
 13089                           ;communications.c: 72:             define_alarm(data);
 13090  071D  084C               	movf	interpret_message@data,w
 13091  071E  318A  22BD  3186   	fcall	_define_alarm
 13092                           
 13093                           ;communications.c: 73:             break;
 13094  0721  2F6C               	goto	l1618
 13095  0722                     l6799:	
 13096                           
 13097                           ;communications.c: 75:             switch_alarm(data);
 13098  0722  084C               	movf	interpret_message@data,w
 13099  0723  3189  2160  3186   	fcall	_switch_alarm
 13100                           
 13101                           ;communications.c: 76:             break;
 13102  0726  2F6C               	goto	l1618
 13103  0727                     l6801:	
 13104                           
 13105                           ;communications.c: 78:             registers_info();
 13106  0727  318E  2631  3186   	fcall	_registers_info
 13107                           
 13108                           ;communications.c: 79:             break;
 13109  072A  2F6C               	goto	l1618
 13110  072B                     l6803:	
 13111                           
 13112                           ;communications.c: 81:             transfer_n_registers(data);
 13113  072B  084C               	movf	interpret_message@data,w
 13114  072C  318F  279D  3186   	fcall	_transfer_n_registers
 13115                           
 13116                           ;communications.c: 82:             break;
 13117  072F  2F6C               	goto	l1618
 13118  0730                     l6805:	
 13119                           
 13120                           ;communications.c: 84:             transfer_registers_i(data);
 13121  0730  084C               	movf	interpret_message@data,w
 13122  0731  3185  25B6  3186   	fcall	_transfer_registers_i
 13123                           
 13124                           ;communications.c: 85:             break;
 13125  0734  2F6C               	goto	l1618
 13126  0735                     l6807:	
 13127                           
 13128                           ;communications.c: 87:             send_confirmation(cmd, 0xFF);
 13129  0735  30FF               	movlw	255
 13130  0736  00C8               	movwf	??_interpret_message
 13131  0737  0848               	movf	??_interpret_message,w
 13132  0738  00F8               	movwf	send_confirmation@error
 13133  0739  084A               	movf	interpret_message@cmd,w
 13134  073A  3195  250F  3186   	fcall	_send_confirmation
 13135                           
 13136                           ;communications.c: 88:             break;
 13137  073D  2F6C               	goto	l1618
 13138  073E                     l6811:	
 13139  073E  084A               	movf	interpret_message@cmd,w
 13140  073F  00C8               	movwf	??_interpret_message
 13141  0740  01C9               	clrf	??_interpret_message+1
 13142                           
 13143                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13144                           ; Switch size 1, requested type "simple"
 13145                           ; Number of cases is 1, Range of values is 0 to 0
 13146                           ; switch strategies available:
 13147                           ; Name         Instructions Cycles
 13148                           ; simple_byte            4     3 (average)
 13149                           ; direct_byte            8     6 (fixed)
 13150                           ; jumptable            260     6 (fixed)
 13151                           ;	Chosen strategy is simple_byte
 13152  0741  0849               	movf	??_interpret_message+1,w
 13153  0742  3A00               	xorlw	0	; case 0
 13154  0743  1903               	skipnz
 13155  0744  2F46               	goto	l7255
 13156  0745  2F35               	goto	l6807
 13157  0746                     l7255:	
 13158                           
 13159                           ; Switch size 1, requested type "simple"
 13160                           ; Number of cases is 12, Range of values is 192 to 203
 13161                           ; switch strategies available:
 13162                           ; Name         Instructions Cycles
 13163                           ; direct_byte           33     9 (fixed)
 13164                           ; simple_byte           37    19 (average)
 13165                           ; jumptable            263     9 (fixed)
 13166                           ;	Chosen strategy is simple_byte
 13167  0746  0848               	movf	??_interpret_message,w
 13168  0747  3AC0               	xorlw	192	; case 192
 13169  0748  1903               	skipnz
 13170  0749  2EFE               	goto	l6783
 13171  074A  3A01               	xorlw	1	; case 193
 13172  074B  1903               	skipnz
 13173  074C  2F02               	goto	l6785
 13174  074D  3A03               	xorlw	3	; case 194
 13175  074E  1903               	skipnz
 13176  074F  2F07               	goto	l6787
 13177  0750  3A01               	xorlw	1	; case 195
 13178  0751  1903               	skipnz
 13179  0752  2F0B               	goto	l6789
 13180  0753  3A07               	xorlw	7	; case 196
 13181  0754  1903               	skipnz
 13182  0755  2F0F               	goto	l6791
 13183  0756  3A01               	xorlw	1	; case 197
 13184  0757  1903               	skipnz
 13185  0758  2F14               	goto	l6793
 13186  0759  3A03               	xorlw	3	; case 198
 13187  075A  1903               	skipnz
 13188  075B  2F19               	goto	l6795
 13189  075C  3A01               	xorlw	1	; case 199
 13190  075D  1903               	skipnz
 13191  075E  2F1D               	goto	l6797
 13192  075F  3A0F               	xorlw	15	; case 200
 13193  0760  1903               	skipnz
 13194  0761  2F22               	goto	l6799
 13195  0762  3A01               	xorlw	1	; case 201
 13196  0763  1903               	skipnz
 13197  0764  2F27               	goto	l6801
 13198  0765  3A03               	xorlw	3	; case 202
 13199  0766  1903               	skipnz
 13200  0767  2F2B               	goto	l6803
 13201  0768  3A01               	xorlw	1	; case 203
 13202  0769  1903               	skipnz
 13203  076A  2F30               	goto	l6805
 13204  076B  2F35               	goto	l6807
 13205  076C                     l1618:	
 13206  076C  0008               	return
 13207  076D                     __end_of_interpret_message:	
 13208                           
 13209                           	psect	text7
 13210  05B6                     __ptext7:	
 13211 ;; *************** function _transfer_registers_i *****************
 13212 ;; Defined at:
 13213 ;;		line 185 in file "communications.c"
 13214 ;; Parameters:    Size  Location     Type
 13215 ;;  data            1    wreg     PTR unsigned char 
 13216 ;;		 -> NULL(0), read_msgs@aux(8), 
 13217 ;; Auto vars:     Size  Location     Type
 13218 ;;  data            1   39[BANK0 ] PTR unsigned char 
 13219 ;;		 -> NULL(0), read_msgs@aux(8), 
 13220 ;;  nr              1   38[BANK0 ] unsigned char 
 13221 ;;  i               1   37[BANK0 ] unsigned char 
 13222 ;;  wi              1   36[BANK0 ] unsigned char 
 13223 ;;  n               1   33[BANK0 ] unsigned char 
 13224 ;;  N               1   32[BANK0 ] unsigned char 
 13225 ;;  sanity          1    0        _Bool 
 13226 ;;  ri              1    0        unsigned char 
 13227 ;; Return value:  Size  Location     Type
 13228 ;;                  1    wreg      void 
 13229 ;; Registers used:
 13230 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13231 ;; Tracked objects:
 13232 ;;		On entry : 0/0
 13233 ;;		On exit  : 0/0
 13234 ;;		Unchanged: 0/0
 13235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13237 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13238 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13239 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13240 ;;Total ram usage:       13 bytes
 13241 ;; Hardware stack levels used:    1
 13242 ;; Hardware stack levels required when called:   10
 13243 ;; This function calls:
 13244 ;;		___awmod
 13245 ;;		_putch
 13246 ;;		_read_iwrt
 13247 ;;		_read_nreg
 13248 ;;		_ring_buffer_laped
 13249 ;;		_send_confirmation
 13250 ;;		_strlen
 13251 ;;		_transfer_registers
 13252 ;; This function is called by:
 13253 ;;		_interpret_message
 13254 ;; This function uses a non-reentrant model
 13255 ;;
 13256                           
 13257                           
 13258                           ;psect for function _transfer_registers_i
 13259  05B6                     _transfer_registers_i:	
 13260                           
 13261                           ;incstack = 0
 13262                           ; Regs used in _transfer_registers_i: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13263                           ;transfer_registers_i@data stored from wreg
 13264  05B6  0020               	movlb	0	; select bank0
 13265  05B7  00C7               	movwf	transfer_registers_i@data
 13266  05B8                     l6415:	
 13267                           
 13268                           ;communications.c: 186:     uint8_t N = read_nreg(), wi = read_iwrt(), nr = ring_buffer_
      +                          laped() ? N : wi, ri = iread, n, i;
 13269  05B8  3193  2374  3185   	fcall	_read_nreg
 13270  05BB  0020               	movlb	0	; select bank0
 13271  05BC  00BB               	movwf	??_transfer_registers_i
 13272  05BD  083B               	movf	??_transfer_registers_i,w
 13273  05BE  00C0               	movwf	transfer_registers_i@N
 13274  05BF  3193  238C  3185   	fcall	_read_iwrt
 13275  05C2  0020               	movlb	0	; select bank0
 13276  05C3  00BB               	movwf	??_transfer_registers_i
 13277  05C4  083B               	movf	??_transfer_registers_i,w
 13278  05C5  00C4               	movwf	transfer_registers_i@wi
 13279  05C6  3194  2442  3185   	fcall	_ring_buffer_laped
 13280  05C9  3A00               	xorlw	0
 13281  05CA  1D03               	skipz
 13282  05CB  2DCD               	goto	u5371
 13283  05CC  2DCE               	goto	u5370
 13284  05CD                     u5371:	
 13285  05CD  2DD7               	goto	l6419
 13286  05CE                     u5370:	
 13287  05CE                     l6417:	
 13288  05CE  0020               	movlb	0	; select bank0
 13289  05CF  0844               	movf	transfer_registers_i@wi,w
 13290  05D0  00BB               	movwf	??_transfer_registers_i
 13291  05D1  01BC               	clrf	??_transfer_registers_i+1
 13292  05D2  083B               	movf	??_transfer_registers_i,w
 13293  05D3  00C2               	movwf	_transfer_registers_i$2842
 13294  05D4  083C               	movf	??_transfer_registers_i+1,w
 13295  05D5  00C3               	movwf	_transfer_registers_i$2842+1
 13296  05D6  2DDF               	goto	l1695
 13297  05D7                     l6419:	
 13298  05D7  0020               	movlb	0	; select bank0
 13299  05D8  0840               	movf	transfer_registers_i@N,w
 13300  05D9  00BB               	movwf	??_transfer_registers_i
 13301  05DA  01BC               	clrf	??_transfer_registers_i+1
 13302  05DB  083B               	movf	??_transfer_registers_i,w
 13303  05DC  00C2               	movwf	_transfer_registers_i$2842
 13304  05DD  083C               	movf	??_transfer_registers_i+1,w
 13305  05DE  00C3               	movwf	_transfer_registers_i$2842+1
 13306  05DF                     l1695:	
 13307  05DF  0842               	movf	_transfer_registers_i$2842,w
 13308  05E0  00BB               	movwf	??_transfer_registers_i
 13309  05E1  083B               	movf	??_transfer_registers_i,w
 13310  05E2  00C6               	movwf	transfer_registers_i@nr
 13311  05E3                     l6421:	
 13312  05E3                     l6423:	
 13313                           
 13314                           ;communications.c: 189:     if(!data || strlen(data) != 2 || (n = data[0]) > nr || (i = 
      +                          data[1]) > nr - 1) {
 13315  05E3  0847               	movf	transfer_registers_i@data,w
 13316  05E4  1903               	btfsc	3,2
 13317  05E5  2DE7               	goto	u5381
 13318  05E6  2DE8               	goto	u5380
 13319  05E7                     u5381:	
 13320  05E7  2E17               	goto	l6431
 13321  05E8                     u5380:	
 13322  05E8                     l6425:	
 13323  05E8  0847               	movf	transfer_registers_i@data,w
 13324  05E9  3195  253C  3185   	fcall	_strlen
 13325  05EC  3002               	movlw	2
 13326  05ED  0672               	xorwf	?_strlen,w
 13327  05EE  0473               	iorwf	?_strlen+1,w
 13328  05EF  1D03               	btfss	3,2
 13329  05F0  2DF2               	goto	u5391
 13330  05F1  2DF3               	goto	u5390
 13331  05F2                     u5391:	
 13332  05F2  2E17               	goto	l6431
 13333  05F3                     u5390:	
 13334  05F3                     l6427:	
 13335  05F3  0020               	movlb	0	; select bank0
 13336  05F4  0847               	movf	transfer_registers_i@data,w
 13337  05F5  0086               	movwf	6
 13338  05F6  0187               	clrf	7
 13339  05F7  0801               	movf	1,w
 13340  05F8  00C1               	movwf	transfer_registers_i@n
 13341  05F9  0246               	subwf	transfer_registers_i@nr,w
 13342  05FA  1C03               	skipc
 13343  05FB  2DFD               	goto	u5401
 13344  05FC  2DFE               	goto	u5400
 13345  05FD                     u5401:	
 13346  05FD  2E17               	goto	l6431
 13347  05FE                     u5400:	
 13348  05FE                     l6429:	
 13349  05FE  0847               	movf	transfer_registers_i@data,w
 13350  05FF  0086               	movwf	6
 13351  0600  0187               	clrf	7
 13352  0601  3F41               	moviw [1]fsr1
 13353  0602  00C5               	movwf	transfer_registers_i@i
 13354  0603  0846               	movf	transfer_registers_i@nr,w
 13355  0604  3EFF               	addlw	255
 13356  0605  00BB               	movwf	??_transfer_registers_i
 13357  0606  30FF               	movlw	255
 13358  0607  1803               	skipnc
 13359  0608  3000               	movlw	0
 13360  0609  00BC               	movwf	??_transfer_registers_i+1
 13361  060A  083C               	movf	??_transfer_registers_i+1,w
 13362  060B  3A80               	xorlw	128
 13363  060C  00BD               	movwf	??_transfer_registers_i+2
 13364  060D  3080               	movlw	128
 13365  060E  023D               	subwf	??_transfer_registers_i+2,w
 13366  060F  1D03               	skipz
 13367  0610  2E13               	goto	u5415
 13368  0611  0845               	movf	transfer_registers_i@i,w
 13369  0612  023B               	subwf	??_transfer_registers_i,w
 13370  0613                     u5415:	
 13371  0613  1803               	skipnc
 13372  0614  2E16               	goto	u5411
 13373  0615  2E17               	goto	u5410
 13374  0616                     u5411:	
 13375  0616  2E21               	goto	l6435
 13376  0617                     u5410:	
 13377  0617                     l6431:	
 13378                           
 13379                           ;communications.c: 190:         send_confirmation(0XCB, 0xFF);
 13380  0617  30FF               	movlw	255
 13381  0618  0020               	movlb	0	; select bank0
 13382  0619  00BB               	movwf	??_transfer_registers_i
 13383  061A  083B               	movf	??_transfer_registers_i,w
 13384  061B  00F8               	movwf	send_confirmation@error
 13385  061C  30CB               	movlw	203
 13386  061D  3195  250F  3185   	fcall	_send_confirmation
 13387  0620  2E51               	goto	l1699
 13388  0621                     l6435:	
 13389                           
 13390                           ;communications.c: 194:     i = (i + wi) % nr;
 13391  0621  0020               	movlb	0	; select bank0
 13392  0622  0846               	movf	transfer_registers_i@nr,w
 13393  0623  00BB               	movwf	??_transfer_registers_i
 13394  0624  01BC               	clrf	??_transfer_registers_i+1
 13395  0625  083B               	movf	??_transfer_registers_i,w
 13396  0626  00F2               	movwf	___awmod@divisor
 13397  0627  083C               	movf	??_transfer_registers_i+1,w
 13398  0628  00F3               	movwf	___awmod@divisor+1
 13399  0629  0845               	movf	transfer_registers_i@i,w
 13400  062A  0744               	addwf	transfer_registers_i@wi,w
 13401  062B  00F4               	movwf	___awmod@dividend
 13402  062C  01F5               	clrf	___awmod@dividend+1
 13403  062D  0DF5               	rlf	___awmod@dividend+1,f
 13404  062E  318D  258B  3185   	fcall	___awmod
 13405  0631  0872               	movf	?___awmod,w
 13406  0632  0020               	movlb	0	; select bank0
 13407  0633  00BD               	movwf	??_transfer_registers_i+2
 13408  0634  083D               	movf	??_transfer_registers_i+2,w
 13409  0635  00C5               	movwf	transfer_registers_i@i
 13410  0636                     l6437:	
 13411                           
 13412                           ;communications.c: 196:     if(!transfer_registers(n, i))
 13413  0636  0845               	movf	transfer_registers_i@i,w
 13414  0637  00BB               	movwf	??_transfer_registers_i
 13415  0638  083B               	movf	??_transfer_registers_i,w
 13416  0639  00AC               	movwf	transfer_registers@i
 13417  063A  0841               	movf	transfer_registers_i@n,w
 13418  063B  3184  2436  3185   	fcall	_transfer_registers
 13419  063E  3A00               	xorlw	0
 13420  063F  1D03               	skipz
 13421  0640  2E42               	goto	u5421
 13422  0641  2E43               	goto	u5420
 13423  0642                     u5421:	
 13424  0642  2E4D               	goto	l6441
 13425  0643                     u5420:	
 13426  0643                     l6439:	
 13427                           
 13428                           ;communications.c: 197:         send_confirmation(0XCB, 0xFF);
 13429  0643  30FF               	movlw	255
 13430  0644  0020               	movlb	0	; select bank0
 13431  0645  00BB               	movwf	??_transfer_registers_i
 13432  0646  083B               	movf	??_transfer_registers_i,w
 13433  0647  00F8               	movwf	send_confirmation@error
 13434  0648  30CB               	movlw	203
 13435  0649  3195  250F  3185   	fcall	_send_confirmation
 13436  064C  2E51               	goto	l1699
 13437  064D                     l6441:	
 13438  064D  30FE               	movlw	254
 13439  064E  3193  2328  3185   	fcall	_putch
 13440  0651                     l1699:	
 13441  0651  0008               	return
 13442  0652                     __end_of_transfer_registers_i:	
 13443                           
 13444                           	psect	text8
 13445  0F9D                     __ptext8:	
 13446 ;; *************** function _transfer_n_registers *****************
 13447 ;; Defined at:
 13448 ;;		line 174 in file "communications.c"
 13449 ;; Parameters:    Size  Location     Type
 13450 ;;  data            1    wreg     PTR unsigned char 
 13451 ;;		 -> NULL(0), read_msgs@aux(8), 
 13452 ;; Auto vars:     Size  Location     Type
 13453 ;;  data            1   34[BANK0 ] PTR unsigned char 
 13454 ;;		 -> NULL(0), read_msgs@aux(8), 
 13455 ;;  n               1   31[BANK0 ] unsigned char 
 13456 ;;  nr              1   30[BANK0 ] unsigned char 
 13457 ;;  ri              1    0        unsigned char 
 13458 ;; Return value:  Size  Location     Type
 13459 ;;                  1    wreg      void 
 13460 ;; Registers used:
 13461 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13462 ;; Tracked objects:
 13463 ;;		On entry : 0/0
 13464 ;;		On exit  : 0/0
 13465 ;;		Unchanged: 0/0
 13466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13468 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13469 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13470 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13471 ;;Total ram usage:        8 bytes
 13472 ;; Hardware stack levels used:    1
 13473 ;; Hardware stack levels required when called:   10
 13474 ;; This function calls:
 13475 ;;		_putch
 13476 ;;		_read_iwrt
 13477 ;;		_read_nreg
 13478 ;;		_ring_buffer_laped
 13479 ;;		_send_confirmation
 13480 ;;		_strlen
 13481 ;;		_transfer_registers
 13482 ;; This function is called by:
 13483 ;;		_interpret_message
 13484 ;; This function uses a non-reentrant model
 13485 ;;
 13486                           
 13487                           
 13488                           ;psect for function _transfer_n_registers
 13489  0F9D                     _transfer_n_registers:	
 13490                           
 13491                           ;incstack = 0
 13492                           ; Regs used in _transfer_n_registers: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13493                           ;transfer_n_registers@data stored from wreg
 13494  0F9D  0020               	movlb	0	; select bank0
 13495  0F9E  00C2               	movwf	transfer_n_registers@data
 13496  0F9F                     l6389:	
 13497                           
 13498                           ;communications.c: 175:     uint8_t nr = ring_buffer_laped() ? read_nreg() : read_iwrt()
      +                          , ri = iread, n;
 13499  0F9F  3194  2442  318F   	fcall	_ring_buffer_laped
 13500  0FA2  3A00               	xorlw	0
 13501  0FA3  1D03               	skipz
 13502  0FA4  2FA6               	goto	u5321
 13503  0FA5  2FA7               	goto	u5320
 13504  0FA6                     u5321:	
 13505  0FA6  2FB2               	goto	l6393
 13506  0FA7                     u5320:	
 13507  0FA7                     l6391:	
 13508  0FA7  3193  238C  318F   	fcall	_read_iwrt
 13509  0FAA  0020               	movlb	0	; select bank0
 13510  0FAB  00BB               	movwf	??_transfer_n_registers
 13511  0FAC  01BC               	clrf	??_transfer_n_registers+1
 13512  0FAD  083B               	movf	??_transfer_n_registers,w
 13513  0FAE  00C0               	movwf	_transfer_n_registers$2834
 13514  0FAF  083C               	movf	??_transfer_n_registers+1,w
 13515  0FB0  00C1               	movwf	_transfer_n_registers$2834+1
 13516  0FB1  2FBC               	goto	l6395
 13517  0FB2                     l6393:	
 13518  0FB2  3193  2374  318F   	fcall	_read_nreg
 13519  0FB5  0020               	movlb	0	; select bank0
 13520  0FB6  00BB               	movwf	??_transfer_n_registers
 13521  0FB7  01BC               	clrf	??_transfer_n_registers+1
 13522  0FB8  083B               	movf	??_transfer_n_registers,w
 13523  0FB9  00C0               	movwf	_transfer_n_registers$2834
 13524  0FBA  083C               	movf	??_transfer_n_registers+1,w
 13525  0FBB  00C1               	movwf	_transfer_n_registers$2834+1
 13526  0FBC                     l6395:	
 13527  0FBC  0840               	movf	_transfer_n_registers$2834,w
 13528  0FBD  00BB               	movwf	??_transfer_n_registers
 13529  0FBE  083B               	movf	??_transfer_n_registers,w
 13530  0FBF  00BE               	movwf	transfer_n_registers@nr
 13531  0FC0                     l6397:	
 13532  0FC0                     l6399:	
 13533                           
 13534                           ;communications.c: 176:     if(!data || strlen(data) != 1 || (n = data[0]) > nr) {
 13535  0FC0  0842               	movf	transfer_n_registers@data,w
 13536  0FC1  1903               	btfsc	3,2
 13537  0FC2  2FC4               	goto	u5331
 13538  0FC3  2FC5               	goto	u5330
 13539  0FC4                     u5331:	
 13540  0FC4  2FDA               	goto	l6405
 13541  0FC5                     u5330:	
 13542  0FC5                     l6401:	
 13543  0FC5  0842               	movf	transfer_n_registers@data,w
 13544  0FC6  3195  253C  318F   	fcall	_strlen
 13545  0FC9  0372               	decf	?_strlen,w
 13546  0FCA  0473               	iorwf	?_strlen+1,w
 13547  0FCB  1D03               	btfss	3,2
 13548  0FCC  2FCE               	goto	u5341
 13549  0FCD  2FCF               	goto	u5340
 13550  0FCE                     u5341:	
 13551  0FCE  2FDA               	goto	l6405
 13552  0FCF                     u5340:	
 13553  0FCF                     l6403:	
 13554  0FCF  0020               	movlb	0	; select bank0
 13555  0FD0  0842               	movf	transfer_n_registers@data,w
 13556  0FD1  0086               	movwf	6
 13557  0FD2  0187               	clrf	7
 13558  0FD3  0801               	movf	1,w
 13559  0FD4  00BF               	movwf	transfer_n_registers@n
 13560  0FD5  023E               	subwf	transfer_n_registers@nr,w
 13561  0FD6  1803               	skipnc
 13562  0FD7  2FD9               	goto	u5351
 13563  0FD8  2FDA               	goto	u5350
 13564  0FD9                     u5351:	
 13565  0FD9  2FE4               	goto	l6409
 13566  0FDA                     u5350:	
 13567  0FDA                     l6405:	
 13568                           
 13569                           ;communications.c: 177:         send_confirmation(0XCA, 0xFF);
 13570  0FDA  30FF               	movlw	255
 13571  0FDB  0020               	movlb	0	; select bank0
 13572  0FDC  00BB               	movwf	??_transfer_n_registers
 13573  0FDD  083B               	movf	??_transfer_n_registers,w
 13574  0FDE  00F8               	movwf	send_confirmation@error
 13575  0FDF  30CA               	movlw	202
 13576  0FE0  3195  250F  318F   	fcall	_send_confirmation
 13577  0FE3  2FFF               	goto	l1687
 13578  0FE4                     l6409:	
 13579                           
 13580                           ;communications.c: 180:     if(!transfer_registers(n, iread))
 13581  0FE4  087A               	movf	_iread,w	;volatile
 13582  0FE5  00BB               	movwf	??_transfer_n_registers
 13583  0FE6  083B               	movf	??_transfer_n_registers,w
 13584  0FE7  00AC               	movwf	transfer_registers@i
 13585  0FE8  083F               	movf	transfer_n_registers@n,w
 13586  0FE9  3184  2436  318F   	fcall	_transfer_registers
 13587  0FEC  3A00               	xorlw	0
 13588  0FED  1D03               	skipz
 13589  0FEE  2FF0               	goto	u5361
 13590  0FEF  2FF1               	goto	u5360
 13591  0FF0                     u5361:	
 13592  0FF0  2FFB               	goto	l6413
 13593  0FF1                     u5360:	
 13594  0FF1                     l6411:	
 13595                           
 13596                           ;communications.c: 181:         send_confirmation(0XCA, 0xFF);
 13597  0FF1  30FF               	movlw	255
 13598  0FF2  0020               	movlb	0	; select bank0
 13599  0FF3  00BB               	movwf	??_transfer_n_registers
 13600  0FF4  083B               	movf	??_transfer_n_registers,w
 13601  0FF5  00F8               	movwf	send_confirmation@error
 13602  0FF6  30CA               	movlw	202
 13603  0FF7  3195  250F  318F   	fcall	_send_confirmation
 13604  0FFA  2FFF               	goto	l1687
 13605  0FFB                     l6413:	
 13606  0FFB  30FE               	movlw	254
 13607  0FFC  3193  2328  318F   	fcall	_putch
 13608  0FFF                     l1687:	
 13609  0FFF  0008               	return
 13610  1000                     __end_of_transfer_n_registers:	
 13611                           
 13612                           	psect	text9
 13613  0436                     __ptext9:	
 13614 ;; *************** function _transfer_registers *****************
 13615 ;; Defined at:
 13616 ;;		line 202 in file "communications.c"
 13617 ;; Parameters:    Size  Location     Type
 13618 ;;  n               1    wreg     unsigned char 
 13619 ;;  i               1   12[BANK0 ] unsigned char 
 13620 ;; Auto vars:     Size  Location     Type
 13621 ;;  n               1   24[BANK0 ] unsigned char 
 13622 ;;  c               2   22[BANK0 ] int 
 13623 ;;  wi              1   26[BANK0 ] unsigned char 
 13624 ;;  N               1   25[BANK0 ] unsigned char 
 13625 ;;  nr              1   19[BANK0 ] unsigned char 
 13626 ;; Return value:  Size  Location     Type
 13627 ;;                  1    wreg      _Bool 
 13628 ;; Registers used:
 13629 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13630 ;; Tracked objects:
 13631 ;;		On entry : 0/0
 13632 ;;		On exit  : 0/0
 13633 ;;		Unchanged: 0/0
 13634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13635 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13636 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13637 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13638 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13639 ;;Total ram usage:       15 bytes
 13640 ;; Hardware stack levels used:    1
 13641 ;; Hardware stack levels required when called:    9
 13642 ;; This function calls:
 13643 ;;		___awmod
 13644 ;;		_read_iwrt
 13645 ;;		_read_nreg
 13646 ;;		_ring_buffer_laped
 13647 ;;		_send_register
 13648 ;; This function is called by:
 13649 ;;		_transfer_n_registers
 13650 ;;		_transfer_registers_i
 13651 ;; This function uses a non-reentrant model
 13652 ;;
 13653                           
 13654                           
 13655                           ;psect for function _transfer_registers
 13656  0436                     _transfer_registers:	
 13657                           
 13658                           ;incstack = 0
 13659                           ; Regs used in _transfer_registers: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13660                           ;transfer_registers@n stored from wreg
 13661  0436  0020               	movlb	0	; select bank0
 13662  0437  00B8               	movwf	transfer_registers@n
 13663  0438                     l6089:	
 13664                           
 13665                           ;communications.c: 203:     uint8_t N = read_nreg(), wi = read_iwrt(), nr = ring_buffer_
      +                          laped() ? N : wi;
 13666  0438  3193  2374  3184   	fcall	_read_nreg
 13667  043B  0020               	movlb	0	; select bank0
 13668  043C  00AD               	movwf	??_transfer_registers
 13669  043D  082D               	movf	??_transfer_registers,w
 13670  043E  00B9               	movwf	transfer_registers@N
 13671  043F  3193  238C  3184   	fcall	_read_iwrt
 13672  0442  0020               	movlb	0	; select bank0
 13673  0443  00AD               	movwf	??_transfer_registers
 13674  0444  082D               	movf	??_transfer_registers,w
 13675  0445  00BA               	movwf	transfer_registers@wi
 13676  0446  3194  2442  3184   	fcall	_ring_buffer_laped
 13677  0449  3A00               	xorlw	0
 13678  044A  1D03               	skipz
 13679  044B  2C4D               	goto	u4811
 13680  044C  2C4E               	goto	u4810
 13681  044D                     u4811:	
 13682  044D  2C57               	goto	l6093
 13683  044E                     u4810:	
 13684  044E                     l6091:	
 13685  044E  0020               	movlb	0	; select bank0
 13686  044F  083A               	movf	transfer_registers@wi,w
 13687  0450  00AD               	movwf	??_transfer_registers
 13688  0451  01AE               	clrf	??_transfer_registers+1
 13689  0452  082D               	movf	??_transfer_registers,w
 13690  0453  00B4               	movwf	_transfer_registers$2853
 13691  0454  082E               	movf	??_transfer_registers+1,w
 13692  0455  00B5               	movwf	_transfer_registers$2853+1
 13693  0456  2C5F               	goto	l1707
 13694  0457                     l6093:	
 13695  0457  0020               	movlb	0	; select bank0
 13696  0458  0839               	movf	transfer_registers@N,w
 13697  0459  00AD               	movwf	??_transfer_registers
 13698  045A  01AE               	clrf	??_transfer_registers+1
 13699  045B  082D               	movf	??_transfer_registers,w
 13700  045C  00B4               	movwf	_transfer_registers$2853
 13701  045D  082E               	movf	??_transfer_registers+1,w
 13702  045E  00B5               	movwf	_transfer_registers$2853+1
 13703  045F                     l1707:	
 13704  045F  0834               	movf	_transfer_registers$2853,w
 13705  0460  00AD               	movwf	??_transfer_registers
 13706  0461  082D               	movf	??_transfer_registers,w
 13707  0462  00B3               	movwf	transfer_registers@nr
 13708                           
 13709                           ;communications.c: 205:     if(i < wi) {
 13710  0463  083A               	movf	transfer_registers@wi,w
 13711  0464  022C               	subwf	transfer_registers@i,w
 13712  0465  1803               	skipnc
 13713  0466  2C68               	goto	u4821
 13714  0467  2C69               	goto	u4820
 13715  0468                     u4821:	
 13716  0468  2C83               	goto	l6101
 13717  0469                     u4820:	
 13718  0469                     l6095:	
 13719                           
 13720                           ;communications.c: 206:         if(i + n - 1 >= wi) return 0;
 13721  0469  082C               	movf	transfer_registers@i,w
 13722  046A  0738               	addwf	transfer_registers@n,w
 13723  046B  00AD               	movwf	??_transfer_registers
 13724  046C  01AE               	clrf	??_transfer_registers+1
 13725  046D  0DAE               	rlf	??_transfer_registers+1,f
 13726  046E  082D               	movf	??_transfer_registers,w
 13727  046F  3EFF               	addlw	255
 13728  0470  00AF               	movwf	??_transfer_registers+2
 13729  0471  30FF               	movlw	255
 13730  0472  3D2E               	addwfc	??_transfer_registers+1,w
 13731  0473  00B0               	movwf	??_transfer_registers+3
 13732  0474  0830               	movf	??_transfer_registers+3,w
 13733  0475  3A80               	xorlw	128
 13734  0476  00B1               	movwf	??_transfer_registers+4
 13735  0477  3080               	movlw	128
 13736  0478  0231               	subwf	??_transfer_registers+4,w
 13737  0479  1D03               	skipz
 13738  047A  2C7D               	goto	u4835
 13739  047B  083A               	movf	transfer_registers@wi,w
 13740  047C  022F               	subwf	??_transfer_registers+2,w
 13741  047D                     u4835:	
 13742  047D  1C03               	skipc
 13743  047E  2C80               	goto	u4831
 13744  047F  2C81               	goto	u4830
 13745  0480                     u4831:	
 13746  0480  2CB2               	goto	l6109
 13747  0481                     u4830:	
 13748  0481                     l6097:	
 13749  0481  3000               	movlw	0
 13750  0482  2D00               	goto	l1710
 13751  0483                     l6101:	
 13752  0483  082C               	movf	transfer_registers@i,w
 13753  0484  0738               	addwf	transfer_registers@n,w
 13754  0485  00AD               	movwf	??_transfer_registers
 13755  0486  01AE               	clrf	??_transfer_registers+1
 13756  0487  0DAE               	rlf	??_transfer_registers+1,f
 13757  0488  082E               	movf	??_transfer_registers+1,w
 13758  0489  3A80               	xorlw	128
 13759  048A  3C80               	sublw	128
 13760  048B  1D03               	skipz
 13761  048C  2C8F               	goto	u4845
 13762  048D  082D               	movf	??_transfer_registers,w
 13763  048E  0239               	subwf	transfer_registers@N,w
 13764  048F                     u4845:	
 13765  048F  1803               	skipnc
 13766  0490  2C92               	goto	u4841
 13767  0491  2C93               	goto	u4840
 13768  0492                     u4841:	
 13769  0492  2CB2               	goto	l6109
 13770  0493                     u4840:	
 13771  0493                     l6103:	
 13772  0493  0020               	movlb	0	; select bank0
 13773  0494  082C               	movf	transfer_registers@i,w
 13774  0495  0738               	addwf	transfer_registers@n,w
 13775  0496  00AD               	movwf	??_transfer_registers
 13776  0497  01AE               	clrf	??_transfer_registers+1
 13777  0498  0DAE               	rlf	??_transfer_registers+1,f
 13778  0499  082E               	movf	??_transfer_registers+1,w
 13779  049A  00B0               	movwf	??_transfer_registers+3
 13780  049B  0839               	movf	transfer_registers@N,w
 13781  049C  022D               	subwf	??_transfer_registers,w
 13782  049D  00AF               	movwf	??_transfer_registers+2
 13783  049E  1C03               	skipc
 13784  049F  03B0               	decf	??_transfer_registers+3,f
 13785  04A0  082F               	movf	??_transfer_registers+2,w
 13786  04A1  3EFF               	addlw	255
 13787  04A2  00B1               	movwf	??_transfer_registers+4
 13788  04A3  30FF               	movlw	255
 13789  04A4  3D30               	addwfc	??_transfer_registers+3,w
 13790  04A5  00B2               	movwf	??_transfer_registers+5
 13791  04A6  0832               	movf	??_transfer_registers+5,w
 13792  04A7  3A80               	xorlw	128
 13793  04A8  3C80               	sublw	128
 13794  04A9  1D03               	skipz
 13795  04AA  2CAD               	goto	u4855
 13796  04AB  0831               	movf	??_transfer_registers+4,w
 13797  04AC  023A               	subwf	transfer_registers@wi,w
 13798  04AD                     u4855:	
 13799  04AD  1803               	skipnc
 13800  04AE  2CB0               	goto	u4851
 13801  04AF  2CB1               	goto	u4850
 13802  04B0                     u4851:	
 13803  04B0  2CB2               	goto	l6109
 13804  04B1                     u4850:	
 13805  04B1  2C81               	goto	l6097
 13806  04B2                     l6109:	
 13807                           
 13808                           ;communications.c: 209:     for(int c = 0; c < n; i = (i + 1) % nr, ++c){
 13809  04B2  0020               	movlb	0	; select bank0
 13810  04B3  01B6               	clrf	transfer_registers@c
 13811  04B4  01B7               	clrf	transfer_registers@c+1
 13812  04B5  2CF2               	goto	l6119
 13813  04B6                     l6111:	
 13814                           
 13815                           ;communications.c: 210:         send_register(i);
 13816  04B6  0020               	movlb	0	; select bank0
 13817  04B7  082C               	movf	transfer_registers@i,w
 13818  04B8  3196  26DD  3184   	fcall	_send_register
 13819  04BB                     l6113:	
 13820                           
 13821                           ;communications.c: 211:         if(i == iread) iread = (iread + 1) % N;
 13822  04BB  0020               	movlb	0	; select bank0
 13823  04BC  082C               	movf	transfer_registers@i,w
 13824  04BD  067A               	xorwf	_iread,w	;volatile
 13825  04BE  1D03               	skipz
 13826  04BF  2CC1               	goto	u4861
 13827  04C0  2CC2               	goto	u4860
 13828  04C1                     u4861:	
 13829  04C1  2CD8               	goto	l1715
 13830  04C2                     u4860:	
 13831  04C2                     l6115:	
 13832  04C2  0839               	movf	transfer_registers@N,w
 13833  04C3  00AD               	movwf	??_transfer_registers
 13834  04C4  01AE               	clrf	??_transfer_registers+1
 13835  04C5  082D               	movf	??_transfer_registers,w
 13836  04C6  00F2               	movwf	___awmod@divisor
 13837  04C7  082E               	movf	??_transfer_registers+1,w
 13838  04C8  00F3               	movwf	___awmod@divisor+1
 13839  04C9  087A               	movf	_iread,w	;volatile
 13840  04CA  3E01               	addlw	1
 13841  04CB  00F4               	movwf	___awmod@dividend
 13842  04CC  3000               	movlw	0
 13843  04CD  1803               	skipnc
 13844  04CE  3001               	movlw	1
 13845  04CF  00F5               	movwf	___awmod@dividend+1
 13846  04D0  318D  258B  3184   	fcall	___awmod
 13847  04D3  0872               	movf	?___awmod,w
 13848  04D4  0020               	movlb	0	; select bank0
 13849  04D5  00AF               	movwf	??_transfer_registers+2
 13850  04D6  082F               	movf	??_transfer_registers+2,w
 13851  04D7  00FA               	movwf	_iread	;volatile
 13852  04D8                     l1715:	
 13853                           
 13854                           ;communications.c: 212:     }
 13855  04D8  0833               	movf	transfer_registers@nr,w
 13856  04D9  00AD               	movwf	??_transfer_registers
 13857  04DA  01AE               	clrf	??_transfer_registers+1
 13858  04DB  082D               	movf	??_transfer_registers,w
 13859  04DC  00F2               	movwf	___awmod@divisor
 13860  04DD  082E               	movf	??_transfer_registers+1,w
 13861  04DE  00F3               	movwf	___awmod@divisor+1
 13862  04DF  082C               	movf	transfer_registers@i,w
 13863  04E0  3E01               	addlw	1
 13864  04E1  00F4               	movwf	___awmod@dividend
 13865  04E2  3000               	movlw	0
 13866  04E3  1803               	skipnc
 13867  04E4  3001               	movlw	1
 13868  04E5  00F5               	movwf	___awmod@dividend+1
 13869  04E6  318D  258B  3184   	fcall	___awmod
 13870  04E9  0872               	movf	?___awmod,w
 13871  04EA  0020               	movlb	0	; select bank0
 13872  04EB  00AF               	movwf	??_transfer_registers+2
 13873  04EC  082F               	movf	??_transfer_registers+2,w
 13874  04ED  00AC               	movwf	transfer_registers@i
 13875  04EE                     l6117:	
 13876  04EE  3001               	movlw	1
 13877  04EF  07B6               	addwf	transfer_registers@c,f
 13878  04F0  3000               	movlw	0
 13879  04F1  3DB7               	addwfc	transfer_registers@c+1,f
 13880  04F2                     l6119:	
 13881  04F2  0837               	movf	transfer_registers@c+1,w
 13882  04F3  3A80               	xorlw	128
 13883  04F4  00AD               	movwf	??_transfer_registers
 13884  04F5  3080               	movlw	128
 13885  04F6  022D               	subwf	??_transfer_registers,w
 13886  04F7  1D03               	skipz
 13887  04F8  2CFB               	goto	u4875
 13888  04F9  0838               	movf	transfer_registers@n,w
 13889  04FA  0236               	subwf	transfer_registers@c,w
 13890  04FB                     u4875:	
 13891  04FB  1C03               	skipc
 13892  04FC  2CFE               	goto	u4871
 13893  04FD  2CFF               	goto	u4870
 13894  04FE                     u4871:	
 13895  04FE  2CB6               	goto	l6111
 13896  04FF                     u4870:	
 13897  04FF                     l6121:	
 13898                           
 13899                           ;communications.c: 213:     return 1;
 13900  04FF  3001               	movlw	1
 13901  0500                     l1710:	
 13902  0500  0008               	return
 13903  0501                     __end_of_transfer_registers:	
 13904                           
 13905                           	psect	text10
 13906  16DD                     __ptext10:	
 13907 ;; *************** function _send_register *****************
 13908 ;; Defined at:
 13909 ;;		line 234 in file "communications.c"
 13910 ;; Parameters:    Size  Location     Type
 13911 ;;  i               1    wreg     unsigned char 
 13912 ;; Auto vars:     Size  Location     Type
 13913 ;;  i               1    9[BANK0 ] unsigned char 
 13914 ;;  k               2   10[BANK0 ] int 
 13915 ;; Return value:  Size  Location     Type
 13916 ;;                  1    wreg      void 
 13917 ;; Registers used:
 13918 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13919 ;; Tracked objects:
 13920 ;;		On entry : 0/0
 13921 ;;		On exit  : 0/0
 13922 ;;		Unchanged: 0/0
 13923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13925 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13926 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13927 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13928 ;;Total ram usage:        4 bytes
 13929 ;; Hardware stack levels used:    1
 13930 ;; Hardware stack levels required when called:    8
 13931 ;; This function calls:
 13932 ;;		_putch
 13933 ;;		_read_buffer
 13934 ;; This function is called by:
 13935 ;;		_transfer_registers
 13936 ;; This function uses a non-reentrant model
 13937 ;;
 13938                           
 13939                           
 13940                           ;psect for function _send_register
 13941  16DD                     _send_register:	
 13942                           
 13943                           ;incstack = 0
 13944                           ; Regs used in _send_register: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13945                           ;send_register@i stored from wreg
 13946  16DD  0020               	movlb	0	; select bank0
 13947  16DE  00A9               	movwf	send_register@i
 13948  16DF                     l6001:	
 13949                           
 13950                           ;communications.c: 235:     for(int k = 0; k < 5; ++k)
 13951  16DF  01AA               	clrf	send_register@k
 13952  16E0  01AB               	clrf	send_register@k+1
 13953  16E1                     l6007:	
 13954                           
 13955                           ;communications.c: 236:         putch(read_buffer(i, k));
 13956  16E1  0020               	movlb	0	; select bank0
 13957  16E2  082A               	movf	send_register@k,w
 13958  16E3  00A8               	movwf	??_send_register
 13959  16E4  0828               	movf	??_send_register,w
 13960  16E5  00A0               	movwf	read_buffer@j
 13961  16E6  0829               	movf	send_register@i,w
 13962  16E7  3187  27DB  3196   	fcall	_read_buffer
 13963  16EA  3193  2328  3196   	fcall	_putch
 13964  16ED                     l6009:	
 13965  16ED  3001               	movlw	1
 13966  16EE  0020               	movlb	0	; select bank0
 13967  16EF  07AA               	addwf	send_register@k,f
 13968  16F0  3000               	movlw	0
 13969  16F1  3DAB               	addwfc	send_register@k+1,f
 13970  16F2                     l6011:	
 13971  16F2  082B               	movf	send_register@k+1,w
 13972  16F3  3A80               	xorlw	128
 13973  16F4  00A8               	movwf	??_send_register
 13974  16F5  3080               	movlw	128
 13975  16F6  0228               	subwf	??_send_register,w
 13976  16F7  1D03               	skipz
 13977  16F8  2EFB               	goto	u4685
 13978  16F9  3005               	movlw	5
 13979  16FA  022A               	subwf	send_register@k,w
 13980  16FB                     u4685:	
 13981  16FB  1C03               	skipc
 13982  16FC  2EFE               	goto	u4681
 13983  16FD  2EFF               	goto	u4680
 13984  16FE                     u4681:	
 13985  16FE  2EE1               	goto	l6007
 13986  16FF                     u4680:	
 13987  16FF                     l1741:	
 13988  16FF  0008               	return
 13989  1700                     __end_of_send_register:	
 13990                           
 13991                           	psect	text11
 13992  07DB                     __ptext11:	
 13993 ;; *************** function _read_buffer *****************
 13994 ;; Defined at:
 13995 ;;		line 117 in file "eeprom.c"
 13996 ;; Parameters:    Size  Location     Type
 13997 ;;  i               1    wreg     unsigned char 
 13998 ;;  j               1    0[BANK0 ] unsigned char 
 13999 ;; Auto vars:     Size  Location     Type
 14000 ;;  i               1    7[BANK0 ] unsigned char 
 14001 ;; Return value:  Size  Location     Type
 14002 ;;                  1    wreg      unsigned char 
 14003 ;; Registers used:
 14004 ;;		wreg, status,2, status,0, pclath, cstack
 14005 ;; Tracked objects:
 14006 ;;		On entry : 0/0
 14007 ;;		On exit  : 0/0
 14008 ;;		Unchanged: 0/0
 14009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14010 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14012 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14013 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14014 ;;Total ram usage:        8 bytes
 14015 ;; Hardware stack levels used:    1
 14016 ;; Hardware stack levels required when called:    7
 14017 ;; This function calls:
 14018 ;;		_DATAEE_ReadByte
 14019 ;;		___wmul
 14020 ;; This function is called by:
 14021 ;;		_send_register
 14022 ;; This function uses a non-reentrant model
 14023 ;;
 14024                           
 14025                           
 14026                           ;psect for function _read_buffer
 14027  07DB                     _read_buffer:	
 14028                           
 14029                           ;incstack = 0
 14030                           ; Regs used in _read_buffer: [wreg+status,2+status,0+pclath+cstack]
 14031                           ;read_buffer@i stored from wreg
 14032  07DB  0020               	movlb	0	; select bank0
 14033  07DC  00A7               	movwf	read_buffer@i
 14034  07DD                     l5935:	
 14035  07DD  0820               	movf	read_buffer@j,w
 14036  07DE  00A1               	movwf	??_read_buffer
 14037  07DF  01A2               	clrf	??_read_buffer+1
 14038  07E0  0827               	movf	read_buffer@i,w
 14039  07E1  00A3               	movwf	??_read_buffer+2
 14040  07E2  01A4               	clrf	??_read_buffer+3
 14041  07E3  0823               	movf	??_read_buffer+2,w
 14042  07E4  00F4               	movwf	___wmul@multiplier
 14043  07E5  0824               	movf	??_read_buffer+3,w
 14044  07E6  00F5               	movwf	___wmul@multiplier+1
 14045  07E7  3005               	movlw	5
 14046  07E8  00F6               	movwf	___wmul@multiplicand
 14047  07E9  3000               	movlw	0
 14048  07EA  00F7               	movwf	___wmul@multiplicand+1
 14049  07EB  3195  25FB  3187   	fcall	___wmul
 14050  07EE  0020               	movlb	0	; select bank0
 14051  07EF  0821               	movf	??_read_buffer,w
 14052  07F0  0774               	addwf	?___wmul,w
 14053  07F1  00A5               	movwf	??_read_buffer+4
 14054  07F2  0822               	movf	??_read_buffer+1,w
 14055  07F3  3D75               	addwfc	?___wmul+1,w
 14056  07F4  00A6               	movwf	??_read_buffer+5
 14057  07F5  0825               	movf	??_read_buffer+4,w
 14058  07F6  3E0B               	addlw	11
 14059  07F7  00F2               	movwf	DATAEE_ReadByte@bAdd
 14060  07F8  30F0               	movlw	240
 14061  07F9  3D26               	addwfc	??_read_buffer+5,w
 14062  07FA  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 14063  07FB  3193  23C7  3187   	fcall	_DATAEE_ReadByte
 14064  07FE                     l1432:	
 14065  07FE  0008               	return
 14066  07FF                     __end_of_read_buffer:	
 14067                           
 14068                           	psect	text12
 14069  1328                     __ptext12:	
 14070 ;; *************** function _putch *****************
 14071 ;; Defined at:
 14072 ;;		line 201 in file "mcc_generated_files/eusart.c"
 14073 ;; Parameters:    Size  Location     Type
 14074 ;;  txData          1    wreg     unsigned char 
 14075 ;; Auto vars:     Size  Location     Type
 14076 ;;  txData          1    4[COMMON] unsigned char 
 14077 ;; Return value:  Size  Location     Type
 14078 ;;                  1    wreg      void 
 14079 ;; Registers used:
 14080 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14081 ;; Tracked objects:
 14082 ;;		On entry : 0/0
 14083 ;;		On exit  : 0/0
 14084 ;;		Unchanged: 0/0
 14085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14087 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14089 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14090 ;;Total ram usage:        1 bytes
 14091 ;; Hardware stack levels used:    1
 14092 ;; Hardware stack levels required when called:    7
 14093 ;; This function calls:
 14094 ;;		_EUSART_Write
 14095 ;; This function is called by:
 14096 ;;		_main
 14097 ;;		_transfer_n_registers
 14098 ;;		_transfer_registers_i
 14099 ;;		_send_register
 14100 ;; This function uses a non-reentrant model
 14101 ;;
 14102                           
 14103                           
 14104                           ;psect for function _putch
 14105  1328                     _putch:	
 14106                           
 14107                           ;incstack = 0
 14108                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14109                           ;putch@txData stored from wreg
 14110  1328  00F4               	movwf	putch@txData
 14111  1329                     l5933:	
 14112                           
 14113                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
 14114  1329  0874               	movf	putch@txData,w
 14115  132A  3197  274E  3193   	fcall	_EUSART_Write
 14116  132D                     l820:	
 14117  132D  0008               	return
 14118  132E                     __end_of_putch:	
 14119                           
 14120                           	psect	text13
 14121  0960                     __ptext13:	
 14122 ;; *************** function _switch_alarm *****************
 14123 ;; Defined at:
 14124 ;;		line 157 in file "communications.c"
 14125 ;; Parameters:    Size  Location     Type
 14126 ;;  data            1    wreg     PTR unsigned char 
 14127 ;;		 -> NULL(0), read_msgs@aux(8), 
 14128 ;; Auto vars:     Size  Location     Type
 14129 ;;  data            1    9[BANK0 ] PTR unsigned char 
 14130 ;;		 -> NULL(0), read_msgs@aux(8), 
 14131 ;; Return value:  Size  Location     Type
 14132 ;;                  1    wreg      void 
 14133 ;; Registers used:
 14134 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14135 ;; Tracked objects:
 14136 ;;		On entry : 0/0
 14137 ;;		On exit  : 0/0
 14138 ;;		Unchanged: 0/0
 14139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14141 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14142 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14143 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14144 ;;Total ram usage:        2 bytes
 14145 ;; Hardware stack levels used:    1
 14146 ;; Hardware stack levels required when called:    9
 14147 ;; This function calls:
 14148 ;;		_send_confirmation
 14149 ;;		_strlen
 14150 ;;		_write_alaf
 14151 ;; This function is called by:
 14152 ;;		_interpret_message
 14153 ;; This function uses a non-reentrant model
 14154 ;;
 14155                           
 14156                           
 14157                           ;psect for function _switch_alarm
 14158  0960                     _switch_alarm:	
 14159                           
 14160                           ;incstack = 0
 14161                           ; Regs used in _switch_alarm: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14162                           ;switch_alarm@data stored from wreg
 14163  0960  0020               	movlb	0	; select bank0
 14164  0961  00A9               	movwf	switch_alarm@data
 14165  0962                     l6351:	
 14166                           
 14167                           ;communications.c: 158:     if(!data || strlen(data) != 1 || data[0] > 1) {
 14168  0962  0829               	movf	switch_alarm@data,w
 14169  0963  1903               	btfsc	3,2
 14170  0964  2966               	goto	u5271
 14171  0965  2967               	goto	u5270
 14172  0966                     u5271:	
 14173  0966  297B               	goto	l6357
 14174  0967                     u5270:	
 14175  0967                     l6353:	
 14176  0967  0829               	movf	switch_alarm@data,w
 14177  0968  3195  253C  3189   	fcall	_strlen
 14178  096B  0372               	decf	?_strlen,w
 14179  096C  0473               	iorwf	?_strlen+1,w
 14180  096D  1D03               	btfss	3,2
 14181  096E  2970               	goto	u5281
 14182  096F  2971               	goto	u5280
 14183  0970                     u5281:	
 14184  0970  297B               	goto	l6357
 14185  0971                     u5280:	
 14186  0971                     l6355:	
 14187  0971  0020               	movlb	0	; select bank0
 14188  0972  0829               	movf	switch_alarm@data,w
 14189  0973  0086               	movwf	6
 14190  0974  0187               	clrf	7
 14191  0975  3002               	movlw	2
 14192  0976  0201               	subwf	1,w
 14193  0977  1C03               	skipc
 14194  0978  297A               	goto	u5291
 14195  0979  297B               	goto	u5290
 14196  097A                     u5291:	
 14197  097A  2985               	goto	l6361
 14198  097B                     u5290:	
 14199  097B                     l6357:	
 14200                           
 14201                           ;communications.c: 159:         send_confirmation(0XC8, 0xFF);
 14202  097B  30FF               	movlw	255
 14203  097C  0020               	movlb	0	; select bank0
 14204  097D  00A8               	movwf	??_switch_alarm
 14205  097E  0828               	movf	??_switch_alarm,w
 14206  097F  00F8               	movwf	send_confirmation@error
 14207  0980  30C8               	movlw	200
 14208  0981  3195  250F  3189   	fcall	_send_confirmation
 14209  0984  2995               	goto	l1668
 14210  0985                     l6361:	
 14211                           
 14212                           ;communications.c: 162:     alaf = data[0];
 14213  0985  0829               	movf	switch_alarm@data,w
 14214  0986  0086               	movwf	6
 14215  0987  0187               	clrf	7
 14216  0988  0801               	movf	1,w
 14217  0989  00A8               	movwf	??_switch_alarm
 14218  098A  0828               	movf	??_switch_alarm,w
 14219  098B  00EB               	movwf	_alaf
 14220  098C                     l6363:	
 14221                           
 14222                           ;communications.c: 163:     write_alaf(alaf);
 14223  098C  086B               	movf	_alaf,w
 14224  098D  3197  27D2  3189   	fcall	_write_alaf
 14225  0990                     l6365:	
 14226                           
 14227                           ;communications.c: 164:     send_confirmation(0XC8, 0);
 14228  0990  01F8               	clrf	send_confirmation@error
 14229  0991  30C8               	movlw	200
 14230  0992  3195  250F  3189   	fcall	_send_confirmation
 14231  0995                     l1668:	
 14232  0995  0008               	return
 14233  0996                     __end_of_switch_alarm:	
 14234                           
 14235                           	psect	text14
 14236  076D                     __ptext14:	
 14237 ;; *************** function _set_clock *****************
 14238 ;; Defined at:
 14239 ;;		line 100 in file "communications.c"
 14240 ;; Parameters:    Size  Location     Type
 14241 ;;  data            1    wreg     PTR unsigned char 
 14242 ;;		 -> NULL(0), read_msgs@aux(8), 
 14243 ;; Auto vars:     Size  Location     Type
 14244 ;;  data            1   16[BANK0 ] PTR unsigned char 
 14245 ;;		 -> NULL(0), read_msgs@aux(8), 
 14246 ;;  seconds         1   15[BANK0 ] unsigned char 
 14247 ;;  minutes         1   14[BANK0 ] unsigned char 
 14248 ;;  hours           1   13[BANK0 ] unsigned char 
 14249 ;; Return value:  Size  Location     Type
 14250 ;;                  1    wreg      void 
 14251 ;; Registers used:
 14252 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14253 ;; Tracked objects:
 14254 ;;		On entry : 0/0
 14255 ;;		On exit  : 0/0
 14256 ;;		Unchanged: 0/0
 14257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14259 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14260 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14261 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14262 ;;Total ram usage:        5 bytes
 14263 ;; Hardware stack levels used:    1
 14264 ;; Hardware stack levels required when called:    9
 14265 ;; This function calls:
 14266 ;;		_send_confirmation
 14267 ;;		_strlen
 14268 ;;		_update_clk
 14269 ;; This function is called by:
 14270 ;;		_interpret_message
 14271 ;; This function uses a non-reentrant model
 14272 ;;
 14273                           
 14274                           
 14275                           ;psect for function _set_clock
 14276  076D                     _set_clock:	
 14277                           
 14278                           ;incstack = 0
 14279                           ; Regs used in _set_clock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14280                           ;set_clock@data stored from wreg
 14281  076D  0020               	movlb	0	; select bank0
 14282  076E  00B0               	movwf	set_clock@data
 14283  076F                     l6255:	
 14284                           
 14285                           ;communications.c: 101:     uint8_t hours, minutes, seconds;;communications.c: 102:     
      +                          if(!data || strlen(data) != 3 || (hours = data[0] > 23) || (minutes = data[1] > 59) || (
      +                          seconds = data[2] > 59)) {
 14286  076F  0830               	movf	set_clock@data,w
 14287  0770  1903               	btfsc	3,2
 14288  0771  2F73               	goto	u5051
 14289  0772  2F74               	goto	u5050
 14290  0773                     u5051:	
 14291  0773  2FBA               	goto	l6265
 14292  0774                     u5050:	
 14293  0774                     l6257:	
 14294  0774  0830               	movf	set_clock@data,w
 14295  0775  3195  253C  3187   	fcall	_strlen
 14296  0778  3003               	movlw	3
 14297  0779  0672               	xorwf	?_strlen,w
 14298  077A  0473               	iorwf	?_strlen+1,w
 14299  077B  1D03               	btfss	3,2
 14300  077C  2F7E               	goto	u5061
 14301  077D  2F7F               	goto	u5060
 14302  077E                     u5061:	
 14303  077E  2FBA               	goto	l6265
 14304  077F                     u5060:	
 14305  077F                     l6259:	
 14306  077F  0020               	movlb	0	; select bank0
 14307  0780  0830               	movf	set_clock@data,w
 14308  0781  0086               	movwf	6
 14309  0782  0187               	clrf	7
 14310  0783  3018               	movlw	24
 14311  0784  0201               	subwf	1,w
 14312  0785  1803               	skipnc
 14313  0786  2F88               	goto	u5071
 14314  0787  2F8A               	goto	u5070
 14315  0788                     u5071:	
 14316  0788  3001               	movlw	1
 14317  0789  2F8B               	goto	u5080
 14318  078A                     u5070:	
 14319  078A  3000               	movlw	0
 14320  078B                     u5080:	
 14321  078B  00AC               	movwf	??_set_clock
 14322  078C  082C               	movf	??_set_clock,w
 14323  078D  00AD               	movwf	set_clock@hours
 14324  078E  082D               	movf	set_clock@hours,w
 14325  078F  1D03               	btfss	3,2
 14326  0790  2F92               	goto	u5091
 14327  0791  2F93               	goto	u5090
 14328  0792                     u5091:	
 14329  0792  2FBA               	goto	l6265
 14330  0793                     u5090:	
 14331  0793                     l6261:	
 14332  0793  0A30               	incf	set_clock@data,w
 14333  0794  0086               	movwf	6
 14334  0795  0187               	clrf	7
 14335  0796  303C               	movlw	60
 14336  0797  0201               	subwf	1,w
 14337  0798  1803               	skipnc
 14338  0799  2F9B               	goto	u5101
 14339  079A  2F9D               	goto	u5100
 14340  079B                     u5101:	
 14341  079B  3001               	movlw	1
 14342  079C  2F9E               	goto	u5110
 14343  079D                     u5100:	
 14344  079D  3000               	movlw	0
 14345  079E                     u5110:	
 14346  079E  00AC               	movwf	??_set_clock
 14347  079F  082C               	movf	??_set_clock,w
 14348  07A0  00AE               	movwf	set_clock@minutes
 14349  07A1  082E               	movf	set_clock@minutes,w
 14350  07A2  1D03               	btfss	3,2
 14351  07A3  2FA5               	goto	u5121
 14352  07A4  2FA6               	goto	u5120
 14353  07A5                     u5121:	
 14354  07A5  2FBA               	goto	l6265
 14355  07A6                     u5120:	
 14356  07A6                     l6263:	
 14357  07A6  0830               	movf	set_clock@data,w
 14358  07A7  3E02               	addlw	2
 14359  07A8  0086               	movwf	6
 14360  07A9  0187               	clrf	7
 14361  07AA  303C               	movlw	60
 14362  07AB  0201               	subwf	1,w
 14363  07AC  1803               	skipnc
 14364  07AD  2FAF               	goto	u5131
 14365  07AE  2FB1               	goto	u5130
 14366  07AF                     u5131:	
 14367  07AF  3001               	movlw	1
 14368  07B0  2FB2               	goto	u5140
 14369  07B1                     u5130:	
 14370  07B1  3000               	movlw	0
 14371  07B2                     u5140:	
 14372  07B2  00AC               	movwf	??_set_clock
 14373  07B3  082C               	movf	??_set_clock,w
 14374  07B4  00AF               	movwf	set_clock@seconds
 14375  07B5  082F               	movf	set_clock@seconds,w
 14376  07B6  1903               	btfsc	3,2
 14377  07B7  2FB9               	goto	u5151
 14378  07B8  2FBA               	goto	u5150
 14379  07B9                     u5151:	
 14380  07B9  2FC4               	goto	l1626
 14381  07BA                     u5150:	
 14382  07BA                     l6265:	
 14383                           
 14384                           ;communications.c: 103:         send_confirmation(0XC1, 0xFF);
 14385  07BA  30FF               	movlw	255
 14386  07BB  0020               	movlb	0	; select bank0
 14387  07BC  00AC               	movwf	??_set_clock
 14388  07BD  082C               	movf	??_set_clock,w
 14389  07BE  00F8               	movwf	send_confirmation@error
 14390  07BF  30C1               	movlw	193
 14391  07C0  3195  250F  3187   	fcall	_send_confirmation
 14392  07C3  2FDA               	goto	l1629
 14393  07C4                     l1626:	
 14394                           ;communications.c: 105:     }
 14395                           
 14396                           
 14397                           ;communications.c: 106:     (INTCONbits.PEIE = 0);
 14398  07C4  130B               	bcf	11,6	;volatile
 14399  07C5                     l6269:	
 14400                           
 14401                           ;communications.c: 107:     clkh = hours; clkm = minutes; clks = seconds;
 14402  07C5  082D               	movf	set_clock@hours,w
 14403  07C6  00AC               	movwf	??_set_clock
 14404  07C7  082C               	movf	??_set_clock,w
 14405  07C8  00EA               	movwf	_clkh	;volatile
 14406  07C9  082E               	movf	set_clock@minutes,w
 14407  07CA  00AC               	movwf	??_set_clock
 14408  07CB  082C               	movf	??_set_clock,w
 14409  07CC  00E9               	movwf	_clkm	;volatile
 14410  07CD  082F               	movf	set_clock@seconds,w
 14411  07CE  00AC               	movwf	??_set_clock
 14412  07CF  082C               	movf	??_set_clock,w
 14413  07D0  00E8               	movwf	_clks	;volatile
 14414  07D1                     l6271:	
 14415                           
 14416                           ;communications.c: 108:     (INTCONbits.PEIE = 1);
 14417  07D1  170B               	bsf	11,6	;volatile
 14418  07D2                     l6273:	
 14419                           
 14420                           ;communications.c: 109:     update_clk();
 14421  07D2  3193  23A6  3187   	fcall	_update_clk
 14422  07D5                     l6275:	
 14423                           
 14424                           ;communications.c: 110:     send_confirmation(0XC1, 0);
 14425  07D5  01F8               	clrf	send_confirmation@error
 14426  07D6  30C1               	movlw	193
 14427  07D7  3195  250F  3187   	fcall	_send_confirmation
 14428  07DA                     l1629:	
 14429  07DA  0008               	return
 14430  07DB                     __end_of_set_clock:	
 14431                           
 14432                           	psect	text15
 14433  0E31                     __ptext15:	
 14434 ;; *************** function _registers_info *****************
 14435 ;; Defined at:
 14436 ;;		line 167 in file "communications.c"
 14437 ;; Parameters:    Size  Location     Type
 14438 ;;		None
 14439 ;; Auto vars:     Size  Location     Type
 14440 ;;  msg             6    3[BANK0 ] unsigned char [6]
 14441 ;;  wi              1   14[BANK0 ] unsigned char 
 14442 ;;  N               1   13[BANK0 ] unsigned char 
 14443 ;;  ri              1   10[BANK0 ] unsigned char 
 14444 ;;  nr              1    9[BANK0 ] unsigned char 
 14445 ;; Return value:  Size  Location     Type
 14446 ;;                  1    wreg      void 
 14447 ;; Registers used:
 14448 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14449 ;; Tracked objects:
 14450 ;;		On entry : 0/0
 14451 ;;		On exit  : 0/0
 14452 ;;		Unchanged: 0/0
 14453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14455 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14456 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14457 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14458 ;;Total ram usage:       14 bytes
 14459 ;; Hardware stack levels used:    1
 14460 ;; Hardware stack levels required when called:    8
 14461 ;; This function calls:
 14462 ;;		_read_iwrt
 14463 ;;		_read_nreg
 14464 ;;		_ring_buffer_laped
 14465 ;;		_send_msg
 14466 ;; This function is called by:
 14467 ;;		_interpret_message
 14468 ;; This function uses a non-reentrant model
 14469 ;;
 14470                           
 14471                           
 14472                           ;psect for function _registers_info
 14473  0E31                     _registers_info:	
 14474  0E31                     l6367:	
 14475                           ;incstack = 0
 14476                           ; Regs used in _registers_info: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14477                           
 14478                           
 14479                           ;communications.c: 168:     uint8_t N = read_nreg(), wi = read_iwrt(), nr = ring_buffer_
      +                          laped() ? N : wi, ri = iread;
 14480  0E31  3193  2374  318E   	fcall	_read_nreg
 14481  0E34  00F8               	movwf	??_registers_info
 14482  0E35  0878               	movf	??_registers_info,w
 14483  0E36  0020               	movlb	0	; select bank0
 14484  0E37  00AD               	movwf	registers_info@N
 14485  0E38  3193  238C  318E   	fcall	_read_iwrt
 14486  0E3B  00F8               	movwf	??_registers_info
 14487  0E3C  0878               	movf	??_registers_info,w
 14488  0E3D  0020               	movlb	0	; select bank0
 14489  0E3E  00AE               	movwf	registers_info@wi
 14490  0E3F  3194  2442  318E   	fcall	_ring_buffer_laped
 14491  0E42  3A00               	xorlw	0
 14492  0E43  1D03               	skipz
 14493  0E44  2E46               	goto	u5301
 14494  0E45  2E47               	goto	u5300
 14495  0E46                     u5301:	
 14496  0E46  2E50               	goto	l6371
 14497  0E47                     u5300:	
 14498  0E47                     l6369:	
 14499  0E47  0020               	movlb	0	; select bank0
 14500  0E48  082E               	movf	registers_info@wi,w
 14501  0E49  00F8               	movwf	??_registers_info
 14502  0E4A  01F9               	clrf	??_registers_info+1
 14503  0E4B  0878               	movf	??_registers_info,w
 14504  0E4C  00AB               	movwf	_registers_info$2827
 14505  0E4D  0879               	movf	??_registers_info+1,w
 14506  0E4E  00AC               	movwf	_registers_info$2827+1
 14507  0E4F  2E58               	goto	l1674
 14508  0E50                     l6371:	
 14509  0E50  0020               	movlb	0	; select bank0
 14510  0E51  082D               	movf	registers_info@N,w
 14511  0E52  00F8               	movwf	??_registers_info
 14512  0E53  01F9               	clrf	??_registers_info+1
 14513  0E54  0878               	movf	??_registers_info,w
 14514  0E55  00AB               	movwf	_registers_info$2827
 14515  0E56  0879               	movf	??_registers_info+1,w
 14516  0E57  00AC               	movwf	_registers_info$2827+1
 14517  0E58                     l1674:	
 14518  0E58  082B               	movf	_registers_info$2827,w
 14519  0E59  00F8               	movwf	??_registers_info
 14520  0E5A  0878               	movf	??_registers_info,w
 14521  0E5B  00A9               	movwf	registers_info@nr
 14522  0E5C  087A               	movf	_iread,w	;volatile
 14523  0E5D  00F8               	movwf	??_registers_info
 14524  0E5E  0878               	movf	??_registers_info,w
 14525  0E5F  00AA               	movwf	registers_info@ri
 14526  0E60                     l6373:	
 14527                           
 14528                           ;communications.c: 170:     char msg[] = {0XC9, N, nr, ri, wi, '\0'};
 14529  0E60  3023               	movlw	low registers_info@msg
 14530  0E61  0086               	movwf	6
 14531  0E62  3000               	movlw	high registers_info@msg
 14532  0E63  0087               	movwf	7
 14533  0E64  3006               	movlw	6
 14534  0E65  00F8               	movwf	??_registers_info
 14535  0E66  3000               	movlw	0
 14536  0E67                     u5310:	
 14537  0E67  001E               	movwi fsr1++
 14538  0E68  0BF8               	decfsz	??_registers_info,f
 14539  0E69  2E67               	goto	u5310
 14540  0E6A                     l6375:	
 14541  0E6A  30C9               	movlw	201
 14542  0E6B  00F8               	movwf	??_registers_info
 14543  0E6C  0878               	movf	??_registers_info,w
 14544  0E6D  00A3               	movwf	registers_info@msg
 14545  0E6E                     l6377:	
 14546  0E6E  082D               	movf	registers_info@N,w
 14547  0E6F  00F8               	movwf	??_registers_info
 14548  0E70  0878               	movf	??_registers_info,w
 14549  0E71  00A4               	movwf	registers_info@msg+1
 14550  0E72                     l6379:	
 14551  0E72  0829               	movf	registers_info@nr,w
 14552  0E73  00F8               	movwf	??_registers_info
 14553  0E74  0878               	movf	??_registers_info,w
 14554  0E75  00A5               	movwf	registers_info@msg+2
 14555  0E76                     l6381:	
 14556  0E76  082A               	movf	registers_info@ri,w
 14557  0E77  00F8               	movwf	??_registers_info
 14558  0E78  0878               	movf	??_registers_info,w
 14559  0E79  00A6               	movwf	registers_info@msg+3
 14560  0E7A                     l6383:	
 14561  0E7A  082E               	movf	registers_info@wi,w
 14562  0E7B  00F8               	movwf	??_registers_info
 14563  0E7C  0878               	movf	??_registers_info,w
 14564  0E7D  00A7               	movwf	registers_info@msg+4
 14565  0E7E                     l6385:	
 14566  0E7E  01A8               	clrf	registers_info@msg+5
 14567  0E7F                     l6387:	
 14568                           
 14569                           ;communications.c: 171:     send_msg(msg);
 14570  0E7F  3023               	movlw	(low (registers_info@msg| 0))& (0+255)
 14571  0E80  3197  2778  318E   	fcall	_send_msg
 14572  0E83                     l1677:	
 14573  0E83  0008               	return
 14574  0E84                     __end_of_registers_info:	
 14575                           
 14576                           	psect	text16
 14577  161A                     __ptext16:	
 14578 ;; *************** function _read_temp_lum *****************
 14579 ;; Defined at:
 14580 ;;		line 113 in file "communications.c"
 14581 ;; Parameters:    Size  Location     Type
 14582 ;;		None
 14583 ;; Auto vars:     Size  Location     Type
 14584 ;;  msg             4    3[BANK0 ] unsigned char [4]
 14585 ;; Return value:  Size  Location     Type
 14586 ;;                  1    wreg      void 
 14587 ;; Registers used:
 14588 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14589 ;; Tracked objects:
 14590 ;;		On entry : 0/0
 14591 ;;		On exit  : 0/0
 14592 ;;		Unchanged: 0/0
 14593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14595 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14596 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14597 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14598 ;;Total ram usage:        5 bytes
 14599 ;; Hardware stack levels used:    1
 14600 ;; Hardware stack levels required when called:    8
 14601 ;; This function calls:
 14602 ;;		_send_msg
 14603 ;; This function is called by:
 14604 ;;		_interpret_message
 14605 ;; This function uses a non-reentrant model
 14606 ;;
 14607                           
 14608                           
 14609                           ;psect for function _read_temp_lum
 14610  161A                     _read_temp_lum:	
 14611  161A                     l6277:	
 14612                           ;incstack = 0
 14613                           ; Regs used in _read_temp_lum: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14614                           
 14615                           
 14616                           ;communications.c: 114:     char msg[] = {0XC2, temp, illum, '\0'};
 14617  161A  3000               	movlw	0
 14618  161B  0020               	movlb	0	; select bank0
 14619  161C  00A6               	movwf	read_temp_lum@msg+3
 14620  161D  3000               	movlw	0
 14621  161E  00A5               	movwf	read_temp_lum@msg+2
 14622  161F  3000               	movlw	0
 14623  1620  00A4               	movwf	read_temp_lum@msg+1
 14624  1621  3000               	movlw	0
 14625  1622  00A3               	movwf	read_temp_lum@msg
 14626  1623  30C2               	movlw	194
 14627  1624  00F8               	movwf	??_read_temp_lum
 14628  1625  0878               	movf	??_read_temp_lum,w
 14629  1626  00A3               	movwf	read_temp_lum@msg
 14630  1627  0021               	movlb	1	; select bank1
 14631  1628  0852               	movf	_temp^(0+128),w
 14632  1629  00F8               	movwf	??_read_temp_lum
 14633  162A  0878               	movf	??_read_temp_lum,w
 14634  162B  0020               	movlb	0	; select bank0
 14635  162C  00A4               	movwf	read_temp_lum@msg+1
 14636  162D  0021               	movlb	1	; select bank1
 14637  162E  0851               	movf	_illum^(0+128),w
 14638  162F  00F8               	movwf	??_read_temp_lum
 14639  1630  0878               	movf	??_read_temp_lum,w
 14640  1631  0020               	movlb	0	; select bank0
 14641  1632  00A5               	movwf	read_temp_lum@msg+2
 14642  1633                     l6279:	
 14643  1633  01A6               	clrf	read_temp_lum@msg+3
 14644  1634                     l6281:	
 14645                           
 14646                           ;communications.c: 115:     send_msg(msg);
 14647  1634  3023               	movlw	(low (read_temp_lum@msg| 0))& (0+255)
 14648  1635  3197  2778  3196   	fcall	_send_msg
 14649  1638                     l1634:	
 14650  1638  0008               	return
 14651  1639                     __end_of_read_temp_lum:	
 14652                           
 14653                           	psect	text17
 14654  15C0                     __ptext17:	
 14655 ;; *************** function _read_param *****************
 14656 ;; Defined at:
 14657 ;;		line 118 in file "communications.c"
 14658 ;; Parameters:    Size  Location     Type
 14659 ;;		None
 14660 ;; Auto vars:     Size  Location     Type
 14661 ;;  msg             4    3[BANK0 ] unsigned char [4]
 14662 ;; Return value:  Size  Location     Type
 14663 ;;                  1    wreg      void 
 14664 ;; Registers used:
 14665 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14666 ;; Tracked objects:
 14667 ;;		On entry : 0/0
 14668 ;;		On exit  : 0/0
 14669 ;;		Unchanged: 0/0
 14670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14672 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14674 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14675 ;;Total ram usage:        5 bytes
 14676 ;; Hardware stack levels used:    1
 14677 ;; Hardware stack levels required when called:    8
 14678 ;; This function calls:
 14679 ;;		_send_msg
 14680 ;; This function is called by:
 14681 ;;		_interpret_message
 14682 ;; This function uses a non-reentrant model
 14683 ;;
 14684                           
 14685                           
 14686                           ;psect for function _read_param
 14687  15C0                     _read_param:	
 14688  15C0                     l6283:	
 14689                           ;incstack = 0
 14690                           ; Regs used in _read_param: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14691                           
 14692                           
 14693                           ;communications.c: 119:     char msg[] = {0XC3, pmon, tala, '\0'};
 14694  15C0  3000               	movlw	0
 14695  15C1  0020               	movlb	0	; select bank0
 14696  15C2  00A6               	movwf	read_param@msg+3
 14697  15C3  3000               	movlw	0
 14698  15C4  00A5               	movwf	read_param@msg+2
 14699  15C5  3000               	movlw	0
 14700  15C6  00A4               	movwf	read_param@msg+1
 14701  15C7  3000               	movlw	0
 14702  15C8  00A3               	movwf	read_param@msg
 14703  15C9  30C3               	movlw	195
 14704  15CA  00F8               	movwf	??_read_param
 14705  15CB  0878               	movf	??_read_param,w
 14706  15CC  00A3               	movwf	read_param@msg
 14707  15CD  086D               	movf	_pmon,w
 14708  15CE  00F8               	movwf	??_read_param
 14709  15CF  0878               	movf	??_read_param,w
 14710  15D0  00A4               	movwf	read_param@msg+1
 14711  15D1  0021               	movlb	1	; select bank1
 14712  15D2  0857               	movf	_tala^(0+128),w
 14713  15D3  00F8               	movwf	??_read_param
 14714  15D4  0878               	movf	??_read_param,w
 14715  15D5  0020               	movlb	0	; select bank0
 14716  15D6  00A5               	movwf	read_param@msg+2
 14717  15D7                     l6285:	
 14718  15D7  01A6               	clrf	read_param@msg+3
 14719  15D8                     l6287:	
 14720                           
 14721                           ;communications.c: 120:     send_msg(msg);
 14722  15D8  3023               	movlw	(low (read_param@msg| 0))& (0+255)
 14723  15D9  3197  2778  3195   	fcall	_send_msg
 14724  15DC                     l1639:	
 14725  15DC  0008               	return
 14726  15DD                     __end_of_read_param:	
 14727                           
 14728                           	psect	text18
 14729  08C6                     __ptext18:	
 14730 ;; *************** function _read_clock *****************
 14731 ;; Defined at:
 14732 ;;		line 92 in file "communications.c"
 14733 ;; Parameters:    Size  Location     Type
 14734 ;;		None
 14735 ;; Auto vars:     Size  Location     Type
 14736 ;;  msg             5    6[BANK0 ] unsigned char [5]
 14737 ;;  seconds         1    5[BANK0 ] unsigned char 
 14738 ;;  minutes         1    4[BANK0 ] unsigned char 
 14739 ;;  hours           1    3[BANK0 ] unsigned char 
 14740 ;; Return value:  Size  Location     Type
 14741 ;;                  1    wreg      void 
 14742 ;; Registers used:
 14743 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14744 ;; Tracked objects:
 14745 ;;		On entry : 0/0
 14746 ;;		On exit  : 0/0
 14747 ;;		Unchanged: 0/0
 14748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14750 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14751 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14752 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14753 ;;Total ram usage:        9 bytes
 14754 ;; Hardware stack levels used:    1
 14755 ;; Hardware stack levels required when called:    8
 14756 ;; This function calls:
 14757 ;;		_send_msg
 14758 ;; This function is called by:
 14759 ;;		_interpret_message
 14760 ;; This function uses a non-reentrant model
 14761 ;;
 14762                           
 14763                           
 14764                           ;psect for function _read_clock
 14765  08C6                     _read_clock:	
 14766  08C6                     l6235:	
 14767                           ;incstack = 0
 14768                           ; Regs used in _read_clock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14769                           
 14770                           
 14771                           ;communications.c: 93:     (INTCONbits.PEIE = 0);
 14772  08C6  130B               	bcf	11,6	;volatile
 14773  08C7                     l6237:	
 14774                           
 14775                           ;communications.c: 94:     uint8_t hours = clkh, minutes = clkm, seconds = clks;
 14776  08C7  0020               	movlb	0	; select bank0
 14777  08C8  086A               	movf	_clkh,w	;volatile
 14778  08C9  00F8               	movwf	??_read_clock
 14779  08CA  0878               	movf	??_read_clock,w
 14780  08CB  00A3               	movwf	read_clock@hours
 14781  08CC  0869               	movf	_clkm,w	;volatile
 14782  08CD  00F8               	movwf	??_read_clock
 14783  08CE  0878               	movf	??_read_clock,w
 14784  08CF  00A4               	movwf	read_clock@minutes
 14785  08D0  0868               	movf	_clks,w	;volatile
 14786  08D1  00F8               	movwf	??_read_clock
 14787  08D2  0878               	movf	??_read_clock,w
 14788  08D3  00A5               	movwf	read_clock@seconds
 14789  08D4                     l6239:	
 14790                           
 14791                           ;communications.c: 95:     (INTCONbits.PEIE = 1);
 14792  08D4  170B               	bsf	11,6	;volatile
 14793  08D5                     l6241:	
 14794                           
 14795                           ;communications.c: 96:     char msg[] = {0xC0, hours, minutes, seconds, '\0'};
 14796  08D5  3026               	movlw	low read_clock@msg
 14797  08D6  0086               	movwf	6
 14798  08D7  3000               	movlw	high read_clock@msg
 14799  08D8  0087               	movwf	7
 14800  08D9  3005               	movlw	5
 14801  08DA  00F8               	movwf	??_read_clock
 14802  08DB  3000               	movlw	0
 14803  08DC                     u5040:	
 14804  08DC  001E               	movwi fsr1++
 14805  08DD  0BF8               	decfsz	??_read_clock,f
 14806  08DE  28DC               	goto	u5040
 14807  08DF                     l6243:	
 14808  08DF  30C0               	movlw	192
 14809  08E0  00F8               	movwf	??_read_clock
 14810  08E1  0878               	movf	??_read_clock,w
 14811  08E2  00A6               	movwf	read_clock@msg
 14812  08E3                     l6245:	
 14813  08E3  0823               	movf	read_clock@hours,w
 14814  08E4  00F8               	movwf	??_read_clock
 14815  08E5  0878               	movf	??_read_clock,w
 14816  08E6  00A7               	movwf	read_clock@msg+1
 14817  08E7                     l6247:	
 14818  08E7  0824               	movf	read_clock@minutes,w
 14819  08E8  00F8               	movwf	??_read_clock
 14820  08E9  0878               	movf	??_read_clock,w
 14821  08EA  00A8               	movwf	read_clock@msg+2
 14822  08EB                     l6249:	
 14823  08EB  0825               	movf	read_clock@seconds,w
 14824  08EC  00F8               	movwf	??_read_clock
 14825  08ED  0878               	movf	??_read_clock,w
 14826  08EE  00A9               	movwf	read_clock@msg+3
 14827  08EF                     l6251:	
 14828  08EF  01AA               	clrf	read_clock@msg+4
 14829  08F0                     l6253:	
 14830                           
 14831                           ;communications.c: 97:     send_msg(msg);
 14832  08F0  3026               	movlw	(low (read_clock@msg| 0))& (0+255)
 14833  08F1  3197  2778  3188   	fcall	_send_msg
 14834  08F4                     l1623:	
 14835  08F4  0008               	return
 14836  08F5                     __end_of_read_clock:	
 14837                           
 14838                           	psect	text19
 14839  16BA                     __ptext19:	
 14840 ;; *************** function _read_alarms *****************
 14841 ;; Defined at:
 14842 ;;		line 143 in file "communications.c"
 14843 ;; Parameters:    Size  Location     Type
 14844 ;;		None
 14845 ;; Auto vars:     Size  Location     Type
 14846 ;;  msg             5    3[BANK0 ] unsigned char [5]
 14847 ;; Return value:  Size  Location     Type
 14848 ;;                  1    wreg      void 
 14849 ;; Registers used:
 14850 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14851 ;; Tracked objects:
 14852 ;;		On entry : 0/0
 14853 ;;		On exit  : 0/0
 14854 ;;		Unchanged: 0/0
 14855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14857 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14858 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14859 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14860 ;;Total ram usage:        6 bytes
 14861 ;; Hardware stack levels used:    1
 14862 ;; Hardware stack levels required when called:    8
 14863 ;; This function calls:
 14864 ;;		_send_msg
 14865 ;; This function is called by:
 14866 ;;		_interpret_message
 14867 ;; This function uses a non-reentrant model
 14868 ;;
 14869                           
 14870                           
 14871                           ;psect for function _read_alarms
 14872  16BA                     _read_alarms:	
 14873  16BA                     l6321:	
 14874                           ;incstack = 0
 14875                           ; Regs used in _read_alarms: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14876                           
 14877                           
 14878                           ;communications.c: 144:     char msg[] = {0XC6, alat, alal, alaf, '\0'};
 14879  16BA  3023               	movlw	low read_alarms@msg
 14880  16BB  0086               	movwf	6
 14881  16BC  3000               	movlw	high read_alarms@msg
 14882  16BD  0087               	movwf	7
 14883  16BE  3005               	movlw	5
 14884  16BF  00F8               	movwf	??_read_alarms
 14885  16C0  3000               	movlw	0
 14886  16C1                     u5220:	
 14887  16C1  001E               	movwi fsr1++
 14888  16C2  0BF8               	decfsz	??_read_alarms,f
 14889  16C3  2EC1               	goto	u5220
 14890  16C4                     l6323:	
 14891  16C4  30C6               	movlw	198
 14892  16C5  00F8               	movwf	??_read_alarms
 14893  16C6  0878               	movf	??_read_alarms,w
 14894  16C7  0020               	movlb	0	; select bank0
 14895  16C8  00A3               	movwf	read_alarms@msg
 14896  16C9                     l6325:	
 14897  16C9  086C               	movf	_alat,w
 14898  16CA  00F8               	movwf	??_read_alarms
 14899  16CB  0878               	movf	??_read_alarms,w
 14900  16CC  00A4               	movwf	read_alarms@msg+1
 14901  16CD                     l6327:	
 14902  16CD  0021               	movlb	1	; select bank1
 14903  16CE  0856               	movf	_alal^(0+128),w
 14904  16CF  00F8               	movwf	??_read_alarms
 14905  16D0  0878               	movf	??_read_alarms,w
 14906  16D1  0020               	movlb	0	; select bank0
 14907  16D2  00A5               	movwf	read_alarms@msg+2
 14908  16D3                     l6329:	
 14909  16D3  086B               	movf	_alaf,w
 14910  16D4  00F8               	movwf	??_read_alarms
 14911  16D5  0878               	movf	??_read_alarms,w
 14912  16D6  00A6               	movwf	read_alarms@msg+3
 14913  16D7                     l6331:	
 14914  16D7  01A7               	clrf	read_alarms@msg+4
 14915  16D8                     l6333:	
 14916                           
 14917                           ;communications.c: 145:     send_msg(msg);
 14918  16D8  3023               	movlw	(low (read_alarms@msg| 0))& (0+255)
 14919  16D9  3197  2778  3196   	fcall	_send_msg
 14920  16DC                     l1656:	
 14921  16DC  0008               	return
 14922  16DD                     __end_of_read_alarms:	
 14923                           
 14924                           	psect	text20
 14925  0996                     __ptext20:	
 14926 ;; *************** function _modify_time_alarm *****************
 14927 ;; Defined at:
 14928 ;;		line 133 in file "communications.c"
 14929 ;; Parameters:    Size  Location     Type
 14930 ;;  data            1    wreg     PTR unsigned char 
 14931 ;;		 -> NULL(0), read_msgs@aux(8), 
 14932 ;; Auto vars:     Size  Location     Type
 14933 ;;  data            1    9[BANK0 ] PTR unsigned char 
 14934 ;;		 -> NULL(0), read_msgs@aux(8), 
 14935 ;; Return value:  Size  Location     Type
 14936 ;;                  1    wreg      void 
 14937 ;; Registers used:
 14938 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14939 ;; Tracked objects:
 14940 ;;		On entry : 0/0
 14941 ;;		On exit  : 0/0
 14942 ;;		Unchanged: 0/0
 14943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14945 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14946 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14947 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14948 ;;Total ram usage:        2 bytes
 14949 ;; Hardware stack levels used:    1
 14950 ;; Hardware stack levels required when called:    9
 14951 ;; This function calls:
 14952 ;;		_send_confirmation
 14953 ;;		_strlen
 14954 ;;		_write_tala
 14955 ;; This function is called by:
 14956 ;;		_interpret_message
 14957 ;; This function uses a non-reentrant model
 14958 ;;
 14959                           
 14960                           
 14961                           ;psect for function _modify_time_alarm
 14962  0996                     _modify_time_alarm:	
 14963                           
 14964                           ;incstack = 0
 14965                           ; Regs used in _modify_time_alarm: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14966                           ;modify_time_alarm@data stored from wreg
 14967  0996  0020               	movlb	0	; select bank0
 14968  0997  00A9               	movwf	modify_time_alarm@data
 14969  0998                     l6305:	
 14970                           
 14971                           ;communications.c: 134:     if(!data || strlen(data) != 1 || data[0] > 60) {
 14972  0998  0829               	movf	modify_time_alarm@data,w
 14973  0999  1903               	btfsc	3,2
 14974  099A  299C               	goto	u5191
 14975  099B  299D               	goto	u5190
 14976  099C                     u5191:	
 14977  099C  29B1               	goto	l6311
 14978  099D                     u5190:	
 14979  099D                     l6307:	
 14980  099D  0829               	movf	modify_time_alarm@data,w
 14981  099E  3195  253C  3189   	fcall	_strlen
 14982  09A1  0372               	decf	?_strlen,w
 14983  09A2  0473               	iorwf	?_strlen+1,w
 14984  09A3  1D03               	btfss	3,2
 14985  09A4  29A6               	goto	u5201
 14986  09A5  29A7               	goto	u5200
 14987  09A6                     u5201:	
 14988  09A6  29B1               	goto	l6311
 14989  09A7                     u5200:	
 14990  09A7                     l6309:	
 14991  09A7  0020               	movlb	0	; select bank0
 14992  09A8  0829               	movf	modify_time_alarm@data,w
 14993  09A9  0086               	movwf	6
 14994  09AA  0187               	clrf	7
 14995  09AB  303D               	movlw	61
 14996  09AC  0201               	subwf	1,w
 14997  09AD  1C03               	skipc
 14998  09AE  29B0               	goto	u5211
 14999  09AF  29B1               	goto	u5210
 15000  09B0                     u5211:	
 15001  09B0  29BB               	goto	l6315
 15002  09B1                     u5210:	
 15003  09B1                     l6311:	
 15004                           
 15005                           ;communications.c: 135:         send_confirmation(0XC5, 0xFF);
 15006  09B1  30FF               	movlw	255
 15007  09B2  0020               	movlb	0	; select bank0
 15008  09B3  00A8               	movwf	??_modify_time_alarm
 15009  09B4  0828               	movf	??_modify_time_alarm,w
 15010  09B5  00F8               	movwf	send_confirmation@error
 15011  09B6  30C5               	movlw	197
 15012  09B7  3195  250F  3189   	fcall	_send_confirmation
 15013  09BA  29CC               	goto	l1651
 15014  09BB                     l6315:	
 15015                           
 15016                           ;communications.c: 138:     tala = data[0];
 15017  09BB  0829               	movf	modify_time_alarm@data,w
 15018  09BC  0086               	movwf	6
 15019  09BD  0187               	clrf	7
 15020  09BE  0801               	movf	1,w
 15021  09BF  00A8               	movwf	??_modify_time_alarm
 15022  09C0  0828               	movf	??_modify_time_alarm,w
 15023  09C1  0021               	movlb	1	; select bank1
 15024  09C2  00D7               	movwf	_tala^(0+128)
 15025  09C3                     l6317:	
 15026                           
 15027                           ;communications.c: 139:     write_tala(tala);
 15028  09C3  0857               	movf	_tala^(0+128),w
 15029  09C4  3188  2098  3189   	fcall	_write_tala
 15030  09C7                     l6319:	
 15031                           
 15032                           ;communications.c: 140:     send_confirmation(0XC5, 0);
 15033  09C7  01F8               	clrf	send_confirmation@error
 15034  09C8  30C5               	movlw	197
 15035  09C9  3195  250F  3189   	fcall	_send_confirmation
 15036  09CC                     l1651:	
 15037  09CC  0008               	return
 15038  09CD                     __end_of_modify_time_alarm:	
 15039                           
 15040                           	psect	text21
 15041  0898                     __ptext21:	
 15042 ;; *************** function _write_tala *****************
 15043 ;; Defined at:
 15044 ;;		line 142 in file "eeprom.c"
 15045 ;; Parameters:    Size  Location     Type
 15046 ;;  x               1    wreg     unsigned char 
 15047 ;; Auto vars:     Size  Location     Type
 15048 ;;  x               1    7[BANK0 ] unsigned char 
 15049 ;; Return value:  Size  Location     Type
 15050 ;;                  1    wreg      void 
 15051 ;; Registers used:
 15052 ;;		wreg, status,2, status,0, pclath, cstack
 15053 ;; Tracked objects:
 15054 ;;		On entry : 0/0
 15055 ;;		On exit  : 0/0
 15056 ;;		Unchanged: 0/0
 15057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15059 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15060 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15061 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15062 ;;Total ram usage:        4 bytes
 15063 ;; Hardware stack levels used:    1
 15064 ;; Hardware stack levels required when called:    7
 15065 ;; This function calls:
 15066 ;;		_DATAEE_ReadByte
 15067 ;;		_DATAEE_WriteByte
 15068 ;; This function is called by:
 15069 ;;		_modify_time_alarm
 15070 ;; This function uses a non-reentrant model
 15071 ;;
 15072                           
 15073                           
 15074                           ;psect for function _write_tala
 15075  0898                     _write_tala:	
 15076                           
 15077                           ;incstack = 0
 15078                           ; Regs used in _write_tala: [wreg+status,2+status,0+pclath+cstack]
 15079                           ;write_tala@x stored from wreg
 15080  0898  0020               	movlb	0	; select bank0
 15081  0899  00A7               	movwf	write_tala@x
 15082  089A                     l6081:	
 15083                           
 15084                           ;eeprom.c: 144:     DATAEE_WriteByte(0xF000, DATAEE_ReadByte(0xF000) + x - DATAEE_ReadBy
      +                          te(0xF003));
 15085  089A  3000               	movlw	0
 15086  089B  00A0               	movwf	DATAEE_WriteByte@bAdd
 15087  089C  30F0               	movlw	240
 15088  089D  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 15089  089E  3003               	movlw	3
 15090  089F  00F2               	movwf	DATAEE_ReadByte@bAdd
 15091  08A0  30F0               	movlw	240
 15092  08A1  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 15093  08A2  3193  23C7  3188   	fcall	_DATAEE_ReadByte
 15094  08A5  0020               	movlb	0	; select bank0
 15095  08A6  00A4               	movwf	??_write_tala
 15096  08A7  3000               	movlw	0
 15097  08A8  00F2               	movwf	DATAEE_ReadByte@bAdd
 15098  08A9  30F0               	movlw	240
 15099  08AA  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 15100  08AB  3193  23C7  3188   	fcall	_DATAEE_ReadByte
 15101  08AE  0020               	movlb	0	; select bank0
 15102  08AF  00A5               	movwf	??_write_tala+1
 15103  08B0  0824               	movf	??_write_tala,w
 15104  08B1  0225               	subwf	??_write_tala+1,w
 15105  08B2  0727               	addwf	write_tala@x,w
 15106  08B3  00A6               	movwf	??_write_tala+2
 15107  08B4  0826               	movf	??_write_tala+2,w
 15108  08B5  00A2               	movwf	DATAEE_WriteByte@bData
 15109  08B6  3197  2700  3188   	fcall	_DATAEE_WriteByte
 15110                           
 15111                           ;eeprom.c: 146:     DATAEE_WriteByte(0xF003, x);
 15112  08B9  3003               	movlw	3
 15113  08BA  0020               	movlb	0	; select bank0
 15114  08BB  00A0               	movwf	DATAEE_WriteByte@bAdd
 15115  08BC  30F0               	movlw	240
 15116  08BD  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 15117  08BE  0827               	movf	write_tala@x,w
 15118  08BF  00A4               	movwf	??_write_tala
 15119  08C0  0824               	movf	??_write_tala,w
 15120  08C1  00A2               	movwf	DATAEE_WriteByte@bData
 15121  08C2  3197  2700  3188   	fcall	_DATAEE_WriteByte
 15122  08C5                     l1468:	
 15123  08C5  0008               	return
 15124  08C6                     __end_of_write_tala:	
 15125                           
 15126                           	psect	text22
 15127  092A                     __ptext22:	
 15128 ;; *************** function _modify_pmon *****************
 15129 ;; Defined at:
 15130 ;;		line 123 in file "communications.c"
 15131 ;; Parameters:    Size  Location     Type
 15132 ;;  data            1    wreg     PTR unsigned char 
 15133 ;;		 -> NULL(0), read_msgs@aux(8), 
 15134 ;; Auto vars:     Size  Location     Type
 15135 ;;  data            1    9[BANK0 ] PTR unsigned char 
 15136 ;;		 -> NULL(0), read_msgs@aux(8), 
 15137 ;; Return value:  Size  Location     Type
 15138 ;;                  1    wreg      void 
 15139 ;; Registers used:
 15140 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15141 ;; Tracked objects:
 15142 ;;		On entry : 0/0
 15143 ;;		On exit  : 0/0
 15144 ;;		Unchanged: 0/0
 15145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15147 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15148 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15149 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15150 ;;Total ram usage:        2 bytes
 15151 ;; Hardware stack levels used:    1
 15152 ;; Hardware stack levels required when called:    9
 15153 ;; This function calls:
 15154 ;;		_send_confirmation
 15155 ;;		_strlen
 15156 ;;		_write_pmon
 15157 ;; This function is called by:
 15158 ;;		_interpret_message
 15159 ;; This function uses a non-reentrant model
 15160 ;;
 15161                           
 15162                           
 15163                           ;psect for function _modify_pmon
 15164  092A                     _modify_pmon:	
 15165                           
 15166                           ;incstack = 0
 15167                           ; Regs used in _modify_pmon: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15168                           ;modify_pmon@data stored from wreg
 15169  092A  0020               	movlb	0	; select bank0
 15170  092B  00A9               	movwf	modify_pmon@data
 15171  092C                     l6289:	
 15172                           
 15173                           ;communications.c: 124:     if(!data || strlen(data) != 1 || data[0] > 99) {
 15174  092C  0829               	movf	modify_pmon@data,w
 15175  092D  1903               	btfsc	3,2
 15176  092E  2930               	goto	u5161
 15177  092F  2931               	goto	u5160
 15178  0930                     u5161:	
 15179  0930  2945               	goto	l6295
 15180  0931                     u5160:	
 15181  0931                     l6291:	
 15182  0931  0829               	movf	modify_pmon@data,w
 15183  0932  3195  253C  3189   	fcall	_strlen
 15184  0935  0372               	decf	?_strlen,w
 15185  0936  0473               	iorwf	?_strlen+1,w
 15186  0937  1D03               	btfss	3,2
 15187  0938  293A               	goto	u5171
 15188  0939  293B               	goto	u5170
 15189  093A                     u5171:	
 15190  093A  2945               	goto	l6295
 15191  093B                     u5170:	
 15192  093B                     l6293:	
 15193  093B  0020               	movlb	0	; select bank0
 15194  093C  0829               	movf	modify_pmon@data,w
 15195  093D  0086               	movwf	6
 15196  093E  0187               	clrf	7
 15197  093F  3064               	movlw	100
 15198  0940  0201               	subwf	1,w
 15199  0941  1C03               	skipc
 15200  0942  2944               	goto	u5181
 15201  0943  2945               	goto	u5180
 15202  0944                     u5181:	
 15203  0944  294F               	goto	l6299
 15204  0945                     u5180:	
 15205  0945                     l6295:	
 15206                           
 15207                           ;communications.c: 125:         send_confirmation(0XC4, 0xFF);
 15208  0945  30FF               	movlw	255
 15209  0946  0020               	movlb	0	; select bank0
 15210  0947  00A8               	movwf	??_modify_pmon
 15211  0948  0828               	movf	??_modify_pmon,w
 15212  0949  00F8               	movwf	send_confirmation@error
 15213  094A  30C4               	movlw	196
 15214  094B  3195  250F  3189   	fcall	_send_confirmation
 15215  094E  295F               	goto	l1645
 15216  094F                     l6299:	
 15217                           
 15218                           ;communications.c: 128:     pmon = data[0];
 15219  094F  0829               	movf	modify_pmon@data,w
 15220  0950  0086               	movwf	6
 15221  0951  0187               	clrf	7
 15222  0952  0801               	movf	1,w
 15223  0953  00A8               	movwf	??_modify_pmon
 15224  0954  0828               	movf	??_modify_pmon,w
 15225  0955  00ED               	movwf	_pmon
 15226  0956                     l6301:	
 15227                           
 15228                           ;communications.c: 129:     write_pmon(pmon);
 15229  0956  086D               	movf	_pmon,w
 15230  0957  3188  206A  3189   	fcall	_write_pmon
 15231  095A                     l6303:	
 15232                           
 15233                           ;communications.c: 130:     send_confirmation(0XC4, 0);
 15234  095A  01F8               	clrf	send_confirmation@error
 15235  095B  30C4               	movlw	196
 15236  095C  3195  250F  3189   	fcall	_send_confirmation
 15237  095F                     l1645:	
 15238  095F  0008               	return
 15239  0960                     __end_of_modify_pmon:	
 15240                           
 15241                           	psect	text23
 15242  086A                     __ptext23:	
 15243 ;; *************** function _write_pmon *****************
 15244 ;; Defined at:
 15245 ;;		line 135 in file "eeprom.c"
 15246 ;; Parameters:    Size  Location     Type
 15247 ;;  x               1    wreg     unsigned char 
 15248 ;; Auto vars:     Size  Location     Type
 15249 ;;  x               1    7[BANK0 ] unsigned char 
 15250 ;; Return value:  Size  Location     Type
 15251 ;;                  1    wreg      void 
 15252 ;; Registers used:
 15253 ;;		wreg, status,2, status,0, pclath, cstack
 15254 ;; Tracked objects:
 15255 ;;		On entry : 0/0
 15256 ;;		On exit  : 0/0
 15257 ;;		Unchanged: 0/0
 15258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15260 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15261 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15262 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15263 ;;Total ram usage:        4 bytes
 15264 ;; Hardware stack levels used:    1
 15265 ;; Hardware stack levels required when called:    7
 15266 ;; This function calls:
 15267 ;;		_DATAEE_ReadByte
 15268 ;;		_DATAEE_WriteByte
 15269 ;; This function is called by:
 15270 ;;		_modify_pmon
 15271 ;; This function uses a non-reentrant model
 15272 ;;
 15273                           
 15274                           
 15275                           ;psect for function _write_pmon
 15276  086A                     _write_pmon:	
 15277                           
 15278                           ;incstack = 0
 15279                           ; Regs used in _write_pmon: [wreg+status,2+status,0+pclath+cstack]
 15280                           ;write_pmon@x stored from wreg
 15281  086A  0020               	movlb	0	; select bank0
 15282  086B  00A7               	movwf	write_pmon@x
 15283  086C                     l6079:	
 15284                           
 15285                           ;eeprom.c: 137:     DATAEE_WriteByte(0xF000, DATAEE_ReadByte(0xF000) + x - DATAEE_ReadBy
      +                          te(0xF002));
 15286  086C  3000               	movlw	0
 15287  086D  00A0               	movwf	DATAEE_WriteByte@bAdd
 15288  086E  30F0               	movlw	240
 15289  086F  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 15290  0870  3002               	movlw	2
 15291  0871  00F2               	movwf	DATAEE_ReadByte@bAdd
 15292  0872  30F0               	movlw	240
 15293  0873  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 15294  0874  3193  23C7  3188   	fcall	_DATAEE_ReadByte
 15295  0877  0020               	movlb	0	; select bank0
 15296  0878  00A4               	movwf	??_write_pmon
 15297  0879  3000               	movlw	0
 15298  087A  00F2               	movwf	DATAEE_ReadByte@bAdd
 15299  087B  30F0               	movlw	240
 15300  087C  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 15301  087D  3193  23C7  3188   	fcall	_DATAEE_ReadByte
 15302  0880  0020               	movlb	0	; select bank0
 15303  0881  00A5               	movwf	??_write_pmon+1
 15304  0882  0824               	movf	??_write_pmon,w
 15305  0883  0225               	subwf	??_write_pmon+1,w
 15306  0884  0727               	addwf	write_pmon@x,w
 15307  0885  00A6               	movwf	??_write_pmon+2
 15308  0886  0826               	movf	??_write_pmon+2,w
 15309  0887  00A2               	movwf	DATAEE_WriteByte@bData
 15310  0888  3197  2700  3188   	fcall	_DATAEE_WriteByte
 15311                           
 15312                           ;eeprom.c: 139:     DATAEE_WriteByte(0xF002, x);
 15313  088B  3002               	movlw	2
 15314  088C  0020               	movlb	0	; select bank0
 15315  088D  00A0               	movwf	DATAEE_WriteByte@bAdd
 15316  088E  30F0               	movlw	240
 15317  088F  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 15318  0890  0827               	movf	write_pmon@x,w
 15319  0891  00A4               	movwf	??_write_pmon
 15320  0892  0824               	movf	??_write_pmon,w
 15321  0893  00A2               	movwf	DATAEE_WriteByte@bData
 15322  0894  3197  2700  3188   	fcall	_DATAEE_WriteByte
 15323  0897                     l1465:	
 15324  0897  0008               	return
 15325  0898                     __end_of_write_pmon:	
 15326                           
 15327                           	psect	text24
 15328  0ABD                     __ptext24:	
 15329 ;; *************** function _define_alarm *****************
 15330 ;; Defined at:
 15331 ;;		line 148 in file "communications.c"
 15332 ;; Parameters:    Size  Location     Type
 15333 ;;  data            1    wreg     PTR unsigned char 
 15334 ;;		 -> NULL(0), read_msgs@aux(8), 
 15335 ;; Auto vars:     Size  Location     Type
 15336 ;;  data            1    8[BANK0 ] PTR unsigned char 
 15337 ;;		 -> NULL(0), read_msgs@aux(8), 
 15338 ;; Return value:  Size  Location     Type
 15339 ;;                  1    wreg      void 
 15340 ;; Registers used:
 15341 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15342 ;; Tracked objects:
 15343 ;;		On entry : 0/0
 15344 ;;		On exit  : 0/0
 15345 ;;		Unchanged: 0/0
 15346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15348 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15349 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15350 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15351 ;;Total ram usage:        2 bytes
 15352 ;; Hardware stack levels used:    1
 15353 ;; Hardware stack levels required when called:    9
 15354 ;; This function calls:
 15355 ;;		_send_confirmation
 15356 ;;		_strlen
 15357 ;; This function is called by:
 15358 ;;		_interpret_message
 15359 ;; This function uses a non-reentrant model
 15360 ;;
 15361                           
 15362                           
 15363                           ;psect for function _define_alarm
 15364  0ABD                     _define_alarm:	
 15365                           
 15366                           ;incstack = 0
 15367                           ; Regs used in _define_alarm: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15368                           ;define_alarm@data stored from wreg
 15369  0ABD  0020               	movlb	0	; select bank0
 15370  0ABE  00A8               	movwf	define_alarm@data
 15371  0ABF                     l6335:	
 15372                           
 15373                           ;communications.c: 149:     if(!data || strlen(data) != 2 || data[0] > 50 || data[1] > 3
      +                          ) {
 15374  0ABF  0828               	movf	define_alarm@data,w
 15375  0AC0  1903               	btfsc	3,2
 15376  0AC1  2AC3               	goto	u5231
 15377  0AC2  2AC4               	goto	u5230
 15378  0AC3                     u5231:	
 15379  0AC3  2AE2               	goto	l6343
 15380  0AC4                     u5230:	
 15381  0AC4                     l6337:	
 15382  0AC4  0828               	movf	define_alarm@data,w
 15383  0AC5  3195  253C  318A   	fcall	_strlen
 15384  0AC8  3002               	movlw	2
 15385  0AC9  0672               	xorwf	?_strlen,w
 15386  0ACA  0473               	iorwf	?_strlen+1,w
 15387  0ACB  1D03               	btfss	3,2
 15388  0ACC  2ACE               	goto	u5241
 15389  0ACD  2ACF               	goto	u5240
 15390  0ACE                     u5241:	
 15391  0ACE  2AE2               	goto	l6343
 15392  0ACF                     u5240:	
 15393  0ACF                     l6339:	
 15394  0ACF  0020               	movlb	0	; select bank0
 15395  0AD0  0828               	movf	define_alarm@data,w
 15396  0AD1  0086               	movwf	6
 15397  0AD2  0187               	clrf	7
 15398  0AD3  3033               	movlw	51
 15399  0AD4  0201               	subwf	1,w
 15400  0AD5  1803               	skipnc
 15401  0AD6  2AD8               	goto	u5251
 15402  0AD7  2AD9               	goto	u5250
 15403  0AD8                     u5251:	
 15404  0AD8  2AE2               	goto	l6343
 15405  0AD9                     u5250:	
 15406  0AD9                     l6341:	
 15407  0AD9  0A28               	incf	define_alarm@data,w
 15408  0ADA  0086               	movwf	6
 15409  0ADB  0187               	clrf	7
 15410  0ADC  3004               	movlw	4
 15411  0ADD  0201               	subwf	1,w
 15412  0ADE  1C03               	skipc
 15413  0ADF  2AE1               	goto	u5261
 15414  0AE0  2AE2               	goto	u5260
 15415  0AE1                     u5261:	
 15416  0AE1  2AEC               	goto	l6347
 15417  0AE2                     u5260:	
 15418  0AE2                     l6343:	
 15419                           
 15420                           ;communications.c: 150:         send_confirmation(0XC7, 0xFF);
 15421  0AE2  30FF               	movlw	255
 15422  0AE3  0020               	movlb	0	; select bank0
 15423  0AE4  00A7               	movwf	??_define_alarm
 15424  0AE5  0827               	movf	??_define_alarm,w
 15425  0AE6  00F8               	movwf	send_confirmation@error
 15426  0AE7  30C7               	movlw	199
 15427  0AE8  3195  250F  318A   	fcall	_send_confirmation
 15428  0AEB  2AFE               	goto	l1662
 15429  0AEC                     l6347:	
 15430                           
 15431                           ;communications.c: 153:     alat = data[0]; alal = data[1];
 15432  0AEC  0828               	movf	define_alarm@data,w
 15433  0AED  0086               	movwf	6
 15434  0AEE  0187               	clrf	7
 15435  0AEF  0801               	movf	1,w
 15436  0AF0  00A7               	movwf	??_define_alarm
 15437  0AF1  0827               	movf	??_define_alarm,w
 15438  0AF2  00EC               	movwf	_alat
 15439  0AF3  0828               	movf	define_alarm@data,w
 15440  0AF4  0086               	movwf	6
 15441  0AF5  0187               	clrf	7
 15442  0AF6  3F41               	moviw [1]fsr1
 15443  0AF7  0021               	movlb	1	; select bank1
 15444  0AF8  00D6               	movwf	_alal^(0+128)
 15445  0AF9                     l6349:	
 15446                           
 15447                           ;communications.c: 154:     send_confirmation(0XC7, 0);
 15448  0AF9  01F8               	clrf	send_confirmation@error
 15449  0AFA  30C7               	movlw	199
 15450  0AFB  3195  250F  318A   	fcall	_send_confirmation
 15451  0AFE                     l1662:	
 15452  0AFE  0008               	return
 15453  0AFF                     __end_of_define_alarm:	
 15454                           
 15455                           	psect	text25
 15456  150F                     __ptext25:	
 15457 ;; *************** function _send_confirmation *****************
 15458 ;; Defined at:
 15459 ;;		line 222 in file "communications.c"
 15460 ;; Parameters:    Size  Location     Type
 15461 ;;  cmd             1    wreg     unsigned char 
 15462 ;;  error           1    8[COMMON] unsigned char 
 15463 ;; Auto vars:     Size  Location     Type
 15464 ;;  cmd             1    3[BANK0 ] unsigned char 
 15465 ;;  msg             3    4[BANK0 ] unsigned char [3]
 15466 ;; Return value:  Size  Location     Type
 15467 ;;                  1    wreg      void 
 15468 ;; Registers used:
 15469 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15470 ;; Tracked objects:
 15471 ;;		On entry : 0/0
 15472 ;;		On exit  : 0/0
 15473 ;;		Unchanged: 0/0
 15474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15475 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15476 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15477 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15478 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15479 ;;Total ram usage:        6 bytes
 15480 ;; Hardware stack levels used:    1
 15481 ;; Hardware stack levels required when called:    8
 15482 ;; This function calls:
 15483 ;;		_send_msg
 15484 ;; This function is called by:
 15485 ;;		_interpret_message
 15486 ;;		_set_clock
 15487 ;;		_modify_pmon
 15488 ;;		_modify_time_alarm
 15489 ;;		_define_alarm
 15490 ;;		_switch_alarm
 15491 ;;		_transfer_n_registers
 15492 ;;		_transfer_registers_i
 15493 ;; This function uses a non-reentrant model
 15494 ;;
 15495                           
 15496                           
 15497                           ;psect for function _send_confirmation
 15498  150F                     _send_confirmation:	
 15499                           
 15500                           ;incstack = 0
 15501                           ; Regs used in _send_confirmation: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15502                           ;send_confirmation@cmd stored from wreg
 15503  150F  0020               	movlb	0	; select bank0
 15504  1510  00A3               	movwf	send_confirmation@cmd
 15505  1511                     l6083:	
 15506                           
 15507                           ;communications.c: 223:     char msg[] = {cmd, error, '\0'};
 15508  1511  3000               	movlw	0
 15509  1512  00A4               	movwf	send_confirmation@msg
 15510  1513  3000               	movlw	0
 15511  1514  00A5               	movwf	send_confirmation@msg+1
 15512  1515  3000               	movlw	0
 15513  1516  00A6               	movwf	send_confirmation@msg+2
 15514  1517  0823               	movf	send_confirmation@cmd,w
 15515  1518  00F9               	movwf	??_send_confirmation
 15516  1519  0879               	movf	??_send_confirmation,w
 15517  151A  00A4               	movwf	send_confirmation@msg
 15518  151B  0878               	movf	send_confirmation@error,w
 15519  151C  00F9               	movwf	??_send_confirmation
 15520  151D  0879               	movf	??_send_confirmation,w
 15521  151E  00A5               	movwf	send_confirmation@msg+1
 15522  151F                     l6085:	
 15523  151F  01A6               	clrf	send_confirmation@msg+2
 15524  1520                     l6087:	
 15525                           
 15526                           ;communications.c: 224:     send_msg(msg);
 15527  1520  3024               	movlw	(low (send_confirmation@msg| 0))& (0+255)
 15528  1521  3197  2778  3195   	fcall	_send_msg
 15529  1524                     l1730:	
 15530  1524  0008               	return
 15531  1525                     __end_of_send_confirmation:	
 15532                           
 15533                           	psect	text26
 15534  139D                     __ptext26:	
 15535 ;; *************** function _EUSART_is_rx_ready *****************
 15536 ;; Defined at:
 15537 ;;		line 137 in file "mcc_generated_files/eusart.c"
 15538 ;; Parameters:    Size  Location     Type
 15539 ;;		None
 15540 ;; Auto vars:     Size  Location     Type
 15541 ;;		None
 15542 ;; Return value:  Size  Location     Type
 15543 ;;                  1    wreg      _Bool 
 15544 ;; Registers used:
 15545 ;;		wreg, status,2, status,0
 15546 ;; Tracked objects:
 15547 ;;		On entry : 0/0
 15548 ;;		On exit  : 0/0
 15549 ;;		Unchanged: 0/0
 15550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15555 ;;Total ram usage:        0 bytes
 15556 ;; Hardware stack levels used:    1
 15557 ;; Hardware stack levels required when called:    6
 15558 ;; This function calls:
 15559 ;;		Nothing
 15560 ;; This function is called by:
 15561 ;;		_read_msgs
 15562 ;; This function uses a non-reentrant model
 15563 ;;
 15564                           
 15565                           
 15566                           ;psect for function _EUSART_is_rx_ready
 15567  139D                     _EUSART_is_rx_ready:	
 15568  139D                     l6603:	
 15569                           ;incstack = 0
 15570                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
 15571                           
 15572                           
 15573                           ;mcc_generated_files/eusart.c: 139:     return (eusartRxCount ? 1 : 0);
 15574  139D  0021               	movlb	1	; select bank1
 15575  139E  085C               	movf	_eusartRxCount^(0+128),w	;volatile
 15576  139F  1D03               	btfss	3,2
 15577  13A0  2BA2               	goto	u5451
 15578  13A1  2BA4               	goto	u5450
 15579  13A2                     u5451:	
 15580  13A2  3001               	movlw	1
 15581  13A3  2BA5               	goto	u5460
 15582  13A4                     u5450:	
 15583  13A4  3000               	movlw	0
 15584  13A5                     u5460:	
 15585  13A5                     l792:	
 15586  13A5  0008               	return
 15587  13A6                     __end_of_EUSART_is_rx_ready:	
 15588                           
 15589                           	psect	text27
 15590  17A5                     __ptext27:	
 15591 ;; *************** function _EUSART_Read *****************
 15592 ;; Defined at:
 15593 ;;		line 151 in file "mcc_generated_files/eusart.c"
 15594 ;; Parameters:    Size  Location     Type
 15595 ;;		None
 15596 ;; Auto vars:     Size  Location     Type
 15597 ;;  readValue       1    3[COMMON] unsigned char 
 15598 ;; Return value:  Size  Location     Type
 15599 ;;                  1    wreg      unsigned char 
 15600 ;; Registers used:
 15601 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15602 ;; Tracked objects:
 15603 ;;		On entry : 0/0
 15604 ;;		On exit  : 0/0
 15605 ;;		Unchanged: 0/0
 15606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15609 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15611 ;;Total ram usage:        2 bytes
 15612 ;; Hardware stack levels used:    1
 15613 ;; Hardware stack levels required when called:    6
 15614 ;; This function calls:
 15615 ;;		Nothing
 15616 ;; This function is called by:
 15617 ;;		_read_msgs
 15618 ;;		_getch
 15619 ;; This function uses a non-reentrant model
 15620 ;;
 15621                           
 15622                           
 15623                           ;psect for function _EUSART_Read
 15624  17A5                     _EUSART_Read:	
 15625  17A5                     l6607:	
 15626                           ;incstack = 0
 15627                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 15628                           
 15629  17A5                     l6609:	
 15630                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 15631                           
 15632                           
 15633                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 15634  17A5  0021               	movlb	1	; select bank1
 15635  17A6  085C               	movf	_eusartRxCount^(0+128),w	;volatile
 15636  17A7  1903               	btfsc	3,2
 15637  17A8  2FAA               	goto	u5471
 15638  17A9  2FAB               	goto	u5470
 15639  17AA                     u5471:	
 15640  17AA  2FA5               	goto	l6609
 15641  17AB                     u5470:	
 15642  17AB                     l6611:	
 15643                           
 15644                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
 15645  17AB  0020               	movlb	0	; select bank0
 15646  17AC  086F               	movf	_eusartRxTail,w	;volatile
 15647  17AD  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 15648  17AE  0086               	movwf	6
 15649  17AF  0187               	clrf	7
 15650  17B0  0801               	movf	1,w
 15651  17B1  00F2               	movwf	??_EUSART_Read
 15652  17B2  0872               	movf	??_EUSART_Read,w
 15653  17B3  0021               	movlb	1	; select bank1
 15654  17B4  00DB               	movwf	_eusartRxLastError^(0+128)	;volatile
 15655                           
 15656                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
 15657  17B5  0020               	movlb	0	; select bank0
 15658  17B6  086F               	movf	_eusartRxTail,w
 15659  17B7  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
 15660  17B8  0086               	movwf	6
 15661  17B9  0187               	clrf	7
 15662  17BA  0801               	movf	1,w
 15663  17BB  00F2               	movwf	??_EUSART_Read
 15664  17BC  0872               	movf	??_EUSART_Read,w
 15665  17BD  00F3               	movwf	EUSART_Read@readValue
 15666  17BE                     l6613:	
 15667  17BE  3001               	movlw	1
 15668  17BF  00F2               	movwf	??_EUSART_Read
 15669  17C0  0872               	movf	??_EUSART_Read,w
 15670  17C1  07EF               	addwf	_eusartRxTail,f	;volatile
 15671  17C2                     l6615:	
 15672                           
 15673                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
 15674  17C2  3008               	movlw	8
 15675  17C3  026F               	subwf	_eusartRxTail,w	;volatile
 15676  17C4  1C03               	skipc
 15677  17C5  2FC7               	goto	u5481
 15678  17C6  2FC8               	goto	u5480
 15679  17C7                     u5481:	
 15680  17C7  2FC9               	goto	l6619
 15681  17C8                     u5480:	
 15682  17C8                     l6617:	
 15683                           
 15684                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
 15685  17C8  01EF               	clrf	_eusartRxTail	;volatile
 15686  17C9                     l6619:	
 15687                           
 15688                           ;mcc_generated_files/eusart.c: 166:     PIE3bits.RCIE = 0;
 15689  17C9  002E               	movlb	14	; select bank14
 15690  17CA  1299               	bcf	25,5	;volatile
 15691  17CB                     l6621:	
 15692                           
 15693                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
 15694  17CB  3001               	movlw	1
 15695  17CC  0021               	movlb	1	; select bank1
 15696  17CD  02DC               	subwf	_eusartRxCount^(0+128),f	;volatile
 15697  17CE                     l6623:	
 15698                           
 15699                           ;mcc_generated_files/eusart.c: 168:     PIE3bits.RCIE = 1;
 15700  17CE  002E               	movlb	14	; select bank14
 15701  17CF  1699               	bsf	25,5	;volatile
 15702  17D0                     l6625:	
 15703                           
 15704                           ;mcc_generated_files/eusart.c: 170:     return readValue;
 15705  17D0  0873               	movf	EUSART_Read@readValue,w
 15706  17D1                     l805:	
 15707  17D1  0008               	return
 15708  17D2                     __end_of_EUSART_Read:	
 15709                           
 15710                           	psect	text28
 15711  0DDE                     __ptext28:	
 15712 ;; *************** function _notification_memory *****************
 15713 ;; Defined at:
 15714 ;;		line 216 in file "communications.c"
 15715 ;; Parameters:    Size  Location     Type
 15716 ;;		None
 15717 ;; Auto vars:     Size  Location     Type
 15718 ;;  msg             6    3[BANK0 ] unsigned char [6]
 15719 ;;  wi              1   14[BANK0 ] unsigned char 
 15720 ;;  N               1   13[BANK0 ] unsigned char 
 15721 ;;  ri              1   10[BANK0 ] unsigned char 
 15722 ;;  nr              1    9[BANK0 ] unsigned char 
 15723 ;; Return value:  Size  Location     Type
 15724 ;;                  1    wreg      void 
 15725 ;; Registers used:
 15726 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15727 ;; Tracked objects:
 15728 ;;		On entry : 0/0
 15729 ;;		On exit  : 0/0
 15730 ;;		Unchanged: 0/0
 15731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15733 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15734 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15735 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15736 ;;Total ram usage:       14 bytes
 15737 ;; Hardware stack levels used:    1
 15738 ;; Hardware stack levels required when called:    8
 15739 ;; This function calls:
 15740 ;;		_read_iwrt
 15741 ;;		_read_nreg
 15742 ;;		_ring_buffer_laped
 15743 ;;		_send_msg
 15744 ;; This function is called by:
 15745 ;;		_main
 15746 ;; This function uses a non-reentrant model
 15747 ;;
 15748                           
 15749                           
 15750                           ;psect for function _notification_memory
 15751  0DDE                     _notification_memory:	
 15752  0DDE                     l6987:	
 15753                           ;incstack = 0
 15754                           ; Regs used in _notification_memory: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15755                           
 15756                           
 15757                           ;communications.c: 217:     uint8_t N = read_nreg(), wi = read_iwrt(), nr = ring_buffer_
      +                          laped() ? N : wi, ri = iread;
 15758  0DDE  3193  2374  318D   	fcall	_read_nreg
 15759  0DE1  00F8               	movwf	??_notification_memory
 15760  0DE2  0878               	movf	??_notification_memory,w
 15761  0DE3  0020               	movlb	0	; select bank0
 15762  0DE4  00AD               	movwf	notification_memory@N
 15763  0DE5  3193  238C  318D   	fcall	_read_iwrt
 15764  0DE8  00F8               	movwf	??_notification_memory
 15765  0DE9  0878               	movf	??_notification_memory,w
 15766  0DEA  0020               	movlb	0	; select bank0
 15767  0DEB  00AE               	movwf	notification_memory@wi
 15768  0DEC  3194  2442  318D   	fcall	_ring_buffer_laped
 15769  0DEF  3A00               	xorlw	0
 15770  0DF0  1D03               	skipz
 15771  0DF1  2DF3               	goto	u6091
 15772  0DF2  2DF4               	goto	u6090
 15773  0DF3                     u6091:	
 15774  0DF3  2DFD               	goto	l6991
 15775  0DF4                     u6090:	
 15776  0DF4                     l6989:	
 15777  0DF4  0020               	movlb	0	; select bank0
 15778  0DF5  082E               	movf	notification_memory@wi,w
 15779  0DF6  00F8               	movwf	??_notification_memory
 15780  0DF7  01F9               	clrf	??_notification_memory+1
 15781  0DF8  0878               	movf	??_notification_memory,w
 15782  0DF9  00AB               	movwf	_notification_memory$2859
 15783  0DFA  0879               	movf	??_notification_memory+1,w
 15784  0DFB  00AC               	movwf	_notification_memory$2859+1
 15785  0DFC  2E05               	goto	l1722
 15786  0DFD                     l6991:	
 15787  0DFD  0020               	movlb	0	; select bank0
 15788  0DFE  082D               	movf	notification_memory@N,w
 15789  0DFF  00F8               	movwf	??_notification_memory
 15790  0E00  01F9               	clrf	??_notification_memory+1
 15791  0E01  0878               	movf	??_notification_memory,w
 15792  0E02  00AB               	movwf	_notification_memory$2859
 15793  0E03  0879               	movf	??_notification_memory+1,w
 15794  0E04  00AC               	movwf	_notification_memory$2859+1
 15795  0E05                     l1722:	
 15796  0E05  082B               	movf	_notification_memory$2859,w
 15797  0E06  00F8               	movwf	??_notification_memory
 15798  0E07  0878               	movf	??_notification_memory,w
 15799  0E08  00A9               	movwf	notification_memory@nr
 15800  0E09  087A               	movf	_iread,w	;volatile
 15801  0E0A  00F8               	movwf	??_notification_memory
 15802  0E0B  0878               	movf	??_notification_memory,w
 15803  0E0C  00AA               	movwf	notification_memory@ri
 15804  0E0D                     l6993:	
 15805                           
 15806                           ;communications.c: 218:     char msg[] = {0XCC, N, nr, ri, wi, '\0'};
 15807  0E0D  3023               	movlw	low notification_memory@msg
 15808  0E0E  0086               	movwf	6
 15809  0E0F  3000               	movlw	high notification_memory@msg
 15810  0E10  0087               	movwf	7
 15811  0E11  3006               	movlw	6
 15812  0E12  00F8               	movwf	??_notification_memory
 15813  0E13  3000               	movlw	0
 15814  0E14                     u6100:	
 15815  0E14  001E               	movwi fsr1++
 15816  0E15  0BF8               	decfsz	??_notification_memory,f
 15817  0E16  2E14               	goto	u6100
 15818  0E17                     l6995:	
 15819  0E17  30CC               	movlw	204
 15820  0E18  00F8               	movwf	??_notification_memory
 15821  0E19  0878               	movf	??_notification_memory,w
 15822  0E1A  00A3               	movwf	notification_memory@msg
 15823  0E1B                     l6997:	
 15824  0E1B  082D               	movf	notification_memory@N,w
 15825  0E1C  00F8               	movwf	??_notification_memory
 15826  0E1D  0878               	movf	??_notification_memory,w
 15827  0E1E  00A4               	movwf	notification_memory@msg+1
 15828  0E1F                     l6999:	
 15829  0E1F  0829               	movf	notification_memory@nr,w
 15830  0E20  00F8               	movwf	??_notification_memory
 15831  0E21  0878               	movf	??_notification_memory,w
 15832  0E22  00A5               	movwf	notification_memory@msg+2
 15833  0E23                     l7001:	
 15834  0E23  082A               	movf	notification_memory@ri,w
 15835  0E24  00F8               	movwf	??_notification_memory
 15836  0E25  0878               	movf	??_notification_memory,w
 15837  0E26  00A6               	movwf	notification_memory@msg+3
 15838  0E27                     l7003:	
 15839  0E27  082E               	movf	notification_memory@wi,w
 15840  0E28  00F8               	movwf	??_notification_memory
 15841  0E29  0878               	movf	??_notification_memory,w
 15842  0E2A  00A7               	movwf	notification_memory@msg+4
 15843  0E2B                     l7005:	
 15844  0E2B  01A8               	clrf	notification_memory@msg+5
 15845  0E2C                     l7007:	
 15846                           
 15847                           ;communications.c: 219:     send_msg(msg);
 15848  0E2C  3023               	movlw	(low (notification_memory@msg| 0))& (0+255)
 15849  0E2D  3197  2778  318D   	fcall	_send_msg
 15850  0E30                     l1725:	
 15851  0E30  0008               	return
 15852  0E31                     __end_of_notification_memory:	
 15853                           
 15854                           	psect	text29
 15855  1778                     __ptext29:	
 15856 ;; *************** function _send_msg *****************
 15857 ;; Defined at:
 15858 ;;		line 227 in file "communications.c"
 15859 ;; Parameters:    Size  Location     Type
 15860 ;;  msg             1    wreg     PTR unsigned char 
 15861 ;;		 -> send_confirmation@msg(3), notification_memory@msg(6), registers_info@msg(6), read_alarms@msg(5), 
 15862 ;;		 -> read_param@msg(4), read_temp_lum@msg(4), read_clock@msg(5), 
 15863 ;; Auto vars:     Size  Location     Type
 15864 ;;  msg             1    2[BANK0 ] PTR unsigned char 
 15865 ;;		 -> send_confirmation@msg(3), notification_memory@msg(6), registers_info@msg(6), read_alarms@msg(5), 
 15866 ;;		 -> read_param@msg(4), read_temp_lum@msg(4), read_clock@msg(5), 
 15867 ;;  i               2    0[BANK0 ] int 
 15868 ;; Return value:  Size  Location     Type
 15869 ;;                  1    wreg      void 
 15870 ;; Registers used:
 15871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15872 ;; Tracked objects:
 15873 ;;		On entry : 0/0
 15874 ;;		On exit  : 0/0
 15875 ;;		Unchanged: 0/0
 15876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15878 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15879 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15880 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15881 ;;Total ram usage:        4 bytes
 15882 ;; Hardware stack levels used:    1
 15883 ;; Hardware stack levels required when called:    7
 15884 ;; This function calls:
 15885 ;;		_EUSART_Write
 15886 ;;		_strlen
 15887 ;; This function is called by:
 15888 ;;		_read_clock
 15889 ;;		_read_temp_lum
 15890 ;;		_read_param
 15891 ;;		_read_alarms
 15892 ;;		_registers_info
 15893 ;;		_notification_memory
 15894 ;;		_send_confirmation
 15895 ;; This function uses a non-reentrant model
 15896 ;;
 15897                           
 15898                           
 15899                           ;psect for function _send_msg
 15900  1778                     _send_msg:	
 15901                           
 15902                           ;incstack = 0
 15903                           ; Regs used in _send_msg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15904                           ;send_msg@msg stored from wreg
 15905  1778  0020               	movlb	0	; select bank0
 15906  1779  00A2               	movwf	send_msg@msg
 15907  177A                     l5989:	
 15908                           
 15909                           ;communications.c: 228:     EUSART_Write(0xFD);
 15910  177A  30FD               	movlw	253
 15911  177B  3197  274E  3197   	fcall	_EUSART_Write
 15912  177E                     l5991:	
 15913                           
 15914                           ;communications.c: 229:     for(int i = 0; i < strlen(msg); ++i) EUSART_Write(msg[i]);
 15915  177E  0020               	movlb	0	; select bank0
 15916  177F  01A0               	clrf	send_msg@i
 15917  1780  01A1               	clrf	send_msg@i+1
 15918  1781  2F91               	goto	l5997
 15919  1782                     l5993:	
 15920  1782  0820               	movf	send_msg@i,w
 15921  1783  0722               	addwf	send_msg@msg,w
 15922  1784  00F7               	movwf	??_send_msg
 15923  1785  0877               	movf	??_send_msg,w
 15924  1786  0086               	movwf	6
 15925  1787  0187               	clrf	7
 15926  1788  0801               	movf	1,w
 15927  1789  3197  274E  3197   	fcall	_EUSART_Write
 15928  178C                     l5995:	
 15929  178C  3001               	movlw	1
 15930  178D  0020               	movlb	0	; select bank0
 15931  178E  07A0               	addwf	send_msg@i,f
 15932  178F  3000               	movlw	0
 15933  1790  3DA1               	addwfc	send_msg@i+1,f
 15934  1791                     l5997:	
 15935  1791  0822               	movf	send_msg@msg,w
 15936  1792  3195  253C  3197   	fcall	_strlen
 15937  1795  0873               	movf	?_strlen+1,w
 15938  1796  0020               	movlb	0	; select bank0
 15939  1797  0221               	subwf	send_msg@i+1,w
 15940  1798  1D03               	skipz
 15941  1799  2F9C               	goto	u4675
 15942  179A  0872               	movf	?_strlen,w
 15943  179B  0220               	subwf	send_msg@i,w
 15944  179C                     u4675:	
 15945  179C  1C03               	skipc
 15946  179D  2F9F               	goto	u4671
 15947  179E  2FA0               	goto	u4670
 15948  179F                     u4671:	
 15949  179F  2F82               	goto	l5993
 15950  17A0                     u4670:	
 15951  17A0                     l5999:	
 15952                           
 15953                           ;communications.c: 231:     EUSART_Write(0xFE);
 15954  17A0  30FE               	movlw	254
 15955  17A1  3197  274E  3197   	fcall	_EUSART_Write
 15956  17A4                     l1736:	
 15957  17A4  0008               	return
 15958  17A5                     __end_of_send_msg:	
 15959                           
 15960                           	psect	text30
 15961  153C                     __ptext30:	
 15962 ;; *************** function _strlen *****************
 15963 ;; Defined at:
 15964 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 15965 ;; Parameters:    Size  Location     Type
 15966 ;;  s               1    wreg     PTR const unsigned char 
 15967 ;;		 -> send_confirmation@msg(3), notification_memory@msg(6), registers_info@msg(6), read_alarms@msg(5), 
 15968 ;;		 -> read_param@msg(4), read_temp_lum@msg(4), read_clock@msg(5), NULL(0), 
 15969 ;;		 -> read_msgs@aux(8), 
 15970 ;; Auto vars:     Size  Location     Type
 15971 ;;  s               1    6[COMMON] PTR const unsigned char 
 15972 ;;		 -> send_confirmation@msg(3), notification_memory@msg(6), registers_info@msg(6), read_alarms@msg(5), 
 15973 ;;		 -> read_param@msg(4), read_temp_lum@msg(4), read_clock@msg(5), NULL(0), 
 15974 ;;		 -> read_msgs@aux(8), 
 15975 ;;  a               1    5[COMMON] PTR const unsigned char 
 15976 ;;		 -> send_confirmation@msg(3), notification_memory@msg(6), registers_info@msg(6), read_alarms@msg(5), 
 15977 ;;		 -> read_param@msg(4), read_temp_lum@msg(4), read_clock@msg(5), NULL(0), 
 15978 ;;		 -> read_msgs@aux(8), 
 15979 ;; Return value:  Size  Location     Type
 15980 ;;                  2    2[COMMON] unsigned int 
 15981 ;; Registers used:
 15982 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15983 ;; Tracked objects:
 15984 ;;		On entry : 0/0
 15985 ;;		On exit  : 0/0
 15986 ;;		Unchanged: 0/0
 15987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15989 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15990 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15991 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15992 ;;Total ram usage:        5 bytes
 15993 ;; Hardware stack levels used:    1
 15994 ;; Hardware stack levels required when called:    6
 15995 ;; This function calls:
 15996 ;;		Nothing
 15997 ;; This function is called by:
 15998 ;;		_interpret_message
 15999 ;;		_set_clock
 16000 ;;		_modify_pmon
 16001 ;;		_modify_time_alarm
 16002 ;;		_define_alarm
 16003 ;;		_switch_alarm
 16004 ;;		_transfer_n_registers
 16005 ;;		_transfer_registers_i
 16006 ;;		_send_msg
 16007 ;; This function uses a non-reentrant model
 16008 ;;
 16009                           
 16010                           
 16011                           ;psect for function _strlen
 16012  153C                     _strlen:	
 16013                           
 16014                           ;incstack = 0
 16015                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 16016                           ;strlen@s stored from wreg
 16017  153C  00F6               	movwf	strlen@s
 16018  153D                     l5939:	
 16019  153D  0876               	movf	strlen@s,w
 16020  153E  00F4               	movwf	??_strlen
 16021  153F  0874               	movf	??_strlen,w
 16022  1540  00F5               	movwf	strlen@a
 16023  1541  2D46               	goto	l5943
 16024  1542                     l5941:	
 16025  1542  3001               	movlw	1
 16026  1543  00F4               	movwf	??_strlen
 16027  1544  0874               	movf	??_strlen,w
 16028  1545  07F6               	addwf	strlen@s,f
 16029  1546                     l5943:	
 16030  1546  0876               	movf	strlen@s,w
 16031  1547  0086               	movwf	6
 16032  1548  0187               	clrf	7
 16033  1549  0801               	movf	1,w
 16034  154A  1D03               	btfss	3,2
 16035  154B  2D4D               	goto	u4571
 16036  154C  2D4E               	goto	u4570
 16037  154D                     u4571:	
 16038  154D  2D42               	goto	l5941
 16039  154E                     u4570:	
 16040  154E                     l5945:	
 16041  154E  0875               	movf	strlen@a,w
 16042  154F  0276               	subwf	strlen@s,w
 16043  1550  00F2               	movwf	?_strlen
 16044  1551  01F3               	clrf	?_strlen+1
 16045  1552  1BF2               	btfsc	?_strlen,7
 16046  1553  03F3               	decf	?_strlen+1,f
 16047  1554                     l2353:	
 16048  1554  0008               	return
 16049  1555                     __end_of_strlen:	
 16050                           
 16051                           	psect	text31
 16052  174E                     __ptext31:	
 16053 ;; *************** function _EUSART_Write *****************
 16054 ;; Defined at:
 16055 ;;		line 173 in file "mcc_generated_files/eusart.c"
 16056 ;; Parameters:    Size  Location     Type
 16057 ;;  txData          1    wreg     unsigned char 
 16058 ;; Auto vars:     Size  Location     Type
 16059 ;;  txData          1    3[COMMON] unsigned char 
 16060 ;; Return value:  Size  Location     Type
 16061 ;;                  1    wreg      void 
 16062 ;; Registers used:
 16063 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16064 ;; Tracked objects:
 16065 ;;		On entry : 0/0
 16066 ;;		On exit  : 0/0
 16067 ;;		Unchanged: 0/0
 16068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16071 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16073 ;;Total ram usage:        2 bytes
 16074 ;; Hardware stack levels used:    1
 16075 ;; Hardware stack levels required when called:    6
 16076 ;; This function calls:
 16077 ;;		Nothing
 16078 ;; This function is called by:
 16079 ;;		_putch
 16080 ;;		_main
 16081 ;;		_send_msg
 16082 ;; This function uses a non-reentrant model
 16083 ;;
 16084                           
 16085                           
 16086                           ;psect for function _EUSART_Write
 16087  174E                     _EUSART_Write:	
 16088                           
 16089                           ;incstack = 0
 16090                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 16091                           ;EUSART_Write@txData stored from wreg
 16092  174E  00F3               	movwf	EUSART_Write@txData
 16093  174F                     l5881:	
 16094  174F                     l5883:	
 16095                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
 16096                           
 16097                           
 16098                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
 16099  174F  0021               	movlb	1	; select bank1
 16100  1750  086F               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
 16101  1751  1903               	btfsc	3,2
 16102  1752  2F54               	goto	u4491
 16103  1753  2F55               	goto	u4490
 16104  1754                     u4491:	
 16105  1754  2F4F               	goto	l5883
 16106  1755                     u4490:	
 16107  1755                     l810:	
 16108                           
 16109                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE3bits.TXIE)
 16110  1755  002E               	movlb	14	; select bank14
 16111  1756  1A19               	btfsc	25,4	;volatile
 16112  1757  2F59               	goto	u4501
 16113  1758  2F5A               	goto	u4500
 16114  1759                     u4501:	
 16115  1759  2F5E               	goto	l811
 16116  175A                     u4500:	
 16117  175A                     l5885:	
 16118                           
 16119                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TX1
      +                          REG = txData;
 16120  175A  0873               	movf	EUSART_Write@txData,w
 16121  175B  0022               	movlb	2	; select bank2
 16122  175C  009A               	movwf	26	;volatile
 16123                           
 16124                           ;mcc_generated_files/eusart.c: 182:     }
 16125  175D  2F75               	goto	l5897
 16126  175E                     l811:	
 16127                           ;mcc_generated_files/eusart.c: 183:     else
 16128                           
 16129                           
 16130                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          3bits.TXIE = 0;
 16131  175E  1219               	bcf	25,4	;volatile
 16132  175F                     l5887:	
 16133                           
 16134                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
 16135  175F  0873               	movf	EUSART_Write@txData,w
 16136  1760  00F2               	movwf	??_EUSART_Write
 16137  1761  0021               	movlb	1	; select bank1
 16138  1762  085E               	movf	_eusartTxHead^(0+128),w
 16139  1763  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
 16140  1764  0086               	movwf	6
 16141  1765  0187               	clrf	7
 16142  1766  0872               	movf	??_EUSART_Write,w
 16143  1767  0081               	movwf	1
 16144  1768                     l5889:	
 16145  1768  3001               	movlw	1
 16146  1769  00F2               	movwf	??_EUSART_Write
 16147  176A  0872               	movf	??_EUSART_Write,w
 16148  176B  07DE               	addwf	_eusartTxHead^(0+128),f	;volatile
 16149  176C                     l5891:	
 16150                           
 16151                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 16152  176C  3008               	movlw	8
 16153  176D  025E               	subwf	_eusartTxHead^(0+128),w	;volatile
 16154  176E  1C03               	skipc
 16155  176F  2F71               	goto	u4511
 16156  1770  2F72               	goto	u4510
 16157  1771                     u4511:	
 16158  1771  2F73               	goto	l5895
 16159  1772                     u4510:	
 16160  1772                     l5893:	
 16161                           
 16162                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
 16163  1772  01DE               	clrf	_eusartTxHead^(0+128)	;volatile
 16164  1773                     l5895:	
 16165                           
 16166                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
 16167  1773  3001               	movlw	1
 16168  1774  02EF               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 16169  1775                     l5897:	
 16170                           
 16171                           ;mcc_generated_files/eusart.c: 193:     PIE3bits.TXIE = 1;
 16172  1775  002E               	movlb	14	; select bank14
 16173  1776  1619               	bsf	25,4	;volatile
 16174  1777                     l814:	
 16175  1777  0008               	return
 16176  1778                     __end_of_EUSART_Write:	
 16177                           
 16178                           	psect	text32
 16179  1442                     __ptext32:	
 16180 ;; *************** function _ring_buffer_laped *****************
 16181 ;; Defined at:
 16182 ;;		line 110 in file "eeprom.c"
 16183 ;; Parameters:    Size  Location     Type
 16184 ;;		None
 16185 ;; Auto vars:     Size  Location     Type
 16186 ;;		None
 16187 ;; Return value:  Size  Location     Type
 16188 ;;                  1    wreg      _Bool 
 16189 ;; Registers used:
 16190 ;;		wreg, status,2, pclath, cstack
 16191 ;; Tracked objects:
 16192 ;;		On entry : 0/0
 16193 ;;		On exit  : 0/0
 16194 ;;		Unchanged: 0/0
 16195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16200 ;;Total ram usage:        0 bytes
 16201 ;; Hardware stack levels used:    1
 16202 ;; Hardware stack levels required when called:    7
 16203 ;; This function calls:
 16204 ;;		_DATAEE_ReadByte
 16205 ;; This function is called by:
 16206 ;;		_registers_info
 16207 ;;		_transfer_n_registers
 16208 ;;		_transfer_registers_i
 16209 ;;		_transfer_registers
 16210 ;;		_notification_memory
 16211 ;; This function uses a non-reentrant model
 16212 ;;
 16213                           
 16214                           
 16215                           ;psect for function _ring_buffer_laped
 16216  1442                     _ring_buffer_laped:	
 16217  1442                     l5981:	
 16218                           ;incstack = 0
 16219                           ; Regs used in _ring_buffer_laped: [wreg+status,2+pclath+cstack]
 16220                           
 16221  1442  3009               	movlw	9
 16222  1443  00F2               	movwf	DATAEE_ReadByte@bAdd
 16223  1444  30F0               	movlw	240
 16224  1445  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16225  1446  3193  23C7  3194   	fcall	_DATAEE_ReadByte
 16226  1449  3A55               	xorlw	85
 16227  144A  1903               	skipnz
 16228  144B  2C4D               	goto	u4651
 16229  144C  2C4F               	goto	u4650
 16230  144D                     u4651:	
 16231  144D  3001               	movlw	1
 16232  144E  2C50               	goto	u4660
 16233  144F                     u4650:	
 16234  144F  3000               	movlw	0
 16235  1450                     u4660:	
 16236  1450                     l1424:	
 16237  1450  0008               	return
 16238  1451                     __end_of_ring_buffer_laped:	
 16239                           
 16240                           	psect	text33
 16241  138C                     __ptext33:	
 16242 ;; *************** function _read_iwrt *****************
 16243 ;; Defined at:
 16244 ;;		line 126 in file "eeprom.c"
 16245 ;; Parameters:    Size  Location     Type
 16246 ;;		None
 16247 ;; Auto vars:     Size  Location     Type
 16248 ;;		None
 16249 ;; Return value:  Size  Location     Type
 16250 ;;                  1    wreg      unsigned char 
 16251 ;; Registers used:
 16252 ;;		wreg, status,2, pclath, cstack
 16253 ;; Tracked objects:
 16254 ;;		On entry : 0/0
 16255 ;;		On exit  : 0/0
 16256 ;;		Unchanged: 0/0
 16257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16262 ;;Total ram usage:        0 bytes
 16263 ;; Hardware stack levels used:    1
 16264 ;; Hardware stack levels required when called:    7
 16265 ;; This function calls:
 16266 ;;		_DATAEE_ReadByte
 16267 ;; This function is called by:
 16268 ;;		_not_transferred
 16269 ;;		_registers_info
 16270 ;;		_transfer_n_registers
 16271 ;;		_transfer_registers_i
 16272 ;;		_transfer_registers
 16273 ;;		_notification_memory
 16274 ;; This function uses a non-reentrant model
 16275 ;;
 16276                           
 16277                           
 16278                           ;psect for function _read_iwrt
 16279  138C                     _read_iwrt:	
 16280  138C                     l5985:	
 16281                           ;incstack = 0
 16282                           ; Regs used in _read_iwrt: [wreg+status,2+pclath+cstack]
 16283                           
 16284  138C  300A               	movlw	10
 16285  138D  00F2               	movwf	DATAEE_ReadByte@bAdd
 16286  138E  30F0               	movlw	240
 16287  138F  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16288  1390  3193  23C7  3193   	fcall	_DATAEE_ReadByte
 16289  1393                     l1459:	
 16290  1393  0008               	return
 16291  1394                     __end_of_read_iwrt:	
 16292                           
 16293                           	psect	text34
 16294  0D3B                     __ptext34:	
 16295 ;; *************** function _load_eeprom *****************
 16296 ;; Defined at:
 16297 ;;		line 100 in file "utils.c"
 16298 ;; Parameters:    Size  Location     Type
 16299 ;;		None
 16300 ;; Auto vars:     Size  Location     Type
 16301 ;;		None
 16302 ;; Return value:  Size  Location     Type
 16303 ;;                  1    wreg      void 
 16304 ;; Registers used:
 16305 ;;		wreg, status,2, status,0, pclath, cstack
 16306 ;; Tracked objects:
 16307 ;;		On entry : 0/0
 16308 ;;		On exit  : 0/0
 16309 ;;		Unchanged: 0/0
 16310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16313 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16314 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16315 ;;Total ram usage:        1 bytes
 16316 ;; Hardware stack levels used:    1
 16317 ;; Hardware stack levels required when called:    9
 16318 ;; This function calls:
 16319 ;;		_check_corruption
 16320 ;;		_default_setup
 16321 ;;		_read_alaf
 16322 ;;		_read_alal
 16323 ;;		_read_alat
 16324 ;;		_read_clkh
 16325 ;;		_read_clkm
 16326 ;;		_read_nreg
 16327 ;;		_read_pmon
 16328 ;;		_read_tala
 16329 ;;		_used
 16330 ;; This function is called by:
 16331 ;;		_main
 16332 ;; This function uses a non-reentrant model
 16333 ;;
 16334                           
 16335                           
 16336                           ;psect for function _load_eeprom
 16337  0D3B                     _load_eeprom:	
 16338  0D3B                     l6885:	
 16339                           ;incstack = 0
 16340                           ; Regs used in _load_eeprom: [wreg+status,2+status,0+pclath+cstack]
 16341                           
 16342                           
 16343                           ;utils.c: 101:     if(used() && check_corruption()){
 16344  0D3B  3195  2589  318D   	fcall	_used
 16345  0D3E  3A00               	xorlw	0
 16346  0D3F  1903               	skipnz
 16347  0D40  2D42               	goto	u5751
 16348  0D41  2D43               	goto	u5750
 16349  0D42                     u5751:	
 16350  0D42  2D87               	goto	l6891
 16351  0D43                     u5750:	
 16352  0D43                     l6887:	
 16353  0D43  3194  24CE  318D   	fcall	_check_corruption
 16354  0D46  3A00               	xorlw	0
 16355  0D47  1903               	skipnz
 16356  0D48  2D4A               	goto	u5761
 16357  0D49  2D4B               	goto	u5760
 16358  0D4A                     u5761:	
 16359  0D4A  2D87               	goto	l6891
 16360  0D4B                     u5760:	
 16361  0D4B                     l6889:	
 16362                           
 16363                           ;utils.c: 102:         pmon = read_pmon();
 16364  0D4B  3193  237C  318D   	fcall	_read_pmon
 16365  0D4E  0020               	movlb	0	; select bank0
 16366  0D4F  00B3               	movwf	??_load_eeprom
 16367  0D50  0833               	movf	??_load_eeprom,w
 16368  0D51  00ED               	movwf	_pmon
 16369                           
 16370                           ;utils.c: 103:         nreg = read_nreg();
 16371  0D52  3193  2374  318D   	fcall	_read_nreg
 16372  0D55  0020               	movlb	0	; select bank0
 16373  0D56  00B3               	movwf	??_load_eeprom
 16374  0D57  0833               	movf	??_load_eeprom,w
 16375  0D58  0021               	movlb	1	; select bank1
 16376  0D59  00CB               	movwf	_nreg^(0+128)
 16377                           
 16378                           ;utils.c: 104:         tala = read_tala();
 16379  0D5A  3193  2384  318D   	fcall	_read_tala
 16380  0D5D  0020               	movlb	0	; select bank0
 16381  0D5E  00B3               	movwf	??_load_eeprom
 16382  0D5F  0833               	movf	??_load_eeprom,w
 16383  0D60  0021               	movlb	1	; select bank1
 16384  0D61  00D7               	movwf	_tala^(0+128)
 16385                           
 16386                           ;utils.c: 105:         alat = read_alat();
 16387  0D62  3193  235C  318D   	fcall	_read_alat
 16388  0D65  0020               	movlb	0	; select bank0
 16389  0D66  00B3               	movwf	??_load_eeprom
 16390  0D67  0833               	movf	??_load_eeprom,w
 16391  0D68  00EC               	movwf	_alat
 16392                           
 16393                           ;utils.c: 106:         alal = read_alal();
 16394  0D69  3193  2354  318D   	fcall	_read_alal
 16395  0D6C  0020               	movlb	0	; select bank0
 16396  0D6D  00B3               	movwf	??_load_eeprom
 16397  0D6E  0833               	movf	??_load_eeprom,w
 16398  0D6F  0021               	movlb	1	; select bank1
 16399  0D70  00D6               	movwf	_alal^(0+128)
 16400                           
 16401                           ;utils.c: 107:         alaf = read_alaf();
 16402  0D71  3193  234C  318D   	fcall	_read_alaf
 16403  0D74  0020               	movlb	0	; select bank0
 16404  0D75  00B3               	movwf	??_load_eeprom
 16405  0D76  0833               	movf	??_load_eeprom,w
 16406  0D77  00EB               	movwf	_alaf
 16407                           
 16408                           ;utils.c: 108:         clkh = read_clkh();
 16409  0D78  3193  2364  318D   	fcall	_read_clkh
 16410  0D7B  0020               	movlb	0	; select bank0
 16411  0D7C  00B3               	movwf	??_load_eeprom
 16412  0D7D  0833               	movf	??_load_eeprom,w
 16413  0D7E  00EA               	movwf	_clkh	;volatile
 16414                           
 16415                           ;utils.c: 109:         clkm = read_clkm();
 16416  0D7F  3193  236C  318D   	fcall	_read_clkm
 16417  0D82  0020               	movlb	0	; select bank0
 16418  0D83  00B3               	movwf	??_load_eeprom
 16419  0D84  0833               	movf	??_load_eeprom,w
 16420  0D85  00E9               	movwf	_clkm	;volatile
 16421                           
 16422                           ;utils.c: 110:     } else
 16423  0D86  2D8A               	goto	l1380
 16424  0D87                     l6891:	
 16425                           
 16426                           ;utils.c: 111:         default_setup();
 16427  0D87  318A  2206  318D   	fcall	_default_setup
 16428  0D8A                     l1380:	
 16429  0D8A  0008               	return
 16430  0D8B                     __end_of_load_eeprom:	
 16431                           
 16432                           	psect	text35
 16433  1589                     __ptext35:	
 16434 ;; *************** function _used *****************
 16435 ;; Defined at:
 16436 ;;		line 112 in file "eeprom.c"
 16437 ;; Parameters:    Size  Location     Type
 16438 ;;		None
 16439 ;; Auto vars:     Size  Location     Type
 16440 ;;  val             1    6[COMMON] unsigned char 
 16441 ;; Return value:  Size  Location     Type
 16442 ;;                  1    wreg      _Bool 
 16443 ;; Registers used:
 16444 ;;		wreg, status,2, status,0, pclath, cstack
 16445 ;; Tracked objects:
 16446 ;;		On entry : 0/0
 16447 ;;		On exit  : 0/0
 16448 ;;		Unchanged: 0/0
 16449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16452 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16453 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16454 ;;Total ram usage:        3 bytes
 16455 ;; Hardware stack levels used:    1
 16456 ;; Hardware stack levels required when called:    7
 16457 ;; This function calls:
 16458 ;;		_DATAEE_ReadByte
 16459 ;; This function is called by:
 16460 ;;		_load_eeprom
 16461 ;; This function uses a non-reentrant model
 16462 ;;
 16463                           
 16464                           
 16465                           ;psect for function _used
 16466  1589                     _used:	
 16467  1589                     l6707:	
 16468                           ;incstack = 0
 16469                           ; Regs used in _used: [wreg+status,2+status,0+pclath+cstack]
 16470                           
 16471                           
 16472                           ;eeprom.c: 113:     uint8_t val = DATAEE_ReadByte(0xF009);
 16473  1589  3009               	movlw	9
 16474  158A  00F2               	movwf	DATAEE_ReadByte@bAdd
 16475  158B  30F0               	movlw	240
 16476  158C  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16477  158D  3193  23C7  3195   	fcall	_DATAEE_ReadByte
 16478  1590  00F4               	movwf	??_used
 16479  1591  0874               	movf	??_used,w
 16480  1592  00F6               	movwf	used@val
 16481  1593                     l6709:	
 16482                           
 16483                           ;eeprom.c: 114:     return (0xAA == val || 0x55 == val);
 16484  1593  01F5               	clrf	_used$2624
 16485  1594  0AF5               	incf	_used$2624,f
 16486  1595                     l6711:	
 16487  1595  30AA               	movlw	170
 16488  1596  0676               	xorwf	used@val,w
 16489  1597  1903               	btfsc	3,2
 16490  1598  2D9A               	goto	u5611
 16491  1599  2D9B               	goto	u5610
 16492  159A                     u5611:	
 16493  159A  2DA2               	goto	l6717
 16494  159B                     u5610:	
 16495  159B                     l6713:	
 16496  159B  3055               	movlw	85
 16497  159C  0676               	xorwf	used@val,w
 16498  159D  1903               	btfsc	3,2
 16499  159E  2DA0               	goto	u5621
 16500  159F  2DA1               	goto	u5620
 16501  15A0                     u5621:	
 16502  15A0  2DA2               	goto	l6717
 16503  15A1                     u5620:	
 16504  15A1                     l6715:	
 16505  15A1  01F5               	clrf	_used$2624
 16506  15A2                     l6717:	
 16507  15A2  0875               	movf	_used$2624,w
 16508  15A3                     l1429:	
 16509  15A3  0008               	return
 16510  15A4                     __end_of_used:	
 16511                           
 16512                           	psect	text36
 16513  1384                     __ptext36:	
 16514 ;; *************** function _read_tala *****************
 16515 ;; Defined at:
 16516 ;;		line 120 in file "eeprom.c"
 16517 ;; Parameters:    Size  Location     Type
 16518 ;;		None
 16519 ;; Auto vars:     Size  Location     Type
 16520 ;;		None
 16521 ;; Return value:  Size  Location     Type
 16522 ;;                  1    wreg      unsigned char 
 16523 ;; Registers used:
 16524 ;;		wreg, status,2, pclath, cstack
 16525 ;; Tracked objects:
 16526 ;;		On entry : 0/0
 16527 ;;		On exit  : 0/0
 16528 ;;		Unchanged: 0/0
 16529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16534 ;;Total ram usage:        0 bytes
 16535 ;; Hardware stack levels used:    1
 16536 ;; Hardware stack levels required when called:    7
 16537 ;; This function calls:
 16538 ;;		_DATAEE_ReadByte
 16539 ;; This function is called by:
 16540 ;;		_load_eeprom
 16541 ;; This function uses a non-reentrant model
 16542 ;;
 16543                           
 16544                           
 16545                           ;psect for function _read_tala
 16546  1384                     _read_tala:	
 16547  1384                     l6731:	
 16548                           ;incstack = 0
 16549                           ; Regs used in _read_tala: [wreg+status,2+pclath+cstack]
 16550                           
 16551  1384  3003               	movlw	3
 16552  1385  00F2               	movwf	DATAEE_ReadByte@bAdd
 16553  1386  30F0               	movlw	240
 16554  1387  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16555  1388  3193  23C7  3193   	fcall	_DATAEE_ReadByte
 16556  138B                     l1441:	
 16557  138B  0008               	return
 16558  138C                     __end_of_read_tala:	
 16559                           
 16560                           	psect	text37
 16561  137C                     __ptext37:	
 16562 ;; *************** function _read_pmon *****************
 16563 ;; Defined at:
 16564 ;;		line 119 in file "eeprom.c"
 16565 ;; Parameters:    Size  Location     Type
 16566 ;;		None
 16567 ;; Auto vars:     Size  Location     Type
 16568 ;;		None
 16569 ;; Return value:  Size  Location     Type
 16570 ;;                  1    wreg      unsigned char 
 16571 ;; Registers used:
 16572 ;;		wreg, status,2, pclath, cstack
 16573 ;; Tracked objects:
 16574 ;;		On entry : 0/0
 16575 ;;		On exit  : 0/0
 16576 ;;		Unchanged: 0/0
 16577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16582 ;;Total ram usage:        0 bytes
 16583 ;; Hardware stack levels used:    1
 16584 ;; Hardware stack levels required when called:    7
 16585 ;; This function calls:
 16586 ;;		_DATAEE_ReadByte
 16587 ;; This function is called by:
 16588 ;;		_load_eeprom
 16589 ;; This function uses a non-reentrant model
 16590 ;;
 16591                           
 16592                           
 16593                           ;psect for function _read_pmon
 16594  137C                     _read_pmon:	
 16595  137C                     l6727:	
 16596                           ;incstack = 0
 16597                           ; Regs used in _read_pmon: [wreg+status,2+pclath+cstack]
 16598                           
 16599  137C  3002               	movlw	2
 16600  137D  00F2               	movwf	DATAEE_ReadByte@bAdd
 16601  137E  30F0               	movlw	240
 16602  137F  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16603  1380  3193  23C7  3193   	fcall	_DATAEE_ReadByte
 16604  1383                     l1438:	
 16605  1383  0008               	return
 16606  1384                     __end_of_read_pmon:	
 16607                           
 16608                           	psect	text38
 16609  1374                     __ptext38:	
 16610 ;; *************** function _read_nreg *****************
 16611 ;; Defined at:
 16612 ;;		line 118 in file "eeprom.c"
 16613 ;; Parameters:    Size  Location     Type
 16614 ;;		None
 16615 ;; Auto vars:     Size  Location     Type
 16616 ;;		None
 16617 ;; Return value:  Size  Location     Type
 16618 ;;                  1    wreg      unsigned char 
 16619 ;; Registers used:
 16620 ;;		wreg, status,2, pclath, cstack
 16621 ;; Tracked objects:
 16622 ;;		On entry : 0/0
 16623 ;;		On exit  : 0/0
 16624 ;;		Unchanged: 0/0
 16625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16630 ;;Total ram usage:        0 bytes
 16631 ;; Hardware stack levels used:    1
 16632 ;; Hardware stack levels required when called:    7
 16633 ;; This function calls:
 16634 ;;		_DATAEE_ReadByte
 16635 ;; This function is called by:
 16636 ;;		_main
 16637 ;;		_load_eeprom
 16638 ;;		_ring_buffer_write
 16639 ;;		_not_transferred
 16640 ;;		_registers_info
 16641 ;;		_transfer_n_registers
 16642 ;;		_transfer_registers_i
 16643 ;;		_transfer_registers
 16644 ;;		_notification_memory
 16645 ;; This function uses a non-reentrant model
 16646 ;;
 16647                           
 16648                           
 16649                           ;psect for function _read_nreg
 16650  1374                     _read_nreg:	
 16651  1374                     l5949:	
 16652                           ;incstack = 0
 16653                           ; Regs used in _read_nreg: [wreg+status,2+pclath+cstack]
 16654                           
 16655  1374  3001               	movlw	1
 16656  1375  00F2               	movwf	DATAEE_ReadByte@bAdd
 16657  1376  30F0               	movlw	240
 16658  1377  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16659  1378  3193  23C7  3193   	fcall	_DATAEE_ReadByte
 16660  137B                     l1435:	
 16661  137B  0008               	return
 16662  137C                     __end_of_read_nreg:	
 16663                           
 16664                           	psect	text39
 16665  136C                     __ptext39:	
 16666 ;; *************** function _read_clkm *****************
 16667 ;; Defined at:
 16668 ;;		line 125 in file "eeprom.c"
 16669 ;; Parameters:    Size  Location     Type
 16670 ;;		None
 16671 ;; Auto vars:     Size  Location     Type
 16672 ;;		None
 16673 ;; Return value:  Size  Location     Type
 16674 ;;                  1    wreg      unsigned char 
 16675 ;; Registers used:
 16676 ;;		wreg, status,2, pclath, cstack
 16677 ;; Tracked objects:
 16678 ;;		On entry : 0/0
 16679 ;;		On exit  : 0/0
 16680 ;;		Unchanged: 0/0
 16681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16686 ;;Total ram usage:        0 bytes
 16687 ;; Hardware stack levels used:    1
 16688 ;; Hardware stack levels required when called:    7
 16689 ;; This function calls:
 16690 ;;		_DATAEE_ReadByte
 16691 ;; This function is called by:
 16692 ;;		_load_eeprom
 16693 ;; This function uses a non-reentrant model
 16694 ;;
 16695                           
 16696                           
 16697                           ;psect for function _read_clkm
 16698  136C                     _read_clkm:	
 16699  136C                     l6751:	
 16700                           ;incstack = 0
 16701                           ; Regs used in _read_clkm: [wreg+status,2+pclath+cstack]
 16702                           
 16703  136C  3008               	movlw	8
 16704  136D  00F2               	movwf	DATAEE_ReadByte@bAdd
 16705  136E  30F0               	movlw	240
 16706  136F  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16707  1370  3193  23C7  3193   	fcall	_DATAEE_ReadByte
 16708  1373                     l1456:	
 16709  1373  0008               	return
 16710  1374                     __end_of_read_clkm:	
 16711                           
 16712                           	psect	text40
 16713  1364                     __ptext40:	
 16714 ;; *************** function _read_clkh *****************
 16715 ;; Defined at:
 16716 ;;		line 124 in file "eeprom.c"
 16717 ;; Parameters:    Size  Location     Type
 16718 ;;		None
 16719 ;; Auto vars:     Size  Location     Type
 16720 ;;		None
 16721 ;; Return value:  Size  Location     Type
 16722 ;;                  1    wreg      unsigned char 
 16723 ;; Registers used:
 16724 ;;		wreg, status,2, pclath, cstack
 16725 ;; Tracked objects:
 16726 ;;		On entry : 0/0
 16727 ;;		On exit  : 0/0
 16728 ;;		Unchanged: 0/0
 16729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16734 ;;Total ram usage:        0 bytes
 16735 ;; Hardware stack levels used:    1
 16736 ;; Hardware stack levels required when called:    7
 16737 ;; This function calls:
 16738 ;;		_DATAEE_ReadByte
 16739 ;; This function is called by:
 16740 ;;		_load_eeprom
 16741 ;; This function uses a non-reentrant model
 16742 ;;
 16743                           
 16744                           
 16745                           ;psect for function _read_clkh
 16746  1364                     _read_clkh:	
 16747  1364                     l6747:	
 16748                           ;incstack = 0
 16749                           ; Regs used in _read_clkh: [wreg+status,2+pclath+cstack]
 16750                           
 16751  1364  3007               	movlw	7
 16752  1365  00F2               	movwf	DATAEE_ReadByte@bAdd
 16753  1366  30F0               	movlw	240
 16754  1367  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16755  1368  3193  23C7  3193   	fcall	_DATAEE_ReadByte
 16756  136B                     l1453:	
 16757  136B  0008               	return
 16758  136C                     __end_of_read_clkh:	
 16759                           
 16760                           	psect	text41
 16761  135C                     __ptext41:	
 16762 ;; *************** function _read_alat *****************
 16763 ;; Defined at:
 16764 ;;		line 121 in file "eeprom.c"
 16765 ;; Parameters:    Size  Location     Type
 16766 ;;		None
 16767 ;; Auto vars:     Size  Location     Type
 16768 ;;		None
 16769 ;; Return value:  Size  Location     Type
 16770 ;;                  1    wreg      unsigned char 
 16771 ;; Registers used:
 16772 ;;		wreg, status,2, pclath, cstack
 16773 ;; Tracked objects:
 16774 ;;		On entry : 0/0
 16775 ;;		On exit  : 0/0
 16776 ;;		Unchanged: 0/0
 16777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16782 ;;Total ram usage:        0 bytes
 16783 ;; Hardware stack levels used:    1
 16784 ;; Hardware stack levels required when called:    7
 16785 ;; This function calls:
 16786 ;;		_DATAEE_ReadByte
 16787 ;; This function is called by:
 16788 ;;		_load_eeprom
 16789 ;; This function uses a non-reentrant model
 16790 ;;
 16791                           
 16792                           
 16793                           ;psect for function _read_alat
 16794  135C                     _read_alat:	
 16795  135C                     l6735:	
 16796                           ;incstack = 0
 16797                           ; Regs used in _read_alat: [wreg+status,2+pclath+cstack]
 16798                           
 16799  135C  3004               	movlw	4
 16800  135D  00F2               	movwf	DATAEE_ReadByte@bAdd
 16801  135E  30F0               	movlw	240
 16802  135F  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16803  1360  3193  23C7  3193   	fcall	_DATAEE_ReadByte
 16804  1363                     l1444:	
 16805  1363  0008               	return
 16806  1364                     __end_of_read_alat:	
 16807                           
 16808                           	psect	text42
 16809  1354                     __ptext42:	
 16810 ;; *************** function _read_alal *****************
 16811 ;; Defined at:
 16812 ;;		line 122 in file "eeprom.c"
 16813 ;; Parameters:    Size  Location     Type
 16814 ;;		None
 16815 ;; Auto vars:     Size  Location     Type
 16816 ;;		None
 16817 ;; Return value:  Size  Location     Type
 16818 ;;                  1    wreg      unsigned char 
 16819 ;; Registers used:
 16820 ;;		wreg, status,2, pclath, cstack
 16821 ;; Tracked objects:
 16822 ;;		On entry : 0/0
 16823 ;;		On exit  : 0/0
 16824 ;;		Unchanged: 0/0
 16825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16830 ;;Total ram usage:        0 bytes
 16831 ;; Hardware stack levels used:    1
 16832 ;; Hardware stack levels required when called:    7
 16833 ;; This function calls:
 16834 ;;		_DATAEE_ReadByte
 16835 ;; This function is called by:
 16836 ;;		_load_eeprom
 16837 ;; This function uses a non-reentrant model
 16838 ;;
 16839                           
 16840                           
 16841                           ;psect for function _read_alal
 16842  1354                     _read_alal:	
 16843  1354                     l6739:	
 16844                           ;incstack = 0
 16845                           ; Regs used in _read_alal: [wreg+status,2+pclath+cstack]
 16846                           
 16847  1354  3005               	movlw	5
 16848  1355  00F2               	movwf	DATAEE_ReadByte@bAdd
 16849  1356  30F0               	movlw	240
 16850  1357  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16851  1358  3193  23C7  3193   	fcall	_DATAEE_ReadByte
 16852  135B                     l1447:	
 16853  135B  0008               	return
 16854  135C                     __end_of_read_alal:	
 16855                           
 16856                           	psect	text43
 16857  134C                     __ptext43:	
 16858 ;; *************** function _read_alaf *****************
 16859 ;; Defined at:
 16860 ;;		line 123 in file "eeprom.c"
 16861 ;; Parameters:    Size  Location     Type
 16862 ;;		None
 16863 ;; Auto vars:     Size  Location     Type
 16864 ;;		None
 16865 ;; Return value:  Size  Location     Type
 16866 ;;                  1    wreg      unsigned char 
 16867 ;; Registers used:
 16868 ;;		wreg, status,2, pclath, cstack
 16869 ;; Tracked objects:
 16870 ;;		On entry : 0/0
 16871 ;;		On exit  : 0/0
 16872 ;;		Unchanged: 0/0
 16873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16878 ;;Total ram usage:        0 bytes
 16879 ;; Hardware stack levels used:    1
 16880 ;; Hardware stack levels required when called:    7
 16881 ;; This function calls:
 16882 ;;		_DATAEE_ReadByte
 16883 ;; This function is called by:
 16884 ;;		_load_eeprom
 16885 ;; This function uses a non-reentrant model
 16886 ;;
 16887                           
 16888                           
 16889                           ;psect for function _read_alaf
 16890  134C                     _read_alaf:	
 16891  134C                     l6743:	
 16892                           ;incstack = 0
 16893                           ; Regs used in _read_alaf: [wreg+status,2+pclath+cstack]
 16894                           
 16895  134C  3006               	movlw	6
 16896  134D  00F2               	movwf	DATAEE_ReadByte@bAdd
 16897  134E  30F0               	movlw	240
 16898  134F  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16899  1350  3193  23C7  3193   	fcall	_DATAEE_ReadByte
 16900  1353                     l1450:	
 16901  1353  0008               	return
 16902  1354                     __end_of_read_alaf:	
 16903                           
 16904                           	psect	text44
 16905  0A06                     __ptext44:	
 16906 ;; *************** function _default_setup *****************
 16907 ;; Defined at:
 16908 ;;		line 114 in file "utils.c"
 16909 ;; Parameters:    Size  Location     Type
 16910 ;;		None
 16911 ;; Auto vars:     Size  Location     Type
 16912 ;;		None
 16913 ;; Return value:  Size  Location     Type
 16914 ;;                  1    wreg      void 
 16915 ;; Registers used:
 16916 ;;		wreg, status,2, status,0, pclath, cstack
 16917 ;; Tracked objects:
 16918 ;;		On entry : 0/0
 16919 ;;		On exit  : 0/0
 16920 ;;		Unchanged: 0/0
 16921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16924 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16925 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16926 ;;Total ram usage:        5 bytes
 16927 ;; Hardware stack levels used:    1
 16928 ;; Hardware stack levels required when called:    8
 16929 ;; This function calls:
 16930 ;;		_eeprom_setup
 16931 ;; This function is called by:
 16932 ;;		_load_eeprom
 16933 ;; This function uses a non-reentrant model
 16934 ;;
 16935                           
 16936                           
 16937                           ;psect for function _default_setup
 16938  0A06                     _default_setup:	
 16939  0A06                     l6755:	
 16940                           ;incstack = 0
 16941                           ; Regs used in _default_setup: [wreg+status,2+status,0+pclath+cstack]
 16942                           
 16943                           
 16944                           ;utils.c: 115:     pmon = 5;
 16945  0A06  3005               	movlw	5
 16946  0A07  0020               	movlb	0	; select bank0
 16947  0A08  00AE               	movwf	??_default_setup
 16948  0A09  082E               	movf	??_default_setup,w
 16949  0A0A  00ED               	movwf	_pmon
 16950                           
 16951                           ;utils.c: 116:     nreg = 33;
 16952  0A0B  3021               	movlw	33
 16953  0A0C  00AE               	movwf	??_default_setup
 16954  0A0D  082E               	movf	??_default_setup,w
 16955  0A0E  0021               	movlb	1	; select bank1
 16956  0A0F  00CB               	movwf	_nreg^(0+128)
 16957                           
 16958                           ;utils.c: 117:     tala = 3;
 16959  0A10  3003               	movlw	3
 16960  0A11  0020               	movlb	0	; select bank0
 16961  0A12  00AE               	movwf	??_default_setup
 16962  0A13  082E               	movf	??_default_setup,w
 16963  0A14  0021               	movlb	1	; select bank1
 16964  0A15  00D7               	movwf	_tala^(0+128)
 16965                           
 16966                           ;utils.c: 118:     alat = 25;
 16967  0A16  3019               	movlw	25
 16968  0A17  0020               	movlb	0	; select bank0
 16969  0A18  00AE               	movwf	??_default_setup
 16970  0A19  082E               	movf	??_default_setup,w
 16971  0A1A  00EC               	movwf	_alat
 16972                           
 16973                           ;utils.c: 119:     alal = 2;
 16974  0A1B  3002               	movlw	2
 16975  0A1C  00AE               	movwf	??_default_setup
 16976  0A1D  082E               	movf	??_default_setup,w
 16977  0A1E  0021               	movlb	1	; select bank1
 16978  0A1F  00D6               	movwf	_alal^(0+128)
 16979  0A20                     l6757:	
 16980                           
 16981                           ;utils.c: 120:     alaf = 0;
 16982  0A20  0020               	movlb	0	; select bank0
 16983  0A21  01EB               	clrf	_alaf
 16984  0A22                     l6759:	
 16985                           
 16986                           ;utils.c: 121:     clkh = 0;
 16987  0A22  01EA               	clrf	_clkh	;volatile
 16988  0A23                     l6761:	
 16989                           
 16990                           ;utils.c: 122:     clkm = 0;
 16991  0A23  01E9               	clrf	_clkm	;volatile
 16992  0A24                     l6763:	
 16993                           
 16994                           ;utils.c: 123:     eeprom_setup(1, 33, 5, 3,
 16995  0A24  3021               	movlw	33
 16996  0A25  00AE               	movwf	??_default_setup
 16997  0A26  082E               	movf	??_default_setup,w
 16998  0A27  00A4               	movwf	eeprom_setup@nreg
 16999  0A28  3005               	movlw	5
 17000  0A29  00AF               	movwf	??_default_setup+1
 17001  0A2A  082F               	movf	??_default_setup+1,w
 17002  0A2B  00A5               	movwf	eeprom_setup@pmon
 17003  0A2C  3003               	movlw	3
 17004  0A2D  00B0               	movwf	??_default_setup+2
 17005  0A2E  0830               	movf	??_default_setup+2,w
 17006  0A2F  00A6               	movwf	eeprom_setup@tala
 17007  0A30  3019               	movlw	25
 17008  0A31  00B1               	movwf	??_default_setup+3
 17009  0A32  0831               	movf	??_default_setup+3,w
 17010  0A33  00A7               	movwf	eeprom_setup@alat
 17011  0A34  3002               	movlw	2
 17012  0A35  00B2               	movwf	??_default_setup+4
 17013  0A36  0832               	movf	??_default_setup+4,w
 17014  0A37  00A8               	movwf	eeprom_setup@alal
 17015  0A38  01A9               	clrf	eeprom_setup@alaf
 17016  0A39  01AA               	clrf	eeprom_setup@clkh
 17017  0A3A  01AB               	clrf	eeprom_setup@clkm
 17018  0A3B  3001               	movlw	1
 17019  0A3C  3186  2652  318A   	fcall	_eeprom_setup
 17020  0A3F                     l1383:	
 17021  0A3F  0008               	return
 17022  0A40                     __end_of_default_setup:	
 17023                           
 17024                           	psect	text45
 17025  0652                     __ptext45:	
 17026 ;; *************** function _eeprom_setup *****************
 17027 ;; Defined at:
 17028 ;;		line 52 in file "eeprom.c"
 17029 ;; Parameters:    Size  Location     Type
 17030 ;;  reset_buffer    1    wreg     _Bool 
 17031 ;;  nreg            1    4[BANK0 ] unsigned char 
 17032 ;;  pmon            1    5[BANK0 ] unsigned char 
 17033 ;;  tala            1    6[BANK0 ] unsigned char 
 17034 ;;  alat            1    7[BANK0 ] unsigned char 
 17035 ;;  alal            1    8[BANK0 ] unsigned char 
 17036 ;;  alaf            1    9[BANK0 ] unsigned char 
 17037 ;;  clkh            1   10[BANK0 ] unsigned char 
 17038 ;;  clkm            1   11[BANK0 ] unsigned char 
 17039 ;; Auto vars:     Size  Location     Type
 17040 ;;  reset_buffer    1   13[BANK0 ] _Bool 
 17041 ;; Return value:  Size  Location     Type
 17042 ;;                  1    wreg      void 
 17043 ;; Registers used:
 17044 ;;		wreg, status,2, status,0, pclath, cstack
 17045 ;; Tracked objects:
 17046 ;;		On entry : 0/0
 17047 ;;		On exit  : 0/0
 17048 ;;		Unchanged: 0/0
 17049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17050 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17051 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17052 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17053 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17054 ;;Total ram usage:       10 bytes
 17055 ;; Hardware stack levels used:    1
 17056 ;; Hardware stack levels required when called:    7
 17057 ;; This function calls:
 17058 ;;		_DATAEE_WriteByte
 17059 ;; This function is called by:
 17060 ;;		_default_setup
 17061 ;; This function uses a non-reentrant model
 17062 ;;
 17063                           
 17064                           
 17065                           ;psect for function _eeprom_setup
 17066  0652                     _eeprom_setup:	
 17067                           
 17068                           ;incstack = 0
 17069                           ; Regs used in _eeprom_setup: [wreg+status,2+status,0+pclath+cstack]
 17070                           ;eeprom_setup@reset_buffer stored from wreg
 17071  0652  0020               	movlb	0	; select bank0
 17072  0653  00AD               	movwf	eeprom_setup@reset_buffer
 17073  0654                     l6225:	
 17074                           
 17075                           ;eeprom.c: 52: void eeprom_setup(_Bool reset_buffer, uint8_t nreg, uint8_t pmon, uint8_t
      +                           tala,;eeprom.c: 53:         uint8_t alat, uint8_t alal, uint8_t alaf, uint8_t clkh, uin
      +                          t8_t clkm){;eeprom.c: 55:     if (reset_buffer)
 17076  0654  082D               	movf	eeprom_setup@reset_buffer,w
 17077  0655  1903               	btfsc	3,2
 17078  0656  2E58               	goto	u5031
 17079  0657  2E59               	goto	u5030
 17080  0658                     u5031:	
 17081  0658  2E61               	goto	l1412
 17082  0659                     u5030:	
 17083  0659                     l6227:	
 17084                           
 17085                           ;eeprom.c: 56:         DATAEE_WriteByte(0xF00A, 0);
 17086  0659  300A               	movlw	10
 17087  065A  00A0               	movwf	DATAEE_WriteByte@bAdd
 17088  065B  30F0               	movlw	240
 17089  065C  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17090  065D  01A2               	clrf	DATAEE_WriteByte@bData
 17091  065E  3197  2700  3186   	fcall	_DATAEE_WriteByte
 17092  0661                     l1412:	
 17093                           
 17094                           ;eeprom.c: 58:     DATAEE_WriteByte(0xF001, nreg);
 17095  0661  3001               	movlw	1
 17096  0662  0020               	movlb	0	; select bank0
 17097  0663  00A0               	movwf	DATAEE_WriteByte@bAdd
 17098  0664  30F0               	movlw	240
 17099  0665  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17100  0666  0824               	movf	eeprom_setup@nreg,w
 17101  0667  00AC               	movwf	??_eeprom_setup
 17102  0668  082C               	movf	??_eeprom_setup,w
 17103  0669  00A2               	movwf	DATAEE_WriteByte@bData
 17104  066A  3197  2700  3186   	fcall	_DATAEE_WriteByte
 17105                           
 17106                           ;eeprom.c: 59:     DATAEE_WriteByte(0xF002, pmon);
 17107  066D  3002               	movlw	2
 17108  066E  0020               	movlb	0	; select bank0
 17109  066F  00A0               	movwf	DATAEE_WriteByte@bAdd
 17110  0670  30F0               	movlw	240
 17111  0671  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17112  0672  0825               	movf	eeprom_setup@pmon,w
 17113  0673  00AC               	movwf	??_eeprom_setup
 17114  0674  082C               	movf	??_eeprom_setup,w
 17115  0675  00A2               	movwf	DATAEE_WriteByte@bData
 17116  0676  3197  2700  3186   	fcall	_DATAEE_WriteByte
 17117                           
 17118                           ;eeprom.c: 60:     DATAEE_WriteByte(0xF003, tala);
 17119  0679  3003               	movlw	3
 17120  067A  0020               	movlb	0	; select bank0
 17121  067B  00A0               	movwf	DATAEE_WriteByte@bAdd
 17122  067C  30F0               	movlw	240
 17123  067D  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17124  067E  0826               	movf	eeprom_setup@tala,w
 17125  067F  00AC               	movwf	??_eeprom_setup
 17126  0680  082C               	movf	??_eeprom_setup,w
 17127  0681  00A2               	movwf	DATAEE_WriteByte@bData
 17128  0682  3197  2700  3186   	fcall	_DATAEE_WriteByte
 17129                           
 17130                           ;eeprom.c: 61:     DATAEE_WriteByte(0xF004, alat);
 17131  0685  3004               	movlw	4
 17132  0686  0020               	movlb	0	; select bank0
 17133  0687  00A0               	movwf	DATAEE_WriteByte@bAdd
 17134  0688  30F0               	movlw	240
 17135  0689  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17136  068A  0827               	movf	eeprom_setup@alat,w
 17137  068B  00AC               	movwf	??_eeprom_setup
 17138  068C  082C               	movf	??_eeprom_setup,w
 17139  068D  00A2               	movwf	DATAEE_WriteByte@bData
 17140  068E  3197  2700  3186   	fcall	_DATAEE_WriteByte
 17141                           
 17142                           ;eeprom.c: 62:     DATAEE_WriteByte(0xF005, alal);
 17143  0691  3005               	movlw	5
 17144  0692  0020               	movlb	0	; select bank0
 17145  0693  00A0               	movwf	DATAEE_WriteByte@bAdd
 17146  0694  30F0               	movlw	240
 17147  0695  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17148  0696  0828               	movf	eeprom_setup@alal,w
 17149  0697  00AC               	movwf	??_eeprom_setup
 17150  0698  082C               	movf	??_eeprom_setup,w
 17151  0699  00A2               	movwf	DATAEE_WriteByte@bData
 17152  069A  3197  2700  3186   	fcall	_DATAEE_WriteByte
 17153                           
 17154                           ;eeprom.c: 63:     DATAEE_WriteByte(0xF006, alaf);
 17155  069D  3006               	movlw	6
 17156  069E  0020               	movlb	0	; select bank0
 17157  069F  00A0               	movwf	DATAEE_WriteByte@bAdd
 17158  06A0  30F0               	movlw	240
 17159  06A1  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17160  06A2  0829               	movf	eeprom_setup@alaf,w
 17161  06A3  00AC               	movwf	??_eeprom_setup
 17162  06A4  082C               	movf	??_eeprom_setup,w
 17163  06A5  00A2               	movwf	DATAEE_WriteByte@bData
 17164  06A6  3197  2700  3186   	fcall	_DATAEE_WriteByte
 17165                           
 17166                           ;eeprom.c: 64:     DATAEE_WriteByte(0xF007, clkh);
 17167  06A9  3007               	movlw	7
 17168  06AA  0020               	movlb	0	; select bank0
 17169  06AB  00A0               	movwf	DATAEE_WriteByte@bAdd
 17170  06AC  30F0               	movlw	240
 17171  06AD  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17172  06AE  082A               	movf	eeprom_setup@clkh,w
 17173  06AF  00AC               	movwf	??_eeprom_setup
 17174  06B0  082C               	movf	??_eeprom_setup,w
 17175  06B1  00A2               	movwf	DATAEE_WriteByte@bData
 17176  06B2  3197  2700  3186   	fcall	_DATAEE_WriteByte
 17177                           
 17178                           ;eeprom.c: 65:     DATAEE_WriteByte(0xF008, clkm);
 17179  06B5  3008               	movlw	8
 17180  06B6  0020               	movlb	0	; select bank0
 17181  06B7  00A0               	movwf	DATAEE_WriteByte@bAdd
 17182  06B8  30F0               	movlw	240
 17183  06B9  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17184  06BA  082B               	movf	eeprom_setup@clkm,w
 17185  06BB  00AC               	movwf	??_eeprom_setup
 17186  06BC  082C               	movf	??_eeprom_setup,w
 17187  06BD  00A2               	movwf	DATAEE_WriteByte@bData
 17188  06BE  3197  2700  3186   	fcall	_DATAEE_WriteByte
 17189                           
 17190                           ;eeprom.c: 66:     DATAEE_WriteByte(0xF009, 0xAA);
 17191  06C1  3009               	movlw	9
 17192  06C2  0020               	movlb	0	; select bank0
 17193  06C3  00A0               	movwf	DATAEE_WriteByte@bAdd
 17194  06C4  30F0               	movlw	240
 17195  06C5  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17196  06C6  30AA               	movlw	170
 17197  06C7  00AC               	movwf	??_eeprom_setup
 17198  06C8  082C               	movf	??_eeprom_setup,w
 17199  06C9  00A2               	movwf	DATAEE_WriteByte@bData
 17200  06CA  3197  2700  3186   	fcall	_DATAEE_WriteByte
 17201                           
 17202                           ;eeprom.c: 69:     DATAEE_WriteByte(0xF000, nreg+pmon+tala+alat+alal+alaf+clkh+clkm);
 17203  06CD  3000               	movlw	0
 17204  06CE  0020               	movlb	0	; select bank0
 17205  06CF  00A0               	movwf	DATAEE_WriteByte@bAdd
 17206  06D0  30F0               	movlw	240
 17207  06D1  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17208  06D2  0824               	movf	eeprom_setup@nreg,w
 17209  06D3  0725               	addwf	eeprom_setup@pmon,w
 17210  06D4  0726               	addwf	eeprom_setup@tala,w
 17211  06D5  0727               	addwf	eeprom_setup@alat,w
 17212  06D6  0728               	addwf	eeprom_setup@alal,w
 17213  06D7  0729               	addwf	eeprom_setup@alaf,w
 17214  06D8  072A               	addwf	eeprom_setup@clkh,w
 17215  06D9  072B               	addwf	eeprom_setup@clkm,w
 17216  06DA  00AC               	movwf	??_eeprom_setup
 17217  06DB  082C               	movf	??_eeprom_setup,w
 17218  06DC  00A2               	movwf	DATAEE_WriteByte@bData
 17219  06DD  3197  2700  3186   	fcall	_DATAEE_WriteByte
 17220  06E0                     l1413:	
 17221  06E0  0008               	return
 17222  06E1                     __end_of_eeprom_setup:	
 17223                           
 17224                           	psect	text46
 17225  14CE                     __ptext46:	
 17226 ;; *************** function _check_corruption *****************
 17227 ;; Defined at:
 17228 ;;		line 40 in file "eeprom.c"
 17229 ;; Parameters:    Size  Location     Type
 17230 ;;		None
 17231 ;; Auto vars:     Size  Location     Type
 17232 ;;  check           1    6[COMMON] unsigned char 
 17233 ;; Return value:  Size  Location     Type
 17234 ;;                  1    wreg      _Bool 
 17235 ;; Registers used:
 17236 ;;		wreg, status,2, status,0, pclath, cstack
 17237 ;; Tracked objects:
 17238 ;;		On entry : 0/0
 17239 ;;		On exit  : 0/0
 17240 ;;		Unchanged: 0/0
 17241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17244 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17245 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17246 ;;Total ram usage:        2 bytes
 17247 ;; Hardware stack levels used:    1
 17248 ;; Hardware stack levels required when called:    8
 17249 ;; This function calls:
 17250 ;;		_DATAEE_ReadByte
 17251 ;;		_get_check_up_value
 17252 ;; This function is called by:
 17253 ;;		_load_eeprom
 17254 ;; This function uses a non-reentrant model
 17255 ;;
 17256                           
 17257                           
 17258                           ;psect for function _check_corruption
 17259  14CE                     _check_corruption:	
 17260  14CE                     l6721:	
 17261                           ;incstack = 0
 17262                           ; Regs used in _check_corruption: [wreg+status,2+status,0+pclath+cstack]
 17263                           
 17264                           
 17265                           ;eeprom.c: 44:     uint8_t check = DATAEE_ReadByte(0xF000);
 17266  14CE  3000               	movlw	0
 17267  14CF  00F2               	movwf	DATAEE_ReadByte@bAdd
 17268  14D0  30F0               	movlw	240
 17269  14D1  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17270  14D2  3193  23C7  3194   	fcall	_DATAEE_ReadByte
 17271  14D5  00F5               	movwf	??_check_corruption
 17272  14D6  0875               	movf	??_check_corruption,w
 17273  14D7  00F6               	movwf	check_corruption@check
 17274  14D8                     l6723:	
 17275                           
 17276                           ;eeprom.c: 46:     return get_check_up_value() == check;
 17277  14D8  318E  26E0  3194   	fcall	_get_check_up_value
 17278  14DB  0676               	xorwf	check_corruption@check,w
 17279  14DC  1903               	skipnz
 17280  14DD  2CDF               	goto	u5631
 17281  14DE  2CE1               	goto	u5630
 17282  14DF                     u5631:	
 17283  14DF  3001               	movlw	1
 17284  14E0  2CE2               	goto	u5640
 17285  14E1                     u5630:	
 17286  14E1  3000               	movlw	0
 17287  14E2                     u5640:	
 17288  14E2                     l1409:	
 17289  14E2  0008               	return
 17290  14E3                     __end_of_check_corruption:	
 17291                           
 17292                           	psect	text47
 17293  0EE0                     __ptext47:	
 17294 ;; *************** function _get_check_up_value *****************
 17295 ;; Defined at:
 17296 ;;		line 8 in file "eeprom.c"
 17297 ;; Parameters:    Size  Location     Type
 17298 ;;		None
 17299 ;; Auto vars:     Size  Location     Type
 17300 ;;  check           1    4[COMMON] unsigned char 
 17301 ;; Return value:  Size  Location     Type
 17302 ;;                  1    wreg      unsigned char 
 17303 ;; Registers used:
 17304 ;;		wreg, status,2, status,0, pclath, cstack
 17305 ;; Tracked objects:
 17306 ;;		On entry : 0/0
 17307 ;;		On exit  : 0/0
 17308 ;;		Unchanged: 0/0
 17309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17311 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17312 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17313 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17314 ;;Total ram usage:       10 bytes
 17315 ;; Hardware stack levels used:    1
 17316 ;; Hardware stack levels required when called:    7
 17317 ;; This function calls:
 17318 ;;		_DATAEE_ReadByte
 17319 ;; This function is called by:
 17320 ;;		_check_corruption
 17321 ;;		_set_check_up_value
 17322 ;; This function uses a non-reentrant model
 17323 ;;
 17324                           
 17325                           
 17326                           ;psect for function _get_check_up_value
 17327  0EE0                     _get_check_up_value:	
 17328  0EE0                     l6229:	
 17329                           ;incstack = 0
 17330                           ; Regs used in _get_check_up_value: [wreg+status,2+status,0+pclath+cstack]
 17331                           
 17332                           
 17333                           ;eeprom.c: 12:     uint8_t check;;eeprom.c: 14:     check = DATAEE_ReadByte(0xF001) + DA
      +                          TAEE_ReadByte(0xF002) + DATAEE_ReadByte(0xF003) +
 17334  0EE0  300A               	movlw	10
 17335  0EE1  00F2               	movwf	DATAEE_ReadByte@bAdd
 17336  0EE2  30F0               	movlw	240
 17337  0EE3  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17338  0EE4  3193  23C7  318E   	fcall	_DATAEE_ReadByte
 17339  0EE7  0020               	movlb	0	; select bank0
 17340  0EE8  00A0               	movwf	??_get_check_up_value
 17341  0EE9  3008               	movlw	8
 17342  0EEA  00F2               	movwf	DATAEE_ReadByte@bAdd
 17343  0EEB  30F0               	movlw	240
 17344  0EEC  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17345  0EED  3193  23C7  318E   	fcall	_DATAEE_ReadByte
 17346  0EF0  0020               	movlb	0	; select bank0
 17347  0EF1  00A1               	movwf	??_get_check_up_value+1
 17348  0EF2  3007               	movlw	7
 17349  0EF3  00F2               	movwf	DATAEE_ReadByte@bAdd
 17350  0EF4  30F0               	movlw	240
 17351  0EF5  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17352  0EF6  3193  23C7  318E   	fcall	_DATAEE_ReadByte
 17353  0EF9  0020               	movlb	0	; select bank0
 17354  0EFA  00A2               	movwf	??_get_check_up_value+2
 17355  0EFB  3006               	movlw	6
 17356  0EFC  00F2               	movwf	DATAEE_ReadByte@bAdd
 17357  0EFD  30F0               	movlw	240
 17358  0EFE  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17359  0EFF  3193  23C7  318E   	fcall	_DATAEE_ReadByte
 17360  0F02  0020               	movlb	0	; select bank0
 17361  0F03  00A3               	movwf	??_get_check_up_value+3
 17362  0F04  3005               	movlw	5
 17363  0F05  00F2               	movwf	DATAEE_ReadByte@bAdd
 17364  0F06  30F0               	movlw	240
 17365  0F07  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17366  0F08  3193  23C7  318E   	fcall	_DATAEE_ReadByte
 17367  0F0B  0020               	movlb	0	; select bank0
 17368  0F0C  00A4               	movwf	??_get_check_up_value+4
 17369  0F0D  3004               	movlw	4
 17370  0F0E  00F2               	movwf	DATAEE_ReadByte@bAdd
 17371  0F0F  30F0               	movlw	240
 17372  0F10  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17373  0F11  3193  23C7  318E   	fcall	_DATAEE_ReadByte
 17374  0F14  0020               	movlb	0	; select bank0
 17375  0F15  00A5               	movwf	??_get_check_up_value+5
 17376  0F16  3003               	movlw	3
 17377  0F17  00F2               	movwf	DATAEE_ReadByte@bAdd
 17378  0F18  30F0               	movlw	240
 17379  0F19  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17380  0F1A  3193  23C7  318E   	fcall	_DATAEE_ReadByte
 17381  0F1D  0020               	movlb	0	; select bank0
 17382  0F1E  00A6               	movwf	??_get_check_up_value+6
 17383  0F1F  3002               	movlw	2
 17384  0F20  00F2               	movwf	DATAEE_ReadByte@bAdd
 17385  0F21  30F0               	movlw	240
 17386  0F22  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17387  0F23  3193  23C7  318E   	fcall	_DATAEE_ReadByte
 17388  0F26  0020               	movlb	0	; select bank0
 17389  0F27  00A7               	movwf	??_get_check_up_value+7
 17390  0F28  3001               	movlw	1
 17391  0F29  00F2               	movwf	DATAEE_ReadByte@bAdd
 17392  0F2A  30F0               	movlw	240
 17393  0F2B  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17394  0F2C  3193  23C7  318E   	fcall	_DATAEE_ReadByte
 17395  0F2F  0020               	movlb	0	; select bank0
 17396  0F30  0727               	addwf	??_get_check_up_value+7,w
 17397  0F31  0726               	addwf	??_get_check_up_value+6,w
 17398  0F32  0725               	addwf	??_get_check_up_value+5,w
 17399  0F33  0724               	addwf	??_get_check_up_value+4,w
 17400  0F34  0723               	addwf	??_get_check_up_value+3,w
 17401  0F35  0722               	addwf	??_get_check_up_value+2,w
 17402  0F36  0721               	addwf	??_get_check_up_value+1,w
 17403  0F37  0720               	addwf	??_get_check_up_value,w
 17404  0F38  00A8               	movwf	??_get_check_up_value+8
 17405  0F39  0828               	movf	??_get_check_up_value+8,w
 17406  0F3A  00F4               	movwf	get_check_up_value@check
 17407  0F3B                     l6231:	
 17408                           
 17409                           ;eeprom.c: 23:     return check;
 17410  0F3B  0874               	movf	get_check_up_value@check,w
 17411  0F3C                     l1403:	
 17412  0F3C  0008               	return
 17413  0F3D                     __end_of_get_check_up_value:	
 17414                           
 17415                           	psect	text48
 17416  13D3                     __ptext48:	
 17417 ;; *************** function _i2c1_driver_open *****************
 17418 ;; Defined at:
 17419 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
 17420 ;; Parameters:    Size  Location     Type
 17421 ;;		None
 17422 ;; Auto vars:     Size  Location     Type
 17423 ;;		None
 17424 ;; Return value:  Size  Location     Type
 17425 ;;		None               void
 17426 ;; Registers used:
 17427 ;;		wreg, status,2
 17428 ;; Tracked objects:
 17429 ;;		On entry : 0/0
 17430 ;;		On exit  : 0/0
 17431 ;;		Unchanged: 0/0
 17432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17437 ;;Total ram usage:        0 bytes
 17438 ;; Hardware stack levels used:    1
 17439 ;; Hardware stack levels required when called:    6
 17440 ;; This function calls:
 17441 ;;		Nothing
 17442 ;; This function is called by:
 17443 ;;		_main
 17444 ;; This function uses a non-reentrant model
 17445 ;;
 17446                           
 17447                           
 17448                           ;psect for function _i2c1_driver_open
 17449  13D3                     _i2c1_driver_open:	
 17450  13D3                     l6861:	
 17451                           ;incstack = 0
 17452                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 17453                           
 17454  13D3  0023               	movlb	3	; select bank3
 17455  13D4  1A90               	btfsc	16,5	;volatile
 17456  13D5  2BD7               	goto	u5741
 17457  13D6  2BD8               	goto	u5740
 17458  13D7                     u5741:	
 17459  13D7  2BDE               	goto	l499
 17460  13D8                     u5740:	
 17461  13D8                     l6863:	
 17462  13D8  018F               	clrf	15	;volatile
 17463  13D9                     l6865:	
 17464  13D9  3028               	movlw	40
 17465  13DA  0090               	movwf	16	;volatile
 17466  13DB                     l6867:	
 17467  13DB  0191               	clrf	17	;volatile
 17468  13DC  3003               	movlw	3
 17469  13DD  008D               	movwf	13	;volatile
 17470  13DE                     l499:	
 17471  13DE  0008               	return
 17472  13DF                     __end_of_i2c1_driver_open:	
 17473                           
 17474                           	psect	text49
 17475  1344                     __ptext49:	
 17476 ;; *************** function _clear_alarm *****************
 17477 ;; Defined at:
 17478 ;;		line 75 in file "main.c"
 17479 ;; Parameters:    Size  Location     Type
 17480 ;;		None
 17481 ;; Auto vars:     Size  Location     Type
 17482 ;;		None
 17483 ;; Return value:  Size  Location     Type
 17484 ;;                  1    wreg      void 
 17485 ;; Registers used:
 17486 ;;		wreg, status,2, status,0, pclath, cstack
 17487 ;; Tracked objects:
 17488 ;;		On entry : 0/0
 17489 ;;		On exit  : 0/0
 17490 ;;		Unchanged: 0/0
 17491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17496 ;;Total ram usage:        0 bytes
 17497 ;; Hardware stack levels used:    1
 17498 ;; Hardware stack levels required when called:    7
 17499 ;; This function calls:
 17500 ;;		_PWM_Output_D4_Disable
 17501 ;; This function is called by:
 17502 ;;		_main
 17503 ;; This function uses a non-reentrant model
 17504 ;;
 17505                           
 17506                           
 17507                           ;psect for function _clear_alarm
 17508  1344                     _clear_alarm:	
 17509  1344                     l6875:	
 17510                           ;incstack = 0
 17511                           ; Regs used in _clear_alarm: [wreg+status,2+status,0+pclath+cstack]
 17512                           
 17513                           
 17514                           ;main.c: 76:     PWM_Output_D4_Disable();
 17515  1344  3194  2433  3193   	fcall	_PWM_Output_D4_Disable
 17516  1347                     l6877:	
 17517  1347  0020               	movlb	0	; select bank0
 17518  1348  1316               	bcf	22,6	;volatile
 17519  1349                     l6879:	
 17520                           
 17521                           ;main.c: 78:     alarm = 0;
 17522  1349  0021               	movlb	1	; select bank1
 17523  134A  01D0               	clrf	_alarm^(0+128)
 17524  134B                     l987:	
 17525  134B  0008               	return
 17526  134C                     __end_of_clear_alarm:	
 17527                           
 17528                           	psect	text50
 17529  1433                     __ptext50:	
 17530 ;; *************** function _PWM_Output_D4_Disable *****************
 17531 ;; Defined at:
 17532 ;;		line 61 in file "utils.c"
 17533 ;; Parameters:    Size  Location     Type
 17534 ;;		None
 17535 ;; Auto vars:     Size  Location     Type
 17536 ;;		None
 17537 ;; Return value:  Size  Location     Type
 17538 ;;                  1    wreg      void 
 17539 ;; Registers used:
 17540 ;;		wreg, status,2
 17541 ;; Tracked objects:
 17542 ;;		On entry : 0/0
 17543 ;;		On exit  : 0/0
 17544 ;;		Unchanged: 0/0
 17545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17550 ;;Total ram usage:        0 bytes
 17551 ;; Hardware stack levels used:    1
 17552 ;; Hardware stack levels required when called:    6
 17553 ;; This function calls:
 17554 ;;		Nothing
 17555 ;; This function is called by:
 17556 ;;		_clear_alarm
 17557 ;;		_main
 17558 ;; This function uses a non-reentrant model
 17559 ;;
 17560                           
 17561                           
 17562                           ;psect for function _PWM_Output_D4_Disable
 17563  1433                     _PWM_Output_D4_Disable:	
 17564  1433                     l6629:	
 17565                           ;incstack = 0
 17566                           ; Regs used in _PWM_Output_D4_Disable: [wreg+status,2]
 17567                           
 17568                           
 17569                           ;utils.c: 62:     PPSLOCK = 0x55;
 17570  1433  3055               	movlw	85
 17571  1434  003D               	movlb	29	; select bank29
 17572  1435  008F               	movwf	15	;volsfr
 17573                           
 17574                           ;utils.c: 63:     PPSLOCK = 0xAA;
 17575  1436  30AA               	movlw	170
 17576  1437  008F               	movwf	15	;volsfr
 17577  1438                     l6631:	
 17578                           
 17579                           ;utils.c: 64:     PPSLOCKbits.PPSLOCKED = 0x00;
 17580  1438  100F               	bcf	15,0	;volsfr
 17581  1439                     l6633:	
 17582                           
 17583                           ;utils.c: 66:     RA6PPS = 0x00;
 17584  1439  003E               	movlb	30	; select bank30
 17585  143A  0196               	clrf	22	;volatile
 17586  143B                     l6635:	
 17587                           
 17588                           ;utils.c: 67:     PPSLOCK = 0x55;
 17589  143B  3055               	movlw	85
 17590  143C  003D               	movlb	29	; select bank29
 17591  143D  008F               	movwf	15	;volsfr
 17592  143E                     l6637:	
 17593                           
 17594                           ;utils.c: 68:     PPSLOCK = 0xAA;
 17595  143E  30AA               	movlw	170
 17596  143F  008F               	movwf	15	;volsfr
 17597  1440                     l6639:	
 17598                           
 17599                           ;utils.c: 69:     PPSLOCKbits.PPSLOCKED = 0x01;
 17600  1440  140F               	bsf	15,0	;volsfr
 17601  1441                     l1358:	
 17602  1441  0008               	return
 17603  1442                     __end_of_PWM_Output_D4_Disable:	
 17604                           
 17605                           	psect	text51
 17606  15A4                     __ptext51:	
 17607 ;; *************** function _SYSTEM_Initialize *****************
 17608 ;; Defined at:
 17609 ;;		line 50 in file "mcc_generated_files/mcc.c"
 17610 ;; Parameters:    Size  Location     Type
 17611 ;;		None
 17612 ;; Auto vars:     Size  Location     Type
 17613 ;;		None
 17614 ;; Return value:  Size  Location     Type
 17615 ;;                  1    wreg      void 
 17616 ;; Registers used:
 17617 ;;		wreg, status,2, status,0, pclath, cstack
 17618 ;; Tracked objects:
 17619 ;;		On entry : 0/0
 17620 ;;		On exit  : 0/0
 17621 ;;		Unchanged: 0/0
 17622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17627 ;;Total ram usage:        0 bytes
 17628 ;; Hardware stack levels used:    1
 17629 ;; Hardware stack levels required when called:    8
 17630 ;; This function calls:
 17631 ;;		_ADCC_Initialize
 17632 ;;		_EUSART_Initialize
 17633 ;;		_EXT_INT_Initialize
 17634 ;;		_OSCILLATOR_Initialize
 17635 ;;		_PIN_MANAGER_Initialize
 17636 ;;		_PMD_Initialize
 17637 ;;		_PWM6_Initialize
 17638 ;;		_TMR1_Initialize
 17639 ;;		_TMR2_Initialize
 17640 ;; This function is called by:
 17641 ;;		_main
 17642 ;; This function uses a non-reentrant model
 17643 ;;
 17644                           
 17645                           
 17646                           ;psect for function _SYSTEM_Initialize
 17647  15A4                     _SYSTEM_Initialize:	
 17648  15A4                     l6843:	
 17649                           ;incstack = 0
 17650                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17651                           
 17652                           
 17653                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 17654  15A4  3193  233C  3195   	fcall	_PMD_Initialize
 17655  15A7                     l6845:	
 17656                           
 17657                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 17658  15A7  318C  24F0  3195   	fcall	_PIN_MANAGER_Initialize
 17659  15AA                     l6847:	
 17660                           
 17661                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 17662  15AA  3193  2394  3195   	fcall	_OSCILLATOR_Initialize
 17663  15AD                     l6849:	
 17664                           
 17665                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 17666  15AD  3193  23F9  3195   	fcall	_PWM6_Initialize
 17667  15B0                     l6851:	
 17668                           
 17669                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 17670  15B0  3194  24F9  3195   	fcall	_ADCC_Initialize
 17671  15B3                     l6853:	
 17672                           
 17673                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 17674  15B3  3188  2000  3195   	fcall	_TMR2_Initialize
 17675  15B6                     l6855:	
 17676                           
 17677                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 17678  15B6  3193  23EC  3195   	fcall	_EXT_INT_Initialize
 17679  15B9                     l6857:	
 17680                           
 17681                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
 17682  15B9  3195  25DD  3195   	fcall	_TMR1_Initialize
 17683  15BC                     l6859:	
 17684                           
 17685                           ;mcc_generated_files/mcc.c: 60:     EUSART_Initialize();
 17686  15BC  318A  227C  3195   	fcall	_EUSART_Initialize
 17687  15BF                     l182:	
 17688  15BF  0008               	return
 17689  15C0                     __end_of_SYSTEM_Initialize:	
 17690                           
 17691                           	psect	text52
 17692  0800                     __ptext52:	
 17693 ;; *************** function _TMR2_Initialize *****************
 17694 ;; Defined at:
 17695 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 17696 ;; Parameters:    Size  Location     Type
 17697 ;;		None
 17698 ;; Auto vars:     Size  Location     Type
 17699 ;;		None
 17700 ;; Return value:  Size  Location     Type
 17701 ;;                  1    wreg      void 
 17702 ;; Registers used:
 17703 ;;		wreg, status,2
 17704 ;; Tracked objects:
 17705 ;;		On entry : 0/0
 17706 ;;		On exit  : 0/0
 17707 ;;		Unchanged: 0/0
 17708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17713 ;;Total ram usage:        0 bytes
 17714 ;; Hardware stack levels used:    1
 17715 ;; Hardware stack levels required when called:    6
 17716 ;; This function calls:
 17717 ;;		Nothing
 17718 ;; This function is called by:
 17719 ;;		_SYSTEM_Initialize
 17720 ;; This function uses a non-reentrant model
 17721 ;;
 17722                           
 17723                           
 17724                           ;psect for function _TMR2_Initialize
 17725  0800                     _TMR2_Initialize:	
 17726  0800                     l6543:	
 17727                           ;incstack = 0
 17728                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 17729                           
 17730                           
 17731                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 17732  0800  3001               	movlw	1
 17733  0801  0025               	movlb	5	; select bank5
 17734  0802  0090               	movwf	16	;volatile
 17735  0803                     l6545:	
 17736                           
 17737                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 17738  0803  018F               	clrf	15	;volatile
 17739  0804                     l6547:	
 17740                           
 17741                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 17742  0804  0191               	clrf	17	;volatile
 17743                           
 17744                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 17745  0805  30FF               	movlw	255
 17746  0806  008D               	movwf	13	;volatile
 17747  0807                     l6549:	
 17748                           
 17749                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 17750  0807  018C               	clrf	12	;volatile
 17751  0808                     l6551:	
 17752                           
 17753                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 17754  0808  002E               	movlb	14	; select bank14
 17755  0809  1090               	bcf	16,1	;volatile
 17756  080A                     l6553:	
 17757                           
 17758                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
 17759  080A  3080               	movlw	128
 17760  080B  0025               	movlb	5	; select bank5
 17761  080C  008E               	movwf	14	;volatile
 17762  080D                     l671:	
 17763  080D  0008               	return
 17764  080E                     __end_of_TMR2_Initialize:	
 17765                           
 17766                           	psect	text53
 17767  15DD                     __ptext53:	
 17768 ;; *************** function _TMR1_Initialize *****************
 17769 ;; Defined at:
 17770 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 17771 ;; Parameters:    Size  Location     Type
 17772 ;;		None
 17773 ;; Auto vars:     Size  Location     Type
 17774 ;;		None
 17775 ;; Return value:  Size  Location     Type
 17776 ;;                  1    wreg      void 
 17777 ;; Registers used:
 17778 ;;		wreg, status,2, status,0, pclath, cstack
 17779 ;; Tracked objects:
 17780 ;;		On entry : 0/0
 17781 ;;		On exit  : 0/0
 17782 ;;		Unchanged: 0/0
 17783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17788 ;;Total ram usage:        0 bytes
 17789 ;; Hardware stack levels used:    1
 17790 ;; Hardware stack levels required when called:    7
 17791 ;; This function calls:
 17792 ;;		_TMR1_SetInterruptHandler
 17793 ;; This function is called by:
 17794 ;;		_SYSTEM_Initialize
 17795 ;; This function uses a non-reentrant model
 17796 ;;
 17797                           
 17798                           
 17799                           ;psect for function _TMR1_Initialize
 17800  15DD                     _TMR1_Initialize:	
 17801  15DD                     l6443:	
 17802                           ;incstack = 0
 17803                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17804                           
 17805                           
 17806                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 17807  15DD  0024               	movlb	4	; select bank4
 17808  15DE  018F               	clrf	15	;volatile
 17809                           
 17810                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 17811  15DF  0190               	clrf	16	;volatile
 17812  15E0                     l6445:	
 17813                           
 17814                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 17815  15E0  3004               	movlw	4
 17816  15E1  0091               	movwf	17	;volatile
 17817  15E2                     l6447:	
 17818                           
 17819                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x86;
 17820  15E2  3086               	movlw	134
 17821  15E3  008D               	movwf	13	;volatile
 17822  15E4                     l6449:	
 17823                           
 17824                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xE8;
 17825  15E4  30E8               	movlw	232
 17826  15E5  008C               	movwf	12	;volatile
 17827  15E6                     l6451:	
 17828                           
 17829                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 17830  15E6  080D               	movf	13,w	;volatile
 17831  15E7  0021               	movlb	1	; select bank1
 17832  15E8  00EE               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 17833  15E9  0024               	movlb	4	; select bank4
 17834  15EA  080C               	movf	12,w	;volatile
 17835  15EB  0021               	movlb	1	; select bank1
 17836  15EC  00ED               	movwf	_timer1ReloadVal^(0+128)	;volatile
 17837  15ED                     l6453:	
 17838                           
 17839                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 17840  15ED  002E               	movlb	14	; select bank14
 17841  15EE  1010               	bcf	16,0	;volatile
 17842  15EF                     l6455:	
 17843                           
 17844                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 17845  15EF  141A               	bsf	26,0	;volatile
 17846  15F0                     l6457:	
 17847                           
 17848                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 17849  15F0  3003               	movlw	low _TMR1_DefaultInterruptHandler
 17850  15F1  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 17851  15F2  3000               	movlw	high _TMR1_DefaultInterruptHandler
 17852  15F3  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 17853  15F4  3192  22FE  3195   	fcall	_TMR1_SetInterruptHandler
 17854  15F7                     l6459:	
 17855                           
 17856                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x05;
 17857  15F7  3005               	movlw	5
 17858  15F8  0024               	movlb	4	; select bank4
 17859  15F9  008E               	movwf	14	;volatile
 17860  15FA                     l31:	
 17861  15FA  0008               	return
 17862  15FB                     __end_of_TMR1_Initialize:	
 17863                           
 17864                           	psect	text54
 17865  13F9                     __ptext54:	
 17866 ;; *************** function _PWM6_Initialize *****************
 17867 ;; Defined at:
 17868 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 17869 ;; Parameters:    Size  Location     Type
 17870 ;;		None
 17871 ;; Auto vars:     Size  Location     Type
 17872 ;;		None
 17873 ;; Return value:  Size  Location     Type
 17874 ;;                  1    wreg      void 
 17875 ;; Registers used:
 17876 ;;		wreg, status,2, status,0
 17877 ;; Tracked objects:
 17878 ;;		On entry : 0/0
 17879 ;;		On exit  : 0/0
 17880 ;;		Unchanged: 0/0
 17881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17886 ;;Total ram usage:        0 bytes
 17887 ;; Hardware stack levels used:    1
 17888 ;; Hardware stack levels required when called:    6
 17889 ;; This function calls:
 17890 ;;		Nothing
 17891 ;; This function is called by:
 17892 ;;		_SYSTEM_Initialize
 17893 ;; This function uses a non-reentrant model
 17894 ;;
 17895                           
 17896                           
 17897                           ;psect for function _PWM6_Initialize
 17898  13F9                     _PWM6_Initialize:	
 17899  13F9                     l6533:	
 17900                           ;incstack = 0
 17901                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 17902                           
 17903                           
 17904                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 17905  13F9  3080               	movlw	128
 17906  13FA  0027               	movlb	7	; select bank7
 17907  13FB  008E               	movwf	14	;volatile
 17908                           
 17909                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0xFF;
 17910  13FC  30FF               	movlw	255
 17911  13FD  008D               	movwf	13	;volatile
 17912                           
 17913                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
 17914  13FE  30C0               	movlw	192
 17915  13FF  008C               	movwf	12	;volatile
 17916  1400                     l6535:	
 17917                           
 17918                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 17919  1400  0024               	movlb	4	; select bank4
 17920  1401  081F               	movf	31,w	;volatile
 17921  1402  39F3               	andlw	-13
 17922  1403  3804               	iorlw	4
 17923  1404  009F               	movwf	31	;volatile
 17924  1405                     l641:	
 17925  1405  0008               	return
 17926  1406                     __end_of_PWM6_Initialize:	
 17927                           
 17928                           	psect	text55
 17929  133C                     __ptext55:	
 17930 ;; *************** function _PMD_Initialize *****************
 17931 ;; Defined at:
 17932 ;;		line 77 in file "mcc_generated_files/mcc.c"
 17933 ;; Parameters:    Size  Location     Type
 17934 ;;		None
 17935 ;; Auto vars:     Size  Location     Type
 17936 ;;		None
 17937 ;; Return value:  Size  Location     Type
 17938 ;;                  1    wreg      void 
 17939 ;; Registers used:
 17940 ;;		status,2
 17941 ;; Tracked objects:
 17942 ;;		On entry : 0/0
 17943 ;;		On exit  : 0/0
 17944 ;;		Unchanged: 0/0
 17945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17950 ;;Total ram usage:        0 bytes
 17951 ;; Hardware stack levels used:    1
 17952 ;; Hardware stack levels required when called:    6
 17953 ;; This function calls:
 17954 ;;		Nothing
 17955 ;; This function is called by:
 17956 ;;		_SYSTEM_Initialize
 17957 ;; This function uses a non-reentrant model
 17958 ;;
 17959                           
 17960                           
 17961                           ;psect for function _PMD_Initialize
 17962  133C                     _PMD_Initialize:	
 17963  133C                     l6467:	
 17964                           ;incstack = 0
 17965                           ; Regs used in _PMD_Initialize: [status,2]
 17966                           
 17967                           
 17968                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 17969  133C  002F               	movlb	15	; select bank15
 17970  133D  0196               	clrf	22	;volatile
 17971                           
 17972                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 17973  133E  0197               	clrf	23	;volatile
 17974                           
 17975                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 17976  133F  0198               	clrf	24	;volatile
 17977                           
 17978                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 17979  1340  0199               	clrf	25	;volatile
 17980                           
 17981                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 17982  1341  019A               	clrf	26	;volatile
 17983                           
 17984                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 17985  1342  019B               	clrf	27	;volatile
 17986  1343                     l188:	
 17987  1343  0008               	return
 17988  1344                     __end_of_PMD_Initialize:	
 17989                           
 17990                           	psect	text56
 17991  0CF0                     __ptext56:	
 17992 ;; *************** function _PIN_MANAGER_Initialize *****************
 17993 ;; Defined at:
 17994 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 17995 ;; Parameters:    Size  Location     Type
 17996 ;;		None
 17997 ;; Auto vars:     Size  Location     Type
 17998 ;;		None
 17999 ;; Return value:  Size  Location     Type
 18000 ;;                  1    wreg      void 
 18001 ;; Registers used:
 18002 ;;		wreg, status,2
 18003 ;; Tracked objects:
 18004 ;;		On entry : 0/0
 18005 ;;		On exit  : 0/0
 18006 ;;		Unchanged: 0/0
 18007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18012 ;;Total ram usage:        0 bytes
 18013 ;; Hardware stack levels used:    1
 18014 ;; Hardware stack levels required when called:    6
 18015 ;; This function calls:
 18016 ;;		Nothing
 18017 ;; This function is called by:
 18018 ;;		_SYSTEM_Initialize
 18019 ;; This function uses a non-reentrant model
 18020 ;;
 18021                           
 18022                           
 18023                           ;psect for function _PIN_MANAGER_Initialize
 18024  0CF0                     _PIN_MANAGER_Initialize:	
 18025  0CF0                     l6469:	
 18026                           ;incstack = 0
 18027                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 18028                           
 18029                           
 18030                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 18031  0CF0  0020               	movlb	0	; select bank0
 18032  0CF1  019A               	clrf	26	;volatile
 18033                           
 18034                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 18035  0CF2  0199               	clrf	25	;volatile
 18036                           
 18037                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 18038  0CF3  0196               	clrf	22	;volatile
 18039                           
 18040                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 18041  0CF4  0197               	clrf	23	;volatile
 18042                           
 18043                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 18044  0CF5  0198               	clrf	24	;volatile
 18045  0CF6                     l6471:	
 18046                           
 18047                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 18048  0CF6  3007               	movlw	7
 18049  0CF7  0095               	movwf	21	;volatile
 18050  0CF8                     l6473:	
 18051                           
 18052                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 18053  0CF8  300F               	movlw	15
 18054  0CF9  0091               	movwf	17	;volatile
 18055  0CFA                     l6475:	
 18056                           
 18057                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 18058  0CFA  30FF               	movlw	255
 18059  0CFB  0092               	movwf	18	;volatile
 18060  0CFC                     l6477:	
 18061                           
 18062                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
 18063  0CFC  30BF               	movlw	191
 18064  0CFD  0093               	movwf	19	;volatile
 18065  0CFE                     l6479:	
 18066                           
 18067                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 18068  0CFE  30FF               	movlw	255
 18069  0CFF  0094               	movwf	20	;volatile
 18070  0D00                     l6481:	
 18071                           
 18072                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 18073  0D00  30FF               	movlw	255
 18074  0D01  003E               	movlb	30	; select bank30
 18075  0D02  00D9               	movwf	89	;volatile
 18076  0D03                     l6483:	
 18077                           
 18078                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x47;
 18079  0D03  3047               	movlw	71
 18080  0D04  00CE               	movwf	78	;volatile
 18081  0D05                     l6485:	
 18082                           
 18083                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 18084  0D05  30EF               	movlw	239
 18085  0D06  00C3               	movwf	67	;volatile
 18086  0D07                     l6487:	
 18087                           
 18088                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 18089  0D07  3007               	movlw	7
 18090  0D08  00E4               	movwf	100	;volatile
 18091  0D09                     l6489:	
 18092                           
 18093                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x0F;
 18094  0D09  300F               	movlw	15
 18095  0D0A  00B8               	movwf	56	;volatile
 18096                           
 18097                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 18098  0D0B  01DA               	clrf	90	;volatile
 18099                           
 18100                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 18101  0D0C  01E5               	clrf	101	;volatile
 18102                           
 18103                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 18104  0D0D  01C4               	clrf	68	;volatile
 18105                           
 18106                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 18107  0D0E  01B9               	clrf	57	;volatile
 18108                           
 18109                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 18110  0D0F  01CF               	clrf	79	;volatile
 18111                           
 18112                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 18113  0D10  01E6               	clrf	102	;volatile
 18114                           
 18115                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 18116  0D11  01BA               	clrf	58	;volatile
 18117                           
 18118                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 18119  0D12  01C5               	clrf	69	;volatile
 18120                           
 18121                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 18122  0D13  01D0               	clrf	80	;volatile
 18123                           
 18124                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 18125  0D14  01DB               	clrf	91	;volatile
 18126  0D15                     l6491:	
 18127                           
 18128                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 18129  0D15  30FF               	movlw	255
 18130  0D16  00BB               	movwf	59	;volatile
 18131  0D17                     l6493:	
 18132                           
 18133                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 18134  0D17  30FF               	movlw	255
 18135  0D18  00C6               	movwf	70	;volatile
 18136  0D19                     l6495:	
 18137                           
 18138                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 18139  0D19  30FF               	movlw	255
 18140  0D1A  00D1               	movwf	81	;volatile
 18141  0D1B                     l6497:	
 18142                           
 18143                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 18144  0D1B  30FF               	movlw	255
 18145  0D1C  00DC               	movwf	92	;volatile
 18146  0D1D                     l6499:	
 18147                           
 18148                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 18149  0D1D  3007               	movlw	7
 18150  0D1E  00E7               	movwf	103	;volatile
 18151  0D1F                     l6501:	
 18152                           
 18153                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 18154  0D1F  30FF               	movlw	255
 18155  0D20  00BC               	movwf	60	;volatile
 18156  0D21                     l6503:	
 18157                           
 18158                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 18159  0D21  30FF               	movlw	255
 18160  0D22  00C7               	movwf	71	;volatile
 18161  0D23                     l6505:	
 18162                           
 18163                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 18164  0D23  30FF               	movlw	255
 18165  0D24  00D2               	movwf	82	;volatile
 18166  0D25                     l6507:	
 18167                           
 18168                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 18169  0D25  30FF               	movlw	255
 18170  0D26  00DD               	movwf	93	;volatile
 18171  0D27                     l6509:	
 18172                           
 18173                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 18174  0D27  3007               	movlw	7
 18175  0D28  00E8               	movwf	104	;volatile
 18176  0D29                     l6511:	
 18177                           
 18178                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 18179  0D29  300C               	movlw	12
 18180  0D2A  003D               	movlb	29	; select bank29
 18181  0D2B  0090               	movwf	16	;volatile
 18182  0D2C                     l6513:	
 18183                           
 18184                           ;mcc_generated_files/pin_manager.c: 128:     RXPPS = 0x17;
 18185  0D2C  3017               	movlw	23
 18186  0D2D  00CB               	movwf	75	;volatile
 18187  0D2E                     l6515:	
 18188                           
 18189                           ;mcc_generated_files/pin_manager.c: 129:     SSP1CLKPPS = 0x13;
 18190  0D2E  3013               	movlw	19
 18191  0D2F  00C5               	movwf	69	;volatile
 18192  0D30                     l6517:	
 18193                           
 18194                           ;mcc_generated_files/pin_manager.c: 130:     RC3PPS = 0x14;
 18195  0D30  3014               	movlw	20
 18196  0D31  003E               	movlb	30	; select bank30
 18197  0D32  00A3               	movwf	35	;volatile
 18198  0D33                     l6519:	
 18199                           
 18200                           ;mcc_generated_files/pin_manager.c: 131:     RC4PPS = 0x15;
 18201  0D33  3015               	movlw	21
 18202  0D34  00A4               	movwf	36	;volatile
 18203  0D35                     l6521:	
 18204                           
 18205                           ;mcc_generated_files/pin_manager.c: 132:     RC6PPS = 0x10;
 18206  0D35  3010               	movlw	16
 18207  0D36  00A6               	movwf	38	;volatile
 18208  0D37                     l6523:	
 18209                           
 18210                           ;mcc_generated_files/pin_manager.c: 133:     SSP1DATPPS = 0x14;
 18211  0D37  3014               	movlw	20
 18212  0D38  003D               	movlb	29	; select bank29
 18213  0D39  00C6               	movwf	70	;volatile
 18214  0D3A                     l275:	
 18215  0D3A  0008               	return
 18216  0D3B                     __end_of_PIN_MANAGER_Initialize:	
 18217                           
 18218                           	psect	text57
 18219  1394                     __ptext57:	
 18220 ;; *************** function _OSCILLATOR_Initialize *****************
 18221 ;; Defined at:
 18222 ;;		line 63 in file "mcc_generated_files/mcc.c"
 18223 ;; Parameters:    Size  Location     Type
 18224 ;;		None
 18225 ;; Auto vars:     Size  Location     Type
 18226 ;;		None
 18227 ;; Return value:  Size  Location     Type
 18228 ;;                  1    wreg      void 
 18229 ;; Registers used:
 18230 ;;		wreg, status,2
 18231 ;; Tracked objects:
 18232 ;;		On entry : 0/0
 18233 ;;		On exit  : 0/0
 18234 ;;		Unchanged: 0/0
 18235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18240 ;;Total ram usage:        0 bytes
 18241 ;; Hardware stack levels used:    1
 18242 ;; Hardware stack levels required when called:    6
 18243 ;; This function calls:
 18244 ;;		Nothing
 18245 ;; This function is called by:
 18246 ;;		_SYSTEM_Initialize
 18247 ;; This function uses a non-reentrant model
 18248 ;;
 18249                           
 18250                           
 18251                           ;psect for function _OSCILLATOR_Initialize
 18252  1394                     _OSCILLATOR_Initialize:	
 18253  1394                     l6525:	
 18254                           ;incstack = 0
 18255                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 18256                           
 18257                           
 18258                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 18259  1394  3062               	movlw	98
 18260  1395  0031               	movlb	17	; select bank17
 18261  1396  008D               	movwf	13	;volatile
 18262  1397                     l6527:	
 18263                           
 18264                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 18265  1397  018F               	clrf	15	;volatile
 18266  1398                     l6529:	
 18267                           
 18268                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 18269  1398  0191               	clrf	17	;volatile
 18270                           
 18271                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 18272  1399  3002               	movlw	2
 18273  139A  0093               	movwf	19	;volatile
 18274  139B                     l6531:	
 18275                           
 18276                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 18277  139B  0192               	clrf	18	;volatile
 18278  139C                     l185:	
 18279  139C  0008               	return
 18280  139D                     __end_of_OSCILLATOR_Initialize:	
 18281                           
 18282                           	psect	text58
 18283  13EC                     __ptext58:	
 18284 ;; *************** function _EXT_INT_Initialize *****************
 18285 ;; Defined at:
 18286 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 18287 ;; Parameters:    Size  Location     Type
 18288 ;;		None
 18289 ;; Auto vars:     Size  Location     Type
 18290 ;;		None
 18291 ;; Return value:  Size  Location     Type
 18292 ;;                  1    wreg      void 
 18293 ;; Registers used:
 18294 ;;		wreg, status,2, status,0, pclath, cstack
 18295 ;; Tracked objects:
 18296 ;;		On entry : 0/0
 18297 ;;		On exit  : 0/0
 18298 ;;		Unchanged: 0/0
 18299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18304 ;;Total ram usage:        0 bytes
 18305 ;; Hardware stack levels used:    1
 18306 ;; Hardware stack levels required when called:    7
 18307 ;; This function calls:
 18308 ;;		_INT_SetInterruptHandler
 18309 ;; This function is called by:
 18310 ;;		_SYSTEM_Initialize
 18311 ;; This function uses a non-reentrant model
 18312 ;;
 18313                           
 18314                           
 18315                           ;psect for function _EXT_INT_Initialize
 18316  13EC                     _EXT_INT_Initialize:	
 18317  13EC                     l6461:	
 18318                           ;incstack = 0
 18319                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18320                           
 18321                           
 18322                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 18323  13EC  002E               	movlb	14	; select bank14
 18324  13ED  100C               	bcf	12,0	;volatile
 18325                           
 18326                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 18327  13EE  140B               	bsf	11,0	;volatile
 18328  13EF                     l6463:	
 18329                           
 18330                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 18331  13EF  3002               	movlw	low _INT_DefaultInterruptHandler
 18332  13F0  00F2               	movwf	INT_SetInterruptHandler@InterruptHandler
 18333  13F1  3000               	movlw	high _INT_DefaultInterruptHandler
 18334  13F2  00F3               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 18335  13F3  3193  2322  3193   	fcall	_INT_SetInterruptHandler
 18336  13F6                     l6465:	
 18337                           
 18338                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 18339  13F6  002E               	movlb	14	; select bank14
 18340  13F7  1416               	bsf	22,0	;volatile
 18341  13F8                     l90:	
 18342  13F8  0008               	return
 18343  13F9                     __end_of_EXT_INT_Initialize:	
 18344                           
 18345                           	psect	text59
 18346  1322                     __ptext59:	
 18347 ;; *************** function _INT_SetInterruptHandler *****************
 18348 ;; Defined at:
 18349 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 18350 ;; Parameters:    Size  Location     Type
 18351 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
 18352 ;;		 -> Switch1(1), INT_DefaultInterruptHandler(1), 
 18353 ;; Auto vars:     Size  Location     Type
 18354 ;;		None
 18355 ;; Return value:  Size  Location     Type
 18356 ;;                  1    wreg      void 
 18357 ;; Registers used:
 18358 ;;		wreg
 18359 ;; Tracked objects:
 18360 ;;		On entry : 0/0
 18361 ;;		On exit  : 0/0
 18362 ;;		Unchanged: 0/0
 18363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18368 ;;Total ram usage:        2 bytes
 18369 ;; Hardware stack levels used:    1
 18370 ;; Hardware stack levels required when called:    6
 18371 ;; This function calls:
 18372 ;;		Nothing
 18373 ;; This function is called by:
 18374 ;;		_EXT_INT_Initialize
 18375 ;;		_main
 18376 ;; This function uses a non-reentrant model
 18377 ;;
 18378                           
 18379                           
 18380                           ;psect for function _INT_SetInterruptHandler
 18381  1322                     _INT_SetInterruptHandler:	
 18382  1322                     l6189:	
 18383                           ;incstack = 0
 18384                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 18385                           
 18386                           
 18387                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 18388  1322  0873               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 18389  1323  0021               	movlb	1	; select bank1
 18390  1324  00EA               	movwf	(_INT_InterruptHandler+1)^(0+128)
 18391  1325  0872               	movf	INT_SetInterruptHandler@InterruptHandler,w
 18392  1326  00E9               	movwf	_INT_InterruptHandler^(0+128)
 18393  1327                     l84:	
 18394  1327  0008               	return
 18395  1328                     __end_of_INT_SetInterruptHandler:	
 18396                           
 18397                           	psect	text60
 18398  0A7C                     __ptext60:	
 18399 ;; *************** function _EUSART_Initialize *****************
 18400 ;; Defined at:
 18401 ;;		line 88 in file "mcc_generated_files/eusart.c"
 18402 ;; Parameters:    Size  Location     Type
 18403 ;;		None
 18404 ;; Auto vars:     Size  Location     Type
 18405 ;;		None
 18406 ;; Return value:  Size  Location     Type
 18407 ;;                  1    wreg      void 
 18408 ;; Registers used:
 18409 ;;		wreg, status,2, status,0, pclath, cstack
 18410 ;; Tracked objects:
 18411 ;;		On entry : 0/0
 18412 ;;		On exit  : 0/0
 18413 ;;		Unchanged: 0/0
 18414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18417 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18418 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18419 ;;Total ram usage:        1 bytes
 18420 ;; Hardware stack levels used:    1
 18421 ;; Hardware stack levels required when called:    7
 18422 ;; This function calls:
 18423 ;;		_EUSART_SetErrorHandler
 18424 ;;		_EUSART_SetFramingErrorHandler
 18425 ;;		_EUSART_SetOverrunErrorHandler
 18426 ;;		_EUSART_SetRxInterruptHandler
 18427 ;;		_EUSART_SetTxInterruptHandler
 18428 ;; This function is called by:
 18429 ;;		_SYSTEM_Initialize
 18430 ;; This function uses a non-reentrant model
 18431 ;;
 18432                           
 18433                           
 18434                           ;psect for function _EUSART_Initialize
 18435  0A7C                     _EUSART_Initialize:	
 18436  0A7C                     l6555:	
 18437                           ;incstack = 0
 18438                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18439                           
 18440                           
 18441                           ;mcc_generated_files/eusart.c: 91:     PIE3bits.RCIE = 0;
 18442  0A7C  002E               	movlb	14	; select bank14
 18443  0A7D  1299               	bcf	25,5	;volatile
 18444  0A7E                     l6557:	
 18445                           
 18446                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 18447  0A7E  30CD               	movlw	low _EUSART_Receive_ISR
 18448  0A7F  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 18449  0A80  3009               	movlw	high _EUSART_Receive_ISR
 18450  0A81  00F3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 18451  0A82  3193  2316  318A   	fcall	_EUSART_SetRxInterruptHandler
 18452  0A85                     l6559:	
 18453                           
 18454                           ;mcc_generated_files/eusart.c: 93:     PIE3bits.TXIE = 0;
 18455  0A85  002E               	movlb	14	; select bank14
 18456  0A86  1219               	bcf	25,4	;volatile
 18457                           
 18458                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
 18459  0A87  3098               	movlw	low _EUSART_Transmit_ISR
 18460  0A88  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 18461  0A89  3016               	movlw	high _EUSART_Transmit_ISR
 18462  0A8A  00F3               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 18463  0A8B  3193  231C  318A   	fcall	_EUSART_SetTxInterruptHandler
 18464  0A8E                     l6561:	
 18465                           
 18466                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x08;
 18467  0A8E  3008               	movlw	8
 18468  0A8F  0022               	movlb	2	; select bank2
 18469  0A90  009F               	movwf	31	;volatile
 18470  0A91                     l6563:	
 18471                           
 18472                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x90;
 18473  0A91  3090               	movlw	144
 18474  0A92  009D               	movwf	29	;volatile
 18475  0A93                     l6565:	
 18476                           
 18477                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
 18478  0A93  3024               	movlw	36
 18479  0A94  009E               	movwf	30	;volatile
 18480  0A95                     l6567:	
 18481                           
 18482                           ;mcc_generated_files/eusart.c: 107:     SP1BRGL = 0x19;
 18483  0A95  3019               	movlw	25
 18484  0A96  009B               	movwf	27	;volatile
 18485  0A97                     l6569:	
 18486                           
 18487                           ;mcc_generated_files/eusart.c: 110:     SP1BRGH = 0x00;
 18488  0A97  019C               	clrf	28	;volatile
 18489  0A98                     l6571:	
 18490                           
 18491                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
 18492  0A98  30FF               	movlw	low _EUSART_DefaultFramingErrorHandler
 18493  0A99  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 18494  0A9A  3007               	movlw	high _EUSART_DefaultFramingErrorHandler
 18495  0A9B  00F3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 18496  0A9C  3193  230A  318A   	fcall	_EUSART_SetFramingErrorHandler
 18497  0A9F                     l6573:	
 18498                           
 18499                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
 18500  0A9F  30EE               	movlw	low _EUSART_DefaultOverrunErrorHandler
 18501  0AA0  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 18502  0AA1  3012               	movlw	high _EUSART_DefaultOverrunErrorHandler
 18503  0AA2  00F3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 18504  0AA3  3193  2310  318A   	fcall	_EUSART_SetOverrunErrorHandler
 18505  0AA6                     l6575:	
 18506                           
 18507                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
 18508  0AA6  30EA               	movlw	low _EUSART_DefaultErrorHandler
 18509  0AA7  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler
 18510  0AA8  3012               	movlw	high _EUSART_DefaultErrorHandler
 18511  0AA9  00F3               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 18512  0AAA  3193  2304  318A   	fcall	_EUSART_SetErrorHandler
 18513                           
 18514                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
 18515  0AAD  0021               	movlb	1	; select bank1
 18516  0AAE  01DB               	clrf	_eusartRxLastError^(0+128)	;volatile
 18517                           
 18518                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
 18519  0AAF  01DE               	clrf	_eusartTxHead^(0+128)	;volatile
 18520                           
 18521                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
 18522  0AB0  01DD               	clrf	_eusartTxTail^(0+128)	;volatile
 18523  0AB1                     l6577:	
 18524                           
 18525                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
 18526  0AB1  3008               	movlw	8
 18527  0AB2  00F4               	movwf	??_EUSART_Initialize
 18528  0AB3  0874               	movf	??_EUSART_Initialize,w
 18529  0AB4  00EF               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
 18530  0AB5                     l6579:	
 18531                           
 18532                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
 18533  0AB5  01FB               	clrf	_eusartRxHead	;volatile
 18534  0AB6                     l6581:	
 18535                           
 18536                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
 18537  0AB6  0020               	movlb	0	; select bank0
 18538  0AB7  01EF               	clrf	_eusartRxTail	;volatile
 18539  0AB8                     l6583:	
 18540                           
 18541                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
 18542  0AB8  0021               	movlb	1	; select bank1
 18543  0AB9  01DC               	clrf	_eusartRxCount^(0+128)	;volatile
 18544  0ABA                     l6585:	
 18545                           
 18546                           ;mcc_generated_files/eusart.c: 129:     PIE3bits.RCIE = 1;
 18547  0ABA  002E               	movlb	14	; select bank14
 18548  0ABB  1699               	bsf	25,5	;volatile
 18549  0ABC                     l786:	
 18550  0ABC  0008               	return
 18551  0ABD                     __end_of_EUSART_Initialize:	
 18552                           
 18553                           	psect	text61
 18554  131C                     __ptext61:	
 18555 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 18556 ;; Defined at:
 18557 ;;		line 285 in file "mcc_generated_files/eusart.c"
 18558 ;; Parameters:    Size  Location     Type
 18559 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
 18560 ;;		 -> EUSART_Transmit_ISR(1), 
 18561 ;; Auto vars:     Size  Location     Type
 18562 ;;		None
 18563 ;; Return value:  Size  Location     Type
 18564 ;;                  1    wreg      void 
 18565 ;; Registers used:
 18566 ;;		wreg
 18567 ;; Tracked objects:
 18568 ;;		On entry : 0/0
 18569 ;;		On exit  : 0/0
 18570 ;;		Unchanged: 0/0
 18571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18575 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18576 ;;Total ram usage:        2 bytes
 18577 ;; Hardware stack levels used:    1
 18578 ;; Hardware stack levels required when called:    6
 18579 ;; This function calls:
 18580 ;;		Nothing
 18581 ;; This function is called by:
 18582 ;;		_EUSART_Initialize
 18583 ;; This function uses a non-reentrant model
 18584 ;;
 18585                           
 18586                           
 18587                           ;psect for function _EUSART_SetTxInterruptHandler
 18588  131C                     _EUSART_SetTxInterruptHandler:	
 18589  131C                     l6193:	
 18590                           ;incstack = 0
 18591                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 18592                           
 18593                           
 18594                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
 18595  131C  0873               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 18596  131D  0021               	movlb	1	; select bank1
 18597  131E  00E8               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
 18598  131F  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 18599  1320  00E7               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
 18600  1321                     l858:	
 18601  1321  0008               	return
 18602  1322                     __end_of_EUSART_SetTxInterruptHandler:	
 18603                           
 18604                           	psect	text62
 18605  1316                     __ptext62:	
 18606 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 18607 ;; Defined at:
 18608 ;;		line 289 in file "mcc_generated_files/eusart.c"
 18609 ;; Parameters:    Size  Location     Type
 18610 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
 18611 ;;		 -> countMsg(1), EUSART_Receive_ISR(1), 
 18612 ;; Auto vars:     Size  Location     Type
 18613 ;;		None
 18614 ;; Return value:  Size  Location     Type
 18615 ;;                  1    wreg      void 
 18616 ;; Registers used:
 18617 ;;		wreg
 18618 ;; Tracked objects:
 18619 ;;		On entry : 0/0
 18620 ;;		On exit  : 0/0
 18621 ;;		Unchanged: 0/0
 18622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18626 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18627 ;;Total ram usage:        2 bytes
 18628 ;; Hardware stack levels used:    1
 18629 ;; Hardware stack levels required when called:    6
 18630 ;; This function calls:
 18631 ;;		Nothing
 18632 ;; This function is called by:
 18633 ;;		_EUSART_Initialize
 18634 ;;		_main
 18635 ;; This function uses a non-reentrant model
 18636 ;;
 18637                           
 18638                           
 18639                           ;psect for function _EUSART_SetRxInterruptHandler
 18640  1316                     _EUSART_SetRxInterruptHandler:	
 18641  1316                     l6191:	
 18642                           ;incstack = 0
 18643                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 18644                           
 18645                           
 18646                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
 18647  1316  0873               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 18648  1317  0021               	movlb	1	; select bank1
 18649  1318  00E6               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
 18650  1319  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 18651  131A  00E5               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
 18652  131B                     l861:	
 18653  131B  0008               	return
 18654  131C                     __end_of_EUSART_SetRxInterruptHandler:	
 18655                           
 18656                           	psect	text63
 18657  1310                     __ptext63:	
 18658 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 18659 ;; Defined at:
 18660 ;;		line 277 in file "mcc_generated_files/eusart.c"
 18661 ;; Parameters:    Size  Location     Type
 18662 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
 18663 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 18664 ;; Auto vars:     Size  Location     Type
 18665 ;;		None
 18666 ;; Return value:  Size  Location     Type
 18667 ;;                  1    wreg      void 
 18668 ;; Registers used:
 18669 ;;		wreg
 18670 ;; Tracked objects:
 18671 ;;		On entry : 0/0
 18672 ;;		On exit  : 0/0
 18673 ;;		Unchanged: 0/0
 18674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18675 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18679 ;;Total ram usage:        2 bytes
 18680 ;; Hardware stack levels used:    1
 18681 ;; Hardware stack levels required when called:    6
 18682 ;; This function calls:
 18683 ;;		Nothing
 18684 ;; This function is called by:
 18685 ;;		_EUSART_Initialize
 18686 ;; This function uses a non-reentrant model
 18687 ;;
 18688                           
 18689                           
 18690                           ;psect for function _EUSART_SetOverrunErrorHandler
 18691  1310                     _EUSART_SetOverrunErrorHandler:	
 18692  1310                     l6197:	
 18693                           ;incstack = 0
 18694                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 18695                           
 18696                           
 18697                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
 18698  1310  0873               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 18699  1311  0021               	movlb	1	; select bank1
 18700  1312  00E2               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
 18701  1313  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 18702  1314  00E1               	movwf	_EUSART_OverrunErrorHandler^(0+128)
 18703  1315                     l852:	
 18704  1315  0008               	return
 18705  1316                     __end_of_EUSART_SetOverrunErrorHandler:	
 18706                           
 18707                           	psect	text64
 18708  130A                     __ptext64:	
 18709 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 18710 ;; Defined at:
 18711 ;;		line 273 in file "mcc_generated_files/eusart.c"
 18712 ;; Parameters:    Size  Location     Type
 18713 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
 18714 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 18715 ;; Auto vars:     Size  Location     Type
 18716 ;;		None
 18717 ;; Return value:  Size  Location     Type
 18718 ;;                  1    wreg      void 
 18719 ;; Registers used:
 18720 ;;		wreg
 18721 ;; Tracked objects:
 18722 ;;		On entry : 0/0
 18723 ;;		On exit  : 0/0
 18724 ;;		Unchanged: 0/0
 18725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18729 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18730 ;;Total ram usage:        2 bytes
 18731 ;; Hardware stack levels used:    1
 18732 ;; Hardware stack levels required when called:    6
 18733 ;; This function calls:
 18734 ;;		Nothing
 18735 ;; This function is called by:
 18736 ;;		_EUSART_Initialize
 18737 ;; This function uses a non-reentrant model
 18738 ;;
 18739                           
 18740                           
 18741                           ;psect for function _EUSART_SetFramingErrorHandler
 18742  130A                     _EUSART_SetFramingErrorHandler:	
 18743  130A                     l6195:	
 18744                           ;incstack = 0
 18745                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 18746                           
 18747                           
 18748                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
 18749  130A  0873               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 18750  130B  0021               	movlb	1	; select bank1
 18751  130C  00E4               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
 18752  130D  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 18753  130E  00E3               	movwf	_EUSART_FramingErrorHandler^(0+128)
 18754  130F                     l849:	
 18755  130F  0008               	return
 18756  1310                     __end_of_EUSART_SetFramingErrorHandler:	
 18757                           
 18758                           	psect	text65
 18759  1304                     __ptext65:	
 18760 ;; *************** function _EUSART_SetErrorHandler *****************
 18761 ;; Defined at:
 18762 ;;		line 281 in file "mcc_generated_files/eusart.c"
 18763 ;; Parameters:    Size  Location     Type
 18764 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
 18765 ;;		 -> EUSART_DefaultErrorHandler(1), 
 18766 ;; Auto vars:     Size  Location     Type
 18767 ;;		None
 18768 ;; Return value:  Size  Location     Type
 18769 ;;                  1    wreg      void 
 18770 ;; Registers used:
 18771 ;;		wreg
 18772 ;; Tracked objects:
 18773 ;;		On entry : 0/0
 18774 ;;		On exit  : 0/0
 18775 ;;		Unchanged: 0/0
 18776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18781 ;;Total ram usage:        2 bytes
 18782 ;; Hardware stack levels used:    1
 18783 ;; Hardware stack levels required when called:    6
 18784 ;; This function calls:
 18785 ;;		Nothing
 18786 ;; This function is called by:
 18787 ;;		_EUSART_Initialize
 18788 ;; This function uses a non-reentrant model
 18789 ;;
 18790                           
 18791                           
 18792                           ;psect for function _EUSART_SetErrorHandler
 18793  1304                     _EUSART_SetErrorHandler:	
 18794  1304                     l6199:	
 18795                           ;incstack = 0
 18796                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 18797                           
 18798                           
 18799                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
 18800  1304  0873               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 18801  1305  0021               	movlb	1	; select bank1
 18802  1306  00E0               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
 18803  1307  0872               	movf	EUSART_SetErrorHandler@interruptHandler,w
 18804  1308  00DF               	movwf	_EUSART_ErrorHandler^(0+128)
 18805  1309                     l855:	
 18806  1309  0008               	return
 18807  130A                     __end_of_EUSART_SetErrorHandler:	
 18808                           
 18809                           	psect	text66
 18810  14F9                     __ptext66:	
 18811 ;; *************** function _ADCC_Initialize *****************
 18812 ;; Defined at:
 18813 ;;		line 63 in file "mcc_generated_files/adcc.c"
 18814 ;; Parameters:    Size  Location     Type
 18815 ;;		None
 18816 ;; Auto vars:     Size  Location     Type
 18817 ;;		None
 18818 ;; Return value:  Size  Location     Type
 18819 ;;                  1    wreg      void 
 18820 ;; Registers used:
 18821 ;;		wreg, status,2
 18822 ;; Tracked objects:
 18823 ;;		On entry : 0/0
 18824 ;;		On exit  : 0/0
 18825 ;;		Unchanged: 0/0
 18826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18831 ;;Total ram usage:        0 bytes
 18832 ;; Hardware stack levels used:    1
 18833 ;; Hardware stack levels required when called:    6
 18834 ;; This function calls:
 18835 ;;		Nothing
 18836 ;; This function is called by:
 18837 ;;		_SYSTEM_Initialize
 18838 ;; This function uses a non-reentrant model
 18839 ;;
 18840                           
 18841                           
 18842                           ;psect for function _ADCC_Initialize
 18843  14F9                     _ADCC_Initialize:	
 18844  14F9                     l6537:	
 18845                           ;incstack = 0
 18846                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 18847                           
 18848                           
 18849                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 18850  14F9  0022               	movlb	2	; select bank2
 18851  14FA  018E               	clrf	14	;volatile
 18852                           
 18853                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 18854  14FB  018F               	clrf	15	;volatile
 18855                           
 18856                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 18857  14FC  0190               	clrf	16	;volatile
 18858                           
 18859                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 18860  14FD  0191               	clrf	17	;volatile
 18861                           
 18862                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 18863  14FE  0192               	clrf	18	;volatile
 18864                           
 18865                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 18866  14FF  0193               	clrf	19	;volatile
 18867                           
 18868                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 18869  1500  018D               	clrf	13	;volatile
 18870                           
 18871                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 18872  1501  0021               	movlb	1	; select bank1
 18873  1502  019E               	clrf	30	;volatile
 18874                           
 18875                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 18876  1503  019B               	clrf	27	;volatile
 18877                           
 18878                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 18879  1504  0194               	clrf	20	;volatile
 18880                           
 18881                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 18882  1505  0195               	clrf	21	;volatile
 18883                           
 18884                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 18885  1506  0196               	clrf	22	;volatile
 18886                           
 18887                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 18888  1507  0197               	clrf	23	;volatile
 18889                           
 18890                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 18891  1508  019A               	clrf	26	;volatile
 18892                           
 18893                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 18894  1509  0199               	clrf	25	;volatile
 18895                           
 18896                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 18897  150A  0198               	clrf	24	;volatile
 18898  150B                     l6539:	
 18899                           
 18900                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x80;
 18901  150B  3080               	movlw	128
 18902  150C  0093               	movwf	19	;volatile
 18903  150D                     l6541:	
 18904                           
 18905                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 18906  150D  019D               	clrf	29	;volatile
 18907  150E                     l357:	
 18908  150E  0008               	return
 18909  150F                     __end_of_ADCC_Initialize:	
 18910                           
 18911                           	psect	text67
 18912  0329                     __ptext67:	
 18913 ;; *************** function _ReadTemp *****************
 18914 ;; Defined at:
 18915 ;;		line 15 in file "utils.c"
 18916 ;; Parameters:    Size  Location     Type
 18917 ;;		None
 18918 ;; Auto vars:     Size  Location     Type
 18919 ;;  value           1    5[COMMON] unsigned char 
 18920 ;; Return value:  Size  Location     Type
 18921 ;;                  1    wreg      unsigned char 
 18922 ;; Registers used:
 18923 ;;		wreg, status,2, status,0, pclath, cstack
 18924 ;; Tracked objects:
 18925 ;;		On entry : 0/0
 18926 ;;		On exit  : 0/0
 18927 ;;		Unchanged: 0/0
 18928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18930 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18931 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18932 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18933 ;;Total ram usage:        2 bytes
 18934 ;; Hardware stack levels used:    1
 18935 ;; Hardware stack levels required when called:    7
 18936 ;; This function calls:
 18937 ;;		_ReadI2C
 18938 ;;		_WriteI2C
 18939 ;; This function is called by:
 18940 ;;		_main
 18941 ;; This function uses a non-reentrant model
 18942 ;;
 18943                           
 18944                           
 18945                           ;psect for function _ReadTemp
 18946  0329                     _ReadTemp:	
 18947  0329                     l1278:	
 18948                           ;incstack = 0
 18949                           ; Regs used in _ReadTemp: [wreg+status,2+status,0+pclath+cstack]
 18950                           ;utils.c: 16:  unsigned char value;;utils.c: 18:     do{
 18951                           
 18952  0329                     l6897:	
 18953                           ;utils.c: 19:         while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 18954                           
 18955  0329  0023               	movlb	3	; select bank3
 18956  032A  0C0F               	rrf	15,w	;volatile
 18957  032B  0C89               	rrf	9,f
 18958  032C  3901               	andlw	1
 18959  032D  00F4               	movwf	??_ReadTemp
 18960  032E  0811               	movf	17,w	;volatile
 18961  032F  391F               	andlw	31
 18962  0330  0474               	iorwf	??_ReadTemp,w
 18963  0331  1D03               	btfss	3,2
 18964  0332  2B34               	goto	u5781
 18965  0333  2B35               	goto	u5780
 18966  0334                     u5781:	
 18967  0334  2B29               	goto	l6897
 18968  0335                     u5780:	
 18969  0335                     l1281:	
 18970                           
 18971                           ;utils.c: 20:         SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN)
 18972  0335  1411               	bsf	17,0	;volatile
 18973  0336                     l1282:	
 18974                           ;utils.c: 21:                 ; while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 18975                           
 18976                           
 18977                           ;utils.c: 20:         SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN)
 18978  0336  1811               	btfsc	17,0	;volatile
 18979  0337  2B39               	goto	u5791
 18980  0338  2B3A               	goto	u5790
 18981  0339                     u5791:	
 18982  0339  2B36               	goto	l1282
 18983  033A                     u5790:	
 18984  033A                     l6899:	
 18985  033A  0C0F               	rrf	15,w	;volatile
 18986  033B  0C89               	rrf	9,f
 18987  033C  3901               	andlw	1
 18988  033D  00F4               	movwf	??_ReadTemp
 18989  033E  0811               	movf	17,w	;volatile
 18990  033F  391F               	andlw	31
 18991  0340  0474               	iorwf	??_ReadTemp,w
 18992  0341  1D03               	btfss	3,2
 18993  0342  2B44               	goto	u5801
 18994  0343  2B45               	goto	u5800
 18995  0344                     u5801:	
 18996  0344  2B3A               	goto	l6899
 18997  0345                     u5800:	
 18998  0345                     l6901:	
 18999                           
 19000                           ;utils.c: 23:         WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_
      +                          W));
 19001  0345  309A               	movlw	154
 19002  0346  318C  24A5  3183   	fcall	_WriteI2C
 19003  0349                     l6903:	
 19004  0349  0023               	movlb	3	; select bank3
 19005  034A  0C0F               	rrf	15,w	;volatile
 19006  034B  0C89               	rrf	9,f
 19007  034C  3901               	andlw	1
 19008  034D  00F4               	movwf	??_ReadTemp
 19009  034E  0811               	movf	17,w	;volatile
 19010  034F  391F               	andlw	31
 19011  0350  0474               	iorwf	??_ReadTemp,w
 19012  0351  1D03               	btfss	3,2
 19013  0352  2B54               	goto	u5811
 19014  0353  2B55               	goto	u5810
 19015  0354                     u5811:	
 19016  0354  2B49               	goto	l6903
 19017  0355                     u5810:	
 19018  0355                     l6905:	
 19019                           
 19020                           ;utils.c: 24:         WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19021  0355  3001               	movlw	1
 19022  0356  318C  24A5  3183   	fcall	_WriteI2C
 19023  0359                     l6907:	
 19024  0359  0023               	movlb	3	; select bank3
 19025  035A  0C0F               	rrf	15,w	;volatile
 19026  035B  0C89               	rrf	9,f
 19027  035C  3901               	andlw	1
 19028  035D  00F4               	movwf	??_ReadTemp
 19029  035E  0811               	movf	17,w	;volatile
 19030  035F  391F               	andlw	31
 19031  0360  0474               	iorwf	??_ReadTemp,w
 19032  0361  1D03               	btfss	3,2
 19033  0362  2B64               	goto	u5821
 19034  0363  2B65               	goto	u5820
 19035  0364                     u5821:	
 19036  0364  2B59               	goto	l6907
 19037  0365                     u5820:	
 19038  0365                     l1293:	
 19039                           
 19040                           ;utils.c: 25:         SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN)
 19041  0365  1491               	bsf	17,1	;volatile
 19042  0366                     l1294:	
 19043                           ;utils.c: 26:                 ; while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19044                           
 19045                           
 19046                           ;utils.c: 25:         SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN)
 19047  0366  1891               	btfsc	17,1	;volatile
 19048  0367  2B69               	goto	u5831
 19049  0368  2B6A               	goto	u5830
 19050  0369                     u5831:	
 19051  0369  2B66               	goto	l1294
 19052  036A                     u5830:	
 19053  036A                     l6909:	
 19054  036A  0C0F               	rrf	15,w	;volatile
 19055  036B  0C89               	rrf	9,f
 19056  036C  3901               	andlw	1
 19057  036D  00F4               	movwf	??_ReadTemp
 19058  036E  0811               	movf	17,w	;volatile
 19059  036F  391F               	andlw	31
 19060  0370  0474               	iorwf	??_ReadTemp,w
 19061  0371  1D03               	btfss	3,2
 19062  0372  2B74               	goto	u5841
 19063  0373  2B75               	goto	u5840
 19064  0374                     u5841:	
 19065  0374  2B6A               	goto	l6909
 19066  0375                     u5840:	
 19067  0375                     l6911:	
 19068                           
 19069                           ;utils.c: 27:         WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_
      +                          W));
 19070  0375  309B               	movlw	155
 19071  0376  318C  24A5  3183   	fcall	_WriteI2C
 19072  0379                     l6913:	
 19073  0379  0023               	movlb	3	; select bank3
 19074  037A  0C0F               	rrf	15,w	;volatile
 19075  037B  0C89               	rrf	9,f
 19076  037C  3901               	andlw	1
 19077  037D  00F4               	movwf	??_ReadTemp
 19078  037E  0811               	movf	17,w	;volatile
 19079  037F  391F               	andlw	31
 19080  0380  0474               	iorwf	??_ReadTemp,w
 19081  0381  1D03               	btfss	3,2
 19082  0382  2B84               	goto	u5851
 19083  0383  2B85               	goto	u5850
 19084  0384                     u5851:	
 19085  0384  2B79               	goto	l6913
 19086  0385                     u5850:	
 19087  0385                     l6915:	
 19088                           
 19089                           ;utils.c: 28:         value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19090  0385  3195  256F  3183   	fcall	_ReadI2C
 19091  0388  00F4               	movwf	??_ReadTemp
 19092  0389  0874               	movf	??_ReadTemp,w
 19093  038A  00F5               	movwf	ReadTemp@value
 19094  038B                     l6917:	
 19095  038B  0023               	movlb	3	; select bank3
 19096  038C  0C0F               	rrf	15,w	;volatile
 19097  038D  0C89               	rrf	9,f
 19098  038E  3901               	andlw	1
 19099  038F  00F4               	movwf	??_ReadTemp
 19100  0390  0811               	movf	17,w	;volatile
 19101  0391  391F               	andlw	31
 19102  0392  0474               	iorwf	??_ReadTemp,w
 19103  0393  1D03               	btfss	3,2
 19104  0394  2B96               	goto	u5861
 19105  0395  2B97               	goto	u5860
 19106  0396                     u5861:	
 19107  0396  2B8B               	goto	l6917
 19108  0397                     u5860:	
 19109  0397                     l1305:	
 19110                           
 19111                           ;utils.c: 29:         SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN
      +                          )
 19112  0397  1691               	bsf	17,5	;volatile
 19113  0398  1611               	bsf	17,4	;volatile
 19114  0399                     l1306:	
 19115                           ;utils.c: 30:                 ; while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19116                           
 19117                           
 19118                           ;utils.c: 29:         SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN
      +                          )
 19119  0399  1A11               	btfsc	17,4	;volatile
 19120  039A  2B9C               	goto	u5871
 19121  039B  2B9D               	goto	u5870
 19122  039C                     u5871:	
 19123  039C  2B99               	goto	l1306
 19124  039D                     u5870:	
 19125  039D                     l6919:	
 19126  039D  0C0F               	rrf	15,w	;volatile
 19127  039E  0C89               	rrf	9,f
 19128  039F  3901               	andlw	1
 19129  03A0  00F4               	movwf	??_ReadTemp
 19130  03A1  0811               	movf	17,w	;volatile
 19131  03A2  391F               	andlw	31
 19132  03A3  0474               	iorwf	??_ReadTemp,w
 19133  03A4  1D03               	btfss	3,2
 19134  03A5  2BA7               	goto	u5881
 19135  03A6  2BA8               	goto	u5880
 19136  03A7                     u5881:	
 19137  03A7  2B9D               	goto	l6919
 19138  03A8                     u5880:	
 19139  03A8                     l1311:	
 19140                           
 19141                           ;utils.c: 31:         SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 19142  03A8  1511               	bsf	17,2	;volatile
 19143  03A9                     l1312:	
 19144  03A9  1911               	btfsc	17,2	;volatile
 19145  03AA  2BAC               	goto	u5891
 19146  03AB  2BAD               	goto	u5890
 19147  03AC                     u5891:	
 19148  03AC  2BA9               	goto	l1312
 19149  03AD                     u5890:	
 19150  03AD                     l1314:	
 19151                           
 19152                           ;utils.c: 32:     } while (!(value & 0x40));
 19153  03AD  1F75               	btfss	ReadTemp@value,6
 19154  03AE  2BB0               	goto	u5901
 19155  03AF  2BB1               	goto	u5900
 19156  03B0                     u5901:	
 19157  03B0  2B29               	goto	l1278
 19158  03B1                     u5900:	
 19159  03B1                     l6921:	
 19160  03B1  0C0F               	rrf	15,w	;volatile
 19161  03B2  0C89               	rrf	9,f
 19162  03B3  3901               	andlw	1
 19163  03B4  00F4               	movwf	??_ReadTemp
 19164  03B5  0811               	movf	17,w	;volatile
 19165  03B6  391F               	andlw	31
 19166  03B7  0474               	iorwf	??_ReadTemp,w
 19167  03B8  1D03               	btfss	3,2
 19168  03B9  2BBB               	goto	u5911
 19169  03BA  2BBC               	goto	u5910
 19170  03BB                     u5911:	
 19171  03BB  2BB1               	goto	l6921
 19172  03BC                     u5910:	
 19173  03BC                     l1318:	
 19174                           
 19175                           ;utils.c: 35:  SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN)
 19176  03BC  1411               	bsf	17,0	;volatile
 19177  03BD                     l1319:	
 19178                           ;utils.c: 36:             ; while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19179                           
 19180                           
 19181                           ;utils.c: 35:  SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN)
 19182  03BD  1811               	btfsc	17,0	;volatile
 19183  03BE  2BC0               	goto	u5921
 19184  03BF  2BC1               	goto	u5920
 19185  03C0                     u5921:	
 19186  03C0  2BBD               	goto	l1319
 19187  03C1                     u5920:	
 19188  03C1                     l6923:	
 19189  03C1  0C0F               	rrf	15,w	;volatile
 19190  03C2  0C89               	rrf	9,f
 19191  03C3  3901               	andlw	1
 19192  03C4  00F4               	movwf	??_ReadTemp
 19193  03C5  0811               	movf	17,w	;volatile
 19194  03C6  391F               	andlw	31
 19195  03C7  0474               	iorwf	??_ReadTemp,w
 19196  03C8  1D03               	btfss	3,2
 19197  03C9  2BCB               	goto	u5931
 19198  03CA  2BCC               	goto	u5930
 19199  03CB                     u5931:	
 19200  03CB  2BC1               	goto	l6923
 19201  03CC                     u5930:	
 19202  03CC                     l6925:	
 19203                           
 19204                           ;utils.c: 37:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19205  03CC  309A               	movlw	154
 19206  03CD  318C  24A5  3183   	fcall	_WriteI2C
 19207  03D0                     l6927:	
 19208  03D0  0023               	movlb	3	; select bank3
 19209  03D1  0C0F               	rrf	15,w	;volatile
 19210  03D2  0C89               	rrf	9,f
 19211  03D3  3901               	andlw	1
 19212  03D4  00F4               	movwf	??_ReadTemp
 19213  03D5  0811               	movf	17,w	;volatile
 19214  03D6  391F               	andlw	31
 19215  03D7  0474               	iorwf	??_ReadTemp,w
 19216  03D8  1D03               	btfss	3,2
 19217  03D9  2BDB               	goto	u5941
 19218  03DA  2BDC               	goto	u5940
 19219  03DB                     u5941:	
 19220  03DB  2BD0               	goto	l6927
 19221  03DC                     u5940:	
 19222  03DC                     l6929:	
 19223                           
 19224                           ;utils.c: 38:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19225  03DC  3000               	movlw	0
 19226  03DD  318C  24A5  3183   	fcall	_WriteI2C
 19227  03E0                     l6931:	
 19228  03E0  0023               	movlb	3	; select bank3
 19229  03E1  0C0F               	rrf	15,w	;volatile
 19230  03E2  0C89               	rrf	9,f
 19231  03E3  3901               	andlw	1
 19232  03E4  00F4               	movwf	??_ReadTemp
 19233  03E5  0811               	movf	17,w	;volatile
 19234  03E6  391F               	andlw	31
 19235  03E7  0474               	iorwf	??_ReadTemp,w
 19236  03E8  1D03               	btfss	3,2
 19237  03E9  2BEB               	goto	u5951
 19238  03EA  2BEC               	goto	u5950
 19239  03EB                     u5951:	
 19240  03EB  2BE0               	goto	l6931
 19241  03EC                     u5950:	
 19242  03EC                     l1330:	
 19243                           
 19244                           ;utils.c: 39:  SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN)
 19245  03EC  1491               	bsf	17,1	;volatile
 19246  03ED                     l1331:	
 19247                           ;utils.c: 40:             ; while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19248                           
 19249                           
 19250                           ;utils.c: 39:  SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN)
 19251  03ED  1891               	btfsc	17,1	;volatile
 19252  03EE  2BF0               	goto	u5961
 19253  03EF  2BF1               	goto	u5960
 19254  03F0                     u5961:	
 19255  03F0  2BED               	goto	l1331
 19256  03F1                     u5960:	
 19257  03F1                     l6933:	
 19258  03F1  0C0F               	rrf	15,w	;volatile
 19259  03F2  0C89               	rrf	9,f
 19260  03F3  3901               	andlw	1
 19261  03F4  00F4               	movwf	??_ReadTemp
 19262  03F5  0811               	movf	17,w	;volatile
 19263  03F6  391F               	andlw	31
 19264  03F7  0474               	iorwf	??_ReadTemp,w
 19265  03F8  1D03               	btfss	3,2
 19266  03F9  2BFB               	goto	u5971
 19267  03FA  2BFC               	goto	u5970
 19268  03FB                     u5971:	
 19269  03FB  2BF1               	goto	l6933
 19270  03FC                     u5970:	
 19271  03FC                     l6935:	
 19272                           
 19273                           ;utils.c: 41:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19274  03FC  309B               	movlw	155
 19275  03FD  318C  24A5  3183   	fcall	_WriteI2C
 19276  0400                     l6937:	
 19277  0400  0023               	movlb	3	; select bank3
 19278  0401  0C0F               	rrf	15,w	;volatile
 19279  0402  0C89               	rrf	9,f
 19280  0403  3901               	andlw	1
 19281  0404  00F4               	movwf	??_ReadTemp
 19282  0405  0811               	movf	17,w	;volatile
 19283  0406  391F               	andlw	31
 19284  0407  0474               	iorwf	??_ReadTemp,w
 19285  0408  1D03               	btfss	3,2
 19286  0409  2C0B               	goto	u5981
 19287  040A  2C0C               	goto	u5980
 19288  040B                     u5981:	
 19289  040B  2C00               	goto	l6937
 19290  040C                     u5980:	
 19291  040C                     l6939:	
 19292                           
 19293                           ;utils.c: 42:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19294  040C  3195  256F  3183   	fcall	_ReadI2C
 19295  040F  00F4               	movwf	??_ReadTemp
 19296  0410  0874               	movf	??_ReadTemp,w
 19297  0411  00F5               	movwf	ReadTemp@value
 19298  0412                     l6941:	
 19299  0412  0023               	movlb	3	; select bank3
 19300  0413  0C0F               	rrf	15,w	;volatile
 19301  0414  0C89               	rrf	9,f
 19302  0415  3901               	andlw	1
 19303  0416  00F4               	movwf	??_ReadTemp
 19304  0417  0811               	movf	17,w	;volatile
 19305  0418  391F               	andlw	31
 19306  0419  0474               	iorwf	??_ReadTemp,w
 19307  041A  1D03               	btfss	3,2
 19308  041B  2C1D               	goto	u5991
 19309  041C  2C1E               	goto	u5990
 19310  041D                     u5991:	
 19311  041D  2C12               	goto	l6941
 19312  041E                     u5990:	
 19313  041E                     l1342:	
 19314                           
 19315                           ;utils.c: 43:  SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN)
 19316  041E  1691               	bsf	17,5	;volatile
 19317  041F  1611               	bsf	17,4	;volatile
 19318  0420                     l1343:	
 19319                           ;utils.c: 44:             ; while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19320                           
 19321                           
 19322                           ;utils.c: 43:  SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN)
 19323  0420  1A11               	btfsc	17,4	;volatile
 19324  0421  2C23               	goto	u6001
 19325  0422  2C24               	goto	u6000
 19326  0423                     u6001:	
 19327  0423  2C20               	goto	l1343
 19328  0424                     u6000:	
 19329  0424                     l6943:	
 19330  0424  0C0F               	rrf	15,w	;volatile
 19331  0425  0C89               	rrf	9,f
 19332  0426  3901               	andlw	1
 19333  0427  00F4               	movwf	??_ReadTemp
 19334  0428  0811               	movf	17,w	;volatile
 19335  0429  391F               	andlw	31
 19336  042A  0474               	iorwf	??_ReadTemp,w
 19337  042B  1D03               	btfss	3,2
 19338  042C  2C2E               	goto	u6011
 19339  042D  2C2F               	goto	u6010
 19340  042E                     u6011:	
 19341  042E  2C24               	goto	l6943
 19342  042F                     u6010:	
 19343  042F                     l1348:	
 19344                           
 19345                           ;utils.c: 45:  SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 19346  042F  1511               	bsf	17,2	;volatile
 19347  0430                     l1349:	
 19348  0430  1911               	btfsc	17,2	;volatile
 19349  0431  2C33               	goto	u6021
 19350  0432  2C34               	goto	u6020
 19351  0433                     u6021:	
 19352  0433  2C30               	goto	l1349
 19353  0434                     u6020:	
 19354  0434                     l6945:	
 19355                           
 19356                           ;utils.c: 47:  return value;
 19357  0434  0875               	movf	ReadTemp@value,w
 19358  0435                     l1352:	
 19359  0435  0008               	return
 19360  0436                     __end_of_ReadTemp:	
 19361                           
 19362                           	psect	text68
 19363  0CA5                     __ptext68:	
 19364 ;; *************** function _WriteI2C *****************
 19365 ;; Defined at:
 19366 ;;		line 47 in file "I2C/i2c.c"
 19367 ;; Parameters:    Size  Location     Type
 19368 ;;  data_out        1    wreg     unsigned char 
 19369 ;; Auto vars:     Size  Location     Type
 19370 ;;  data_out        1    3[COMMON] unsigned char 
 19371 ;; Return value:  Size  Location     Type
 19372 ;;                  1    wreg      char 
 19373 ;; Registers used:
 19374 ;;		wreg, status,2, status,0
 19375 ;; Tracked objects:
 19376 ;;		On entry : 0/0
 19377 ;;		On exit  : 0/0
 19378 ;;		Unchanged: 0/0
 19379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19381 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19383 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19384 ;;Total ram usage:        2 bytes
 19385 ;; Hardware stack levels used:    1
 19386 ;; Hardware stack levels required when called:    6
 19387 ;; This function calls:
 19388 ;;		Nothing
 19389 ;; This function is called by:
 19390 ;;		_ReadTemp
 19391 ;; This function uses a non-reentrant model
 19392 ;;
 19393                           
 19394                           
 19395                           ;psect for function _WriteI2C
 19396  0CA5                     _WriteI2C:	
 19397                           
 19398                           ;incstack = 0
 19399                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 19400                           ;WriteI2C@data_out stored from wreg
 19401  0CA5  00F3               	movwf	WriteI2C@data_out
 19402  0CA6                     l6655:	
 19403                           
 19404                           ;I2C/i2c.c: 47: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 48: {;I2C/i2c.
      +                          c: 49:   SSP1BUF = data_out;
 19405  0CA6  0873               	movf	WriteI2C@data_out,w
 19406  0CA7  0023               	movlb	3	; select bank3
 19407  0CA8  008C               	movwf	12	;volatile
 19408  0CA9                     l6657:	
 19409                           
 19410                           ;I2C/i2c.c: 50:   if ( SSP1CON1bits.WCOL )
 19411  0CA9  1F90               	btfss	16,7	;volatile
 19412  0CAA  2CAC               	goto	u5521
 19413  0CAB  2CAD               	goto	u5520
 19414  0CAC                     u5521:	
 19415  0CAC  2CAE               	goto	l6663
 19416  0CAD                     u5520:	
 19417  0CAD  2CEF               	goto	l1056
 19418  0CAE                     l6663:	
 19419                           
 19420                           ;I2C/i2c.c: 53:   {;I2C/i2c.c: 54:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 19421  0CAE  300F               	movlw	15
 19422  0CAF  0510               	andwf	16,w	;volatile
 19423  0CB0  00F2               	movwf	??_WriteI2C
 19424  0CB1  3008               	movlw	8
 19425  0CB2  0672               	xorwf	??_WriteI2C,w
 19426  0CB3  1903               	btfsc	3,2
 19427  0CB4  2CB6               	goto	u5531
 19428  0CB5  2CB7               	goto	u5530
 19429  0CB6                     u5531:	
 19430  0CB6  2CCD               	goto	l6675
 19431  0CB7                     u5530:	
 19432  0CB7                     l6665:	
 19433  0CB7  300F               	movlw	15
 19434  0CB8  0510               	andwf	16,w	;volatile
 19435  0CB9  00F2               	movwf	??_WriteI2C
 19436  0CBA  300B               	movlw	11
 19437  0CBB  0672               	xorwf	??_WriteI2C,w
 19438  0CBC  1903               	btfsc	3,2
 19439  0CBD  2CBF               	goto	u5541
 19440  0CBE  2CC0               	goto	u5540
 19441  0CBF                     u5541:	
 19442  0CBF  2CCD               	goto	l6675
 19443  0CC0                     u5540:	
 19444  0CC0                     l6667:	
 19445                           
 19446                           ;I2C/i2c.c: 55:  {;I2C/i2c.c: 56:        SSP1CON1bits.CKP = 1;
 19447  0CC0  1610               	bsf	16,4	;volatile
 19448  0CC1                     l1059:	
 19449                           ;I2C/i2c.c: 57:        while ( !PIR3bits.SSP1IF );
 19450                           
 19451  0CC1  002E               	movlb	14	; select bank14
 19452  0CC2  1C0F               	btfss	15,0	;volatile
 19453  0CC3  2CC5               	goto	u5551
 19454  0CC4  2CC6               	goto	u5550
 19455  0CC5                     u5551:	
 19456  0CC5  2CC1               	goto	l1059
 19457  0CC6                     u5550:	
 19458  0CC6                     l1061:	
 19459                           
 19460                           ;I2C/i2c.c: 59:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 19461  0CC6  0023               	movlb	3	; select bank3
 19462  0CC7  190F               	btfsc	15,2	;volatile
 19463  0CC8  2CCA               	goto	u5561
 19464  0CC9  2CCB               	goto	u5560
 19465  0CCA                     u5561:	
 19466  0CCA  2CEF               	goto	l1056
 19467  0CCB                     u5560:	
 19468  0CCB                     l6669:	
 19469  0CCB  080F               	movf	15,w	;volatile
 19470  0CCC  2CEF               	goto	l1056
 19471  0CCD                     l6675:	
 19472  0CCD  300F               	movlw	15
 19473  0CCE  0510               	andwf	16,w	;volatile
 19474  0CCF  00F2               	movwf	??_WriteI2C
 19475  0CD0  3008               	movlw	8
 19476  0CD1  0672               	xorwf	??_WriteI2C,w
 19477  0CD2  1903               	btfsc	3,2
 19478  0CD3  2CD5               	goto	u5571
 19479  0CD4  2CD6               	goto	u5570
 19480  0CD5                     u5571:	
 19481  0CD5  2CDF               	goto	l1068
 19482  0CD6                     u5570:	
 19483  0CD6                     l6677:	
 19484  0CD6  300F               	movlw	15
 19485  0CD7  0510               	andwf	16,w	;volatile
 19486  0CD8  00F2               	movwf	??_WriteI2C
 19487  0CD9  300B               	movlw	11
 19488  0CDA  0672               	xorwf	??_WriteI2C,w
 19489  0CDB  1D03               	btfss	3,2
 19490  0CDC  2CDE               	goto	u5581
 19491  0CDD  2CDF               	goto	u5580
 19492  0CDE                     u5581:	
 19493  0CDE  2CEF               	goto	l1056
 19494  0CDF                     u5580:	
 19495  0CDF                     l1068:	
 19496  0CDF  180F               	btfsc	15,0	;volatile
 19497  0CE0  2CE2               	goto	u5591
 19498  0CE1  2CE3               	goto	u5590
 19499  0CE2                     u5591:	
 19500  0CE2  2CDF               	goto	l1068
 19501  0CE3                     u5590:	
 19502  0CE3                     l6679:	
 19503  0CE3  0C0F               	rrf	15,w	;volatile
 19504  0CE4  0C89               	rrf	9,f
 19505  0CE5  3901               	andlw	1
 19506  0CE6  00F2               	movwf	??_WriteI2C
 19507  0CE7  0811               	movf	17,w	;volatile
 19508  0CE8  391F               	andlw	31
 19509  0CE9  0472               	iorwf	??_WriteI2C,w
 19510  0CEA  1D03               	btfss	3,2
 19511  0CEB  2CED               	goto	u5601
 19512  0CEC  2CEE               	goto	u5600
 19513  0CED                     u5601:	
 19514  0CED  2CE3               	goto	l6679
 19515  0CEE                     u5600:	
 19516  0CEE                     l1073:	
 19517                           
 19518                           ;I2C/i2c.c: 72:      if ( SSP1CON2bits.ACKSTAT )
 19519  0CEE  0811               	movf	17,w	;volatile
 19520  0CEF                     l1056:	
 19521  0CEF  0008               	return
 19522  0CF0                     __end_of_WriteI2C:	
 19523                           
 19524                           	psect	text69
 19525  156F                     __ptext69:	
 19526 ;; *************** function _ReadI2C *****************
 19527 ;; Defined at:
 19528 ;;		line 32 in file "I2C/i2c.c"
 19529 ;; Parameters:    Size  Location     Type
 19530 ;;		None
 19531 ;; Auto vars:     Size  Location     Type
 19532 ;;		None
 19533 ;; Return value:  Size  Location     Type
 19534 ;;                  1    wreg      unsigned char 
 19535 ;; Registers used:
 19536 ;;		wreg, status,2, status,0
 19537 ;; Tracked objects:
 19538 ;;		On entry : 0/0
 19539 ;;		On exit  : 0/0
 19540 ;;		Unchanged: 0/0
 19541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19544 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19545 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19546 ;;Total ram usage:        1 bytes
 19547 ;; Hardware stack levels used:    1
 19548 ;; Hardware stack levels required when called:    6
 19549 ;; This function calls:
 19550 ;;		Nothing
 19551 ;; This function is called by:
 19552 ;;		_ReadTemp
 19553 ;; This function uses a non-reentrant model
 19554 ;;
 19555                           
 19556                           
 19557                           ;psect for function _ReadI2C
 19558  156F                     _ReadI2C:	
 19559  156F                     l6647:	
 19560                           ;incstack = 0
 19561                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 19562                           
 19563                           
 19564                           ;I2C/i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 19565  156F  300F               	movlw	15
 19566  1570  0023               	movlb	3	; select bank3
 19567  1571  0510               	andwf	16,w	;volatile
 19568  1572  00F2               	movwf	??_ReadI2C
 19569  1573  3008               	movlw	8
 19570  1574  0672               	xorwf	??_ReadI2C,w
 19571  1575  1903               	btfsc	3,2
 19572  1576  2D78               	goto	u5491
 19573  1577  2D79               	goto	u5490
 19574  1578                     u5491:	
 19575  1578  2D82               	goto	l1048
 19576  1579                     u5490:	
 19577  1579                     l6649:	
 19578  1579  300F               	movlw	15
 19579  157A  0510               	andwf	16,w	;volatile
 19580  157B  00F2               	movwf	??_ReadI2C
 19581  157C  300B               	movlw	11
 19582  157D  0672               	xorwf	??_ReadI2C,w
 19583  157E  1D03               	btfss	3,2
 19584  157F  2D81               	goto	u5501
 19585  1580  2D82               	goto	u5500
 19586  1581                     u5501:	
 19587  1581  2D83               	goto	l1049
 19588  1582                     u5500:	
 19589  1582                     l1048:	
 19590                           
 19591                           ;I2C/i2c.c: 35:   SSP1CON2bits.RCEN = 1;
 19592  1582  1591               	bsf	17,3	;volatile
 19593  1583                     l1049:	
 19594  1583  1C0F               	btfss	15,0	;volatile
 19595  1584  2D86               	goto	u5511
 19596  1585  2D87               	goto	u5510
 19597  1586                     u5511:	
 19598  1586  2D83               	goto	l1049
 19599  1587                     u5510:	
 19600  1587                     l6651:	
 19601                           
 19602                           ;I2C/i2c.c: 37:   return ( SSP1BUF );
 19603  1587  080C               	movf	12,w	;volatile
 19604  1588                     l1052:	
 19605  1588  0008               	return
 19606  1589                     __end_of_ReadI2C:	
 19607                           
 19608                           	psect	text70
 19609  1424                     __ptext70:	
 19610 ;; *************** function _ReadIllum *****************
 19611 ;; Defined at:
 19612 ;;		line 11 in file "utils.c"
 19613 ;; Parameters:    Size  Location     Type
 19614 ;;		None
 19615 ;; Auto vars:     Size  Location     Type
 19616 ;;		None
 19617 ;; Return value:  Size  Location     Type
 19618 ;;                  1    wreg      unsigned char 
 19619 ;; Registers used:
 19620 ;;		wreg, status,2, status,0, pclath, cstack
 19621 ;; Tracked objects:
 19622 ;;		On entry : 0/0
 19623 ;;		On exit  : 0/0
 19624 ;;		Unchanged: 0/0
 19625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19629 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19630 ;;Total ram usage:        2 bytes
 19631 ;; Hardware stack levels used:    1
 19632 ;; Hardware stack levels required when called:    7
 19633 ;; This function calls:
 19634 ;;		_ADCC_GetSingleConversion
 19635 ;; This function is called by:
 19636 ;;		_main
 19637 ;; This function uses a non-reentrant model
 19638 ;;
 19639                           
 19640                           
 19641                           ;psect for function _ReadIllum
 19642  1424                     _ReadIllum:	
 19643  1424                     l6893:	
 19644                           ;incstack = 0
 19645                           ; Regs used in _ReadIllum: [wreg+status,2+status,0+pclath+cstack]
 19646                           
 19647                           
 19648                           ;utils.c: 12:     return ADCC_GetSingleConversion(ILLUM)>> 14;
 19649  1424  3000               	movlw	0
 19650  1425  3194  2493  3194   	fcall	_ADCC_GetSingleConversion
 19651  1428  0872               	movf	?_ADCC_GetSingleConversion,w
 19652  1429  00F6               	movwf	??_ReadIllum
 19653  142A  0873               	movf	?_ADCC_GetSingleConversion+1,w
 19654  142B  00F7               	movwf	??_ReadIllum+1
 19655  142C  300E               	movlw	14
 19656  142D                     u5775:	
 19657  142D  36F7               	lsrf	??_ReadIllum+1,f
 19658  142E  0CF6               	rrf	??_ReadIllum,f
 19659  142F  0B89               	decfsz	9,f
 19660  1430  2C2D               	goto	u5775
 19661  1431  0876               	movf	??_ReadIllum,w
 19662  1432                     l1275:	
 19663  1432  0008               	return
 19664  1433                     __end_of_ReadIllum:	
 19665                           
 19666                           	psect	text71
 19667  1493                     __ptext71:	
 19668 ;; *************** function _ADCC_GetSingleConversion *****************
 19669 ;; Defined at:
 19670 ;;		line 130 in file "mcc_generated_files/adcc.c"
 19671 ;; Parameters:    Size  Location     Type
 19672 ;;  channel         1    wreg     enum E12246
 19673 ;; Auto vars:     Size  Location     Type
 19674 ;;  channel         1    5[COMMON] enum E12246
 19675 ;; Return value:  Size  Location     Type
 19676 ;;                  2    2[COMMON] unsigned short 
 19677 ;; Registers used:
 19678 ;;		wreg
 19679 ;; Tracked objects:
 19680 ;;		On entry : 0/0
 19681 ;;		On exit  : 0/0
 19682 ;;		Unchanged: 0/0
 19683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19684 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19687 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19688 ;;Total ram usage:        4 bytes
 19689 ;; Hardware stack levels used:    1
 19690 ;; Hardware stack levels required when called:    6
 19691 ;; This function calls:
 19692 ;;		Nothing
 19693 ;; This function is called by:
 19694 ;;		_ReadIllum
 19695 ;; This function uses a non-reentrant model
 19696 ;;
 19697                           
 19698                           
 19699                           ;psect for function _ADCC_GetSingleConversion
 19700  1493                     _ADCC_GetSingleConversion:	
 19701                           
 19702                           ;incstack = 0
 19703                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 19704                           ;ADCC_GetSingleConversion@channel stored from wreg
 19705  1493  00F5               	movwf	ADCC_GetSingleConversion@channel
 19706  1494                     l6587:	
 19707                           
 19708                           ;mcc_generated_files/adcc.c: 130: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 131: {;mcc_generated_files/adcc.c: 133:     ADPCH = 
      +                          channel;
 19709  1494  0875               	movf	ADCC_GetSingleConversion@channel,w
 19710  1495  0021               	movlb	1	; select bank1
 19711  1496  009E               	movwf	30	;volatile
 19712  1497                     l6589:	
 19713                           
 19714                           ;mcc_generated_files/adcc.c: 136:     ADCON0bits.ADON = 1;
 19715  1497  1793               	bsf	19,7	;volatile
 19716  1498                     l6591:	
 19717                           
 19718                           ;mcc_generated_files/adcc.c: 139:     ADCON0bits.ADCONT = 0;
 19719  1498  1313               	bcf	19,6	;volatile
 19720  1499                     l6593:	
 19721                           
 19722                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADGO = 1;
 19723  1499  1413               	bsf	19,0	;volatile
 19724  149A                     l6595:	
 19725                           
 19726                           ;mcc_generated_files/adcc.c: 145:     __nop();
 19727  149A  0000               	nop
 19728  149B                     l369:	
 19729                           ;mcc_generated_files/adcc.c: 149:     {;mcc_generated_files/adcc.c: 150:     }
 19730                           
 19731                           
 19732                           ;mcc_generated_files/adcc.c: 148:     while (ADCON0bits.ADGO)
 19733  149B  0021               	movlb	1	; select bank1
 19734  149C  1813               	btfsc	19,0	;volatile
 19735  149D  2C9F               	goto	u5431
 19736  149E  2CA0               	goto	u5430
 19737  149F                     u5431:	
 19738  149F  2C9B               	goto	l369
 19739  14A0                     u5430:	
 19740  14A0                     l6597:	
 19741                           
 19742                           ;mcc_generated_files/adcc.c: 154:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 19743  14A0  080D               	movf	13,w	;volatile
 19744  14A1  00F3               	movwf	?_ADCC_GetSingleConversion+1
 19745  14A2  080C               	movf	12,w	;volatile
 19746  14A3  00F2               	movwf	?_ADCC_GetSingleConversion
 19747  14A4                     l372:	
 19748  14A4  0008               	return
 19749  14A5                     __end_of_ADCC_GetSingleConversion:	
 19750                           
 19751                           	psect	text72
 19752  0AFF                     __ptext72:	
 19753 ;; *************** function _Menus *****************
 19754 ;; Defined at:
 19755 ;;		line 91 in file "menus.c"
 19756 ;; Parameters:    Size  Location     Type
 19757 ;;		None
 19758 ;; Auto vars:     Size  Location     Type
 19759 ;;		None
 19760 ;; Return value:  Size  Location     Type
 19761 ;;                  1    wreg      void 
 19762 ;; Registers used:
 19763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19764 ;; Tracked objects:
 19765 ;;		On entry : 0/0
 19766 ;;		On exit  : 0/0
 19767 ;;		Unchanged: 0/0
 19768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19771 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19772 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19773 ;;Total ram usage:        1 bytes
 19774 ;; Hardware stack levels used:    1
 19775 ;; Hardware stack levels required when called:   11
 19776 ;; This function calls:
 19777 ;;		_Menu
 19778 ;;		_ShowOnLEDs
 19779 ;;		_TMR1_SetInterruptHandler
 19780 ;;		_checkButtonS1
 19781 ;;		_checkButtonS2
 19782 ;; This function is called by:
 19783 ;;		_main
 19784 ;; This function uses a non-reentrant model
 19785 ;;
 19786                           
 19787                           
 19788                           ;psect for function _Menus
 19789  0AFF                     _Menus:	
 19790  0AFF                     l7033:	
 19791                           ;incstack = 0
 19792                           ; Regs used in _Menus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19793                           
 19794                           
 19795                           ;menus.c: 92:     mode = 0;
 19796  0AFF  0020               	movlb	0	; select bank0
 19797  0B00  01EE               	clrf	_mode	;volatile
 19798  0B01                     l7035:	
 19799                           
 19800                           ;menus.c: 93:     ShowOnLEDs(0);
 19801  0B01  3000               	movlw	0
 19802  0B02  3193  23BB  318A   	fcall	_ShowOnLEDs
 19803  0B05                     l7037:	
 19804                           
 19805                           ;menus.c: 94:     (INTCONbits.PEIE = 0);
 19806  0B05  130B               	bcf	11,6	;volatile
 19807  0B06                     l7039:	
 19808                           
 19809                           ;menus.c: 95:     TMR1_SetInterruptHandler(Blink);
 19810  0B06  305C               	movlw	low _Blink
 19811  0B07  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 19812  0B08  300C               	movlw	high _Blink
 19813  0B09  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 19814  0B0A  3192  22FE  318A   	fcall	_TMR1_SetInterruptHandler
 19815  0B0D                     l7041:	
 19816                           
 19817                           ;menus.c: 96:     (INTCONbits.PEIE = 1);
 19818  0B0D  170B               	bsf	11,6	;volatile
 19819                           
 19820                           ;menus.c: 97:     while(mode < 4){
 19821  0B0E  2B3A               	goto	l7063
 19822  0B0F                     l7043:	
 19823                           
 19824                           ;menus.c: 98:         checkButtonS1();
 19825  0B0F  3196  2658  318A   	fcall	_checkButtonS1
 19826                           
 19827                           ;menus.c: 99:         checkButtonS2();
 19828  0B12  3196  2678  318A   	fcall	_checkButtonS2
 19829  0B15                     l7045:	
 19830                           
 19831                           ;menus.c: 100:         if (s1flag){
 19832  0B15  0021               	movlb	1	; select bank1
 19833  0B16  084C               	movf	_s1flag^(0+128),w
 19834  0B17  1903               	btfsc	3,2
 19835  0B18  2B1A               	goto	u6151
 19836  0B19  2B1B               	goto	u6150
 19837  0B1A                     u6151:	
 19838  0B1A  2B26               	goto	l7053
 19839  0B1B                     u6150:	
 19840  0B1B                     l7047:	
 19841                           
 19842                           ;menus.c: 101:             s1flag = 0;
 19843  0B1B  01CC               	clrf	_s1flag^(0+128)
 19844  0B1C                     l7049:	
 19845                           
 19846                           ;menus.c: 102:             mode++;
 19847  0B1C  3001               	movlw	1
 19848  0B1D  0020               	movlb	0	; select bank0
 19849  0B1E  00B6               	movwf	??_Menus
 19850  0B1F  0836               	movf	??_Menus,w
 19851  0B20  07EE               	addwf	_mode,f	;volatile
 19852  0B21                     l7051:	
 19853                           
 19854                           ;menus.c: 103:             ShowOnLEDs(0);
 19855  0B21  3000               	movlw	0
 19856  0B22  3193  23BB  318A   	fcall	_ShowOnLEDs
 19857                           
 19858                           ;menus.c: 104:         } else if (s2flag) {
 19859  0B25  2B3A               	goto	l7063
 19860  0B26                     l7053:	
 19861  0B26  084D               	movf	_s2flag^(0+128),w
 19862  0B27  1903               	btfsc	3,2
 19863  0B28  2B2A               	goto	u6161
 19864  0B29  2B2B               	goto	u6160
 19865  0B2A                     u6161:	
 19866  0B2A  2B3A               	goto	l7063
 19867  0B2B                     u6160:	
 19868  0B2B                     l7055:	
 19869                           
 19870                           ;menus.c: 105:             s2flag = 0;
 19871  0B2B  01CD               	clrf	_s2flag^(0+128)
 19872  0B2C                     l7057:	
 19873                           
 19874                           ;menus.c: 106:             ShowOnLEDs(0);
 19875  0B2C  3000               	movlw	0
 19876  0B2D  3193  23BB  318A   	fcall	_ShowOnLEDs
 19877  0B30                     l7059:	
 19878                           
 19879                           ;menus.c: 107:             Menu(mode++);
 19880  0B30  0020               	movlb	0	; select bank0
 19881  0B31  086E               	movf	_mode,w	;volatile
 19882  0B32  3188  20F5  318A   	fcall	_Menu
 19883  0B35                     l7061:	
 19884  0B35  3001               	movlw	1
 19885  0B36  0020               	movlb	0	; select bank0
 19886  0B37  00B6               	movwf	??_Menus
 19887  0B38  0836               	movf	??_Menus,w
 19888  0B39  07EE               	addwf	_mode,f	;volatile
 19889  0B3A                     l7063:	
 19890                           
 19891                           ;menus.c: 97:     while(mode < 4){
 19892  0B3A  3004               	movlw	4
 19893  0B3B  0020               	movlb	0	; select bank0
 19894  0B3C  026E               	subwf	_mode,w	;volatile
 19895  0B3D  1C03               	skipc
 19896  0B3E  2B40               	goto	u6171
 19897  0B3F  2B41               	goto	u6170
 19898  0B40                     u6171:	
 19899  0B40  2B0F               	goto	l7043
 19900  0B41                     u6170:	
 19901  0B41                     l1175:	
 19902  0B41  0008               	return
 19903  0B42                     __end_of_Menus:	
 19904                           
 19905                           	psect	text73
 19906  12FE                     __ptext73:	
 19907 ;; *************** function _TMR1_SetInterruptHandler *****************
 19908 ;; Defined at:
 19909 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 19910 ;; Parameters:    Size  Location     Type
 19911 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
 19912 ;;		 -> Blink(1), Timer(1), TMR1_DefaultInterruptHandler(1), 
 19913 ;; Auto vars:     Size  Location     Type
 19914 ;;		None
 19915 ;; Return value:  Size  Location     Type
 19916 ;;                  1    wreg      void 
 19917 ;; Registers used:
 19918 ;;		wreg
 19919 ;; Tracked objects:
 19920 ;;		On entry : 0/0
 19921 ;;		On exit  : 0/0
 19922 ;;		Unchanged: 0/0
 19923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19927 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19928 ;;Total ram usage:        2 bytes
 19929 ;; Hardware stack levels used:    1
 19930 ;; Hardware stack levels required when called:    6
 19931 ;; This function calls:
 19932 ;;		Nothing
 19933 ;; This function is called by:
 19934 ;;		_TMR1_Initialize
 19935 ;;		_main
 19936 ;;		_Menus
 19937 ;; This function uses a non-reentrant model
 19938 ;;
 19939                           
 19940                           
 19941                           ;psect for function _TMR1_SetInterruptHandler
 19942  12FE                     _TMR1_SetInterruptHandler:	
 19943  12FE                     l6183:	
 19944                           ;incstack = 0
 19945                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 19946                           
 19947                           
 19948                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 19949  12FE  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 19950  12FF  0021               	movlb	1	; select bank1
 19951  1300  00EC               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 19952  1301  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 19953  1302  00EB               	movwf	_TMR1_InterruptHandler^(0+128)
 19954  1303                     l61:	
 19955  1303  0008               	return
 19956  1304                     __end_of_TMR1_SetInterruptHandler:	
 19957                           
 19958                           	psect	text74
 19959  08F5                     __ptext74:	
 19960 ;; *************** function _Menu *****************
 19961 ;; Defined at:
 19962 ;;		line 6 in file "menus.c"
 19963 ;; Parameters:    Size  Location     Type
 19964 ;;  mode            1    wreg     unsigned char 
 19965 ;; Auto vars:     Size  Location     Type
 19966 ;;  mode            1   21[BANK0 ] unsigned char 
 19967 ;; Return value:  Size  Location     Type
 19968 ;;                  1    wreg      void 
 19969 ;; Registers used:
 19970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19971 ;; Tracked objects:
 19972 ;;		On entry : 0/0
 19973 ;;		On exit  : 0/0
 19974 ;;		Unchanged: 0/0
 19975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19977 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19978 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19979 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19980 ;;Total ram usage:        3 bytes
 19981 ;; Hardware stack levels used:    1
 19982 ;; Hardware stack levels required when called:   10
 19983 ;; This function calls:
 19984 ;;		_ShowOnLEDs
 19985 ;;		_TMR1_StartTimer
 19986 ;;		_TMR1_StopTimer
 19987 ;;		_submenu_alarm
 19988 ;;		_submenu_clock
 19989 ;;		_submenu_illum
 19990 ;;		_submenu_temp
 19991 ;; This function is called by:
 19992 ;;		_Menus
 19993 ;; This function uses a non-reentrant model
 19994 ;;
 19995                           
 19996                           
 19997                           ;psect for function _Menu
 19998  08F5                     _Menu:	
 19999                           
 20000                           ;incstack = 0
 20001                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 20002                           ;Menu@mode stored from wreg
 20003  08F5  0020               	movlb	0	; select bank0
 20004  08F6  00B5               	movwf	Menu@mode
 20005  08F7                     l6685:	
 20006                           
 20007                           ;menus.c: 7:     TMR1_StopTimer();
 20008  08F7  3192  22E7  3188   	fcall	_TMR1_StopTimer
 20009                           
 20010                           ;menus.c: 8:  switch(mode){
 20011  08FA  290B               	goto	l6697
 20012  08FB                     l6687:	
 20013                           
 20014                           ;menus.c: 10:    submenu_clock();
 20015  08FB  3185  2501  3188   	fcall	_submenu_clock
 20016                           
 20017                           ;menus.c: 11:    break;
 20018  08FE  2922               	goto	l6699
 20019  08FF                     l6689:	
 20020                           
 20021                           ;menus.c: 13:    submenu_alarm();
 20022  08FF  3194  2461  3188   	fcall	_submenu_alarm
 20023                           
 20024                           ;menus.c: 14:    break;
 20025  0902  2922               	goto	l6699
 20026  0903                     l6691:	
 20027                           
 20028                           ;menus.c: 16:    submenu_temp();
 20029  0903  318E  2684  3188   	fcall	_submenu_temp
 20030                           
 20031                           ;menus.c: 17:    break;
 20032  0906  2922               	goto	l6699
 20033  0907                     l6693:	
 20034                           
 20035                           ;menus.c: 19:    submenu_illum();
 20036  0907  3194  24A5  3188   	fcall	_submenu_illum
 20037                           
 20038                           ;menus.c: 20:    break;
 20039  090A  2922               	goto	l6699
 20040  090B                     l6697:	
 20041  090B  0020               	movlb	0	; select bank0
 20042  090C  0835               	movf	Menu@mode,w
 20043  090D  00B3               	movwf	??_Menu
 20044  090E  01B4               	clrf	??_Menu+1
 20045                           
 20046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20047                           ; Switch size 1, requested type "simple"
 20048                           ; Number of cases is 1, Range of values is 0 to 0
 20049                           ; switch strategies available:
 20050                           ; Name         Instructions Cycles
 20051                           ; simple_byte            4     3 (average)
 20052                           ; direct_byte            8     6 (fixed)
 20053                           ; jumptable            260     6 (fixed)
 20054                           ;	Chosen strategy is simple_byte
 20055  090F  0834               	movf	??_Menu+1,w
 20056  0910  3A00               	xorlw	0	; case 0
 20057  0911  1903               	skipnz
 20058  0912  2914               	goto	l7257
 20059  0913  2922               	goto	l6699
 20060  0914                     l7257:	
 20061                           
 20062                           ; Switch size 1, requested type "simple"
 20063                           ; Number of cases is 4, Range of values is 0 to 3
 20064                           ; switch strategies available:
 20065                           ; Name         Instructions Cycles
 20066                           ; simple_byte           13     7 (average)
 20067                           ; direct_byte           14     6 (fixed)
 20068                           ; jumptable            260     6 (fixed)
 20069                           ;	Chosen strategy is simple_byte
 20070  0914  0833               	movf	??_Menu,w
 20071  0915  3A00               	xorlw	0	; case 0
 20072  0916  1903               	skipnz
 20073  0917  28FB               	goto	l6687
 20074  0918  3A01               	xorlw	1	; case 1
 20075  0919  1903               	skipnz
 20076  091A  28FF               	goto	l6689
 20077  091B  3A03               	xorlw	3	; case 2
 20078  091C  1903               	skipnz
 20079  091D  2903               	goto	l6691
 20080  091E  3A01               	xorlw	1	; case 3
 20081  091F  1903               	skipnz
 20082  0920  2907               	goto	l6693
 20083  0921  2922               	goto	l6699
 20084  0922                     l6699:	
 20085                           
 20086                           ;menus.c: 22:     TMR1_StartTimer();
 20087  0922  3192  22E4  3188   	fcall	_TMR1_StartTimer
 20088  0925                     l6701:	
 20089                           
 20090                           ;menus.c: 23:     ShowOnLEDs(0);
 20091  0925  3000               	movlw	0
 20092  0926  3193  23BB  3188   	fcall	_ShowOnLEDs
 20093  0929                     l1139:	
 20094  0929  0008               	return
 20095  092A                     __end_of_Menu:	
 20096                           
 20097                           	psect	text75
 20098  0E84                     __ptext75:	
 20099 ;; *************** function _submenu_temp *****************
 20100 ;; Defined at:
 20101 ;;		line 73 in file "menus.c"
 20102 ;; Parameters:    Size  Location     Type
 20103 ;;		None
 20104 ;; Auto vars:     Size  Location     Type
 20105 ;;  temperature_    1   12[BANK0 ] unsigned char 
 20106 ;;  temperature_    1   11[BANK0 ] unsigned char 
 20107 ;; Return value:  Size  Location     Type
 20108 ;;                  1    wreg      void 
 20109 ;; Registers used:
 20110 ;;		wreg, status,2, status,0, pclath, cstack
 20111 ;; Tracked objects:
 20112 ;;		On entry : 0/0
 20113 ;;		On exit  : 0/0
 20114 ;;		Unchanged: 0/0
 20115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20117 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20118 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20119 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20120 ;;Total ram usage:        5 bytes
 20121 ;; Hardware stack levels used:    1
 20122 ;; Hardware stack levels required when called:    8
 20123 ;; This function calls:
 20124 ;;		_Update
 20125 ;;		___awdiv
 20126 ;;		___awmod
 20127 ;;		___bmul
 20128 ;;		_write_alat
 20129 ;; This function is called by:
 20130 ;;		_Menu
 20131 ;; This function uses a non-reentrant model
 20132 ;;
 20133                           
 20134                           
 20135                           ;psect for function _submenu_temp
 20136  0E84                     _submenu_temp:	
 20137  0E84                     l6215:	
 20138                           ;incstack = 0
 20139                           ; Regs used in _submenu_temp: [wreg+status,2+status,0+pclath+cstack]
 20140                           
 20141                           
 20142                           ;menus.c: 74:  uint8_t temperature_tens = alat/10;
 20143  0E84  300A               	movlw	10
 20144  0E85  00F4               	movwf	___awdiv@divisor
 20145  0E86  3000               	movlw	0
 20146  0E87  00F5               	movwf	___awdiv@divisor+1
 20147  0E88  0020               	movlb	0	; select bank0
 20148  0E89  086C               	movf	_alat,w
 20149  0E8A  00A8               	movwf	??_submenu_temp
 20150  0E8B  01A9               	clrf	??_submenu_temp+1
 20151  0E8C  0828               	movf	??_submenu_temp,w
 20152  0E8D  00F6               	movwf	___awdiv@dividend
 20153  0E8E  0829               	movf	??_submenu_temp+1,w
 20154  0E8F  00F7               	movwf	___awdiv@dividend+1
 20155  0E90  318F  273D  318E   	fcall	___awdiv
 20156  0E93  0874               	movf	?___awdiv,w
 20157  0E94  0020               	movlb	0	; select bank0
 20158  0E95  00AA               	movwf	??_submenu_temp+2
 20159  0E96  082A               	movf	??_submenu_temp+2,w
 20160  0E97  00AC               	movwf	submenu_temp@temperature_tens
 20161                           
 20162                           ;menus.c: 75:  uint8_t temperature_units = alat % 10;
 20163  0E98  300A               	movlw	10
 20164  0E99  00F2               	movwf	___awmod@divisor
 20165  0E9A  3000               	movlw	0
 20166  0E9B  00F3               	movwf	___awmod@divisor+1
 20167  0E9C  086C               	movf	_alat,w
 20168  0E9D  00A8               	movwf	??_submenu_temp
 20169  0E9E  01A9               	clrf	??_submenu_temp+1
 20170  0E9F  0828               	movf	??_submenu_temp,w
 20171  0EA0  00F4               	movwf	___awmod@dividend
 20172  0EA1  0829               	movf	??_submenu_temp+1,w
 20173  0EA2  00F5               	movwf	___awmod@dividend+1
 20174  0EA3  318D  258B  318E   	fcall	___awmod
 20175  0EA6  0872               	movf	?___awmod,w
 20176  0EA7  0020               	movlb	0	; select bank0
 20177  0EA8  00AA               	movwf	??_submenu_temp+2
 20178  0EA9  082A               	movf	??_submenu_temp+2,w
 20179  0EAA  00AB               	movwf	submenu_temp@temperature_units
 20180                           
 20181                           ;menus.c: 76:  temperature_tens = Update(temperature_tens, (uint8_t) 5);
 20182  0EAB  3005               	movlw	5
 20183  0EAC  00A8               	movwf	??_submenu_temp
 20184  0EAD  0828               	movf	??_submenu_temp,w
 20185  0EAE  00F4               	movwf	Update@thr
 20186  0EAF  082C               	movf	submenu_temp@temperature_tens,w
 20187  0EB0  3197  2724  318E   	fcall	_Update
 20188  0EB3  0020               	movlb	0	; select bank0
 20189  0EB4  00A9               	movwf	??_submenu_temp+1
 20190  0EB5  0829               	movf	??_submenu_temp+1,w
 20191  0EB6  00AC               	movwf	submenu_temp@temperature_tens
 20192  0EB7                     l6217:	
 20193                           
 20194                           ;menus.c: 77:  if (temperature_tens == 5) alat = 50;
 20195  0EB7  3005               	movlw	5
 20196  0EB8  062C               	xorwf	submenu_temp@temperature_tens,w
 20197  0EB9  1D03               	btfss	3,2
 20198  0EBA  2EBC               	goto	u5021
 20199  0EBB  2EBD               	goto	u5020
 20200  0EBC                     u5021:	
 20201  0EBC  2EC2               	goto	l6221
 20202  0EBD                     u5020:	
 20203  0EBD                     l6219:	
 20204  0EBD  3032               	movlw	50
 20205  0EBE  00A8               	movwf	??_submenu_temp
 20206  0EBF  0828               	movf	??_submenu_temp,w
 20207  0EC0  00EC               	movwf	_alat
 20208  0EC1  2EDB               	goto	l1162
 20209  0EC2                     l6221:	
 20210                           
 20211                           ;menus.c: 79:   temperature_units = Update(temperature_units, (uint8_t) 9);
 20212  0EC2  3009               	movlw	9
 20213  0EC3  00A8               	movwf	??_submenu_temp
 20214  0EC4  0828               	movf	??_submenu_temp,w
 20215  0EC5  00F4               	movwf	Update@thr
 20216  0EC6  082B               	movf	submenu_temp@temperature_units,w
 20217  0EC7  3197  2724  318E   	fcall	_Update
 20218  0ECA  0020               	movlb	0	; select bank0
 20219  0ECB  00A9               	movwf	??_submenu_temp+1
 20220  0ECC  0829               	movf	??_submenu_temp+1,w
 20221  0ECD  00AB               	movwf	submenu_temp@temperature_units
 20222                           
 20223                           ;menus.c: 80:   alat = temperature_tens*10 + temperature_units;
 20224  0ECE  300A               	movlw	10
 20225  0ECF  00A8               	movwf	??_submenu_temp
 20226  0ED0  0828               	movf	??_submenu_temp,w
 20227  0ED1  00F2               	movwf	___bmul@multiplicand
 20228  0ED2  082C               	movf	submenu_temp@temperature_tens,w
 20229  0ED3  3194  24B9  318E   	fcall	___bmul
 20230  0ED6  0020               	movlb	0	; select bank0
 20231  0ED7  072B               	addwf	submenu_temp@temperature_units,w
 20232  0ED8  00A9               	movwf	??_submenu_temp+1
 20233  0ED9  0829               	movf	??_submenu_temp+1,w
 20234  0EDA  00EC               	movwf	_alat
 20235  0EDB                     l1162:	
 20236                           ;menus.c: 81:  }
 20237                           
 20238                           
 20239                           ;menus.c: 82:     write_alat(alat);
 20240  0EDB  086C               	movf	_alat,w
 20241  0EDC  3188  203C  318E   	fcall	_write_alat
 20242  0EDF                     l1163:	
 20243  0EDF  0008               	return
 20244  0EE0                     __end_of_submenu_temp:	
 20245                           
 20246                           	psect	text76
 20247  083C                     __ptext76:	
 20248 ;; *************** function _write_alat *****************
 20249 ;; Defined at:
 20250 ;;		line 149 in file "eeprom.c"
 20251 ;; Parameters:    Size  Location     Type
 20252 ;;  x               1    wreg     unsigned char 
 20253 ;; Auto vars:     Size  Location     Type
 20254 ;;  x               1    7[BANK0 ] unsigned char 
 20255 ;; Return value:  Size  Location     Type
 20256 ;;                  1    wreg      void 
 20257 ;; Registers used:
 20258 ;;		wreg, status,2, status,0, pclath, cstack
 20259 ;; Tracked objects:
 20260 ;;		On entry : 0/0
 20261 ;;		On exit  : 0/0
 20262 ;;		Unchanged: 0/0
 20263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20265 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20266 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20267 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20268 ;;Total ram usage:        4 bytes
 20269 ;; Hardware stack levels used:    1
 20270 ;; Hardware stack levels required when called:    7
 20271 ;; This function calls:
 20272 ;;		_DATAEE_ReadByte
 20273 ;;		_DATAEE_WriteByte
 20274 ;; This function is called by:
 20275 ;;		_submenu_temp
 20276 ;; This function uses a non-reentrant model
 20277 ;;
 20278                           
 20279                           
 20280                           ;psect for function _write_alat
 20281  083C                     _write_alat:	
 20282                           
 20283                           ;incstack = 0
 20284                           ; Regs used in _write_alat: [wreg+status,2+status,0+pclath+cstack]
 20285                           ;write_alat@x stored from wreg
 20286  083C  0020               	movlb	0	; select bank0
 20287  083D  00A7               	movwf	write_alat@x
 20288  083E                     l6075:	
 20289                           
 20290                           ;eeprom.c: 151:     DATAEE_WriteByte(0xF000, DATAEE_ReadByte(0xF000) + x - DATAEE_ReadBy
      +                          te(0xF004));
 20291  083E  3000               	movlw	0
 20292  083F  00A0               	movwf	DATAEE_WriteByte@bAdd
 20293  0840  30F0               	movlw	240
 20294  0841  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 20295  0842  3004               	movlw	4
 20296  0843  00F2               	movwf	DATAEE_ReadByte@bAdd
 20297  0844  30F0               	movlw	240
 20298  0845  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 20299  0846  3193  23C7  3188   	fcall	_DATAEE_ReadByte
 20300  0849  0020               	movlb	0	; select bank0
 20301  084A  00A4               	movwf	??_write_alat
 20302  084B  3000               	movlw	0
 20303  084C  00F2               	movwf	DATAEE_ReadByte@bAdd
 20304  084D  30F0               	movlw	240
 20305  084E  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 20306  084F  3193  23C7  3188   	fcall	_DATAEE_ReadByte
 20307  0852  0020               	movlb	0	; select bank0
 20308  0853  00A5               	movwf	??_write_alat+1
 20309  0854  0824               	movf	??_write_alat,w
 20310  0855  0225               	subwf	??_write_alat+1,w
 20311  0856  0727               	addwf	write_alat@x,w
 20312  0857  00A6               	movwf	??_write_alat+2
 20313  0858  0826               	movf	??_write_alat+2,w
 20314  0859  00A2               	movwf	DATAEE_WriteByte@bData
 20315  085A  3197  2700  3188   	fcall	_DATAEE_WriteByte
 20316                           
 20317                           ;eeprom.c: 153:     DATAEE_WriteByte(0xF004, x);
 20318  085D  3004               	movlw	4
 20319  085E  0020               	movlb	0	; select bank0
 20320  085F  00A0               	movwf	DATAEE_WriteByte@bAdd
 20321  0860  30F0               	movlw	240
 20322  0861  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 20323  0862  0827               	movf	write_alat@x,w
 20324  0863  00A4               	movwf	??_write_alat
 20325  0864  0824               	movf	??_write_alat,w
 20326  0865  00A2               	movwf	DATAEE_WriteByte@bData
 20327  0866  3197  2700  3188   	fcall	_DATAEE_WriteByte
 20328  0869                     l1471:	
 20329  0869  0008               	return
 20330  086A                     __end_of_write_alat:	
 20331                           
 20332                           	psect	text77
 20333  14A5                     __ptext77:	
 20334 ;; *************** function _submenu_illum *****************
 20335 ;; Defined at:
 20336 ;;		line 85 in file "menus.c"
 20337 ;; Parameters:    Size  Location     Type
 20338 ;;		None
 20339 ;; Auto vars:     Size  Location     Type
 20340 ;;		None
 20341 ;; Return value:  Size  Location     Type
 20342 ;;                  1    wreg      void 
 20343 ;; Registers used:
 20344 ;;		wreg, status,2, status,0, pclath, cstack
 20345 ;; Tracked objects:
 20346 ;;		On entry : 0/0
 20347 ;;		On exit  : 0/0
 20348 ;;		Unchanged: 0/0
 20349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20352 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20353 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20354 ;;Total ram usage:        2 bytes
 20355 ;; Hardware stack levels used:    1
 20356 ;; Hardware stack levels required when called:    8
 20357 ;; This function calls:
 20358 ;;		_Update
 20359 ;;		_write_alal
 20360 ;; This function is called by:
 20361 ;;		_Menu
 20362 ;; This function uses a non-reentrant model
 20363 ;;
 20364                           
 20365                           
 20366                           ;psect for function _submenu_illum
 20367  14A5                     _submenu_illum:	
 20368  14A5                     l6223:	
 20369                           ;incstack = 0
 20370                           ; Regs used in _submenu_illum: [wreg+status,2+status,0+pclath+cstack]
 20371                           
 20372                           
 20373                           ;menus.c: 86:  alal = Update(alal, (uint8_t) 3);
 20374  14A5  3003               	movlw	3
 20375  14A6  0020               	movlb	0	; select bank0
 20376  14A7  00A8               	movwf	??_submenu_illum
 20377  14A8  0828               	movf	??_submenu_illum,w
 20378  14A9  00F4               	movwf	Update@thr
 20379  14AA  0021               	movlb	1	; select bank1
 20380  14AB  0856               	movf	_alal^(0+128),w
 20381  14AC  3197  2724  3194   	fcall	_Update
 20382  14AF  0020               	movlb	0	; select bank0
 20383  14B0  00A9               	movwf	??_submenu_illum+1
 20384  14B1  0829               	movf	??_submenu_illum+1,w
 20385  14B2  0021               	movlb	1	; select bank1
 20386  14B3  00D6               	movwf	_alal^(0+128)
 20387                           
 20388                           ;menus.c: 87:     write_alal(alal);
 20389  14B4  0856               	movf	_alal^(0+128),w
 20390  14B5  3188  200E  3194   	fcall	_write_alal
 20391  14B8                     l1166:	
 20392  14B8  0008               	return
 20393  14B9                     __end_of_submenu_illum:	
 20394                           
 20395                           	psect	text78
 20396  080E                     __ptext78:	
 20397 ;; *************** function _write_alal *****************
 20398 ;; Defined at:
 20399 ;;		line 156 in file "eeprom.c"
 20400 ;; Parameters:    Size  Location     Type
 20401 ;;  x               1    wreg     unsigned char 
 20402 ;; Auto vars:     Size  Location     Type
 20403 ;;  x               1    7[BANK0 ] unsigned char 
 20404 ;; Return value:  Size  Location     Type
 20405 ;;                  1    wreg      void 
 20406 ;; Registers used:
 20407 ;;		wreg, status,2, status,0, pclath, cstack
 20408 ;; Tracked objects:
 20409 ;;		On entry : 0/0
 20410 ;;		On exit  : 0/0
 20411 ;;		Unchanged: 0/0
 20412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20414 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20415 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20416 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20417 ;;Total ram usage:        4 bytes
 20418 ;; Hardware stack levels used:    1
 20419 ;; Hardware stack levels required when called:    7
 20420 ;; This function calls:
 20421 ;;		_DATAEE_ReadByte
 20422 ;;		_DATAEE_WriteByte
 20423 ;; This function is called by:
 20424 ;;		_submenu_illum
 20425 ;; This function uses a non-reentrant model
 20426 ;;
 20427                           
 20428                           
 20429                           ;psect for function _write_alal
 20430  080E                     _write_alal:	
 20431                           
 20432                           ;incstack = 0
 20433                           ; Regs used in _write_alal: [wreg+status,2+status,0+pclath+cstack]
 20434                           ;write_alal@x stored from wreg
 20435  080E  0020               	movlb	0	; select bank0
 20436  080F  00A7               	movwf	write_alal@x
 20437  0810                     l6077:	
 20438                           
 20439                           ;eeprom.c: 158:     DATAEE_WriteByte(0xF000, DATAEE_ReadByte(0xF000) + x - DATAEE_ReadBy
      +                          te(0xF005));
 20440  0810  3000               	movlw	0
 20441  0811  00A0               	movwf	DATAEE_WriteByte@bAdd
 20442  0812  30F0               	movlw	240
 20443  0813  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 20444  0814  3005               	movlw	5
 20445  0815  00F2               	movwf	DATAEE_ReadByte@bAdd
 20446  0816  30F0               	movlw	240
 20447  0817  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 20448  0818  3193  23C7  3188   	fcall	_DATAEE_ReadByte
 20449  081B  0020               	movlb	0	; select bank0
 20450  081C  00A4               	movwf	??_write_alal
 20451  081D  3000               	movlw	0
 20452  081E  00F2               	movwf	DATAEE_ReadByte@bAdd
 20453  081F  30F0               	movlw	240
 20454  0820  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 20455  0821  3193  23C7  3188   	fcall	_DATAEE_ReadByte
 20456  0824  0020               	movlb	0	; select bank0
 20457  0825  00A5               	movwf	??_write_alal+1
 20458  0826  0824               	movf	??_write_alal,w
 20459  0827  0225               	subwf	??_write_alal+1,w
 20460  0828  0727               	addwf	write_alal@x,w
 20461  0829  00A6               	movwf	??_write_alal+2
 20462  082A  0826               	movf	??_write_alal+2,w
 20463  082B  00A2               	movwf	DATAEE_WriteByte@bData
 20464  082C  3197  2700  3188   	fcall	_DATAEE_WriteByte
 20465                           
 20466                           ;eeprom.c: 160:     DATAEE_WriteByte(0xF005, x);
 20467  082F  3005               	movlw	5
 20468  0830  0020               	movlb	0	; select bank0
 20469  0831  00A0               	movwf	DATAEE_WriteByte@bAdd
 20470  0832  30F0               	movlw	240
 20471  0833  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 20472  0834  0827               	movf	write_alal@x,w
 20473  0835  00A4               	movwf	??_write_alal
 20474  0836  0824               	movf	??_write_alal,w
 20475  0837  00A2               	movwf	DATAEE_WriteByte@bData
 20476  0838  3197  2700  3188   	fcall	_DATAEE_WriteByte
 20477  083B                     l1474:	
 20478  083B  0008               	return
 20479  083C                     __end_of_write_alal:	
 20480                           
 20481                           	psect	text79
 20482  0501                     __ptext79:	
 20483 ;; *************** function _submenu_clock *****************
 20484 ;; Defined at:
 20485 ;;		line 46 in file "menus.c"
 20486 ;; Parameters:    Size  Location     Type
 20487 ;;		None
 20488 ;; Auto vars:     Size  Location     Type
 20489 ;;  hours_units     1   18[BANK0 ] unsigned char 
 20490 ;;  hours_tens      1   17[BANK0 ] unsigned char 
 20491 ;;  minutes_unit    1   16[BANK0 ] unsigned char 
 20492 ;;  minutes_tens    1   15[BANK0 ] unsigned char 
 20493 ;; Return value:  Size  Location     Type
 20494 ;;                  1    wreg      void 
 20495 ;; Registers used:
 20496 ;;		wreg, status,2, status,0, pclath, cstack
 20497 ;; Tracked objects:
 20498 ;;		On entry : 0/0
 20499 ;;		On exit  : 0/0
 20500 ;;		Unchanged: 0/0
 20501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20503 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20504 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20505 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20506 ;;Total ram usage:        7 bytes
 20507 ;; Hardware stack levels used:    1
 20508 ;; Hardware stack levels required when called:    9
 20509 ;; This function calls:
 20510 ;;		_Update
 20511 ;;		___awdiv
 20512 ;;		___awmod
 20513 ;;		___bmul
 20514 ;;		_update_clk
 20515 ;; This function is called by:
 20516 ;;		_Menu
 20517 ;; This function uses a non-reentrant model
 20518 ;;
 20519                           
 20520                           
 20521                           ;psect for function _submenu_clock
 20522  0501                     _submenu_clock:	
 20523  0501                     l6201:	
 20524                           ;incstack = 0
 20525                           ; Regs used in _submenu_clock: [wreg+status,2+status,0+pclath+cstack]
 20526                           
 20527                           
 20528                           ;menus.c: 47:  uint8_t hours_tens = clkh/10;
 20529  0501  300A               	movlw	10
 20530  0502  00F4               	movwf	___awdiv@divisor
 20531  0503  3000               	movlw	0
 20532  0504  00F5               	movwf	___awdiv@divisor+1
 20533  0505  0020               	movlb	0	; select bank0
 20534  0506  086A               	movf	_clkh,w	;volatile
 20535  0507  00AC               	movwf	??_submenu_clock
 20536  0508  01AD               	clrf	??_submenu_clock+1
 20537  0509  082C               	movf	??_submenu_clock,w
 20538  050A  00F6               	movwf	___awdiv@dividend
 20539  050B  082D               	movf	??_submenu_clock+1,w
 20540  050C  00F7               	movwf	___awdiv@dividend+1
 20541  050D  318F  273D  3185   	fcall	___awdiv
 20542  0510  0874               	movf	?___awdiv,w
 20543  0511  0020               	movlb	0	; select bank0
 20544  0512  00AE               	movwf	??_submenu_clock+2
 20545  0513  082E               	movf	??_submenu_clock+2,w
 20546  0514  00B1               	movwf	submenu_clock@hours_tens
 20547                           
 20548                           ;menus.c: 48:  uint8_t hours_units = clkh%10;
 20549  0515  300A               	movlw	10
 20550  0516  00F2               	movwf	___awmod@divisor
 20551  0517  3000               	movlw	0
 20552  0518  00F3               	movwf	___awmod@divisor+1
 20553  0519  086A               	movf	_clkh,w	;volatile
 20554  051A  00AC               	movwf	??_submenu_clock
 20555  051B  01AD               	clrf	??_submenu_clock+1
 20556  051C  082C               	movf	??_submenu_clock,w
 20557  051D  00F4               	movwf	___awmod@dividend
 20558  051E  082D               	movf	??_submenu_clock+1,w
 20559  051F  00F5               	movwf	___awmod@dividend+1
 20560  0520  318D  258B  3185   	fcall	___awmod
 20561  0523  0872               	movf	?___awmod,w
 20562  0524  0020               	movlb	0	; select bank0
 20563  0525  00AE               	movwf	??_submenu_clock+2
 20564  0526  082E               	movf	??_submenu_clock+2,w
 20565  0527  00B2               	movwf	submenu_clock@hours_units
 20566                           
 20567                           ;menus.c: 49:  hours_tens = Update(hours_tens, (uint8_t) 2);
 20568  0528  3002               	movlw	2
 20569  0529  00AC               	movwf	??_submenu_clock
 20570  052A  082C               	movf	??_submenu_clock,w
 20571  052B  00F4               	movwf	Update@thr
 20572  052C  0831               	movf	submenu_clock@hours_tens,w
 20573  052D  3197  2724  3185   	fcall	_Update
 20574  0530  0020               	movlb	0	; select bank0
 20575  0531  00AD               	movwf	??_submenu_clock+1
 20576  0532  082D               	movf	??_submenu_clock+1,w
 20577  0533  00B1               	movwf	submenu_clock@hours_tens
 20578  0534                     l6203:	
 20579                           
 20580                           ;menus.c: 50:  if(hours_tens == 2){
 20581  0534  3002               	movlw	2
 20582  0535  0631               	xorwf	submenu_clock@hours_tens,w
 20583  0536  1D03               	btfss	3,2
 20584  0537  2D39               	goto	u5001
 20585  0538  2D3A               	goto	u5000
 20586  0539                     u5001:	
 20587  0539  2D4E               	goto	l6211
 20588  053A                     u5000:	
 20589  053A                     l6205:	
 20590                           
 20591                           ;menus.c: 51:   if(hours_units>3) hours_units = 0;
 20592  053A  3004               	movlw	4
 20593  053B  0232               	subwf	submenu_clock@hours_units,w
 20594  053C  1C03               	skipc
 20595  053D  2D3F               	goto	u5011
 20596  053E  2D40               	goto	u5010
 20597  053F                     u5011:	
 20598  053F  2D41               	goto	l6209
 20599  0540                     u5010:	
 20600  0540                     l6207:	
 20601  0540  01B2               	clrf	submenu_clock@hours_units
 20602  0541                     l6209:	
 20603                           
 20604                           ;menus.c: 52:   hours_units = Update(hours_units, (uint8_t) 3);
 20605  0541  3003               	movlw	3
 20606  0542  00AC               	movwf	??_submenu_clock
 20607  0543  082C               	movf	??_submenu_clock,w
 20608  0544  00F4               	movwf	Update@thr
 20609  0545  0832               	movf	submenu_clock@hours_units,w
 20610  0546  3197  2724  3185   	fcall	_Update
 20611  0549  0020               	movlb	0	; select bank0
 20612  054A  00AD               	movwf	??_submenu_clock+1
 20613  054B  082D               	movf	??_submenu_clock+1,w
 20614  054C  00B2               	movwf	submenu_clock@hours_units
 20615                           
 20616                           ;menus.c: 53:  } else
 20617  054D  2D5A               	goto	l1154
 20618  054E                     l6211:	
 20619                           
 20620                           ;menus.c: 54:   hours_units = Update(hours_units, (uint8_t) 9);
 20621  054E  3009               	movlw	9
 20622  054F  00AC               	movwf	??_submenu_clock
 20623  0550  082C               	movf	??_submenu_clock,w
 20624  0551  00F4               	movwf	Update@thr
 20625  0552  0832               	movf	submenu_clock@hours_units,w
 20626  0553  3197  2724  3185   	fcall	_Update
 20627  0556  0020               	movlb	0	; select bank0
 20628  0557  00AD               	movwf	??_submenu_clock+1
 20629  0558  082D               	movf	??_submenu_clock+1,w
 20630  0559  00B2               	movwf	submenu_clock@hours_units
 20631  055A                     l1154:	
 20632                           
 20633                           ;menus.c: 56:  uint8_t minutes_tens = clkm/10;
 20634  055A  300A               	movlw	10
 20635  055B  00F4               	movwf	___awdiv@divisor
 20636  055C  3000               	movlw	0
 20637  055D  00F5               	movwf	___awdiv@divisor+1
 20638  055E  0869               	movf	_clkm,w	;volatile
 20639  055F  00AC               	movwf	??_submenu_clock
 20640  0560  01AD               	clrf	??_submenu_clock+1
 20641  0561  082C               	movf	??_submenu_clock,w
 20642  0562  00F6               	movwf	___awdiv@dividend
 20643  0563  082D               	movf	??_submenu_clock+1,w
 20644  0564  00F7               	movwf	___awdiv@dividend+1
 20645  0565  318F  273D  3185   	fcall	___awdiv
 20646  0568  0874               	movf	?___awdiv,w
 20647  0569  0020               	movlb	0	; select bank0
 20648  056A  00AE               	movwf	??_submenu_clock+2
 20649  056B  082E               	movf	??_submenu_clock+2,w
 20650  056C  00AF               	movwf	submenu_clock@minutes_tens
 20651                           
 20652                           ;menus.c: 57:  uint8_t minutes_units = clkm%10;
 20653  056D  300A               	movlw	10
 20654  056E  00F2               	movwf	___awmod@divisor
 20655  056F  3000               	movlw	0
 20656  0570  00F3               	movwf	___awmod@divisor+1
 20657  0571  0869               	movf	_clkm,w	;volatile
 20658  0572  00AC               	movwf	??_submenu_clock
 20659  0573  01AD               	clrf	??_submenu_clock+1
 20660  0574  082C               	movf	??_submenu_clock,w
 20661  0575  00F4               	movwf	___awmod@dividend
 20662  0576  082D               	movf	??_submenu_clock+1,w
 20663  0577  00F5               	movwf	___awmod@dividend+1
 20664  0578  318D  258B  3185   	fcall	___awmod
 20665  057B  0872               	movf	?___awmod,w
 20666  057C  0020               	movlb	0	; select bank0
 20667  057D  00AE               	movwf	??_submenu_clock+2
 20668  057E  082E               	movf	??_submenu_clock+2,w
 20669  057F  00B0               	movwf	submenu_clock@minutes_units
 20670                           
 20671                           ;menus.c: 58:  minutes_tens = Update(minutes_tens, (uint8_t) 5);
 20672  0580  3005               	movlw	5
 20673  0581  00AC               	movwf	??_submenu_clock
 20674  0582  082C               	movf	??_submenu_clock,w
 20675  0583  00F4               	movwf	Update@thr
 20676  0584  082F               	movf	submenu_clock@minutes_tens,w
 20677  0585  3197  2724  3185   	fcall	_Update
 20678  0588  0020               	movlb	0	; select bank0
 20679  0589  00AD               	movwf	??_submenu_clock+1
 20680  058A  082D               	movf	??_submenu_clock+1,w
 20681  058B  00AF               	movwf	submenu_clock@minutes_tens
 20682                           
 20683                           ;menus.c: 59:  minutes_units = Update(minutes_units, (uint8_t) 9);
 20684  058C  3009               	movlw	9
 20685  058D  00AC               	movwf	??_submenu_clock
 20686  058E  082C               	movf	??_submenu_clock,w
 20687  058F  00F4               	movwf	Update@thr
 20688  0590  0830               	movf	submenu_clock@minutes_units,w
 20689  0591  3197  2724  3185   	fcall	_Update
 20690  0594  0020               	movlb	0	; select bank0
 20691  0595  00AD               	movwf	??_submenu_clock+1
 20692  0596  082D               	movf	??_submenu_clock+1,w
 20693  0597  00B0               	movwf	submenu_clock@minutes_units
 20694                           
 20695                           ;menus.c: 61:  clkh = 10*hours_tens + hours_units;
 20696  0598  300A               	movlw	10
 20697  0599  00AC               	movwf	??_submenu_clock
 20698  059A  082C               	movf	??_submenu_clock,w
 20699  059B  00F2               	movwf	___bmul@multiplicand
 20700  059C  0831               	movf	submenu_clock@hours_tens,w
 20701  059D  3194  24B9  3185   	fcall	___bmul
 20702  05A0  0020               	movlb	0	; select bank0
 20703  05A1  0732               	addwf	submenu_clock@hours_units,w
 20704  05A2  00AD               	movwf	??_submenu_clock+1
 20705  05A3  082D               	movf	??_submenu_clock+1,w
 20706  05A4  00EA               	movwf	_clkh	;volatile
 20707                           
 20708                           ;menus.c: 62:  clkm = 10*minutes_tens + minutes_units;
 20709  05A5  300A               	movlw	10
 20710  05A6  00AC               	movwf	??_submenu_clock
 20711  05A7  082C               	movf	??_submenu_clock,w
 20712  05A8  00F2               	movwf	___bmul@multiplicand
 20713  05A9  082F               	movf	submenu_clock@minutes_tens,w
 20714  05AA  3194  24B9  3185   	fcall	___bmul
 20715  05AD  0020               	movlb	0	; select bank0
 20716  05AE  0730               	addwf	submenu_clock@minutes_units,w
 20717  05AF  00AD               	movwf	??_submenu_clock+1
 20718  05B0  082D               	movf	??_submenu_clock+1,w
 20719  05B1  00E9               	movwf	_clkm	;volatile
 20720                           
 20721                           ;menus.c: 63:     update_clk();
 20722  05B2  3193  23A6  3185   	fcall	_update_clk
 20723  05B5                     l1155:	
 20724  05B5  0008               	return
 20725  05B6                     __end_of_submenu_clock:	
 20726                           
 20727                           	psect	text80
 20728  13A6                     __ptext80:	
 20729 ;; *************** function _update_clk *****************
 20730 ;; Defined at:
 20731 ;;		line 127 in file "utils.c"
 20732 ;; Parameters:    Size  Location     Type
 20733 ;;		None
 20734 ;; Auto vars:     Size  Location     Type
 20735 ;;		None
 20736 ;; Return value:  Size  Location     Type
 20737 ;;                  1    wreg      void 
 20738 ;; Registers used:
 20739 ;;		wreg, status,2, status,0, pclath, cstack
 20740 ;; Tracked objects:
 20741 ;;		On entry : 0/0
 20742 ;;		On exit  : 0/0
 20743 ;;		Unchanged: 0/0
 20744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20747 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20748 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20749 ;;Total ram usage:        1 bytes
 20750 ;; Hardware stack levels used:    1
 20751 ;; Hardware stack levels required when called:    8
 20752 ;; This function calls:
 20753 ;;		_eeprom_clk_update
 20754 ;; This function is called by:
 20755 ;;		_main
 20756 ;;		_submenu_clock
 20757 ;;		_set_clock
 20758 ;; This function uses a non-reentrant model
 20759 ;;
 20760                           
 20761                           
 20762                           ;psect for function _update_clk
 20763  13A6                     _update_clk:	
 20764  13A6                     l6051:	
 20765                           ;incstack = 0
 20766                           ; Regs used in _update_clk: [wreg+status,2+status,0+pclath+cstack]
 20767                           
 20768                           
 20769                           ;utils.c: 128:     eeprom_clk_update(clkh, clkm);
 20770  13A6  0020               	movlb	0	; select bank0
 20771  13A7  0869               	movf	_clkm,w	;volatile
 20772  13A8  00AB               	movwf	??_update_clk
 20773  13A9  082B               	movf	??_update_clk,w
 20774  13AA  00A4               	movwf	eeprom_clk_update@clkm
 20775  13AB  086A               	movf	_clkh,w	;volatile
 20776  13AC  318B  23CD  3193   	fcall	_eeprom_clk_update
 20777  13AF                     l1386:	
 20778  13AF  0008               	return
 20779  13B0                     __end_of_update_clk:	
 20780                           
 20781                           	psect	text81
 20782  0BCD                     __ptext81:	
 20783 ;; *************** function _eeprom_clk_update *****************
 20784 ;; Defined at:
 20785 ;;		line 73 in file "eeprom.c"
 20786 ;; Parameters:    Size  Location     Type
 20787 ;;  clkh            1    wreg     unsigned char 
 20788 ;;  clkm            1    4[BANK0 ] unsigned char 
 20789 ;; Auto vars:     Size  Location     Type
 20790 ;;  clkh            1   10[BANK0 ] unsigned char 
 20791 ;; Return value:  Size  Location     Type
 20792 ;;                  1    wreg      void 
 20793 ;; Registers used:
 20794 ;;		wreg, status,2, status,0, pclath, cstack
 20795 ;; Tracked objects:
 20796 ;;		On entry : 0/0
 20797 ;;		On exit  : 0/0
 20798 ;;		Unchanged: 0/0
 20799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20800 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20801 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20802 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20803 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20804 ;;Total ram usage:        7 bytes
 20805 ;; Hardware stack levels used:    1
 20806 ;; Hardware stack levels required when called:    7
 20807 ;; This function calls:
 20808 ;;		_DATAEE_ReadByte
 20809 ;;		_DATAEE_WriteByte
 20810 ;; This function is called by:
 20811 ;;		_update_clk
 20812 ;; This function uses a non-reentrant model
 20813 ;;
 20814                           
 20815                           
 20816                           ;psect for function _eeprom_clk_update
 20817  0BCD                     _eeprom_clk_update:	
 20818                           
 20819                           ;incstack = 0
 20820                           ; Regs used in _eeprom_clk_update: [wreg+status,2+status,0+pclath+cstack]
 20821                           ;eeprom_clk_update@clkh stored from wreg
 20822  0BCD  0020               	movlb	0	; select bank0
 20823  0BCE  00AA               	movwf	eeprom_clk_update@clkh
 20824  0BCF                     l5979:	
 20825                           
 20826                           ;eeprom.c: 75:     DATAEE_WriteByte(0xF000, DATAEE_ReadByte(0xF000) + clkh + clkm - DATA
      +                          EE_ReadByte(0xF007) - DATAEE_ReadByte(0xF008));
 20827  0BCF  3000               	movlw	0
 20828  0BD0  00A0               	movwf	DATAEE_WriteByte@bAdd
 20829  0BD1  30F0               	movlw	240
 20830  0BD2  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 20831  0BD3  3008               	movlw	8
 20832  0BD4  00F2               	movwf	DATAEE_ReadByte@bAdd
 20833  0BD5  30F0               	movlw	240
 20834  0BD6  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 20835  0BD7  3193  23C7  318B   	fcall	_DATAEE_ReadByte
 20836  0BDA  0020               	movlb	0	; select bank0
 20837  0BDB  00A5               	movwf	??_eeprom_clk_update
 20838  0BDC  3007               	movlw	7
 20839  0BDD  00F2               	movwf	DATAEE_ReadByte@bAdd
 20840  0BDE  30F0               	movlw	240
 20841  0BDF  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 20842  0BE0  3193  23C7  318B   	fcall	_DATAEE_ReadByte
 20843  0BE3  0020               	movlb	0	; select bank0
 20844  0BE4  00A6               	movwf	??_eeprom_clk_update+1
 20845  0BE5  3000               	movlw	0
 20846  0BE6  00F2               	movwf	DATAEE_ReadByte@bAdd
 20847  0BE7  30F0               	movlw	240
 20848  0BE8  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 20849  0BE9  3193  23C7  318B   	fcall	_DATAEE_ReadByte
 20850  0BEC  0020               	movlb	0	; select bank0
 20851  0BED  00A7               	movwf	??_eeprom_clk_update+2
 20852  0BEE  0826               	movf	??_eeprom_clk_update+1,w
 20853  0BEF  0227               	subwf	??_eeprom_clk_update+2,w
 20854  0BF0  00A8               	movwf	??_eeprom_clk_update+3
 20855  0BF1  0825               	movf	??_eeprom_clk_update,w
 20856  0BF2  0228               	subwf	??_eeprom_clk_update+3,w
 20857  0BF3  072A               	addwf	eeprom_clk_update@clkh,w
 20858  0BF4  0724               	addwf	eeprom_clk_update@clkm,w
 20859  0BF5  00A9               	movwf	??_eeprom_clk_update+4
 20860  0BF6  0829               	movf	??_eeprom_clk_update+4,w
 20861  0BF7  00A2               	movwf	DATAEE_WriteByte@bData
 20862  0BF8  3197  2700  318B   	fcall	_DATAEE_WriteByte
 20863                           
 20864                           ;eeprom.c: 77:     DATAEE_WriteByte(0xF007, clkh);
 20865  0BFB  3007               	movlw	7
 20866  0BFC  0020               	movlb	0	; select bank0
 20867  0BFD  00A0               	movwf	DATAEE_WriteByte@bAdd
 20868  0BFE  30F0               	movlw	240
 20869  0BFF  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 20870  0C00  082A               	movf	eeprom_clk_update@clkh,w
 20871  0C01  00A5               	movwf	??_eeprom_clk_update
 20872  0C02  0825               	movf	??_eeprom_clk_update,w
 20873  0C03  00A2               	movwf	DATAEE_WriteByte@bData
 20874  0C04  3197  2700  318B   	fcall	_DATAEE_WriteByte
 20875                           
 20876                           ;eeprom.c: 78:     DATAEE_WriteByte(0xF008, clkm);
 20877  0C07  3008               	movlw	8
 20878  0C08  0020               	movlb	0	; select bank0
 20879  0C09  00A0               	movwf	DATAEE_WriteByte@bAdd
 20880  0C0A  30F0               	movlw	240
 20881  0C0B  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 20882  0C0C  0824               	movf	eeprom_clk_update@clkm,w
 20883  0C0D  00A5               	movwf	??_eeprom_clk_update
 20884  0C0E  0825               	movf	??_eeprom_clk_update,w
 20885  0C0F  00A2               	movwf	DATAEE_WriteByte@bData
 20886  0C10  3197  2700  318B   	fcall	_DATAEE_WriteByte
 20887  0C13                     l1416:	
 20888  0C13  0008               	return
 20889  0C14                     __end_of_eeprom_clk_update:	
 20890                           
 20891                           	psect	text82
 20892  14B9                     __ptext82:	
 20893 ;; *************** function ___bmul *****************
 20894 ;; Defined at:
 20895 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul8.c"
 20896 ;; Parameters:    Size  Location     Type
 20897 ;;  multiplier      1    wreg     unsigned char 
 20898 ;;  multiplicand    1    2[COMMON] unsigned char 
 20899 ;; Auto vars:     Size  Location     Type
 20900 ;;  multiplier      1    5[COMMON] unsigned char 
 20901 ;;  product         1    4[COMMON] unsigned char 
 20902 ;; Return value:  Size  Location     Type
 20903 ;;                  1    wreg      unsigned char 
 20904 ;; Registers used:
 20905 ;;		wreg, status,2, status,0
 20906 ;; Tracked objects:
 20907 ;;		On entry : 0/0
 20908 ;;		On exit  : 0/0
 20909 ;;		Unchanged: 0/0
 20910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20911 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20912 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20913 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20914 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20915 ;;Total ram usage:        4 bytes
 20916 ;; Hardware stack levels used:    1
 20917 ;; Hardware stack levels required when called:    6
 20918 ;; This function calls:
 20919 ;;		Nothing
 20920 ;; This function is called by:
 20921 ;;		_submenu_clock
 20922 ;;		_submenu_temp
 20923 ;; This function uses a non-reentrant model
 20924 ;;
 20925                           
 20926                           
 20927                           ;psect for function ___bmul
 20928  14B9                     ___bmul:	
 20929                           
 20930                           ;incstack = 0
 20931                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 20932                           ;___bmul@multiplier stored from wreg
 20933  14B9  00F5               	movwf	___bmul@multiplier
 20934  14BA                     l6125:	
 20935  14BA  01F4               	clrf	___bmul@product
 20936  14BB                     l6127:	
 20937  14BB  1C75               	btfss	___bmul@multiplier,0
 20938  14BC  2CBE               	goto	u4881
 20939  14BD  2CBF               	goto	u4880
 20940  14BE                     u4881:	
 20941  14BE  2CC3               	goto	l6131
 20942  14BF                     u4880:	
 20943  14BF                     l6129:	
 20944  14BF  0872               	movf	___bmul@multiplicand,w
 20945  14C0  00F3               	movwf	??___bmul
 20946  14C1  0873               	movf	??___bmul,w
 20947  14C2  07F4               	addwf	___bmul@product,f
 20948  14C3                     l6131:	
 20949  14C3  1003               	clrc
 20950  14C4  0DF2               	rlf	___bmul@multiplicand,f
 20951  14C5                     l6133:	
 20952  14C5  1003               	clrc
 20953  14C6  0CF5               	rrf	___bmul@multiplier,f
 20954  14C7  0875               	movf	___bmul@multiplier,w
 20955  14C8  1D03               	btfss	3,2
 20956  14C9  2CCB               	goto	u4891
 20957  14CA  2CCC               	goto	u4890
 20958  14CB                     u4891:	
 20959  14CB  2CBB               	goto	l6127
 20960  14CC                     u4890:	
 20961  14CC                     l6135:	
 20962  14CC  0874               	movf	___bmul@product,w
 20963  14CD                     l1923:	
 20964  14CD  0008               	return
 20965  14CE                     __end_of___bmul:	
 20966                           
 20967                           	psect	text83
 20968  0D8B                     __ptext83:	
 20969 ;; *************** function ___awmod *****************
 20970 ;; Defined at:
 20971 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 20972 ;; Parameters:    Size  Location     Type
 20973 ;;  divisor         2    2[COMMON] int 
 20974 ;;  dividend        2    4[COMMON] int 
 20975 ;; Auto vars:     Size  Location     Type
 20976 ;;  sign            1    8[COMMON] unsigned char 
 20977 ;;  counter         1    7[COMMON] unsigned char 
 20978 ;; Return value:  Size  Location     Type
 20979 ;;                  2    2[COMMON] int 
 20980 ;; Registers used:
 20981 ;;		wreg, status,2, status,0
 20982 ;; Tracked objects:
 20983 ;;		On entry : 0/0
 20984 ;;		On exit  : 0/0
 20985 ;;		Unchanged: 0/0
 20986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20987 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20988 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20989 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20990 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20991 ;;Total ram usage:        7 bytes
 20992 ;; Hardware stack levels used:    1
 20993 ;; Hardware stack levels required when called:    6
 20994 ;; This function calls:
 20995 ;;		Nothing
 20996 ;; This function is called by:
 20997 ;;		_submenu_clock
 20998 ;;		_submenu_temp
 20999 ;;		_transfer_registers_i
 21000 ;;		_transfer_registers
 21001 ;; This function uses a non-reentrant model
 21002 ;;
 21003                           
 21004                           
 21005                           ;psect for function ___awmod
 21006  0D8B                     ___awmod:	
 21007  0D8B                     l6013:	
 21008                           ;incstack = 0
 21009                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 21010                           
 21011  0D8B  01F8               	clrf	___awmod@sign
 21012  0D8C                     l6015:	
 21013  0D8C  1FF5               	btfss	___awmod@dividend+1,7
 21014  0D8D  2D8F               	goto	u4691
 21015  0D8E  2D90               	goto	u4690
 21016  0D8F                     u4691:	
 21017  0D8F  2D97               	goto	l6021
 21018  0D90                     u4690:	
 21019  0D90                     l6017:	
 21020  0D90  09F4               	comf	___awmod@dividend,f
 21021  0D91  09F5               	comf	___awmod@dividend+1,f
 21022  0D92  0AF4               	incf	___awmod@dividend,f
 21023  0D93  1903               	skipnz
 21024  0D94  0AF5               	incf	___awmod@dividend+1,f
 21025  0D95                     l6019:	
 21026  0D95  01F8               	clrf	___awmod@sign
 21027  0D96  0AF8               	incf	___awmod@sign,f
 21028  0D97                     l6021:	
 21029  0D97  1FF3               	btfss	___awmod@divisor+1,7
 21030  0D98  2D9A               	goto	u4701
 21031  0D99  2D9B               	goto	u4700
 21032  0D9A                     u4701:	
 21033  0D9A  2DA0               	goto	l6025
 21034  0D9B                     u4700:	
 21035  0D9B                     l6023:	
 21036  0D9B  09F2               	comf	___awmod@divisor,f
 21037  0D9C  09F3               	comf	___awmod@divisor+1,f
 21038  0D9D  0AF2               	incf	___awmod@divisor,f
 21039  0D9E  1903               	skipnz
 21040  0D9F  0AF3               	incf	___awmod@divisor+1,f
 21041  0DA0                     l6025:	
 21042  0DA0  0872               	movf	___awmod@divisor,w
 21043  0DA1  0473               	iorwf	___awmod@divisor+1,w
 21044  0DA2  1903               	btfsc	3,2
 21045  0DA3  2DA5               	goto	u4711
 21046  0DA4  2DA6               	goto	u4710
 21047  0DA5                     u4711:	
 21048  0DA5  2DCF               	goto	l6043
 21049  0DA6                     u4710:	
 21050  0DA6                     l6027:	
 21051  0DA6  01F7               	clrf	___awmod@counter
 21052  0DA7  0AF7               	incf	___awmod@counter,f
 21053  0DA8  2DB2               	goto	l6033
 21054  0DA9                     l6029:	
 21055  0DA9  3001               	movlw	1
 21056  0DAA                     u4725:	
 21057  0DAA  35F2               	lslf	___awmod@divisor,f
 21058  0DAB  0DF3               	rlf	___awmod@divisor+1,f
 21059  0DAC  0B89               	decfsz	9,f
 21060  0DAD  2DAA               	goto	u4725
 21061  0DAE                     l6031:	
 21062  0DAE  3001               	movlw	1
 21063  0DAF  00F6               	movwf	??___awmod
 21064  0DB0  0876               	movf	??___awmod,w
 21065  0DB1  07F7               	addwf	___awmod@counter,f
 21066  0DB2                     l6033:	
 21067  0DB2  1FF3               	btfss	___awmod@divisor+1,7
 21068  0DB3  2DB5               	goto	u4731
 21069  0DB4  2DB6               	goto	u4730
 21070  0DB5                     u4731:	
 21071  0DB5  2DA9               	goto	l6029
 21072  0DB6                     u4730:	
 21073  0DB6                     l6035:	
 21074  0DB6  0873               	movf	___awmod@divisor+1,w
 21075  0DB7  0275               	subwf	___awmod@dividend+1,w
 21076  0DB8  1D03               	skipz
 21077  0DB9  2DBC               	goto	u4745
 21078  0DBA  0872               	movf	___awmod@divisor,w
 21079  0DBB  0274               	subwf	___awmod@dividend,w
 21080  0DBC                     u4745:	
 21081  0DBC  1C03               	skipc
 21082  0DBD  2DBF               	goto	u4741
 21083  0DBE  2DC0               	goto	u4740
 21084  0DBF                     u4741:	
 21085  0DBF  2DC4               	goto	l6039
 21086  0DC0                     u4740:	
 21087  0DC0                     l6037:	
 21088  0DC0  0872               	movf	___awmod@divisor,w
 21089  0DC1  02F4               	subwf	___awmod@dividend,f
 21090  0DC2  0873               	movf	___awmod@divisor+1,w
 21091  0DC3  3BF5               	subwfb	___awmod@dividend+1,f
 21092  0DC4                     l6039:	
 21093  0DC4  3001               	movlw	1
 21094  0DC5                     u4755:	
 21095  0DC5  36F3               	lsrf	___awmod@divisor+1,f
 21096  0DC6  0CF2               	rrf	___awmod@divisor,f
 21097  0DC7  0B89               	decfsz	9,f
 21098  0DC8  2DC5               	goto	u4755
 21099  0DC9                     l6041:	
 21100  0DC9  3001               	movlw	1
 21101  0DCA  02F7               	subwf	___awmod@counter,f
 21102  0DCB  1D03               	btfss	3,2
 21103  0DCC  2DCE               	goto	u4761
 21104  0DCD  2DCF               	goto	u4760
 21105  0DCE                     u4761:	
 21106  0DCE  2DB6               	goto	l6035
 21107  0DCF                     u4760:	
 21108  0DCF                     l6043:	
 21109  0DCF  0878               	movf	___awmod@sign,w
 21110  0DD0  1903               	btfsc	3,2
 21111  0DD1  2DD3               	goto	u4771
 21112  0DD2  2DD4               	goto	u4770
 21113  0DD3                     u4771:	
 21114  0DD3  2DD9               	goto	l6047
 21115  0DD4                     u4770:	
 21116  0DD4                     l6045:	
 21117  0DD4  09F4               	comf	___awmod@dividend,f
 21118  0DD5  09F5               	comf	___awmod@dividend+1,f
 21119  0DD6  0AF4               	incf	___awmod@dividend,f
 21120  0DD7  1903               	skipnz
 21121  0DD8  0AF5               	incf	___awmod@dividend+1,f
 21122  0DD9                     l6047:	
 21123  0DD9  0875               	movf	___awmod@dividend+1,w
 21124  0DDA  00F3               	movwf	?___awmod+1
 21125  0DDB  0874               	movf	___awmod@dividend,w
 21126  0DDC  00F2               	movwf	?___awmod
 21127  0DDD                     l2063:	
 21128  0DDD  0008               	return
 21129  0DDE                     __end_of___awmod:	
 21130                           
 21131                           	psect	text84
 21132  0F3D                     __ptext84:	
 21133 ;; *************** function ___awdiv *****************
 21134 ;; Defined at:
 21135 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 21136 ;; Parameters:    Size  Location     Type
 21137 ;;  divisor         2    4[COMMON] int 
 21138 ;;  dividend        2    6[COMMON] int 
 21139 ;; Auto vars:     Size  Location     Type
 21140 ;;  quotient        2    2[BANK0 ] int 
 21141 ;;  sign            1    1[BANK0 ] unsigned char 
 21142 ;;  counter         1    0[BANK0 ] unsigned char 
 21143 ;; Return value:  Size  Location     Type
 21144 ;;                  2    4[COMMON] int 
 21145 ;; Registers used:
 21146 ;;		wreg, status,2, status,0
 21147 ;; Tracked objects:
 21148 ;;		On entry : 0/0
 21149 ;;		On exit  : 0/0
 21150 ;;		Unchanged: 0/0
 21151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21153 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21154 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21155 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21156 ;;Total ram usage:        9 bytes
 21157 ;; Hardware stack levels used:    1
 21158 ;; Hardware stack levels required when called:    6
 21159 ;; This function calls:
 21160 ;;		Nothing
 21161 ;; This function is called by:
 21162 ;;		_submenu_clock
 21163 ;;		_submenu_temp
 21164 ;;		_ring_buffer_write
 21165 ;; This function uses a non-reentrant model
 21166 ;;
 21167                           
 21168                           
 21169                           ;psect for function ___awdiv
 21170  0F3D                     ___awdiv:	
 21171  0F3D                     l6139:	
 21172                           ;incstack = 0
 21173                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 21174                           
 21175  0F3D  0020               	movlb	0	; select bank0
 21176  0F3E  01A1               	clrf	___awdiv@sign
 21177  0F3F                     l6141:	
 21178  0F3F  1FF5               	btfss	___awdiv@divisor+1,7
 21179  0F40  2F42               	goto	u4901
 21180  0F41  2F43               	goto	u4900
 21181  0F42                     u4901:	
 21182  0F42  2F4A               	goto	l6147
 21183  0F43                     u4900:	
 21184  0F43                     l6143:	
 21185  0F43  09F4               	comf	___awdiv@divisor,f
 21186  0F44  09F5               	comf	___awdiv@divisor+1,f
 21187  0F45  0AF4               	incf	___awdiv@divisor,f
 21188  0F46  1903               	skipnz
 21189  0F47  0AF5               	incf	___awdiv@divisor+1,f
 21190  0F48                     l6145:	
 21191  0F48  01A1               	clrf	___awdiv@sign
 21192  0F49  0AA1               	incf	___awdiv@sign,f
 21193  0F4A                     l6147:	
 21194  0F4A  1FF7               	btfss	___awdiv@dividend+1,7
 21195  0F4B  2F4D               	goto	u4911
 21196  0F4C  2F4E               	goto	u4910
 21197  0F4D                     u4911:	
 21198  0F4D  2F57               	goto	l6153
 21199  0F4E                     u4910:	
 21200  0F4E                     l6149:	
 21201  0F4E  09F6               	comf	___awdiv@dividend,f
 21202  0F4F  09F7               	comf	___awdiv@dividend+1,f
 21203  0F50  0AF6               	incf	___awdiv@dividend,f
 21204  0F51  1903               	skipnz
 21205  0F52  0AF7               	incf	___awdiv@dividend+1,f
 21206  0F53                     l6151:	
 21207  0F53  3001               	movlw	1
 21208  0F54  00F8               	movwf	??___awdiv
 21209  0F55  0878               	movf	??___awdiv,w
 21210  0F56  06A1               	xorwf	___awdiv@sign,f
 21211  0F57                     l6153:	
 21212  0F57  01A2               	clrf	___awdiv@quotient
 21213  0F58  01A3               	clrf	___awdiv@quotient+1
 21214  0F59                     l6155:	
 21215  0F59  0874               	movf	___awdiv@divisor,w
 21216  0F5A  0475               	iorwf	___awdiv@divisor+1,w
 21217  0F5B  1903               	btfsc	3,2
 21218  0F5C  2F5E               	goto	u4921
 21219  0F5D  2F5F               	goto	u4920
 21220  0F5E                     u4921:	
 21221  0F5E  2F8E               	goto	l6175
 21222  0F5F                     u4920:	
 21223  0F5F                     l6157:	
 21224  0F5F  01A0               	clrf	___awdiv@counter
 21225  0F60  0AA0               	incf	___awdiv@counter,f
 21226  0F61  2F6B               	goto	l6163
 21227  0F62                     l6159:	
 21228  0F62  3001               	movlw	1
 21229  0F63                     u4935:	
 21230  0F63  35F4               	lslf	___awdiv@divisor,f
 21231  0F64  0DF5               	rlf	___awdiv@divisor+1,f
 21232  0F65  0B89               	decfsz	9,f
 21233  0F66  2F63               	goto	u4935
 21234  0F67                     l6161:	
 21235  0F67  3001               	movlw	1
 21236  0F68  00F8               	movwf	??___awdiv
 21237  0F69  0878               	movf	??___awdiv,w
 21238  0F6A  07A0               	addwf	___awdiv@counter,f
 21239  0F6B                     l6163:	
 21240  0F6B  1FF5               	btfss	___awdiv@divisor+1,7
 21241  0F6C  2F6E               	goto	u4941
 21242  0F6D  2F6F               	goto	u4940
 21243  0F6E                     u4941:	
 21244  0F6E  2F62               	goto	l6159
 21245  0F6F                     u4940:	
 21246  0F6F                     l6165:	
 21247  0F6F  3001               	movlw	1
 21248  0F70                     u4955:	
 21249  0F70  35A2               	lslf	___awdiv@quotient,f
 21250  0F71  0DA3               	rlf	___awdiv@quotient+1,f
 21251  0F72  0B89               	decfsz	9,f
 21252  0F73  2F70               	goto	u4955
 21253  0F74  0875               	movf	___awdiv@divisor+1,w
 21254  0F75  0277               	subwf	___awdiv@dividend+1,w
 21255  0F76  1D03               	skipz
 21256  0F77  2F7A               	goto	u4965
 21257  0F78  0874               	movf	___awdiv@divisor,w
 21258  0F79  0276               	subwf	___awdiv@dividend,w
 21259  0F7A                     u4965:	
 21260  0F7A  1C03               	skipc
 21261  0F7B  2F7D               	goto	u4961
 21262  0F7C  2F7E               	goto	u4960
 21263  0F7D                     u4961:	
 21264  0F7D  2F83               	goto	l6171
 21265  0F7E                     u4960:	
 21266  0F7E                     l6167:	
 21267  0F7E  0874               	movf	___awdiv@divisor,w
 21268  0F7F  02F6               	subwf	___awdiv@dividend,f
 21269  0F80  0875               	movf	___awdiv@divisor+1,w
 21270  0F81  3BF7               	subwfb	___awdiv@dividend+1,f
 21271  0F82                     l6169:	
 21272  0F82  1422               	bsf	___awdiv@quotient,0
 21273  0F83                     l6171:	
 21274  0F83  3001               	movlw	1
 21275  0F84                     u4975:	
 21276  0F84  36F5               	lsrf	___awdiv@divisor+1,f
 21277  0F85  0CF4               	rrf	___awdiv@divisor,f
 21278  0F86  0B89               	decfsz	9,f
 21279  0F87  2F84               	goto	u4975
 21280  0F88                     l6173:	
 21281  0F88  3001               	movlw	1
 21282  0F89  02A0               	subwf	___awdiv@counter,f
 21283  0F8A  1D03               	btfss	3,2
 21284  0F8B  2F8D               	goto	u4981
 21285  0F8C  2F8E               	goto	u4980
 21286  0F8D                     u4981:	
 21287  0F8D  2F6F               	goto	l6165
 21288  0F8E                     u4980:	
 21289  0F8E                     l6175:	
 21290  0F8E  0821               	movf	___awdiv@sign,w
 21291  0F8F  1903               	btfsc	3,2
 21292  0F90  2F92               	goto	u4991
 21293  0F91  2F93               	goto	u4990
 21294  0F92                     u4991:	
 21295  0F92  2F98               	goto	l6179
 21296  0F93                     u4990:	
 21297  0F93                     l6177:	
 21298  0F93  09A2               	comf	___awdiv@quotient,f
 21299  0F94  09A3               	comf	___awdiv@quotient+1,f
 21300  0F95  0AA2               	incf	___awdiv@quotient,f
 21301  0F96  1903               	skipnz
 21302  0F97  0AA3               	incf	___awdiv@quotient+1,f
 21303  0F98                     l6179:	
 21304  0F98  0823               	movf	___awdiv@quotient+1,w
 21305  0F99  00F5               	movwf	?___awdiv+1
 21306  0F9A  0822               	movf	___awdiv@quotient,w
 21307  0F9B  00F4               	movwf	?___awdiv
 21308  0F9C                     l2050:	
 21309  0F9C  0008               	return
 21310  0F9D                     __end_of___awdiv:	
 21311                           
 21312                           	psect	text85
 21313  1461                     __ptext85:	
 21314 ;; *************** function _submenu_alarm *****************
 21315 ;; Defined at:
 21316 ;;		line 68 in file "menus.c"
 21317 ;; Parameters:    Size  Location     Type
 21318 ;;		None
 21319 ;; Auto vars:     Size  Location     Type
 21320 ;;		None
 21321 ;; Return value:  Size  Location     Type
 21322 ;;                  1    wreg      void 
 21323 ;; Registers used:
 21324 ;;		wreg, status,2, status,0, pclath, cstack
 21325 ;; Tracked objects:
 21326 ;;		On entry : 0/0
 21327 ;;		On exit  : 0/0
 21328 ;;		Unchanged: 0/0
 21329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21332 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21333 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21334 ;;Total ram usage:        1 bytes
 21335 ;; Hardware stack levels used:    1
 21336 ;; Hardware stack levels required when called:    8
 21337 ;; This function calls:
 21338 ;;		_Update
 21339 ;;		_write_alaf
 21340 ;; This function is called by:
 21341 ;;		_Menu
 21342 ;; This function uses a non-reentrant model
 21343 ;;
 21344                           
 21345                           
 21346                           ;psect for function _submenu_alarm
 21347  1461                     _submenu_alarm:	
 21348  1461                     l6213:	
 21349                           ;incstack = 0
 21350                           ; Regs used in _submenu_alarm: [wreg+status,2+status,0+pclath+cstack]
 21351                           
 21352                           
 21353                           ;menus.c: 69:  alaf = Update(alaf, (uint8_t) 1);
 21354  1461  01F4               	clrf	Update@thr
 21355  1462  0AF4               	incf	Update@thr,f
 21356  1463  0020               	movlb	0	; select bank0
 21357  1464  086B               	movf	_alaf,w
 21358  1465  3197  2724  3194   	fcall	_Update
 21359  1468  0020               	movlb	0	; select bank0
 21360  1469  00A8               	movwf	??_submenu_alarm
 21361  146A  0828               	movf	??_submenu_alarm,w
 21362  146B  00EB               	movwf	_alaf
 21363                           
 21364                           ;menus.c: 70:     write_alaf(alaf);
 21365  146C  086B               	movf	_alaf,w
 21366  146D  3197  27D2  3194   	fcall	_write_alaf
 21367  1470                     l1158:	
 21368  1470  0008               	return
 21369  1471                     __end_of_submenu_alarm:	
 21370                           
 21371                           	psect	text86
 21372  17D2                     __ptext86:	
 21373 ;; *************** function _write_alaf *****************
 21374 ;; Defined at:
 21375 ;;		line 163 in file "eeprom.c"
 21376 ;; Parameters:    Size  Location     Type
 21377 ;;  x               1    wreg     unsigned char 
 21378 ;; Auto vars:     Size  Location     Type
 21379 ;;  x               1    7[BANK0 ] unsigned char 
 21380 ;; Return value:  Size  Location     Type
 21381 ;;                  1    wreg      void 
 21382 ;; Registers used:
 21383 ;;		wreg, status,2, status,0, pclath, cstack
 21384 ;; Tracked objects:
 21385 ;;		On entry : 0/0
 21386 ;;		On exit  : 0/0
 21387 ;;		Unchanged: 0/0
 21388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21390 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21391 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21392 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21393 ;;Total ram usage:        4 bytes
 21394 ;; Hardware stack levels used:    1
 21395 ;; Hardware stack levels required when called:    7
 21396 ;; This function calls:
 21397 ;;		_DATAEE_ReadByte
 21398 ;;		_DATAEE_WriteByte
 21399 ;; This function is called by:
 21400 ;;		_submenu_alarm
 21401 ;;		_switch_alarm
 21402 ;; This function uses a non-reentrant model
 21403 ;;
 21404                           
 21405                           
 21406                           ;psect for function _write_alaf
 21407  17D2                     _write_alaf:	
 21408                           
 21409                           ;incstack = 0
 21410                           ; Regs used in _write_alaf: [wreg+status,2+status,0+pclath+cstack]
 21411                           ;write_alaf@x stored from wreg
 21412  17D2  0020               	movlb	0	; select bank0
 21413  17D3  00A7               	movwf	write_alaf@x
 21414  17D4                     l6073:	
 21415                           
 21416                           ;eeprom.c: 165:     DATAEE_WriteByte(0xF000, DATAEE_ReadByte(0xF000) + x - DATAEE_ReadBy
      +                          te(0xF006));
 21417  17D4  3000               	movlw	0
 21418  17D5  00A0               	movwf	DATAEE_WriteByte@bAdd
 21419  17D6  30F0               	movlw	240
 21420  17D7  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 21421  17D8  3006               	movlw	6
 21422  17D9  00F2               	movwf	DATAEE_ReadByte@bAdd
 21423  17DA  30F0               	movlw	240
 21424  17DB  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 21425  17DC  3193  23C7  3197   	fcall	_DATAEE_ReadByte
 21426  17DF  0020               	movlb	0	; select bank0
 21427  17E0  00A4               	movwf	??_write_alaf
 21428  17E1  3000               	movlw	0
 21429  17E2  00F2               	movwf	DATAEE_ReadByte@bAdd
 21430  17E3  30F0               	movlw	240
 21431  17E4  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 21432  17E5  3193  23C7  3197   	fcall	_DATAEE_ReadByte
 21433  17E8  0020               	movlb	0	; select bank0
 21434  17E9  00A5               	movwf	??_write_alaf+1
 21435  17EA  0824               	movf	??_write_alaf,w
 21436  17EB  0225               	subwf	??_write_alaf+1,w
 21437  17EC  0727               	addwf	write_alaf@x,w
 21438  17ED  00A6               	movwf	??_write_alaf+2
 21439  17EE  0826               	movf	??_write_alaf+2,w
 21440  17EF  00A2               	movwf	DATAEE_WriteByte@bData
 21441  17F0  3197  2700  3197   	fcall	_DATAEE_WriteByte
 21442                           
 21443                           ;eeprom.c: 167:     DATAEE_WriteByte(0xF006, x);
 21444  17F3  3006               	movlw	6
 21445  17F4  0020               	movlb	0	; select bank0
 21446  17F5  00A0               	movwf	DATAEE_WriteByte@bAdd
 21447  17F6  30F0               	movlw	240
 21448  17F7  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 21449  17F8  0827               	movf	write_alaf@x,w
 21450  17F9  00A4               	movwf	??_write_alaf
 21451  17FA  0824               	movf	??_write_alaf,w
 21452  17FB  00A2               	movwf	DATAEE_WriteByte@bData
 21453  17FC  3197  2700  3197   	fcall	_DATAEE_WriteByte
 21454  17FF                     l1477:	
 21455  17FF  0008               	return
 21456  1800                     __end_of_write_alaf:	
 21457                           
 21458                           	psect	text87
 21459  1700                     __ptext87:	
 21460 ;; *************** function _DATAEE_WriteByte *****************
 21461 ;; Defined at:
 21462 ;;		line 180 in file "mcc_generated_files/memory.c"
 21463 ;; Parameters:    Size  Location     Type
 21464 ;;  bAdd            2    0[BANK0 ] unsigned short 
 21465 ;;  bData           1    2[BANK0 ] unsigned char 
 21466 ;; Auto vars:     Size  Location     Type
 21467 ;;  GIEBitValue     1    3[BANK0 ] unsigned char 
 21468 ;; Return value:  Size  Location     Type
 21469 ;;                  1    wreg      void 
 21470 ;; Registers used:
 21471 ;;		wreg, status,2, status,0
 21472 ;; Tracked objects:
 21473 ;;		On entry : 0/0
 21474 ;;		On exit  : 0/0
 21475 ;;		Unchanged: 0/0
 21476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21477 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21478 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21480 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21481 ;;Total ram usage:        4 bytes
 21482 ;; Hardware stack levels used:    1
 21483 ;; Hardware stack levels required when called:    6
 21484 ;; This function calls:
 21485 ;;		Nothing
 21486 ;; This function is called by:
 21487 ;;		_eeprom_setup
 21488 ;;		_eeprom_clk_update
 21489 ;;		_ring_buffer_write
 21490 ;;		_write_pmon
 21491 ;;		_write_tala
 21492 ;;		_write_alat
 21493 ;;		_write_alal
 21494 ;;		_write_alaf
 21495 ;;		_set_check_up_value
 21496 ;;		_write_nreg
 21497 ;; This function uses a non-reentrant model
 21498 ;;
 21499                           
 21500                           
 21501                           ;psect for function _DATAEE_WriteByte
 21502  1700                     _DATAEE_WriteByte:	
 21503  1700                     l5913:	
 21504                           ;incstack = 0
 21505                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 21506                           
 21507                           
 21508                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 21509  1700  3000               	movlw	0
 21510  1701  1B8B               	btfsc	11,7	;volatile
 21511  1702  3001               	movlw	1
 21512  1703  0020               	movlb	0	; select bank0
 21513  1704  00A3               	movwf	DATAEE_WriteByte@GIEBitValue
 21514                           
 21515                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 21516  1705  0821               	movf	DATAEE_WriteByte@bAdd+1,w
 21517  1706  0030               	movlb	16	; select bank16
 21518  1707  009B               	movwf	27	;volatile
 21519  1708                     l5915:	
 21520                           
 21521                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 21522  1708  0020               	movlb	0	; select bank0
 21523  1709  0820               	movf	DATAEE_WriteByte@bAdd,w
 21524  170A  0030               	movlb	16	; select bank16
 21525  170B  009A               	movwf	26	;volatile
 21526  170C                     l5917:	
 21527                           
 21528                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 21529  170C  0020               	movlb	0	; select bank0
 21530  170D  0822               	movf	DATAEE_WriteByte@bData,w
 21531  170E  0030               	movlb	16	; select bank16
 21532  170F  009C               	movwf	28	;volatile
 21533  1710                     l5919:	
 21534                           
 21535                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 21536  1710  171E               	bsf	30,6	;volsfr
 21537  1711                     l5921:	
 21538                           
 21539                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 21540  1711  151E               	bsf	30,2	;volsfr
 21541  1712                     l5923:	
 21542                           
 21543                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 21544  1712  138B               	bcf	11,7	;volatile
 21545  1713                     l5925:	
 21546                           
 21547                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 21548  1713  3055               	movlw	85
 21549  1714  009F               	movwf	31	;volsfr
 21550  1715                     l5927:	
 21551                           
 21552                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 21553  1715  30AA               	movlw	170
 21554  1716  009F               	movwf	31	;volsfr
 21555  1717                     l5929:	
 21556                           
 21557                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 21558  1717  149E               	bsf	30,1	;volsfr
 21559  1718                     l624:	
 21560                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 21561                           
 21562                           
 21563                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 21564  1718  189E               	btfsc	30,1	;volsfr
 21565  1719  2F1B               	goto	u4561
 21566  171A  2F1C               	goto	u4560
 21567  171B                     u4561:	
 21568  171B  2F18               	goto	l624
 21569  171C                     u4560:	
 21570  171C                     l626:	
 21571                           
 21572                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 21573  171C  111E               	bcf	30,2	;volsfr
 21574  171D                     l5931:	
 21575                           
 21576                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 21577  171D  0020               	movlb	0	; select bank0
 21578  171E  0C23               	rrf	DATAEE_WriteByte@GIEBitValue,w
 21579  171F  1C03               	skipc
 21580  1720  138B               	bcf	11,7	;volatile
 21581  1721  1803               	skipnc
 21582  1722  178B               	bsf	11,7	;volatile
 21583  1723                     l627:	
 21584  1723  0008               	return
 21585  1724                     __end_of_DATAEE_WriteByte:	
 21586                           
 21587                           	psect	text88
 21588  13C7                     __ptext88:	
 21589 ;; *************** function _DATAEE_ReadByte *****************
 21590 ;; Defined at:
 21591 ;;		line 202 in file "mcc_generated_files/memory.c"
 21592 ;; Parameters:    Size  Location     Type
 21593 ;;  bAdd            2    2[COMMON] unsigned short 
 21594 ;; Auto vars:     Size  Location     Type
 21595 ;;		None
 21596 ;; Return value:  Size  Location     Type
 21597 ;;                  1    wreg      unsigned char 
 21598 ;; Registers used:
 21599 ;;		wreg, status,2
 21600 ;; Tracked objects:
 21601 ;;		On entry : 0/0
 21602 ;;		On exit  : 0/0
 21603 ;;		Unchanged: 0/0
 21604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21608 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21609 ;;Total ram usage:        2 bytes
 21610 ;; Hardware stack levels used:    1
 21611 ;; Hardware stack levels required when called:    6
 21612 ;; This function calls:
 21613 ;;		Nothing
 21614 ;; This function is called by:
 21615 ;;		_get_check_up_value
 21616 ;;		_check_corruption
 21617 ;;		_eeprom_clk_update
 21618 ;;		_ring_buffer_write
 21619 ;;		_ring_buffer_laped
 21620 ;;		_used
 21621 ;;		_read_buffer
 21622 ;;		_read_nreg
 21623 ;;		_read_pmon
 21624 ;;		_read_tala
 21625 ;;		_read_alat
 21626 ;;		_read_alal
 21627 ;;		_read_alaf
 21628 ;;		_read_clkh
 21629 ;;		_read_clkm
 21630 ;;		_read_iwrt
 21631 ;;		_write_pmon
 21632 ;;		_write_tala
 21633 ;;		_write_alat
 21634 ;;		_write_alal
 21635 ;;		_write_alaf
 21636 ;;		_write_nreg
 21637 ;; This function uses a non-reentrant model
 21638 ;;
 21639                           
 21640                           
 21641                           ;psect for function _DATAEE_ReadByte
 21642  13C7                     _DATAEE_ReadByte:	
 21643  13C7                     l5865:	
 21644                           ;incstack = 0
 21645                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 21646                           
 21647                           
 21648                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 21649  13C7  0873               	movf	DATAEE_ReadByte@bAdd+1,w
 21650  13C8  0030               	movlb	16	; select bank16
 21651  13C9  009B               	movwf	27	;volatile
 21652  13CA                     l5867:	
 21653                           
 21654                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 21655  13CA  0872               	movf	DATAEE_ReadByte@bAdd,w
 21656  13CB  009A               	movwf	26	;volatile
 21657  13CC                     l5869:	
 21658                           
 21659                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 21660  13CC  171E               	bsf	30,6	;volsfr
 21661  13CD                     l5871:	
 21662                           
 21663                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 21664  13CD  141E               	bsf	30,0	;volsfr
 21665  13CE                     l5873:	
 21666                           
 21667                           ;mcc_generated_files/memory.c: 208:     __nop();
 21668  13CE  0000               	nop
 21669  13CF                     l5875:	
 21670                           
 21671                           ;mcc_generated_files/memory.c: 209:     __nop();
 21672  13CF  0000               	nop
 21673  13D0                     l5877:	
 21674                           
 21675                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 21676  13D0  0030               	movlb	16	; select bank16
 21677  13D1  081C               	movf	28,w	;volatile
 21678  13D2                     l630:	
 21679  13D2  0008               	return
 21680  13D3                     __end_of_DATAEE_ReadByte:	
 21681                           
 21682                           	psect	text89
 21683  1724                     __ptext89:	
 21684 ;; *************** function _Update *****************
 21685 ;; Defined at:
 21686 ;;		line 27 in file "menus.c"
 21687 ;; Parameters:    Size  Location     Type
 21688 ;;  var             1    wreg     unsigned char 
 21689 ;;  thr             1    4[COMMON] unsigned char 
 21690 ;; Auto vars:     Size  Location     Type
 21691 ;;  var             1    6[COMMON] unsigned char 
 21692 ;; Return value:  Size  Location     Type
 21693 ;;                  1    wreg      unsigned char 
 21694 ;; Registers used:
 21695 ;;		wreg, status,2, status,0, pclath, cstack
 21696 ;; Tracked objects:
 21697 ;;		On entry : 0/0
 21698 ;;		On exit  : 0/0
 21699 ;;		Unchanged: 0/0
 21700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21701 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21703 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21704 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21705 ;;Total ram usage:        3 bytes
 21706 ;; Hardware stack levels used:    1
 21707 ;; Hardware stack levels required when called:    7
 21708 ;; This function calls:
 21709 ;;		_ShowOnLEDs
 21710 ;;		_checkButtonS1
 21711 ;;		_checkButtonS2
 21712 ;; This function is called by:
 21713 ;;		_submenu_clock
 21714 ;;		_submenu_alarm
 21715 ;;		_submenu_temp
 21716 ;;		_submenu_illum
 21717 ;; This function uses a non-reentrant model
 21718 ;;
 21719                           
 21720                           
 21721                           ;psect for function _Update
 21722  1724                     _Update:	
 21723                           
 21724                           ;incstack = 0
 21725                           ; Regs used in _Update: [wreg+status,2+status,0+pclath+cstack]
 21726                           ;Update@var stored from wreg
 21727  1724  00F6               	movwf	Update@var
 21728  1725                     l6053:	
 21729                           
 21730                           ;menus.c: 28:  ShowOnLEDs(var);
 21731  1725  0876               	movf	Update@var,w
 21732  1726  3193  23BB  3197   	fcall	_ShowOnLEDs
 21733  1729                     l1142:	
 21734                           ;menus.c: 29:  while(1){
 21735                           
 21736                           
 21737                           ;menus.c: 30:         checkButtonS1();
 21738  1729  3196  2658  3197   	fcall	_checkButtonS1
 21739                           
 21740                           ;menus.c: 31:         checkButtonS2();
 21741  172C  3196  2678  3197   	fcall	_checkButtonS2
 21742  172F                     l6055:	
 21743                           
 21744                           ;menus.c: 32:   if (s2flag){
 21745  172F  0021               	movlb	1	; select bank1
 21746  1730  084D               	movf	_s2flag^(0+128),w
 21747  1731  1903               	btfsc	3,2
 21748  1732  2F34               	goto	u4781
 21749  1733  2F35               	goto	u4780
 21750  1734                     u4781:	
 21751  1734  2F46               	goto	l6065
 21752  1735                     u4780:	
 21753  1735                     l6057:	
 21754                           
 21755                           ;menus.c: 33:    s2flag = 0;
 21756  1735  01CD               	clrf	_s2flag^(0+128)
 21757  1736                     l6059:	
 21758                           
 21759                           ;menus.c: 34:    if (++var > thr)
 21760  1736  3001               	movlw	1
 21761  1737  00F5               	movwf	??_Update
 21762  1738  0875               	movf	??_Update,w
 21763  1739  07F6               	addwf	Update@var,f
 21764  173A  0876               	movf	Update@var,w
 21765  173B  0274               	subwf	Update@thr,w
 21766  173C  1803               	skipnc
 21767  173D  2F3F               	goto	u4791
 21768  173E  2F40               	goto	u4790
 21769  173F                     u4791:	
 21770  173F  2F41               	goto	l6063
 21771  1740                     u4790:	
 21772  1740                     l6061:	
 21773                           
 21774                           ;menus.c: 35:     var=0;
 21775  1740  01F6               	clrf	Update@var
 21776  1741                     l6063:	
 21777                           
 21778                           ;menus.c: 36:             ShowOnLEDs(var);
 21779  1741  0876               	movf	Update@var,w
 21780  1742  3193  23BB  3197   	fcall	_ShowOnLEDs
 21781                           
 21782                           ;menus.c: 37:   }
 21783  1745  2F29               	goto	l1142
 21784  1746                     l6065:	
 21785  1746  084C               	movf	_s1flag^(0+128),w
 21786  1747  1903               	btfsc	3,2
 21787  1748  2F4A               	goto	u4801
 21788  1749  2F4B               	goto	u4800
 21789  174A                     u4801:	
 21790  174A  2F29               	goto	l1142
 21791  174B                     u4800:	
 21792  174B                     l6067:	
 21793                           
 21794                           ;menus.c: 39:    s1flag = 0;
 21795  174B  01CC               	clrf	_s1flag^(0+128)
 21796  174C                     l6069:	
 21797                           
 21798                           ;menus.c: 40:    return var;
 21799  174C  0876               	movf	Update@var,w
 21800  174D                     l1147:	
 21801  174D  0008               	return
 21802  174E                     __end_of_Update:	
 21803                           
 21804                           	psect	text90
 21805  1678                     __ptext90:	
 21806 ;; *************** function _checkButtonS2 *****************
 21807 ;; Defined at:
 21808 ;;		line 88 in file "utils.c"
 21809 ;; Parameters:    Size  Location     Type
 21810 ;;		None
 21811 ;; Auto vars:     Size  Location     Type
 21812 ;;		None
 21813 ;; Return value:  Size  Location     Type
 21814 ;;                  1    wreg      void 
 21815 ;; Registers used:
 21816 ;;		wreg, status,2, status,0
 21817 ;; Tracked objects:
 21818 ;;		On entry : 0/0
 21819 ;;		On exit  : 0/0
 21820 ;;		Unchanged: 0/0
 21821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21825 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21826 ;;Total ram usage:        1 bytes
 21827 ;; Hardware stack levels used:    1
 21828 ;; Hardware stack levels required when called:    6
 21829 ;; This function calls:
 21830 ;;		Nothing
 21831 ;; This function is called by:
 21832 ;;		_Update
 21833 ;;		_Menus
 21834 ;; This function uses a non-reentrant model
 21835 ;;
 21836                           
 21837                           
 21838                           ;psect for function _checkButtonS2
 21839  1678                     _checkButtonS2:	
 21840  1678                     l5967:	
 21841                           ;incstack = 0
 21842                           ; Regs used in _checkButtonS2: [wreg+status,2+status,0]
 21843                           
 21844                           
 21845                           ;utils.c: 89:     if (btn2State == 0) {
 21846  1678  0021               	movlb	1	; select bank1
 21847  1679  0849               	movf	_btn2State^(0+128),w
 21848  167A  1D03               	btfss	3,2
 21849  167B  2E7D               	goto	u4621
 21850  167C  2E7E               	goto	u4620
 21851  167D                     u4621:	
 21852  167D  2E8E               	goto	l1371
 21853  167E                     u4620:	
 21854  167E                     l5969:	
 21855                           
 21856                           ;utils.c: 90:         if (PORTCbits.RC5 == 0) {
 21857  167E  0020               	movlb	0	; select bank0
 21858  167F  1A8E               	btfsc	14,5	;volatile
 21859  1680  2E82               	goto	u4631
 21860  1681  2E83               	goto	u4630
 21861  1682                     u4631:	
 21862  1682  2E97               	goto	l1375
 21863  1683                     u4630:	
 21864  1683                     l5971:	
 21865                           
 21866                           ;utils.c: 91:             _delay((unsigned long)((300)*(1000000/4000.0)));
 21867  1683  3062               	movlw	98
 21868  1684  00F2               	movwf	??_checkButtonS2
 21869  1685  3066               	movlw	102
 21870  1686                     u6327:	
 21871  1686  0B89               	decfsz	9,f
 21872  1687  2E86               	goto	u6327
 21873  1688  0BF2               	decfsz	??_checkButtonS2,f
 21874  1689  2E86               	goto	u6327
 21875  168A                     l5973:	
 21876                           
 21877                           ;utils.c: 92:             btn2State = 1;
 21878  168A  0021               	movlb	1	; select bank1
 21879  168B  01C9               	clrf	_btn2State^(0+128)
 21880  168C  0AC9               	incf	_btn2State^(0+128),f
 21881  168D  2E97               	goto	l1375
 21882  168E                     l1371:	
 21883  168E  0020               	movlb	0	; select bank0
 21884  168F  1E8E               	btfss	14,5	;volatile
 21885  1690  2E92               	goto	u4641
 21886  1691  2E93               	goto	u4640
 21887  1692                     u4641:	
 21888  1692  2E97               	goto	l1375
 21889  1693                     u4640:	
 21890  1693                     l5975:	
 21891                           
 21892                           ;utils.c: 95:         btn2State = 0;
 21893  1693  0021               	movlb	1	; select bank1
 21894  1694  01C9               	clrf	_btn2State^(0+128)
 21895  1695                     l5977:	
 21896                           
 21897                           ;utils.c: 96:         s2flag = 1;
 21898  1695  01CD               	clrf	_s2flag^(0+128)
 21899  1696  0ACD               	incf	_s2flag^(0+128),f
 21900  1697                     l1375:	
 21901  1697  0008               	return
 21902  1698                     __end_of_checkButtonS2:	
 21903                           
 21904                           	psect	text91
 21905  1658                     __ptext91:	
 21906 ;; *************** function _checkButtonS1 *****************
 21907 ;; Defined at:
 21908 ;;		line 76 in file "utils.c"
 21909 ;; Parameters:    Size  Location     Type
 21910 ;;		None
 21911 ;; Auto vars:     Size  Location     Type
 21912 ;;		None
 21913 ;; Return value:  Size  Location     Type
 21914 ;;                  1    wreg      void 
 21915 ;; Registers used:
 21916 ;;		wreg, status,2, status,0
 21917 ;; Tracked objects:
 21918 ;;		On entry : 0/0
 21919 ;;		On exit  : 0/0
 21920 ;;		Unchanged: 0/0
 21921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21925 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21926 ;;Total ram usage:        1 bytes
 21927 ;; Hardware stack levels used:    1
 21928 ;; Hardware stack levels required when called:    6
 21929 ;; This function calls:
 21930 ;;		Nothing
 21931 ;; This function is called by:
 21932 ;;		_Update
 21933 ;;		_Menus
 21934 ;; This function uses a non-reentrant model
 21935 ;;
 21936                           
 21937                           
 21938                           ;psect for function _checkButtonS1
 21939  1658                     _checkButtonS1:	
 21940  1658                     l5955:	
 21941                           ;incstack = 0
 21942                           ; Regs used in _checkButtonS1: [wreg+status,2+status,0]
 21943                           
 21944                           
 21945                           ;utils.c: 77:     if (btn1State == 0) {
 21946  1658  0021               	movlb	1	; select bank1
 21947  1659  084A               	movf	_btn1State^(0+128),w
 21948  165A  1D03               	btfss	3,2
 21949  165B  2E5D               	goto	u4591
 21950  165C  2E5E               	goto	u4590
 21951  165D                     u4591:	
 21952  165D  2E6E               	goto	l1364
 21953  165E                     u4590:	
 21954  165E                     l5957:	
 21955                           
 21956                           ;utils.c: 78:         if (PORTBbits.RB4 == 0) {
 21957  165E  0020               	movlb	0	; select bank0
 21958  165F  1A0D               	btfsc	13,4	;volatile
 21959  1660  2E62               	goto	u4601
 21960  1661  2E63               	goto	u4600
 21961  1662                     u4601:	
 21962  1662  2E77               	goto	l1368
 21963  1663                     u4600:	
 21964  1663                     l5959:	
 21965                           
 21966                           ;utils.c: 79:             _delay((unsigned long)((300)*(1000000/4000.0)));
 21967  1663  3062               	movlw	98
 21968  1664  00F2               	movwf	??_checkButtonS1
 21969  1665  3066               	movlw	102
 21970  1666                     u6337:	
 21971  1666  0B89               	decfsz	9,f
 21972  1667  2E66               	goto	u6337
 21973  1668  0BF2               	decfsz	??_checkButtonS1,f
 21974  1669  2E66               	goto	u6337
 21975  166A                     l5961:	
 21976                           
 21977                           ;utils.c: 80:             btn1State = 1;
 21978  166A  0021               	movlb	1	; select bank1
 21979  166B  01CA               	clrf	_btn1State^(0+128)
 21980  166C  0ACA               	incf	_btn1State^(0+128),f
 21981  166D  2E77               	goto	l1368
 21982  166E                     l1364:	
 21983  166E  0020               	movlb	0	; select bank0
 21984  166F  1E0D               	btfss	13,4	;volatile
 21985  1670  2E72               	goto	u4611
 21986  1671  2E73               	goto	u4610
 21987  1672                     u4611:	
 21988  1672  2E77               	goto	l1368
 21989  1673                     u4610:	
 21990  1673                     l5963:	
 21991                           
 21992                           ;utils.c: 83:         btn1State = 0;
 21993  1673  0021               	movlb	1	; select bank1
 21994  1674  01CA               	clrf	_btn1State^(0+128)
 21995  1675                     l5965:	
 21996                           
 21997                           ;utils.c: 84:         s1flag = 1;
 21998  1675  01CC               	clrf	_s1flag^(0+128)
 21999  1676  0ACC               	incf	_s1flag^(0+128),f
 22000  1677                     l1368:	
 22001  1677  0008               	return
 22002  1678                     __end_of_checkButtonS1:	
 22003                           
 22004                           	psect	text92
 22005  13BB                     __ptext92:	
 22006 ;; *************** function _ShowOnLEDs *****************
 22007 ;; Defined at:
 22008 ;;		line 72 in file "utils.c"
 22009 ;; Parameters:    Size  Location     Type
 22010 ;;  num             1    wreg     unsigned char 
 22011 ;; Auto vars:     Size  Location     Type
 22012 ;;  num             1    3[COMMON] unsigned char 
 22013 ;; Return value:  Size  Location     Type
 22014 ;;                  1    wreg      void 
 22015 ;; Registers used:
 22016 ;;		wreg, status,2, status,0
 22017 ;; Tracked objects:
 22018 ;;		On entry : 0/0
 22019 ;;		On exit  : 0/0
 22020 ;;		Unchanged: 0/0
 22021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22023 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22024 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22026 ;;Total ram usage:        2 bytes
 22027 ;; Hardware stack levels used:    1
 22028 ;; Hardware stack levels required when called:    6
 22029 ;; This function calls:
 22030 ;;		Nothing
 22031 ;; This function is called by:
 22032 ;;		_Menu
 22033 ;;		_Update
 22034 ;;		_Menus
 22035 ;; This function uses a non-reentrant model
 22036 ;;
 22037                           
 22038                           
 22039                           ;psect for function _ShowOnLEDs
 22040  13BB                     _ShowOnLEDs:	
 22041                           
 22042                           ;incstack = 0
 22043                           ; Regs used in _ShowOnLEDs: [wreg+status,2+status,0]
 22044                           ;ShowOnLEDs@num stored from wreg
 22045  13BB  00F3               	movwf	ShowOnLEDs@num
 22046  13BC                     l5953:	
 22047                           
 22048                           ;utils.c: 73:     LATA = num << 4;
 22049  13BC  0873               	movf	ShowOnLEDs@num,w
 22050  13BD  00F2               	movwf	??_ShowOnLEDs
 22051  13BE  3003               	movlw	3
 22052  13BF                     u4585:	
 22053  13BF  35F2               	lslf	??_ShowOnLEDs,f
 22054  13C0  3EFF               	addlw	-1
 22055  13C1  1D03               	skipz
 22056  13C2  2BBF               	goto	u4585
 22057  13C3  3572               	lslf	??_ShowOnLEDs,w
 22058  13C4  0020               	movlb	0	; select bank0
 22059  13C5  0096               	movwf	22	;volatile
 22060  13C6                     l1361:	
 22061  13C6  0008               	return
 22062  13C7                     __end_of_ShowOnLEDs:	
 22063                           
 22064                           	psect	text93
 22065  12E7                     __ptext93:	
 22066 ;; *************** function _TMR1_StopTimer *****************
 22067 ;; Defined at:
 22068 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 22069 ;; Parameters:    Size  Location     Type
 22070 ;;		None
 22071 ;; Auto vars:     Size  Location     Type
 22072 ;;		None
 22073 ;; Return value:  Size  Location     Type
 22074 ;;                  1    wreg      void 
 22075 ;; Registers used:
 22076 ;;		None
 22077 ;; Tracked objects:
 22078 ;;		On entry : 0/0
 22079 ;;		On exit  : 0/0
 22080 ;;		Unchanged: 0/0
 22081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22086 ;;Total ram usage:        0 bytes
 22087 ;; Hardware stack levels used:    1
 22088 ;; Hardware stack levels required when called:    6
 22089 ;; This function calls:
 22090 ;;		Nothing
 22091 ;; This function is called by:
 22092 ;;		_Menu
 22093 ;; This function uses a non-reentrant model
 22094 ;;
 22095                           
 22096                           
 22097                           ;psect for function _TMR1_StopTimer
 22098  12E7                     _TMR1_StopTimer:	
 22099  12E7                     l6187:	
 22100                           ;incstack = 0
 22101                           ; Regs used in _TMR1_StopTimer: []
 22102                           
 22103                           
 22104                           ;mcc_generated_files/tmr1.c: 108:     T1CONbits.TMR1ON = 0;
 22105  12E7  0024               	movlb	4	; select bank4
 22106  12E8  100E               	bcf	14,0	;volatile
 22107  12E9                     l37:	
 22108  12E9  0008               	return
 22109  12EA                     __end_of_TMR1_StopTimer:	
 22110                           
 22111                           	psect	text94
 22112  12E4                     __ptext94:	
 22113 ;; *************** function _TMR1_StartTimer *****************
 22114 ;; Defined at:
 22115 ;;		line 99 in file "mcc_generated_files/tmr1.c"
 22116 ;; Parameters:    Size  Location     Type
 22117 ;;		None
 22118 ;; Auto vars:     Size  Location     Type
 22119 ;;		None
 22120 ;; Return value:  Size  Location     Type
 22121 ;;                  1    wreg      void 
 22122 ;; Registers used:
 22123 ;;		None
 22124 ;; Tracked objects:
 22125 ;;		On entry : 0/0
 22126 ;;		On exit  : 0/0
 22127 ;;		Unchanged: 0/0
 22128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22133 ;;Total ram usage:        0 bytes
 22134 ;; Hardware stack levels used:    1
 22135 ;; Hardware stack levels required when called:    6
 22136 ;; This function calls:
 22137 ;;		Nothing
 22138 ;; This function is called by:
 22139 ;;		_Menu
 22140 ;; This function uses a non-reentrant model
 22141 ;;
 22142                           
 22143                           
 22144                           ;psect for function _TMR1_StartTimer
 22145  12E4                     _TMR1_StartTimer:	
 22146  12E4                     l6185:	
 22147                           ;incstack = 0
 22148                           ; Regs used in _TMR1_StartTimer: []
 22149                           
 22150                           
 22151                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 1;
 22152  12E4  0024               	movlb	4	; select bank4
 22153  12E5  140E               	bsf	14,0	;volatile
 22154  12E6                     l34:	
 22155  12E6  0008               	return
 22156  12E7                     __end_of_TMR1_StartTimer:	
 22157                           
 22158                           	psect	text95
 22159  0B42                     __ptext95:	
 22160 ;; *************** function _Alarm *****************
 22161 ;; Defined at:
 22162 ;;		line 88 in file "main.c"
 22163 ;; Parameters:    Size  Location     Type
 22164 ;;  h               1    wreg     unsigned char 
 22165 ;;  m               1    0[BANK0 ] unsigned char 
 22166 ;;  s               1    1[BANK0 ] unsigned char 
 22167 ;; Auto vars:     Size  Location     Type
 22168 ;;  h               1   12[BANK0 ] unsigned char 
 22169 ;; Return value:  Size  Location     Type
 22170 ;;                  1    wreg      void 
 22171 ;; Registers used:
 22172 ;;		wreg, status,2, status,0, pclath, cstack
 22173 ;; Tracked objects:
 22174 ;;		On entry : 0/0
 22175 ;;		On exit  : 0/0
 22176 ;;		Unchanged: 0/0
 22177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22178 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22179 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22180 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22181 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22182 ;;Total ram usage:       13 bytes
 22183 ;; Hardware stack levels used:    1
 22184 ;; Hardware stack levels required when called:    7
 22185 ;; This function calls:
 22186 ;;		_PWM6_LoadDutyValue
 22187 ;;		_PWM_Output_D4_Enable
 22188 ;;		___wmul
 22189 ;; This function is called by:
 22190 ;;		_main
 22191 ;; This function uses a non-reentrant model
 22192 ;;
 22193                           
 22194                           
 22195                           ;psect for function _Alarm
 22196  0B42                     _Alarm:	
 22197                           
 22198                           ;incstack = 0
 22199                           ; Regs used in _Alarm: [wreg+status,2+status,0+pclath+cstack]
 22200                           ;Alarm@h stored from wreg
 22201  0B42  0020               	movlb	0	; select bank0
 22202  0B43  00AC               	movwf	Alarm@h
 22203  0B44                     l6881:	
 22204                           
 22205                           ;main.c: 89:     alarm = 1;
 22206  0B44  0021               	movlb	1	; select bank1
 22207  0B45  01D0               	clrf	_alarm^(0+128)
 22208  0B46  0AD0               	incf	_alarm^(0+128),f
 22209  0B47                     l6883:	
 22210                           
 22211                           ;main.c: 90:     PWM_Output_D4_Enable();
 22212  0B47  3194  2451  318B   	fcall	_PWM_Output_D4_Enable
 22213                           
 22214                           ;main.c: 91:     PWM6_LoadDutyValue(250);
 22215  0B4A  30FA               	movlw	250
 22216  0B4B  00F2               	movwf	PWM6_LoadDutyValue@dutyValue
 22217  0B4C  3000               	movlw	0
 22218  0B4D  00F3               	movwf	PWM6_LoadDutyValue@dutyValue+1
 22219  0B4E  3194  24E3  318B   	fcall	_PWM6_LoadDutyValue
 22220                           
 22221                           ;main.c: 92:     initial_time = h * 3600 + m * 60 + s;
 22222  0B51  0020               	movlb	0	; select bank0
 22223  0B52  0821               	movf	Alarm@s,w
 22224  0B53  00A2               	movwf	??_Alarm
 22225  0B54  01A3               	clrf	??_Alarm+1
 22226  0B55  082C               	movf	Alarm@h,w
 22227  0B56  00A4               	movwf	??_Alarm+2
 22228  0B57  01A5               	clrf	??_Alarm+3
 22229  0B58  0824               	movf	??_Alarm+2,w
 22230  0B59  00F4               	movwf	___wmul@multiplier
 22231  0B5A  0825               	movf	??_Alarm+3,w
 22232  0B5B  00F5               	movwf	___wmul@multiplier+1
 22233  0B5C  3010               	movlw	16
 22234  0B5D  00F6               	movwf	___wmul@multiplicand
 22235  0B5E  300E               	movlw	14
 22236  0B5F  00F7               	movwf	___wmul@multiplicand+1
 22237  0B60  3195  25FB  318B   	fcall	___wmul
 22238  0B63  0874               	movf	?___wmul,w
 22239  0B64  0020               	movlb	0	; select bank0
 22240  0B65  00A6               	movwf	??_Alarm+4
 22241  0B66  0875               	movf	?___wmul+1,w
 22242  0B67  00A7               	movwf	??_Alarm+5
 22243  0B68  0820               	movf	Alarm@m,w
 22244  0B69  00A8               	movwf	??_Alarm+6
 22245  0B6A  01A9               	clrf	??_Alarm+7
 22246  0B6B  0828               	movf	??_Alarm+6,w
 22247  0B6C  00F4               	movwf	___wmul@multiplier
 22248  0B6D  0829               	movf	??_Alarm+7,w
 22249  0B6E  00F5               	movwf	___wmul@multiplier+1
 22250  0B6F  303C               	movlw	60
 22251  0B70  00F6               	movwf	___wmul@multiplicand
 22252  0B71  3000               	movlw	0
 22253  0B72  00F7               	movwf	___wmul@multiplicand+1
 22254  0B73  3195  25FB  318B   	fcall	___wmul
 22255  0B76  0874               	movf	?___wmul,w
 22256  0B77  0020               	movlb	0	; select bank0
 22257  0B78  0726               	addwf	??_Alarm+4,w
 22258  0B79  00AA               	movwf	??_Alarm+8
 22259  0B7A  0875               	movf	?___wmul+1,w
 22260  0B7B  3D27               	addwfc	??_Alarm+5,w
 22261  0B7C  00AB               	movwf	??_Alarm+9
 22262  0B7D  0822               	movf	??_Alarm,w
 22263  0B7E  072A               	addwf	??_Alarm+8,w
 22264  0B7F  0021               	movlb	1	; select bank1
 22265  0B80  00C3               	movwf	_initial_time^(0+128)
 22266  0B81  0020               	movlb	0	; select bank0
 22267  0B82  0823               	movf	??_Alarm+1,w
 22268  0B83  3D2B               	addwfc	??_Alarm+9,w
 22269  0B84  0021               	movlb	1	; select bank1
 22270  0B85  00C4               	movwf	(_initial_time+1)^(0+128)
 22271  0B86                     l995:	
 22272  0B86  0008               	return
 22273  0B87                     __end_of_Alarm:	
 22274                           
 22275                           	psect	text96
 22276  15FB                     __ptext96:	
 22277 ;; *************** function ___wmul *****************
 22278 ;; Defined at:
 22279 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
 22280 ;; Parameters:    Size  Location     Type
 22281 ;;  multiplier      2    4[COMMON] unsigned int 
 22282 ;;  multiplicand    2    6[COMMON] unsigned int 
 22283 ;; Auto vars:     Size  Location     Type
 22284 ;;  product         2    8[COMMON] unsigned int 
 22285 ;; Return value:  Size  Location     Type
 22286 ;;                  2    4[COMMON] unsigned int 
 22287 ;; Registers used:
 22288 ;;		wreg, status,2, status,0
 22289 ;; Tracked objects:
 22290 ;;		On entry : 0/0
 22291 ;;		On exit  : 0/0
 22292 ;;		Unchanged: 0/0
 22293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22297 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22298 ;;Total ram usage:        6 bytes
 22299 ;; Hardware stack levels used:    1
 22300 ;; Hardware stack levels required when called:    6
 22301 ;; This function calls:
 22302 ;;		Nothing
 22303 ;; This function is called by:
 22304 ;;		_Alarm
 22305 ;;		_main
 22306 ;;		_ring_buffer_write
 22307 ;;		_read_buffer
 22308 ;; This function uses a non-reentrant model
 22309 ;;
 22310                           
 22311                           
 22312                           ;psect for function ___wmul
 22313  15FB                     ___wmul:	
 22314  15FB                     l5899:	
 22315                           ;incstack = 0
 22316                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 22317                           
 22318  15FB  01F8               	clrf	___wmul@product
 22319  15FC  01F9               	clrf	___wmul@product+1
 22320  15FD                     l5901:	
 22321  15FD  1C74               	btfss	___wmul@multiplier,0
 22322  15FE  2E00               	goto	u4521
 22323  15FF  2E01               	goto	u4520
 22324  1600                     u4521:	
 22325  1600  2E05               	goto	l1897
 22326  1601                     u4520:	
 22327  1601                     l5903:	
 22328  1601  0876               	movf	___wmul@multiplicand,w
 22329  1602  07F8               	addwf	___wmul@product,f
 22330  1603  0877               	movf	___wmul@multiplicand+1,w
 22331  1604  3DF9               	addwfc	___wmul@product+1,f
 22332  1605                     l1897:	
 22333  1605  3001               	movlw	1
 22334  1606                     u4535:	
 22335  1606  35F6               	lslf	___wmul@multiplicand,f
 22336  1607  0DF7               	rlf	___wmul@multiplicand+1,f
 22337  1608  0B89               	decfsz	9,f
 22338  1609  2E06               	goto	u4535
 22339  160A                     l5905:	
 22340  160A  3001               	movlw	1
 22341  160B                     u4545:	
 22342  160B  36F5               	lsrf	___wmul@multiplier+1,f
 22343  160C  0CF4               	rrf	___wmul@multiplier,f
 22344  160D  0B89               	decfsz	9,f
 22345  160E  2E0B               	goto	u4545
 22346  160F                     l5907:	
 22347  160F  0874               	movf	___wmul@multiplier,w
 22348  1610  0475               	iorwf	___wmul@multiplier+1,w
 22349  1611  1D03               	btfss	3,2
 22350  1612  2E14               	goto	u4551
 22351  1613  2E15               	goto	u4550
 22352  1614                     u4551:	
 22353  1614  2DFD               	goto	l5901
 22354  1615                     u4550:	
 22355  1615                     l5909:	
 22356  1615  0879               	movf	___wmul@product+1,w
 22357  1616  00F5               	movwf	?___wmul+1
 22358  1617  0878               	movf	___wmul@product,w
 22359  1618  00F4               	movwf	?___wmul
 22360  1619                     l1899:	
 22361  1619  0008               	return
 22362  161A                     __end_of___wmul:	
 22363                           
 22364                           	psect	text97
 22365  1451                     __ptext97:	
 22366 ;; *************** function _PWM_Output_D4_Enable *****************
 22367 ;; Defined at:
 22368 ;;		line 50 in file "utils.c"
 22369 ;; Parameters:    Size  Location     Type
 22370 ;;		None
 22371 ;; Auto vars:     Size  Location     Type
 22372 ;;		None
 22373 ;; Return value:  Size  Location     Type
 22374 ;;                  1    wreg      void 
 22375 ;; Registers used:
 22376 ;;		wreg
 22377 ;; Tracked objects:
 22378 ;;		On entry : 0/0
 22379 ;;		On exit  : 0/0
 22380 ;;		Unchanged: 0/0
 22381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22386 ;;Total ram usage:        0 bytes
 22387 ;; Hardware stack levels used:    1
 22388 ;; Hardware stack levels required when called:    6
 22389 ;; This function calls:
 22390 ;;		Nothing
 22391 ;; This function is called by:
 22392 ;;		_Alarm
 22393 ;; This function uses a non-reentrant model
 22394 ;;
 22395                           
 22396                           
 22397                           ;psect for function _PWM_Output_D4_Enable
 22398  1451                     _PWM_Output_D4_Enable:	
 22399  1451                     l6641:	
 22400                           ;incstack = 0
 22401                           ; Regs used in _PWM_Output_D4_Enable: [wreg]
 22402                           
 22403                           
 22404                           ;utils.c: 51:     PPSLOCK = 0x55;
 22405  1451  3055               	movlw	85
 22406  1452  003D               	movlb	29	; select bank29
 22407  1453  008F               	movwf	15	;volsfr
 22408                           
 22409                           ;utils.c: 52:     PPSLOCK = 0xAA;
 22410  1454  30AA               	movlw	170
 22411  1455  008F               	movwf	15	;volsfr
 22412  1456                     l6643:	
 22413                           
 22414                           ;utils.c: 53:     PPSLOCKbits.PPSLOCKED = 0x00;
 22415  1456  100F               	bcf	15,0	;volsfr
 22416                           
 22417                           ;utils.c: 55:     RA6PPS = 0x0E;
 22418  1457  300E               	movlw	14
 22419  1458  003E               	movlb	30	; select bank30
 22420  1459  0096               	movwf	22	;volatile
 22421                           
 22422                           ;utils.c: 56:     PPSLOCK = 0x55;
 22423  145A  3055               	movlw	85
 22424  145B  003D               	movlb	29	; select bank29
 22425  145C  008F               	movwf	15	;volsfr
 22426                           
 22427                           ;utils.c: 57:     PPSLOCK = 0xAA;
 22428  145D  30AA               	movlw	170
 22429  145E  008F               	movwf	15	;volsfr
 22430  145F                     l6645:	
 22431                           
 22432                           ;utils.c: 58:     PPSLOCKbits.PPSLOCKED = 0x01;
 22433  145F  140F               	bsf	15,0	;volsfr
 22434  1460                     l1355:	
 22435  1460  0008               	return
 22436  1461                     __end_of_PWM_Output_D4_Enable:	
 22437                           
 22438                           	psect	text98
 22439  14E3                     __ptext98:	
 22440 ;; *************** function _PWM6_LoadDutyValue *****************
 22441 ;; Defined at:
 22442 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 22443 ;; Parameters:    Size  Location     Type
 22444 ;;  dutyValue       2    2[COMMON] unsigned short 
 22445 ;; Auto vars:     Size  Location     Type
 22446 ;;		None
 22447 ;; Return value:  Size  Location     Type
 22448 ;;                  1    wreg      void 
 22449 ;; Registers used:
 22450 ;;		wreg, status,2, status,0
 22451 ;; Tracked objects:
 22452 ;;		On entry : 0/0
 22453 ;;		On exit  : 0/0
 22454 ;;		Unchanged: 0/0
 22455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22456 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22458 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22459 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22460 ;;Total ram usage:        4 bytes
 22461 ;; Hardware stack levels used:    1
 22462 ;; Hardware stack levels required when called:    6
 22463 ;; This function calls:
 22464 ;;		Nothing
 22465 ;; This function is called by:
 22466 ;;		_Alarm
 22467 ;; This function uses a non-reentrant model
 22468 ;;
 22469                           
 22470                           
 22471                           ;psect for function _PWM6_LoadDutyValue
 22472  14E3                     _PWM6_LoadDutyValue:	
 22473  14E3                     l6601:	
 22474                           ;incstack = 0
 22475                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 22476                           
 22477                           
 22478                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22479  14E3  0873               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 22480  14E4  00F5               	movwf	??_PWM6_LoadDutyValue+1
 22481  14E5  0872               	movf	PWM6_LoadDutyValue@dutyValue,w
 22482  14E6  00F4               	movwf	??_PWM6_LoadDutyValue
 22483  14E7  36F5               	lsrf	??_PWM6_LoadDutyValue+1,f
 22484  14E8  0CF4               	rrf	??_PWM6_LoadDutyValue,f
 22485  14E9  36F5               	lsrf	??_PWM6_LoadDutyValue+1,f
 22486  14EA  0CF4               	rrf	??_PWM6_LoadDutyValue,f
 22487  14EB  0874               	movf	??_PWM6_LoadDutyValue,w
 22488  14EC  0027               	movlb	7	; select bank7
 22489  14ED  008D               	movwf	13	;volatile
 22490                           
 22491                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 22492  14EE  0872               	movf	PWM6_LoadDutyValue@dutyValue,w
 22493  14EF  3903               	andlw	3
 22494  14F0  00F4               	movwf	??_PWM6_LoadDutyValue
 22495  14F1  3005               	movlw	5
 22496  14F2                     u5445:	
 22497  14F2  35F4               	lslf	??_PWM6_LoadDutyValue,f
 22498  14F3  3EFF               	addlw	-1
 22499  14F4  1D03               	skipz
 22500  14F5  2CF2               	goto	u5445
 22501  14F6  3574               	lslf	??_PWM6_LoadDutyValue,w
 22502  14F7  008C               	movwf	12	;volatile
 22503  14F8                     l644:	
 22504  14F8  0008               	return
 22505  14F9                     __end_of_PWM6_LoadDutyValue:	
 22506                           
 22507                           	psect	intentry
 22508  0004                     __pintentry:	
 22509 ;; *************** function _INTERRUPT_InterruptManager *****************
 22510 ;; Defined at:
 22511 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22512 ;; Parameters:    Size  Location     Type
 22513 ;;		None
 22514 ;; Auto vars:     Size  Location     Type
 22515 ;;		None
 22516 ;; Return value:  Size  Location     Type
 22517 ;;                  1    wreg      void 
 22518 ;; Registers used:
 22519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22520 ;; Tracked objects:
 22521 ;;		On entry : 0/0
 22522 ;;		On exit  : 0/0
 22523 ;;		Unchanged: 0/0
 22524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22529 ;;Total ram usage:        0 bytes
 22530 ;; Hardware stack levels used:    1
 22531 ;; Hardware stack levels required when called:    5
 22532 ;; This function calls:
 22533 ;;		Absolute function
 22534 ;;		_EUSART_Receive_ISR
 22535 ;;		_EUSART_Transmit_ISR
 22536 ;;		_INT_ISR
 22537 ;;		_TMR1_ISR
 22538 ;;		_countMsg
 22539 ;; This function is called by:
 22540 ;;		Interrupt level 1
 22541 ;; This function uses a non-reentrant model
 22542 ;;
 22543                           
 22544  0004                     _INTERRUPT_InterruptManager:	
 22545                           
 22546                           ;incstack = 0
 22547  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 22548                           
 22549                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22550  0005  3180               	pagesel	$
 22551  0006                     i1l5643:	
 22552                           
 22553                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 22554  0006  002E               	movlb	14	; select bank14
 22555  0007  1C16               	btfss	22,0	;volatile
 22556  0008  280A               	goto	u422_21
 22557  0009  280B               	goto	u422_20
 22558  000A                     u422_21:	
 22559  000A  2813               	goto	i1l121
 22560  000B                     u422_20:	
 22561  000B                     i1l5645:	
 22562  000B  1C0C               	btfss	12,0	;volatile
 22563  000C  280E               	goto	u423_21
 22564  000D  280F               	goto	u423_20
 22565  000E                     u423_21:	
 22566  000E  2813               	goto	i1l121
 22567  000F                     u423_20:	
 22568  000F                     i1l5647:	
 22569                           
 22570                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 22571  000F  3192  22F2  3180   	fcall	_INT_ISR
 22572                           
 22573                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 22574  0012  2853               	goto	i1l135
 22575  0013                     i1l121:	
 22576                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 22577                           
 22578  0013  1F0B               	btfss	11,6	;volatile
 22579  0014  2816               	goto	u424_21
 22580  0015  2817               	goto	u424_20
 22581  0016                     u424_21:	
 22582  0016  2853               	goto	i1l135
 22583  0017                     u424_20:	
 22584  0017                     i1l5649:	
 22585                           
 22586                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 22587  0017  1C99               	btfss	25,1	;volatile
 22588  0018  281A               	goto	u425_21
 22589  0019  281B               	goto	u425_20
 22590  001A                     u425_21:	
 22591  001A  2820               	goto	i1l124
 22592  001B                     u425_20:	
 22593  001B                     i1l5651:	
 22594                           
 22595                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             i2c1_driver_busCollisionISR();
 22596  001B  1C8F               	btfss	15,1	;volatile
 22597  001C  281E               	goto	u426_21
 22598  001D  281F               	goto	u426_20
 22599  001E                     u426_21:	
 22600  001E  2820               	goto	i1l124
 22601  001F                     u426_20:	
 22602  001F  2853               	goto	i1l135
 22603  0020                     i1l124:	
 22604                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 22605                           
 22606  0020  1C19               	btfss	25,0	;volatile
 22607  0021  2823               	goto	u427_21
 22608  0022  2824               	goto	u427_20
 22609  0023                     u427_21:	
 22610  0023  282A               	goto	i1l126
 22611  0024                     u427_20:	
 22612  0024                     i1l5655:	
 22613                           
 22614                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_i2cISR();
 22615  0024  1C0F               	btfss	15,0	;volatile
 22616  0025  2827               	goto	u428_21
 22617  0026  2828               	goto	u428_20
 22618  0027                     u428_21:	
 22619  0027  282A               	goto	i1l126
 22620  0028                     u428_20:	
 22621  0028  2853               	goto	i1l135
 22622  0029                     i1l5657:	
 22623                           
 22624                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 22625  0029  2853               	goto	i1l135
 22626  002A                     i1l126:	
 22627                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TXIE == 1 && PIR3
      +                          bits.TXIF == 1)
 22628                           
 22629  002A  1E19               	btfss	25,4	;volatile
 22630  002B  282D               	goto	u429_21
 22631  002C  282E               	goto	u429_20
 22632  002D                     u429_21:	
 22633  002D  2839               	goto	i1l128
 22634  002E                     u429_20:	
 22635  002E                     i1l5659:	
 22636  002E  1E0F               	btfss	15,4	;volatile
 22637  002F  2831               	goto	u430_21
 22638  0030  2832               	goto	u430_20
 22639  0031                     u430_21:	
 22640  0031  2839               	goto	i1l128
 22641  0032                     u430_20:	
 22642  0032                     i1l5661:	
 22643                           
 22644                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART_TxDefaultInterruptHandler();
 22645  0032  0021               	movlb	1	; select bank1
 22646  0033  0868               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 22647  0034  008A               	movwf	10
 22648  0035  0867               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 22649  0036  000A               	callw
 22650  0037  3180               	pagesel	$
 22651                           
 22652                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 22653  0038  2853               	goto	i1l135
 22654  0039                     i1l128:	
 22655                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RCIE == 1 && PIR3
      +                          bits.RCIF == 1)
 22656                           
 22657  0039  1E99               	btfss	25,5	;volatile
 22658  003A  283C               	goto	u431_21
 22659  003B  283D               	goto	u431_20
 22660  003C                     u431_21:	
 22661  003C  2848               	goto	i1l130
 22662  003D                     u431_20:	
 22663  003D                     i1l5663:	
 22664  003D  1E8F               	btfss	15,5	;volatile
 22665  003E  2840               	goto	u432_21
 22666  003F  2841               	goto	u432_20
 22667  0040                     u432_21:	
 22668  0040  2848               	goto	i1l130
 22669  0041                     u432_20:	
 22670  0041                     i1l5665:	
 22671                           
 22672                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART_RxDefaultInterruptHandler();
 22673  0041  0021               	movlb	1	; select bank1
 22674  0042  0866               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 22675  0043  008A               	movwf	10
 22676  0044  0865               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 22677  0045  000A               	callw
 22678  0046  3180               	pagesel	$
 22679                           
 22680                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 22681  0047  2853               	goto	i1l135
 22682  0048                     i1l130:	
 22683                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 22684                           
 22685  0048  1C1A               	btfss	26,0	;volatile
 22686  0049  284B               	goto	u433_21
 22687  004A  284C               	goto	u433_20
 22688  004B                     u433_21:	
 22689  004B  2829               	goto	i1l5657
 22690  004C                     u433_20:	
 22691  004C                     i1l5667:	
 22692  004C  1C10               	btfss	16,0	;volatile
 22693  004D  284F               	goto	u434_21
 22694  004E  2850               	goto	u434_20
 22695  004F                     u434_21:	
 22696  004F  2829               	goto	i1l5657
 22697  0050                     u434_20:	
 22698  0050                     i1l5669:	
 22699                           
 22700                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR1_ISR();
 22701  0050  3195  2525  3180   	fcall	_TMR1_ISR
 22702  0053                     i1l135:	
 22703                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 22704                           
 22705  0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 22706  0054  0009               	retfie
 22707  0055                     __end_of_INTERRUPT_InterruptManager:	
 22708                           
 22709                           	psect	text100
 22710  09CD                     __ptext100:	
 22711 ;; *************** function _EUSART_Receive_ISR *****************
 22712 ;; Defined at:
 22713 ;;		line 225 in file "mcc_generated_files/eusart.c"
 22714 ;; Parameters:    Size  Location     Type
 22715 ;;		None
 22716 ;; Auto vars:     Size  Location     Type
 22717 ;;		None
 22718 ;; Return value:  Size  Location     Type
 22719 ;;                  1    wreg      void 
 22720 ;; Registers used:
 22721 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22722 ;; Tracked objects:
 22723 ;;		On entry : 0/0
 22724 ;;		On exit  : 0/0
 22725 ;;		Unchanged: 0/0
 22726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22731 ;;Total ram usage:        0 bytes
 22732 ;; Hardware stack levels used:    1
 22733 ;; Hardware stack levels required when called:    2
 22734 ;; This function calls:
 22735 ;;		Absolute function
 22736 ;;		_EUSART_DefaultErrorHandler
 22737 ;;		_EUSART_DefaultFramingErrorHandler
 22738 ;;		_EUSART_DefaultOverrunErrorHandler
 22739 ;;		_EUSART_RxDataHandler
 22740 ;; This function is called by:
 22741 ;;		_EUSART_Initialize
 22742 ;;		_countMsg
 22743 ;;		_INTERRUPT_InterruptManager
 22744 ;; This function uses a non-reentrant model
 22745 ;;
 22746                           
 22747                           
 22748                           ;psect for function _EUSART_Receive_ISR
 22749  09CD                     _EUSART_Receive_ISR:	
 22750  09CD                     i1l5107:	
 22751                           ;incstack = 0
 22752                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22753                           
 22754                           
 22755                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 22756  09CD  087B               	movf	_eusartRxHead,w	;volatile
 22757  09CE  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 22758  09CF  0086               	movwf	6
 22759  09D0  0187               	clrf	7
 22760  09D1  0181               	clrf	1
 22761  09D2                     i1l5109:	
 22762                           
 22763                           ;mcc_generated_files/eusart.c: 230:     if(RC1STAbits.FERR){
 22764  09D2  0022               	movlb	2	; select bank2
 22765  09D3  1D1D               	btfss	29,2	;volatile
 22766  09D4  29D6               	goto	u331_21
 22767  09D5  29D7               	goto	u331_20
 22768  09D6                     u331_21:	
 22769  09D6  29E2               	goto	i1l5115
 22770  09D7                     u331_20:	
 22771  09D7                     i1l5111:	
 22772                           
 22773                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 22774  09D7  087B               	movf	_eusartRxHead,w	;volatile
 22775  09D8  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 22776  09D9  0086               	movwf	6
 22777  09DA  0187               	clrf	7
 22778  09DB  1481               	bsf	1,1
 22779  09DC                     i1l5113:	
 22780                           
 22781                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 22782  09DC  0021               	movlb	1	; select bank1
 22783  09DD  0864               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 22784  09DE  008A               	movwf	10
 22785  09DF  0863               	movf	_EUSART_FramingErrorHandler^(0+128),w
 22786  09E0  000A               	callw
 22787  09E1  3189               	pagesel	$
 22788  09E2                     i1l5115:	
 22789                           
 22790                           ;mcc_generated_files/eusart.c: 235:     if(RC1STAbits.OERR){
 22791  09E2  0022               	movlb	2	; select bank2
 22792  09E3  1C9D               	btfss	29,1	;volatile
 22793  09E4  29E6               	goto	u332_21
 22794  09E5  29E7               	goto	u332_20
 22795  09E6                     u332_21:	
 22796  09E6  29F2               	goto	i1l5121
 22797  09E7                     u332_20:	
 22798  09E7                     i1l5117:	
 22799                           
 22800                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 22801  09E7  087B               	movf	_eusartRxHead,w	;volatile
 22802  09E8  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 22803  09E9  0086               	movwf	6
 22804  09EA  0187               	clrf	7
 22805  09EB  1501               	bsf	1,2
 22806  09EC                     i1l5119:	
 22807                           
 22808                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 22809  09EC  0021               	movlb	1	; select bank1
 22810  09ED  0862               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 22811  09EE  008A               	movwf	10
 22812  09EF  0861               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 22813  09F0  000A               	callw
 22814  09F1  3189               	pagesel	$
 22815  09F2                     i1l5121:	
 22816                           
 22817                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 22818  09F2  087B               	movf	_eusartRxHead,w	;volatile
 22819  09F3  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 22820  09F4  0086               	movwf	6
 22821  09F5  0187               	clrf	7
 22822  09F6  0801               	movf	1,w
 22823  09F7  1903               	btfsc	3,2
 22824  09F8  29FA               	goto	u333_21
 22825  09F9  29FB               	goto	u333_20
 22826  09FA                     u333_21:	
 22827  09FA  2A02               	goto	i1l5125
 22828  09FB                     u333_20:	
 22829  09FB                     i1l5123:	
 22830                           
 22831                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 22832  09FB  0021               	movlb	1	; select bank1
 22833  09FC  0860               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 22834  09FD  008A               	movwf	10
 22835  09FE  085F               	movf	_EUSART_ErrorHandler^(0+128),w
 22836  09FF  000A               	callw
 22837  0A00  3189               	pagesel	$
 22838                           
 22839                           ;mcc_generated_files/eusart.c: 242:     } else {
 22840  0A01  2A05               	goto	i1l833
 22841  0A02                     i1l5125:	
 22842                           
 22843                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 22844  0A02  3195  2555  3189   	fcall	_EUSART_RxDataHandler
 22845  0A05                     i1l833:	
 22846  0A05  0008               	return
 22847  0A06                     __end_of_EUSART_Receive_ISR:	
 22848                           
 22849                           	psect	text101
 22850  1482                     __ptext101:	
 22851 ;; *************** function _countMsg *****************
 22852 ;; Defined at:
 22853 ;;		line 239 in file "communications.c"
 22854 ;; Parameters:    Size  Location     Type
 22855 ;;		None
 22856 ;; Auto vars:     Size  Location     Type
 22857 ;;		None
 22858 ;; Return value:  Size  Location     Type
 22859 ;;                  1    wreg      void 
 22860 ;; Registers used:
 22861 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22862 ;; Tracked objects:
 22863 ;;		On entry : 0/0
 22864 ;;		On exit  : 0/0
 22865 ;;		Unchanged: 0/0
 22866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22869 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22871 ;;Total ram usage:        1 bytes
 22872 ;; Hardware stack levels used:    1
 22873 ;; Hardware stack levels required when called:    3
 22874 ;; This function calls:
 22875 ;;		_EUSART_LastByte
 22876 ;;		_EUSART_Receive_ISR
 22877 ;; This function is called by:
 22878 ;;		_main
 22879 ;;		_INTERRUPT_InterruptManager
 22880 ;; This function uses a non-reentrant model
 22881 ;;
 22882                           
 22883                           
 22884                           ;psect for function _countMsg
 22885  1482                     _countMsg:	
 22886  1482                     i1l5637:	
 22887                           ;incstack = 0
 22888                           ; Regs used in _countMsg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22889                           
 22890                           
 22891                           ;communications.c: 240:     EUSART_Receive_ISR();
 22892  1482  3189  21CD  3194   	fcall	_EUSART_Receive_ISR
 22893                           
 22894                           ;communications.c: 241:     if(EUSART_LastByte() == 0xFE) {
 22895  1485  3192  22F8  3194   	fcall	_EUSART_LastByte
 22896  1488  3AFE               	xorlw	254
 22897  1489  1D03               	skipz
 22898  148A  2C8C               	goto	u421_21
 22899  148B  2C8D               	goto	u421_20
 22900  148C                     u421_21:	
 22901  148C  2C92               	goto	i1l1745
 22902  148D                     u421_20:	
 22903  148D                     i1l5639:	
 22904                           
 22905                           ;communications.c: 242:         msgs++;
 22906  148D  3001               	movlw	1
 22907  148E  00F1               	movwf	??_countMsg
 22908  148F  0871               	movf	??_countMsg,w
 22909  1490  0021               	movlb	1	; select bank1
 22910  1491  07CF               	addwf	_msgs^(0+128),f	;volatile
 22911  1492                     i1l1745:	
 22912  1492  0008               	return
 22913  1493                     __end_of_countMsg:	
 22914                           
 22915                           	psect	text102
 22916  12EE                     __ptext102:	
 22917 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 22918 ;; Defined at:
 22919 ;;		line 261 in file "mcc_generated_files/eusart.c"
 22920 ;; Parameters:    Size  Location     Type
 22921 ;;		None
 22922 ;; Auto vars:     Size  Location     Type
 22923 ;;		None
 22924 ;; Return value:  Size  Location     Type
 22925 ;;                  1    wreg      void 
 22926 ;; Registers used:
 22927 ;;		None
 22928 ;; Tracked objects:
 22929 ;;		On entry : 0/0
 22930 ;;		On exit  : 0/0
 22931 ;;		Unchanged: 0/0
 22932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22937 ;;Total ram usage:        0 bytes
 22938 ;; Hardware stack levels used:    1
 22939 ;; This function calls:
 22940 ;;		Nothing
 22941 ;; This function is called by:
 22942 ;;		_EUSART_Initialize
 22943 ;;		_EUSART_Receive_ISR
 22944 ;; This function uses a non-reentrant model
 22945 ;;
 22946                           
 22947                           
 22948                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 22949  12EE                     _EUSART_DefaultOverrunErrorHandler:	
 22950  12EE                     i1l4651:	
 22951                           ;incstack = 0
 22952                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 22953                           
 22954                           
 22955                           ;mcc_generated_files/eusart.c: 264:     RC1STAbits.CREN = 0;
 22956  12EE  0022               	movlb	2	; select bank2
 22957  12EF  121D               	bcf	29,4	;volatile
 22958                           
 22959                           ;mcc_generated_files/eusart.c: 265:     RC1STAbits.CREN = 1;
 22960  12F0  161D               	bsf	29,4	;volatile
 22961  12F1                     i1l843:	
 22962  12F1  0008               	return
 22963  12F2                     __end_of_EUSART_DefaultOverrunErrorHandler:	
 22964                           
 22965                           	psect	text103
 22966  07FF                     __ptext103:	
 22967 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 22968 ;; Defined at:
 22969 ;;		line 259 in file "mcc_generated_files/eusart.c"
 22970 ;; Parameters:    Size  Location     Type
 22971 ;;		None
 22972 ;; Auto vars:     Size  Location     Type
 22973 ;;		None
 22974 ;; Return value:  Size  Location     Type
 22975 ;;                  1    wreg      void 
 22976 ;; Registers used:
 22977 ;;		None
 22978 ;; Tracked objects:
 22979 ;;		On entry : 0/0
 22980 ;;		On exit  : 0/0
 22981 ;;		Unchanged: 0/0
 22982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22987 ;;Total ram usage:        0 bytes
 22988 ;; Hardware stack levels used:    1
 22989 ;; This function calls:
 22990 ;;		Nothing
 22991 ;; This function is called by:
 22992 ;;		_EUSART_Initialize
 22993 ;;		_EUSART_Receive_ISR
 22994 ;; This function uses a non-reentrant model
 22995 ;;
 22996                           
 22997                           
 22998                           ;psect for function _EUSART_DefaultFramingErrorHandler
 22999  07FF                     _EUSART_DefaultFramingErrorHandler:	
 23000  07FF                     i1l840:	
 23001                           ;incstack = 0
 23002                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 23003                           
 23004  07FF  0008               	return
 23005  0800                     __end_of_EUSART_DefaultFramingErrorHandler:	
 23006                           
 23007                           	psect	text104
 23008  12EA                     __ptext104:	
 23009 ;; *************** function _EUSART_DefaultErrorHandler *****************
 23010 ;; Defined at:
 23011 ;;		line 269 in file "mcc_generated_files/eusart.c"
 23012 ;; Parameters:    Size  Location     Type
 23013 ;;		None
 23014 ;; Auto vars:     Size  Location     Type
 23015 ;;		None
 23016 ;; Return value:  Size  Location     Type
 23017 ;;                  1    wreg      void 
 23018 ;; Registers used:
 23019 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23020 ;; Tracked objects:
 23021 ;;		On entry : 0/0
 23022 ;;		On exit  : 0/0
 23023 ;;		Unchanged: 0/0
 23024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23029 ;;Total ram usage:        0 bytes
 23030 ;; Hardware stack levels used:    1
 23031 ;; Hardware stack levels required when called:    1
 23032 ;; This function calls:
 23033 ;;		_EUSART_RxDataHandler
 23034 ;; This function is called by:
 23035 ;;		_EUSART_Initialize
 23036 ;;		_EUSART_Receive_ISR
 23037 ;; This function uses a non-reentrant model
 23038 ;;
 23039                           
 23040                           
 23041                           ;psect for function _EUSART_DefaultErrorHandler
 23042  12EA                     _EUSART_DefaultErrorHandler:	
 23043  12EA                     i1l4653:	
 23044                           ;incstack = 0
 23045                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 23046                           
 23047                           
 23048                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 23049  12EA  3195  2555  3192   	fcall	_EUSART_RxDataHandler
 23050  12ED                     i1l846:	
 23051  12ED  0008               	return
 23052  12EE                     __end_of_EUSART_DefaultErrorHandler:	
 23053                           
 23054                           	psect	text105
 23055  1555                     __ptext105:	
 23056 ;; *************** function _EUSART_RxDataHandler *****************
 23057 ;; Defined at:
 23058 ;;		line 249 in file "mcc_generated_files/eusart.c"
 23059 ;; Parameters:    Size  Location     Type
 23060 ;;		None
 23061 ;; Auto vars:     Size  Location     Type
 23062 ;;		None
 23063 ;; Return value:  Size  Location     Type
 23064 ;;                  1    wreg      void 
 23065 ;; Registers used:
 23066 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23067 ;; Tracked objects:
 23068 ;;		On entry : 0/0
 23069 ;;		On exit  : 0/0
 23070 ;;		Unchanged: 0/0
 23071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23074 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23076 ;;Total ram usage:        1 bytes
 23077 ;; Hardware stack levels used:    1
 23078 ;; This function calls:
 23079 ;;		Nothing
 23080 ;; This function is called by:
 23081 ;;		_EUSART_Receive_ISR
 23082 ;;		_EUSART_DefaultErrorHandler
 23083 ;; This function uses a non-reentrant model
 23084 ;;
 23085                           
 23086                           
 23087                           ;psect for function _EUSART_RxDataHandler
 23088  1555                     _EUSART_RxDataHandler:	
 23089  1555                     i1l4485:	
 23090                           ;incstack = 0
 23091                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 23092                           
 23093                           
 23094                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 23095  1555  0022               	movlb	2	; select bank2
 23096  1556  0819               	movf	25,w	;volatile
 23097  1557  00F0               	movwf	??_EUSART_RxDataHandler
 23098  1558  087B               	movf	_eusartRxHead,w
 23099  1559  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
 23100  155A  0086               	movwf	6
 23101  155B  0187               	clrf	7
 23102  155C  0870               	movf	??_EUSART_RxDataHandler,w
 23103  155D  0081               	movwf	1
 23104  155E                     i1l4487:	
 23105  155E  3001               	movlw	1
 23106  155F  00F0               	movwf	??_EUSART_RxDataHandler
 23107  1560  0870               	movf	??_EUSART_RxDataHandler,w
 23108  1561  07FB               	addwf	_eusartRxHead,f	;volatile
 23109  1562                     i1l4489:	
 23110                           
 23111                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 23112  1562  3008               	movlw	8
 23113  1563  027B               	subwf	_eusartRxHead,w	;volatile
 23114  1564  1C03               	skipc
 23115  1565  2D67               	goto	u256_21
 23116  1566  2D68               	goto	u256_20
 23117  1567                     u256_21:	
 23118  1567  2D69               	goto	i1l4493
 23119  1568                     u256_20:	
 23120  1568                     i1l4491:	
 23121                           
 23122                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 23123  1568  01FB               	clrf	_eusartRxHead	;volatile
 23124  1569                     i1l4493:	
 23125                           
 23126                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 23127  1569  3001               	movlw	1
 23128  156A  00F0               	movwf	??_EUSART_RxDataHandler
 23129  156B  0870               	movf	??_EUSART_RxDataHandler,w
 23130  156C  0021               	movlb	1	; select bank1
 23131  156D  07DC               	addwf	_eusartRxCount^(0+128),f	;volatile
 23132  156E                     i1l837:	
 23133  156E  0008               	return
 23134  156F                     __end_of_EUSART_RxDataHandler:	
 23135                           
 23136                           	psect	text106
 23137  12F8                     __ptext106:	
 23138 ;; *************** function _EUSART_LastByte *****************
 23139 ;; Defined at:
 23140 ;;		line 293 in file "mcc_generated_files/eusart.c"
 23141 ;; Parameters:    Size  Location     Type
 23142 ;;		None
 23143 ;; Auto vars:     Size  Location     Type
 23144 ;;		None
 23145 ;; Return value:  Size  Location     Type
 23146 ;;                  1    wreg      unsigned char 
 23147 ;; Registers used:
 23148 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23149 ;; Tracked objects:
 23150 ;;		On entry : 0/0
 23151 ;;		On exit  : 0/0
 23152 ;;		Unchanged: 0/0
 23153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23158 ;;Total ram usage:        0 bytes
 23159 ;; Hardware stack levels used:    1
 23160 ;; This function calls:
 23161 ;;		Nothing
 23162 ;; This function is called by:
 23163 ;;		_countMsg
 23164 ;; This function uses a non-reentrant model
 23165 ;;
 23166                           
 23167                           
 23168                           ;psect for function _EUSART_LastByte
 23169  12F8                     _EUSART_LastByte:	
 23170  12F8                     i1l5127:	
 23171                           ;incstack = 0
 23172                           ; Regs used in _EUSART_LastByte: [wreg+fsr1l+fsr1h+status,2+status,0]
 23173                           
 23174  12F8  087B               	movf	_eusartRxHead,w
 23175  12F9  3EA7               	addlw	(low ((_eusartRxBuffer| 0+255)))& (0+255)
 23176  12FA  0086               	movwf	6
 23177  12FB  0187               	clrf	7
 23178  12FC  0801               	movf	1,w
 23179  12FD                     i1l864:	
 23180  12FD  0008               	return
 23181  12FE                     __end_of_EUSART_LastByte:	
 23182                           
 23183                           	psect	text107
 23184  1525                     __ptext107:	
 23185 ;; *************** function _TMR1_ISR *****************
 23186 ;; Defined at:
 23187 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 23188 ;; Parameters:    Size  Location     Type
 23189 ;;		None
 23190 ;; Auto vars:     Size  Location     Type
 23191 ;;		None
 23192 ;; Return value:  Size  Location     Type
 23193 ;;                  1    wreg      void 
 23194 ;; Registers used:
 23195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 23196 ;; Tracked objects:
 23197 ;;		On entry : 0/0
 23198 ;;		On exit  : 0/0
 23199 ;;		Unchanged: 0/0
 23200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23205 ;;Total ram usage:        0 bytes
 23206 ;; Hardware stack levels used:    1
 23207 ;; Hardware stack levels required when called:    1
 23208 ;; This function calls:
 23209 ;;		Absolute function
 23210 ;;		_Blink
 23211 ;;		_TMR1_DefaultInterruptHandler
 23212 ;;		_TMR1_WriteTimer
 23213 ;;		_Timer
 23214 ;; This function is called by:
 23215 ;;		_INTERRUPT_InterruptManager
 23216 ;; This function uses a non-reentrant model
 23217 ;;
 23218                           
 23219                           
 23220                           ;psect for function _TMR1_ISR
 23221  1525                     _TMR1_ISR:	
 23222  1525                     i1l5391:	
 23223                           ;incstack = 0
 23224                           ; Regs used in _TMR1_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 23225                           
 23226                           
 23227                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 23228  1525  002E               	movlb	14	; select bank14
 23229  1526  1010               	bcf	16,0	;volatile
 23230  1527                     i1l5393:	
 23231                           
 23232                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 23233  1527  0021               	movlb	1	; select bank1
 23234  1528  086E               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 23235  1529  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 23236  152A  086D               	movf	_timer1ReloadVal^(0+128),w	;volatile
 23237  152B  00F0               	movwf	TMR1_WriteTimer@timerVal
 23238  152C  3194  2471  3195   	fcall	_TMR1_WriteTimer
 23239  152F                     i1l5395:	
 23240                           
 23241                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 23242  152F  0021               	movlb	1	; select bank1
 23243  1530  086B               	movf	_TMR1_InterruptHandler^(0+128),w
 23244  1531  046C               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 23245  1532  1903               	btfsc	3,2
 23246  1533  2D35               	goto	u374_21
 23247  1534  2D36               	goto	u374_20
 23248  1535                     u374_21:	
 23249  1535  2D3B               	goto	i1l58
 23250  1536                     u374_20:	
 23251  1536                     i1l5397:	
 23252                           
 23253                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 23254  1536  086C               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 23255  1537  008A               	movwf	10
 23256  1538  086B               	movf	_TMR1_InterruptHandler^(0+128),w
 23257  1539  000A               	callw
 23258  153A  3195               	pagesel	$
 23259  153B                     i1l58:	
 23260  153B  0008               	return
 23261  153C                     __end_of_TMR1_ISR:	
 23262                           
 23263                           	psect	text108
 23264  0C5C                     __ptext108:	
 23265 ;; *************** function _Blink *****************
 23266 ;; Defined at:
 23267 ;;		line 112 in file "menus.c"
 23268 ;; Parameters:    Size  Location     Type
 23269 ;;		None
 23270 ;; Auto vars:     Size  Location     Type
 23271 ;;		None
 23272 ;; Return value:  Size  Location     Type
 23273 ;;                  1    wreg      void 
 23274 ;; Registers used:
 23275 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 23276 ;; Tracked objects:
 23277 ;;		On entry : 0/0
 23278 ;;		On exit  : 0/0
 23279 ;;		Unchanged: 0/0
 23280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23283 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23284 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23285 ;;Total ram usage:        2 bytes
 23286 ;; Hardware stack levels used:    1
 23287 ;; This function calls:
 23288 ;;		Nothing
 23289 ;; This function is called by:
 23290 ;;		_Menus
 23291 ;;		_TMR1_ISR
 23292 ;; This function uses a non-reentrant model
 23293 ;;
 23294                           
 23295                           
 23296                           ;psect for function _Blink
 23297  0C5C                     _Blink:	
 23298  0C5C                     i1l5237:	
 23299                           ;incstack = 0
 23300                           ; Regs used in _Blink: [wreg-fsr0h+status,2+status,0]
 23301                           
 23302                           
 23303                           ;menus.c: 113:     switch(mode){
 23304  0C5C  2C8D               	goto	i1l5249
 23305  0C5D                     i1l5239:	
 23306  0C5D  1003               	clrc
 23307  0C5E  1F96               	btfss	22,7	;volatile
 23308  0C5F  1403               	setc
 23309  0C60  1803               	btfsc	3,0
 23310  0C61  2C63               	goto	u353_21
 23311  0C62  2C66               	goto	u353_20
 23312  0C63                     u353_21:	
 23313  0C63  0020               	movlb	0	; select bank0
 23314  0C64  1796               	bsf	22,7	;volatile
 23315  0C65  2C68               	goto	u354_24
 23316  0C66                     u353_20:	
 23317  0C66  0020               	movlb	0	; select bank0
 23318  0C67  1396               	bcf	22,7	;volatile
 23319  0C68                     u354_24:	
 23320  0C68  2CA4               	goto	i1l1192
 23321  0C69                     i1l5241:	
 23322  0C69  1003               	clrc
 23323  0C6A  1F16               	btfss	22,6	;volatile
 23324  0C6B  1403               	setc
 23325  0C6C  1803               	btfsc	3,0
 23326  0C6D  2C6F               	goto	u355_21
 23327  0C6E  2C72               	goto	u355_20
 23328  0C6F                     u355_21:	
 23329  0C6F  0020               	movlb	0	; select bank0
 23330  0C70  1716               	bsf	22,6	;volatile
 23331  0C71  2C74               	goto	u356_24
 23332  0C72                     u355_20:	
 23333  0C72  0020               	movlb	0	; select bank0
 23334  0C73  1316               	bcf	22,6	;volatile
 23335  0C74                     u356_24:	
 23336  0C74  2CA4               	goto	i1l1192
 23337  0C75                     i1l5243:	
 23338  0C75  1003               	clrc
 23339  0C76  1E96               	btfss	22,5	;volatile
 23340  0C77  1403               	setc
 23341  0C78  1803               	btfsc	3,0
 23342  0C79  2C7B               	goto	u357_21
 23343  0C7A  2C7E               	goto	u357_20
 23344  0C7B                     u357_21:	
 23345  0C7B  0020               	movlb	0	; select bank0
 23346  0C7C  1696               	bsf	22,5	;volatile
 23347  0C7D  2C80               	goto	u358_24
 23348  0C7E                     u357_20:	
 23349  0C7E  0020               	movlb	0	; select bank0
 23350  0C7F  1296               	bcf	22,5	;volatile
 23351  0C80                     u358_24:	
 23352  0C80  2CA4               	goto	i1l1192
 23353  0C81                     i1l5245:	
 23354  0C81  1003               	clrc
 23355  0C82  1E16               	btfss	22,4	;volatile
 23356  0C83  1403               	setc
 23357  0C84  1803               	btfsc	3,0
 23358  0C85  2C87               	goto	u359_21
 23359  0C86  2C8A               	goto	u359_20
 23360  0C87                     u359_21:	
 23361  0C87  0020               	movlb	0	; select bank0
 23362  0C88  1616               	bsf	22,4	;volatile
 23363  0C89  2C8C               	goto	u360_24
 23364  0C8A                     u359_20:	
 23365  0C8A  0020               	movlb	0	; select bank0
 23366  0C8B  1216               	bcf	22,4	;volatile
 23367  0C8C                     u360_24:	
 23368  0C8C  2CA4               	goto	i1l1192
 23369  0C8D                     i1l5249:	
 23370  0C8D  0020               	movlb	0	; select bank0
 23371  0C8E  086E               	movf	_mode,w	;volatile
 23372  0C8F  00F0               	movwf	??_Blink
 23373  0C90  01F1               	clrf	??_Blink+1
 23374                           
 23375                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23376                           ; Switch size 1, requested type "simple"
 23377                           ; Number of cases is 1, Range of values is 0 to 0
 23378                           ; switch strategies available:
 23379                           ; Name         Instructions Cycles
 23380                           ; simple_byte            4     3 (average)
 23381                           ; direct_byte            8     6 (fixed)
 23382                           ; jumptable            260     6 (fixed)
 23383                           ;	Chosen strategy is simple_byte
 23384  0C91  0871               	movf	??_Blink+1,w
 23385  0C92  3A00               	xorlw	0	; case 0
 23386  0C93  1903               	skipnz
 23387  0C94  2C96               	goto	i1l7259
 23388  0C95  2CA4               	goto	i1l1192
 23389  0C96                     i1l7259:	
 23390                           
 23391                           ; Switch size 1, requested type "simple"
 23392                           ; Number of cases is 4, Range of values is 0 to 3
 23393                           ; switch strategies available:
 23394                           ; Name         Instructions Cycles
 23395                           ; simple_byte           13     7 (average)
 23396                           ; direct_byte           14     6 (fixed)
 23397                           ; jumptable            260     6 (fixed)
 23398                           ;	Chosen strategy is simple_byte
 23399  0C96  0870               	movf	??_Blink,w
 23400  0C97  3A00               	xorlw	0	; case 0
 23401  0C98  1903               	skipnz
 23402  0C99  2C5D               	goto	i1l5239
 23403  0C9A  3A01               	xorlw	1	; case 1
 23404  0C9B  1903               	skipnz
 23405  0C9C  2C69               	goto	i1l5241
 23406  0C9D  3A03               	xorlw	3	; case 2
 23407  0C9E  1903               	skipnz
 23408  0C9F  2C75               	goto	i1l5243
 23409  0CA0  3A01               	xorlw	1	; case 3
 23410  0CA1  1903               	skipnz
 23411  0CA2  2C81               	goto	i1l5245
 23412  0CA3  2CA4               	goto	i1l1192
 23413  0CA4                     i1l1192:	
 23414  0CA4  0008               	return
 23415  0CA5                     __end_of_Blink:	
 23416                           
 23417                           	psect	text109
 23418  0003                     __ptext109:	
 23419 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 23420 ;; Defined at:
 23421 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 23422 ;; Parameters:    Size  Location     Type
 23423 ;;		None
 23424 ;; Auto vars:     Size  Location     Type
 23425 ;;		None
 23426 ;; Return value:  Size  Location     Type
 23427 ;;                  1    wreg      void 
 23428 ;; Registers used:
 23429 ;;		None
 23430 ;; Tracked objects:
 23431 ;;		On entry : 0/0
 23432 ;;		On exit  : 0/0
 23433 ;;		Unchanged: 0/0
 23434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23439 ;;Total ram usage:        0 bytes
 23440 ;; Hardware stack levels used:    1
 23441 ;; This function calls:
 23442 ;;		Nothing
 23443 ;; This function is called by:
 23444 ;;		_TMR1_Initialize
 23445 ;;		_TMR1_ISR
 23446 ;; This function uses a non-reentrant model
 23447 ;;
 23448                           
 23449                           
 23450                           ;psect for function _TMR1_DefaultInterruptHandler
 23451  0003                     _TMR1_DefaultInterruptHandler:	
 23452  0003                     i1l64:	
 23453                           ;incstack = 0
 23454                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 23455                           
 23456  0003  0008               	return
 23457  0004                     __end_of_TMR1_DefaultInterruptHandler:	
 23458                           
 23459                           	psect	text110
 23460  0B87                     __ptext110:	
 23461 ;; *************** function _Timer *****************
 23462 ;; Defined at:
 23463 ;;		line 49 in file "main.c"
 23464 ;; Parameters:    Size  Location     Type
 23465 ;;		None
 23466 ;; Auto vars:     Size  Location     Type
 23467 ;;		None
 23468 ;; Return value:  Size  Location     Type
 23469 ;;                  1    wreg      void 
 23470 ;; Registers used:
 23471 ;;		wreg, status,2, status,0
 23472 ;; Tracked objects:
 23473 ;;		On entry : 0/0
 23474 ;;		On exit  : 0/0
 23475 ;;		Unchanged: 0/0
 23476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23480 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23481 ;;Total ram usage:        1 bytes
 23482 ;; Hardware stack levels used:    1
 23483 ;; This function calls:
 23484 ;;		Nothing
 23485 ;; This function is called by:
 23486 ;;		_main
 23487 ;;		_TMR1_ISR
 23488 ;; This function uses a non-reentrant model
 23489 ;;
 23490                           
 23491                           
 23492                           ;psect for function _Timer
 23493  0B87                     _Timer:	
 23494  0B87                     i1l972:	
 23495                           ;incstack = 0
 23496                           ; Regs used in _Timer: [wreg+status,2+status,0]
 23497                           ;main.c: 50:     do { LATAbits.LATA7 = ~LATAbits.LATA7; } while(0);
 23498                           
 23499  0B87                     i1l5131:	
 23500  0B87  1003               	clrc
 23501  0B88  0020               	movlb	0	; select bank0
 23502  0B89  1F96               	btfss	22,7	;volatile
 23503  0B8A  1403               	setc
 23504  0B8B  1803               	btfsc	3,0
 23505  0B8C  2B8E               	goto	u334_21
 23506  0B8D  2B91               	goto	u334_20
 23507  0B8E                     u334_21:	
 23508  0B8E  0020               	movlb	0	; select bank0
 23509  0B8F  1796               	bsf	22,7	;volatile
 23510  0B90  2B93               	goto	u335_24
 23511  0B91                     u334_20:	
 23512  0B91  0020               	movlb	0	; select bank0
 23513  0B92  1396               	bcf	22,7	;volatile
 23514  0B93                     u335_24:	
 23515  0B93                     i1l5133:	
 23516                           
 23517                           ;main.c: 52:     if(pmon != 0)
 23518  0B93  086D               	movf	_pmon,w
 23519  0B94  1903               	btfsc	3,2
 23520  0B95  2B97               	goto	u336_21
 23521  0B96  2B98               	goto	u336_20
 23522  0B97                     u336_21:	
 23523  0B97  2B9D               	goto	i1l5137
 23524  0B98                     u336_20:	
 23525  0B98                     i1l5135:	
 23526                           
 23527                           ;main.c: 53:         timer++;
 23528  0B98  3001               	movlw	1
 23529  0B99  00F0               	movwf	??_Timer
 23530  0B9A  0870               	movf	??_Timer,w
 23531  0B9B  0021               	movlb	1	; select bank1
 23532  0B9C  07DA               	addwf	_timer^(0+128),f	;volatile
 23533  0B9D                     i1l5137:	
 23534                           
 23535                           ;main.c: 55:     if(clks < 59)
 23536  0B9D  303B               	movlw	59
 23537  0B9E  0020               	movlb	0	; select bank0
 23538  0B9F  0268               	subwf	_clks,w	;volatile
 23539  0BA0  1803               	skipnc
 23540  0BA1  2BA3               	goto	u337_21
 23541  0BA2  2BA4               	goto	u337_20
 23542  0BA3                     u337_21:	
 23543  0BA3  2BA9               	goto	i1l5141
 23544  0BA4                     u337_20:	
 23545  0BA4                     i1l5139:	
 23546                           
 23547                           ;main.c: 56:         clks++;
 23548  0BA4  3001               	movlw	1
 23549  0BA5  00F0               	movwf	??_Timer
 23550  0BA6  0870               	movf	??_Timer,w
 23551  0BA7  07E8               	addwf	_clks,f	;volatile
 23552  0BA8  2BC2               	goto	i1l5155
 23553  0BA9                     i1l5141:	
 23554                           
 23555                           ;main.c: 58:         clks = 0;
 23556  0BA9  01E8               	clrf	_clks	;volatile
 23557  0BAA                     i1l5143:	
 23558                           
 23559                           ;main.c: 59:         if(clkm < 59)
 23560  0BAA  303B               	movlw	59
 23561  0BAB  0269               	subwf	_clkm,w	;volatile
 23562  0BAC  1803               	skipnc
 23563  0BAD  2BAF               	goto	u338_21
 23564  0BAE  2BB0               	goto	u338_20
 23565  0BAF                     u338_21:	
 23566  0BAF  2BB5               	goto	i1l5147
 23567  0BB0                     u338_20:	
 23568  0BB0                     i1l5145:	
 23569                           
 23570                           ;main.c: 60:             clkm++;
 23571  0BB0  3001               	movlw	1
 23572  0BB1  00F0               	movwf	??_Timer
 23573  0BB2  0870               	movf	??_Timer,w
 23574  0BB3  07E9               	addwf	_clkm,f	;volatile
 23575  0BB4  2BC2               	goto	i1l5155
 23576  0BB5                     i1l5147:	
 23577                           
 23578                           ;main.c: 62:             clkm = 0;
 23579  0BB5  01E9               	clrf	_clkm	;volatile
 23580  0BB6                     i1l5149:	
 23581                           
 23582                           ;main.c: 63:             if(clkh < 23)
 23583  0BB6  3017               	movlw	23
 23584  0BB7  026A               	subwf	_clkh,w	;volatile
 23585  0BB8  1803               	skipnc
 23586  0BB9  2BBB               	goto	u339_21
 23587  0BBA  2BBC               	goto	u339_20
 23588  0BBB                     u339_21:	
 23589  0BBB  2BC1               	goto	i1l5153
 23590  0BBC                     u339_20:	
 23591  0BBC                     i1l5151:	
 23592                           
 23593                           ;main.c: 64:                 clkh++;
 23594  0BBC  3001               	movlw	1
 23595  0BBD  00F0               	movwf	??_Timer
 23596  0BBE  0870               	movf	??_Timer,w
 23597  0BBF  07EA               	addwf	_clkh,f	;volatile
 23598  0BC0  2BC2               	goto	i1l5155
 23599  0BC1                     i1l5153:	
 23600                           
 23601                           ;main.c: 66:                 clkh = 0;
 23602  0BC1  01EA               	clrf	_clkh	;volatile
 23603  0BC2                     i1l5155:	
 23604                           
 23605                           ;main.c: 70:     if(clks == 0){
 23606  0BC2  0868               	movf	_clks,w	;volatile
 23607  0BC3  1D03               	btfss	3,2
 23608  0BC4  2BC6               	goto	u340_21
 23609  0BC5  2BC7               	goto	u340_20
 23610  0BC6                     u340_21:	
 23611  0BC6  2BCC               	goto	i1l982
 23612  0BC7                     u340_20:	
 23613  0BC7                     i1l5157:	
 23614                           
 23615                           ;main.c: 71:         flag_timer = 1;
 23616  0BC7  3001               	movlw	1
 23617  0BC8  00F0               	movwf	??_Timer
 23618  0BC9  0870               	movf	??_Timer,w
 23619  0BCA  0021               	movlb	1	; select bank1
 23620  0BCB  00D8               	movwf	_flag_timer^(0+128)	;volatile
 23621  0BCC                     i1l982:	
 23622  0BCC  0008               	return
 23623  0BCD                     __end_of_Timer:	
 23624                           
 23625                           	psect	text111
 23626  1471                     __ptext111:	
 23627 ;; *************** function _TMR1_WriteTimer *****************
 23628 ;; Defined at:
 23629 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 23630 ;; Parameters:    Size  Location     Type
 23631 ;;  timerVal        2    0[COMMON] unsigned short 
 23632 ;; Auto vars:     Size  Location     Type
 23633 ;;		None
 23634 ;; Return value:  Size  Location     Type
 23635 ;;                  1    wreg      void 
 23636 ;; Registers used:
 23637 ;;		wreg, status,2
 23638 ;; Tracked objects:
 23639 ;;		On entry : 0/0
 23640 ;;		On exit  : 0/0
 23641 ;;		Unchanged: 0/0
 23642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23646 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23647 ;;Total ram usage:        2 bytes
 23648 ;; Hardware stack levels used:    1
 23649 ;; This function calls:
 23650 ;;		Nothing
 23651 ;; This function is called by:
 23652 ;;		_TMR1_ISR
 23653 ;;		_TMR1_Reload
 23654 ;; This function uses a non-reentrant model
 23655 ;;
 23656                           
 23657                           
 23658                           ;psect for function _TMR1_WriteTimer
 23659  1471                     _TMR1_WriteTimer:	
 23660  1471                     i1l4921:	
 23661                           ;incstack = 0
 23662                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 23663                           
 23664                           
 23665                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 23666  1471  0024               	movlb	4	; select bank4
 23667  1472  1D0E               	btfss	14,2	;volatile
 23668  1473  2C75               	goto	u323_21
 23669  1474  2C76               	goto	u323_20
 23670  1475                     u323_21:	
 23671  1475  2C7D               	goto	i1l4931
 23672  1476                     u323_20:	
 23673  1476                     i1l4923:	
 23674                           
 23675                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 23676  1476  100E               	bcf	14,0	;volatile
 23677  1477                     i1l4925:	
 23678                           
 23679                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 23680  1477  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 23681  1478  008D               	movwf	13	;volatile
 23682  1479                     i1l4927:	
 23683                           
 23684                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 23685  1479  0870               	movf	TMR1_WriteTimer@timerVal,w
 23686  147A  008C               	movwf	12	;volatile
 23687  147B                     i1l4929:	
 23688                           
 23689                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 23690  147B  140E               	bsf	14,0	;volatile
 23691                           
 23692                           ;mcc_generated_files/tmr1.c: 140:     }
 23693  147C  2C81               	goto	i1l45
 23694  147D                     i1l4931:	
 23695                           
 23696                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 23697  147D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 23698  147E  008D               	movwf	13	;volatile
 23699  147F                     i1l4933:	
 23700                           
 23701                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 23702  147F  0870               	movf	TMR1_WriteTimer@timerVal,w
 23703  1480  008C               	movwf	12	;volatile
 23704  1481                     i1l45:	
 23705  1481  0008               	return
 23706  1482                     __end_of_TMR1_WriteTimer:	
 23707                           
 23708                           	psect	text112
 23709  12F2                     __ptext112:	
 23710 ;; *************** function _INT_ISR *****************
 23711 ;; Defined at:
 23712 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 23713 ;; Parameters:    Size  Location     Type
 23714 ;;		None
 23715 ;; Auto vars:     Size  Location     Type
 23716 ;;		None
 23717 ;; Return value:  Size  Location     Type
 23718 ;;                  1    wreg      void 
 23719 ;; Registers used:
 23720 ;;		wreg, status,2, status,0, pclath, cstack
 23721 ;; Tracked objects:
 23722 ;;		On entry : 0/0
 23723 ;;		On exit  : 0/0
 23724 ;;		Unchanged: 0/0
 23725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23730 ;;Total ram usage:        0 bytes
 23731 ;; Hardware stack levels used:    1
 23732 ;; Hardware stack levels required when called:    4
 23733 ;; This function calls:
 23734 ;;		_INT_CallBack
 23735 ;; This function is called by:
 23736 ;;		_INTERRUPT_InterruptManager
 23737 ;; This function uses a non-reentrant model
 23738 ;;
 23739                           
 23740                           
 23741                           ;psect for function _INT_ISR
 23742  12F2                     _INT_ISR:	
 23743  12F2                     i1l5399:	
 23744                           ;incstack = 0
 23745                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 23746                           
 23747                           
 23748                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 23749  12F2  002E               	movlb	14	; select bank14
 23750  12F3  100C               	bcf	12,0	;volatile
 23751  12F4                     i1l5401:	
 23752                           
 23753                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 23754  12F4  3193  23DF  3192   	fcall	_INT_CallBack
 23755  12F7                     i1l77:	
 23756  12F7  0008               	return
 23757  12F8                     __end_of_INT_ISR:	
 23758                           
 23759                           	psect	text113
 23760  13DF                     __ptext113:	
 23761 ;; *************** function _INT_CallBack *****************
 23762 ;; Defined at:
 23763 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 23764 ;; Parameters:    Size  Location     Type
 23765 ;;		None
 23766 ;; Auto vars:     Size  Location     Type
 23767 ;;		None
 23768 ;; Return value:  Size  Location     Type
 23769 ;;                  1    wreg      void 
 23770 ;; Registers used:
 23771 ;;		wreg, status,2, status,0, pclath, cstack
 23772 ;; Tracked objects:
 23773 ;;		On entry : 0/0
 23774 ;;		On exit  : 0/0
 23775 ;;		Unchanged: 0/0
 23776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23781 ;;Total ram usage:        0 bytes
 23782 ;; Hardware stack levels used:    1
 23783 ;; Hardware stack levels required when called:    3
 23784 ;; This function calls:
 23785 ;;		Absolute function
 23786 ;;		_INT_DefaultInterruptHandler
 23787 ;;		_Switch1
 23788 ;; This function is called by:
 23789 ;;		_INT_ISR
 23790 ;; This function uses a non-reentrant model
 23791 ;;
 23792                           
 23793                           
 23794                           ;psect for function _INT_CallBack
 23795  13DF                     _INT_CallBack:	
 23796  13DF                     i1l4935:	
 23797                           ;incstack = 0
 23798                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 23799                           
 23800                           
 23801                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 23802  13DF  0021               	movlb	1	; select bank1
 23803  13E0  0869               	movf	_INT_InterruptHandler^(0+128),w
 23804  13E1  046A               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 23805  13E2  1903               	btfsc	3,2
 23806  13E3  2BE5               	goto	u324_21
 23807  13E4  2BE6               	goto	u324_20
 23808  13E5                     u324_21:	
 23809  13E5  2BEB               	goto	i1l81
 23810  13E6                     u324_20:	
 23811  13E6                     i1l4937:	
 23812                           
 23813                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 23814  13E6  086A               	movf	(_INT_InterruptHandler+1)^(0+128),w
 23815  13E7  008A               	movwf	10
 23816  13E8  0869               	movf	_INT_InterruptHandler^(0+128),w
 23817  13E9  000A               	callw
 23818  13EA  3193               	pagesel	$
 23819  13EB                     i1l81:	
 23820  13EB  0008               	return
 23821  13EC                     __end_of_INT_CallBack:	
 23822                           
 23823                           	psect	text114
 23824  0002                     __ptext114:	
 23825 ;; *************** function _INT_DefaultInterruptHandler *****************
 23826 ;; Defined at:
 23827 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 23828 ;; Parameters:    Size  Location     Type
 23829 ;;		None
 23830 ;; Auto vars:     Size  Location     Type
 23831 ;;		None
 23832 ;; Return value:  Size  Location     Type
 23833 ;;                  1    wreg      void 
 23834 ;; Registers used:
 23835 ;;		None
 23836 ;; Tracked objects:
 23837 ;;		On entry : 0/0
 23838 ;;		On exit  : 0/0
 23839 ;;		Unchanged: 0/0
 23840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23845 ;;Total ram usage:        0 bytes
 23846 ;; Hardware stack levels used:    1
 23847 ;; This function calls:
 23848 ;;		Nothing
 23849 ;; This function is called by:
 23850 ;;		_EXT_INT_Initialize
 23851 ;;		_INT_CallBack
 23852 ;; This function uses a non-reentrant model
 23853 ;;
 23854                           
 23855                           
 23856                           ;psect for function _INT_DefaultInterruptHandler
 23857  0002                     _INT_DefaultInterruptHandler:	
 23858  0002                     i1l87:	
 23859                           ;incstack = 0
 23860                           ; Regs used in _INT_DefaultInterruptHandler: []
 23861                           
 23862  0002  0008               	return
 23863  0003                     __end_of_INT_DefaultInterruptHandler:	
 23864                           
 23865                           	psect	text115
 23866  1415                     __ptext115:	
 23867 ;; *************** function _Switch1 *****************
 23868 ;; Defined at:
 23869 ;;		line 81 in file "main.c"
 23870 ;; Parameters:    Size  Location     Type
 23871 ;;		None
 23872 ;; Auto vars:     Size  Location     Type
 23873 ;;		None
 23874 ;; Return value:  Size  Location     Type
 23875 ;;                  1    wreg      void 
 23876 ;; Registers used:
 23877 ;;		wreg, status,2, status,0, pclath, cstack
 23878 ;; Tracked objects:
 23879 ;;		On entry : 0/0
 23880 ;;		On exit  : 0/0
 23881 ;;		Unchanged: 0/0
 23882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23885 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23886 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23887 ;;Total ram usage:        1 bytes
 23888 ;; Hardware stack levels used:    1
 23889 ;; Hardware stack levels required when called:    2
 23890 ;; This function calls:
 23891 ;;		i1_clear_alarm
 23892 ;; This function is called by:
 23893 ;;		_main
 23894 ;;		_INT_CallBack
 23895 ;; This function uses a non-reentrant model
 23896 ;;
 23897                           
 23898                           
 23899                           ;psect for function _Switch1
 23900  1415                     _Switch1:	
 23901  1415                     i1l4655:	
 23902                           ;incstack = 0
 23903                           ; Regs used in _Switch1: [wreg+status,2+status,0+pclath+cstack]
 23904                           
 23905                           
 23906                           ;main.c: 82:     if(alarm)
 23907  1415  0021               	movlb	1	; select bank1
 23908  1416  0850               	movf	_alarm^(0+128),w
 23909  1417  1903               	btfsc	3,2
 23910  1418  2C1A               	goto	u279_21
 23911  1419  2C1B               	goto	u279_20
 23912  141A                     u279_21:	
 23913  141A  2C1F               	goto	i1l4659
 23914  141B                     u279_20:	
 23915  141B                     i1l4657:	
 23916                           
 23917                           ;main.c: 83:         clear_alarm();
 23918  141B  3193  2334  3194   	fcall	i1_clear_alarm
 23919  141E  2C23               	goto	i1l992
 23920  141F                     i1l4659:	
 23921                           
 23922                           ;main.c: 85:         switch1 = 1;
 23923  141F  3001               	movlw	1
 23924  1420  00F0               	movwf	??_Switch1
 23925  1421  0870               	movf	??_Switch1,w
 23926  1422  00D9               	movwf	_switch1^(0+128)	;volatile
 23927  1423                     i1l992:	
 23928  1423  0008               	return
 23929  1424                     __end_of_Switch1:	
 23930                           
 23931                           	psect	text116
 23932  1334                     __ptext116:	
 23933 ;; *************** function i1_clear_alarm *****************
 23934 ;; Defined at:
 23935 ;;		line 75 in file "main.c"
 23936 ;; Parameters:    Size  Location     Type
 23937 ;;		None
 23938 ;; Auto vars:     Size  Location     Type
 23939 ;;		None
 23940 ;; Return value:  Size  Location     Type
 23941 ;;                  1    wreg      void 
 23942 ;; Registers used:
 23943 ;;		wreg, status,2, status,0, pclath, cstack
 23944 ;; Tracked objects:
 23945 ;;		On entry : 0/0
 23946 ;;		On exit  : 0/0
 23947 ;;		Unchanged: 0/0
 23948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23953 ;;Total ram usage:        0 bytes
 23954 ;; Hardware stack levels used:    1
 23955 ;; Hardware stack levels required when called:    1
 23956 ;; This function calls:
 23957 ;;		i1_PWM_Output_D4_Disable
 23958 ;; This function is called by:
 23959 ;;		_Switch1
 23960 ;; This function uses a non-reentrant model
 23961 ;;
 23962                           
 23963                           
 23964                           ;psect for function i1_clear_alarm
 23965  1334                     i1_clear_alarm:	
 23966  1334                     i1l4627:	
 23967                           ;incstack = 0
 23968                           ; Regs used in i1_clear_alarm: [wreg+status,2+status,0+pclath+cstack]
 23969                           
 23970                           
 23971                           ;main.c: 76:     PWM_Output_D4_Disable();
 23972  1334  3194  2406  3193   	fcall	i1_PWM_Output_D4_Disable
 23973  1337                     i1l4629:	
 23974  1337  0020               	movlb	0	; select bank0
 23975  1338  1316               	bcf	22,6	;volatile
 23976  1339                     i1l4631:	
 23977                           
 23978                           ;main.c: 78:     alarm = 0;
 23979  1339  0021               	movlb	1	; select bank1
 23980  133A  01D0               	clrf	_alarm^(0+128)
 23981  133B                     i1l987:	
 23982  133B  0008               	return
 23983  133C                     __end_ofi1_clear_alarm:	
 23984                           
 23985                           	psect	text117
 23986  1406                     __ptext117:	
 23987 ;; *************** function i1_PWM_Output_D4_Disable *****************
 23988 ;; Defined at:
 23989 ;;		line 61 in file "utils.c"
 23990 ;; Parameters:    Size  Location     Type
 23991 ;;		None
 23992 ;; Auto vars:     Size  Location     Type
 23993 ;;		None
 23994 ;; Return value:  Size  Location     Type
 23995 ;;                  1    wreg      void 
 23996 ;; Registers used:
 23997 ;;		wreg, status,2
 23998 ;; Tracked objects:
 23999 ;;		On entry : 0/0
 24000 ;;		On exit  : 0/0
 24001 ;;		Unchanged: 0/0
 24002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24007 ;;Total ram usage:        0 bytes
 24008 ;; Hardware stack levels used:    1
 24009 ;; This function calls:
 24010 ;;		Nothing
 24011 ;; This function is called by:
 24012 ;;		i1_clear_alarm
 24013 ;; This function uses a non-reentrant model
 24014 ;;
 24015                           
 24016                           
 24017                           ;psect for function i1_PWM_Output_D4_Disable
 24018  1406                     i1_PWM_Output_D4_Disable:	
 24019  1406                     i1l4473:	
 24020                           ;incstack = 0
 24021                           ; Regs used in i1_PWM_Output_D4_Disable: [wreg+status,2]
 24022                           
 24023                           
 24024                           ;utils.c: 62:     PPSLOCK = 0x55;
 24025  1406  3055               	movlw	85
 24026  1407  003D               	movlb	29	; select bank29
 24027  1408  008F               	movwf	15	;volsfr
 24028                           
 24029                           ;utils.c: 63:     PPSLOCK = 0xAA;
 24030  1409  30AA               	movlw	170
 24031  140A  008F               	movwf	15	;volsfr
 24032  140B                     i1l4475:	
 24033                           
 24034                           ;utils.c: 64:     PPSLOCKbits.PPSLOCKED = 0x00;
 24035  140B  100F               	bcf	15,0	;volsfr
 24036  140C                     i1l4477:	
 24037                           
 24038                           ;utils.c: 66:     RA6PPS = 0x00;
 24039  140C  003E               	movlb	30	; select bank30
 24040  140D  0196               	clrf	22	;volatile
 24041  140E                     i1l4479:	
 24042                           
 24043                           ;utils.c: 67:     PPSLOCK = 0x55;
 24044  140E  3055               	movlw	85
 24045  140F  003D               	movlb	29	; select bank29
 24046  1410  008F               	movwf	15	;volsfr
 24047  1411                     i1l4481:	
 24048                           
 24049                           ;utils.c: 68:     PPSLOCK = 0xAA;
 24050  1411  30AA               	movlw	170
 24051  1412  008F               	movwf	15	;volsfr
 24052  1413                     i1l4483:	
 24053                           
 24054                           ;utils.c: 69:     PPSLOCKbits.PPSLOCKED = 0x01;
 24055  1413  140F               	bsf	15,0	;volsfr
 24056  1414                     i1l1358:	
 24057  1414  0008               	return
 24058  1415                     __end_ofi1_PWM_Output_D4_Disable:	
 24059                           
 24060                           	psect	text118
 24061  1698                     __ptext118:	
 24062 ;; *************** function _EUSART_Transmit_ISR *****************
 24063 ;; Defined at:
 24064 ;;		line 206 in file "mcc_generated_files/eusart.c"
 24065 ;; Parameters:    Size  Location     Type
 24066 ;;		None
 24067 ;; Auto vars:     Size  Location     Type
 24068 ;;		None
 24069 ;; Return value:  Size  Location     Type
 24070 ;;                  1    wreg      void 
 24071 ;; Registers used:
 24072 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24073 ;; Tracked objects:
 24074 ;;		On entry : 0/0
 24075 ;;		On exit  : 0/0
 24076 ;;		Unchanged: 0/0
 24077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24082 ;;Total ram usage:        1 bytes
 24083 ;; Hardware stack levels used:    1
 24084 ;; This function calls:
 24085 ;;		Nothing
 24086 ;; This function is called by:
 24087 ;;		_EUSART_Initialize
 24088 ;;		_INTERRUPT_InterruptManager
 24089 ;; This function uses a non-reentrant model
 24090 ;;
 24091                           
 24092                           
 24093                           ;psect for function _EUSART_Transmit_ISR
 24094  1698                     _EUSART_Transmit_ISR:	
 24095  1698                     i1l5433:	
 24096                           ;incstack = 0
 24097                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 24098                           
 24099                           
 24100                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 24101  1698  3008               	movlw	8
 24102  1699  0021               	movlb	1	; select bank1
 24103  169A  026F               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 24104  169B  1803               	skipnc
 24105  169C  2E9E               	goto	u376_21
 24106  169D  2E9F               	goto	u376_20
 24107  169E                     u376_21:	
 24108  169E  2EB7               	goto	i1l823
 24109  169F                     u376_20:	
 24110  169F                     i1l5435:	
 24111                           
 24112                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
 24113  169F  085D               	movf	_eusartTxTail^(0+128),w
 24114  16A0  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
 24115  16A1  0086               	movwf	6
 24116  16A2  0187               	clrf	7
 24117  16A3  0801               	movf	1,w
 24118  16A4  0022               	movlb	2	; select bank2
 24119  16A5  009A               	movwf	26	;volatile
 24120  16A6                     i1l5437:	
 24121  16A6  3001               	movlw	1
 24122  16A7  00F0               	movwf	??_EUSART_Transmit_ISR
 24123  16A8  0870               	movf	??_EUSART_Transmit_ISR,w
 24124  16A9  0021               	movlb	1	; select bank1
 24125  16AA  07DD               	addwf	_eusartTxTail^(0+128),f	;volatile
 24126  16AB                     i1l5439:	
 24127                           
 24128                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 24129  16AB  3008               	movlw	8
 24130  16AC  025D               	subwf	_eusartTxTail^(0+128),w	;volatile
 24131  16AD  1C03               	skipc
 24132  16AE  2EB0               	goto	u377_21
 24133  16AF  2EB1               	goto	u377_20
 24134  16B0                     u377_21:	
 24135  16B0  2EB2               	goto	i1l5443
 24136  16B1                     u377_20:	
 24137  16B1                     i1l5441:	
 24138                           
 24139                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 24140  16B1  01DD               	clrf	_eusartTxTail^(0+128)	;volatile
 24141  16B2                     i1l5443:	
 24142                           
 24143                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 24144  16B2  3001               	movlw	1
 24145  16B3  00F0               	movwf	??_EUSART_Transmit_ISR
 24146  16B4  0870               	movf	??_EUSART_Transmit_ISR,w
 24147  16B5  07EF               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 24148                           
 24149                           ;mcc_generated_files/eusart.c: 218:     }
 24150  16B6  2EB9               	goto	i1l826
 24151  16B7                     i1l823:	
 24152                           ;mcc_generated_files/eusart.c: 219:     else
 24153                           
 24154                           
 24155                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          3bits.TXIE = 0;
 24156  16B7  002E               	movlb	14	; select bank14
 24157  16B8  1219               	bcf	25,4	;volatile
 24158  16B9                     i1l826:	
 24159  16B9  0008               	return
 24160  16BA                     __end_of_EUSART_Transmit_ISR:	
 24161  007E                     btemp	set	126	;btemp
 24162  007E                     int$flags	set	126
 24163  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         95
    Persistent  49
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     72      80
    BANK1            80      0      80
    BANK2            80      2      24
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 8
		 -> send_confirmation@msg(BANK0[3]), notification_memory@msg(BANK0[6]), registers_info@msg(BANK0[6]), read_alarms@msg(BANK0[5]), 
		 -> read_param@msg(BANK0[4]), read_temp_lum@msg(BANK0[4]), read_clock@msg(BANK0[5]), NULL(NULL[0]), 
		 -> read_msgs@aux(BANK0[8]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 8
		 -> send_confirmation@msg(BANK0[3]), notification_memory@msg(BANK0[6]), registers_info@msg(BANK0[6]), read_alarms@msg(BANK0[5]), 
		 -> read_param@msg(BANK0[4]), read_temp_lum@msg(BANK0[4]), read_clock@msg(BANK0[5]), NULL(NULL[0]), 
		 -> read_msgs@aux(BANK0[8]), 

    send_msg@msg	PTR unsigned char  size(1) Largest target is 6
		 -> send_confirmation@msg(BANK0[3]), notification_memory@msg(BANK0[6]), registers_info@msg(BANK0[6]), read_alarms@msg(BANK0[5]), 
		 -> read_param@msg(BANK0[4]), read_temp_lum@msg(BANK0[4]), read_clock@msg(BANK0[5]), 

    transfer_registers_i@data	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), read_msgs@aux(BANK0[8]), 

    transfer_n_registers@data	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), read_msgs@aux(BANK0[8]), 

    switch_alarm@data	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), read_msgs@aux(BANK0[8]), 

    define_alarm@data	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), read_msgs@aux(BANK0[8]), 

    modify_time_alarm@data	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), read_msgs@aux(BANK0[8]), 

    modify_pmon@data	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), read_msgs@aux(BANK0[8]), 

    set_clock@data	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), read_msgs@aux(BANK0[8]), 

    interpret_message@data	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), read_msgs@aux(BANK0[8]), 

    interpret_message@msg	PTR unsigned char  size(1) Largest target is 8
		 -> read_msgs@aux(BANK0[8]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> countMsg(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> countMsg(), EUSART_Receive_ISR(), Absolute function(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Switch1(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Switch1(), INT_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Blink(), Timer(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Blink(), Timer(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->___wmul
    _main->_notification_memory
    _ring_buffer_write->___lwdiv
    _ring_buffer_write->___wmul
    _interpret_message->_registers_info
    _interpret_message->_send_confirmation
    _transfer_registers_i->_send_confirmation
    _transfer_n_registers->_send_confirmation
    _read_buffer->___wmul
    _putch->_EUSART_Write
    _switch_alarm->_send_confirmation
    _set_clock->_send_confirmation
    _registers_info->_send_msg
    _read_temp_lum->_send_msg
    _read_param->_send_msg
    _read_clock->_send_msg
    _read_alarms->_send_msg
    _modify_time_alarm->_send_confirmation
    _modify_pmon->_send_confirmation
    _define_alarm->_send_confirmation
    _send_confirmation->_send_msg
    _notification_memory->_send_msg
    _send_msg->_strlen
    _ring_buffer_laped->_DATAEE_ReadByte
    _read_iwrt->_DATAEE_ReadByte
    _used->_DATAEE_ReadByte
    _read_tala->_DATAEE_ReadByte
    _read_pmon->_DATAEE_ReadByte
    _read_nreg->_DATAEE_ReadByte
    _read_clkm->_DATAEE_ReadByte
    _read_clkh->_DATAEE_ReadByte
    _read_alat->_DATAEE_ReadByte
    _read_alal->_DATAEE_ReadByte
    _read_alaf->_DATAEE_ReadByte
    _check_corruption->_get_check_up_value
    _get_check_up_value->_DATAEE_ReadByte
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _ReadTemp->_WriteI2C
    _ReadIllum->_ADCC_GetSingleConversion
    _DATAEE_WriteByte->___lwdiv
    _Update->_ShowOnLEDs
    _Alarm->___wmul
    ___wmul->_DATAEE_ReadByte

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_countMsg
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _TMR1_ISR->_Blink
    _TMR1_ISR->_TMR1_WriteTimer
    _INT_CallBack->_Switch1

Critical Paths under _main in BANK0

    _main->_read_msgs
    _ring_buffer_write->_DATAEE_WriteByte
    _ring_buffer_write->___awdiv
    _read_msgs->_interpret_message
    _interpret_message->_transfer_registers_i
    _transfer_registers_i->_transfer_registers
    _transfer_n_registers->_transfer_registers
    _transfer_registers->_send_register
    _send_register->_read_buffer
    _switch_alarm->_write_alaf
    _set_clock->_update_clk
    _registers_info->_send_msg
    _read_temp_lum->_send_msg
    _read_param->_send_msg
    _read_clock->_send_msg
    _read_alarms->_send_msg
    _modify_time_alarm->_write_tala
    _write_tala->_DATAEE_WriteByte
    _modify_pmon->_write_pmon
    _write_pmon->_DATAEE_WriteByte
    _define_alarm->_send_confirmation
    _send_confirmation->_send_msg
    _notification_memory->_send_msg
    _load_eeprom->_default_setup
    _default_setup->_eeprom_setup
    _eeprom_setup->_DATAEE_WriteByte
    _check_corruption->_get_check_up_value
    _Menus->_Menu
    _Menu->_submenu_clock
    _submenu_temp->_write_alat
    _write_alat->_DATAEE_WriteByte
    _submenu_illum->_write_alal
    _write_alal->_DATAEE_WriteByte
    _submenu_clock->_update_clk
    _update_clk->_eeprom_clk_update
    _eeprom_clk_update->_DATAEE_WriteByte
    _submenu_alarm->_write_alaf
    _write_alaf->_DATAEE_WriteByte

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  310388
                                             57 BANK0     15    15      0
                                              0 BANK2      2     2      0
                              _Alarm
       _EUSART_SetRxInterruptHandler
                       _EUSART_Write
            _INT_SetInterruptHandler
                              _Menus
              _PWM_Output_D4_Disable
                          _ReadIllum
                           _ReadTemp
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                             ___wmul
                        _clear_alarm
                   _i2c1_driver_open
                        _load_eeprom
                _notification_memory
                              _putch
                          _read_msgs
                          _read_nreg
                  _ring_buffer_write
                           _sys_init
                         _update_clk
 ---------------------------------------------------------------------------------
 (1) _sys_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ring_buffer_write                                   13     9      4   26259
                                              4 BANK0     13     9      4
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            ___awdiv
                            ___lwdiv
                             ___wmul
                    _not_transferred
                          _read_nreg
 ---------------------------------------------------------------------------------
 (2) _not_transferred                                      5     5      0    7817
                                              4 COMMON     5     5      0
                          _read_iwrt
                          _read_nreg
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _read_msgs                                           12    12      0  148140
                                             45 BANK0     12    12      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                  _interpret_message
 ---------------------------------------------------------------------------------
 (2) _interpret_message                                    5     5      0  147771
                                             40 BANK0      5     5      0
                       _define_alarm
                        _modify_pmon
                  _modify_time_alarm
                        _read_alarms
                         _read_clock
                         _read_param
                      _read_temp_lum
                     _registers_info
                  _send_confirmation
                          _set_clock
                             _strlen
                       _switch_alarm
               _transfer_n_registers
               _transfer_registers_i
 ---------------------------------------------------------------------------------
 (3) _transfer_registers_i                                13    13      0   36051
                                             27 BANK0     13    13      0
                            ___awmod
                              _putch
                          _read_iwrt
                          _read_nreg
                  _ring_buffer_laped
                  _send_confirmation
                             _strlen
                 _transfer_registers
 ---------------------------------------------------------------------------------
 (3) _transfer_n_registers                                 8     8      0   34275
                                             27 BANK0      8     8      0
                              _putch
                          _read_iwrt
                          _read_nreg
                  _ring_buffer_laped
                  _send_confirmation
                             _strlen
                 _transfer_registers
 ---------------------------------------------------------------------------------
 (4) _transfer_registers                                  15    14      1   19538
                                             12 BANK0     15    14      1
                            ___awmod
                          _read_iwrt
                          _read_nreg
                  _ring_buffer_laped
                      _send_register
 ---------------------------------------------------------------------------------
 (5) _send_register                                        4     4      0    5613
                                              8 BANK0      4     4      0
                              _putch
                        _read_buffer
 ---------------------------------------------------------------------------------
 (6) _read_buffer                                          8     7      1    5390
                                              0 BANK0      8     7      1
                    _DATAEE_ReadByte
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      93
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _switch_alarm                                         2     2      0   13372
                                              8 BANK0      2     2      0
                  _send_confirmation
                             _strlen
                         _write_alaf
 ---------------------------------------------------------------------------------
 (3) _set_clock                                            5     5      0   13657
                                             12 BANK0      5     5      0
                  _send_confirmation
                             _strlen
                         _update_clk
 ---------------------------------------------------------------------------------
 (3) _registers_info                                      14    14      0   12887
                                              8 COMMON     2     2      0
                                              3 BANK0     12    12      0
                          _read_iwrt
                          _read_nreg
                  _ring_buffer_laped
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _read_temp_lum                                        5     5      0    1052
                                              8 COMMON     1     1      0
                                              3 BANK0      4     4      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _read_param                                           5     5      0    1052
                                              8 COMMON     1     1      0
                                              3 BANK0      4     4      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _read_clock                                           9     9      0    1191
                                              8 COMMON     1     1      0
                                              3 BANK0      8     8      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _read_alarms                                          6     6      0    1089
                                              8 COMMON     1     1      0
                                              3 BANK0      5     5      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _modify_time_alarm                                    2     2      0   13372
                                              8 BANK0      2     2      0
                  _send_confirmation
                             _strlen
                         _write_tala
 ---------------------------------------------------------------------------------
 (4) _write_tala                                           4     4      0   10331
                                              4 BANK0      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _modify_pmon                                          2     2      0   13372
                                              8 BANK0      2     2      0
                  _send_confirmation
                             _strlen
                         _write_pmon
 ---------------------------------------------------------------------------------
 (4) _write_pmon                                           4     4      0   10331
                                              4 BANK0      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _define_alarm                                         2     2      0    3103
                                              7 BANK0      2     2      0
                  _send_confirmation
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _send_confirmation                                    6     5      1    2427
                                              8 COMMON     2     1      1
                                              3 BANK0      4     4      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          2     2      0      37
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _notification_memory                                 14    14      0   12887
                                              8 COMMON     2     2      0
                                              3 BANK0     12    12      0
                          _read_iwrt
                          _read_nreg
                  _ring_buffer_laped
                           _send_msg
 ---------------------------------------------------------------------------------
 (5) _send_msg                                             4     4      0     898
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                       _EUSART_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               5     3      2     454
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _ring_buffer_laped                                    0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _read_iwrt                                            0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _load_eeprom                                          1     1      0   50106
                                             19 BANK0      1     1      0
                   _check_corruption
                      _default_setup
                          _read_alaf
                          _read_alal
                          _read_alat
                          _read_clkh
                          _read_clkm
                          _read_nreg
                          _read_pmon
                          _read_tala
                               _used
 ---------------------------------------------------------------------------------
 (2) _used                                                 3     3      0    3944
                                              4 COMMON     3     3      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _read_tala                                            0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _read_pmon                                            0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _read_nreg                                            0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _read_clkm                                            0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _read_clkh                                            0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _read_alat                                            0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _read_alal                                            0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _read_alaf                                            0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _default_setup                                        5     5      0    7674
                                             14 BANK0      5     5      0
                       _eeprom_setup
 ---------------------------------------------------------------------------------
 (3) _eeprom_setup                                        10     2      8    7674
                                              4 BANK0     10     2      8
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _check_corruption                                     2     2      0    7752
                                              5 COMMON     2     2      0
                    _DATAEE_ReadByte
                 _get_check_up_value
 ---------------------------------------------------------------------------------
 (3) _get_check_up_value                                  10    10      0    3876
                                              4 COMMON     1     1      0
                                              0 BANK0      9     9      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clear_alarm                                          0     0      0       0
              _PWM_Output_D4_Disable
 ---------------------------------------------------------------------------------
 (2) _PWM_Output_D4_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1297
                    _ADCC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     391
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     695
                                              4 COMMON     1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     211
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadTemp                                             2     2      0      99
                                              4 COMMON     2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      31
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadIllum                                            2     2      0      31
                                              6 COMMON     2     2      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetSingleConversion                             4     1      3      31
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Menus                                                1     1      0   53022
                                             22 BANK0      1     1      0
                               _Menu
                         _ShowOnLEDs
           _TMR1_SetInterruptHandler
                      _checkButtonS1
                      _checkButtonS2
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     391
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Menu                                                 3     3      0   52600
                                             19 BANK0      3     3      0
                         _ShowOnLEDs
                    _TMR1_StartTimer
                     _TMR1_StopTimer
                      _submenu_alarm
                      _submenu_clock
                      _submenu_illum
                       _submenu_temp
 ---------------------------------------------------------------------------------
 (3) _submenu_temp                                         5     5      0   14761
                                              8 BANK0      5     5      0
                             _Update
                            ___awdiv
                            ___awmod
                             ___bmul
                         _write_alat
 ---------------------------------------------------------------------------------
 (4) _write_alat                                           4     4      0   10331
                                              4 BANK0      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _submenu_illum                                        2     2      0   11330
                                              8 BANK0      2     2      0
                             _Update
                         _write_alal
 ---------------------------------------------------------------------------------
 (4) _write_alal                                           4     4      0   10331
                                              4 BANK0      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _submenu_clock                                        7     7      0   15117
                                             12 BANK0      7     7      0
                             _Update
                            ___awdiv
                            ___awmod
                             ___bmul
                         _update_clk
 ---------------------------------------------------------------------------------
 (1) _update_clk                                           1     1      0   10483
                                             11 BANK0      1     1      0
                  _eeprom_clk_update
 ---------------------------------------------------------------------------------
 (2) _eeprom_clk_update                                    7     6      1   10483
                                              4 BANK0      7     6      1
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     406
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4    1513
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1345
                                              4 COMMON     5     1      4
                                              0 BANK0      4     4      0
                          _read_nreg (ARG)
 ---------------------------------------------------------------------------------
 (3) _submenu_alarm                                        1     1      0   11330
                                              8 BANK0      1     1      0
                             _Update
                         _write_alaf
 ---------------------------------------------------------------------------------
 (4) _write_alaf                                           4     4      0   10331
                                              4 BANK0      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    6427
                                              0 BANK0      4     1      3
                    _DATAEE_ReadByte (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2    3842
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Update                                               3     2      1     999
                                              4 COMMON     3     2      1
                         _ShowOnLEDs
                      _checkButtonS1
                      _checkButtonS2
 ---------------------------------------------------------------------------------
 (2) _checkButtonS2                                        1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _checkButtonS1                                        1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ShowOnLEDs                                           2     2      0      31
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Alarm                                               13    11      2    1821
                                              0 BANK0     13    11      2
                 _PWM6_LoadDutyValue
               _PWM_Output_D4_Enable
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1396
                                              4 COMMON     6     2      4
                    _DATAEE_ReadByte (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM_Output_D4_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_LoadDutyValue                                   4     2      2     152
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0     240
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                            _INT_ISR
                           _TMR1_ISR
                           _countMsg *
 ---------------------------------------------------------------------------------
 (9) _countMsg                                             1     1      0       0
                                              1 COMMON     1     1      0
                    _EUSART_LastByte
                 _EUSART_Receive_ISR
 ---------------------------------------------------------------------------------
 (10) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EUSART_LastByte                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
                              _Blink *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                              _Timer *
 ---------------------------------------------------------------------------------
 (10) _Timer                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Blink                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (10) _INT_CallBack                                        0     0      0       0
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _Switch1 *
 ---------------------------------------------------------------------------------
 (11) _Switch1                                             1     1      0       0
                                              0 COMMON     1     1      0
                      i1_clear_alarm
 ---------------------------------------------------------------------------------
 (12) i1_clear_alarm                                       0     0      0       0
            i1_PWM_Output_D4_Disable
 ---------------------------------------------------------------------------------
 (13) i1_PWM_Output_D4_Disable                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Alarm
     _PWM6_LoadDutyValue
     _PWM_Output_D4_Enable
     ___wmul
       _DATAEE_ReadByte (ARG)
   _EUSART_SetRxInterruptHandler
   _EUSART_Write
   _INT_SetInterruptHandler
   _Menus
     _Menu
       _ShowOnLEDs
       _TMR1_StartTimer
       _TMR1_StopTimer
       _submenu_alarm
         _Update
           _ShowOnLEDs
           _checkButtonS1
           _checkButtonS2
         _write_alaf
           _DATAEE_ReadByte
           _DATAEE_WriteByte
             _DATAEE_ReadByte (ARG)
             ___lwdiv (ARG)
       _submenu_clock
         _Update
           _ShowOnLEDs
           _checkButtonS1
           _checkButtonS2
         ___awdiv
           _read_nreg (ARG)
             _DATAEE_ReadByte
         ___awmod
         ___bmul
         _update_clk
           _eeprom_clk_update
             _DATAEE_ReadByte
             _DATAEE_WriteByte
               _DATAEE_ReadByte (ARG)
               ___lwdiv (ARG)
       _submenu_illum
         _Update
           _ShowOnLEDs
           _checkButtonS1
           _checkButtonS2
         _write_alal
           _DATAEE_ReadByte
           _DATAEE_WriteByte
             _DATAEE_ReadByte (ARG)
             ___lwdiv (ARG)
       _submenu_temp
         _Update
           _ShowOnLEDs
           _checkButtonS1
           _checkButtonS2
         ___awdiv
           _read_nreg (ARG)
             _DATAEE_ReadByte
         ___awmod
         ___bmul
         _write_alat
           _DATAEE_ReadByte
           _DATAEE_WriteByte
             _DATAEE_ReadByte (ARG)
             ___lwdiv (ARG)
     _ShowOnLEDs
     _TMR1_SetInterruptHandler
     _checkButtonS1
     _checkButtonS2
   _PWM_Output_D4_Disable
   _ReadIllum
     _ADCC_GetSingleConversion
   _ReadTemp
     _ReadI2C
     _WriteI2C
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
   _TMR1_SetInterruptHandler
   ___wmul
     _DATAEE_ReadByte (ARG)
   _clear_alarm
     _PWM_Output_D4_Disable
   _i2c1_driver_open
   _load_eeprom
     _check_corruption
       _DATAEE_ReadByte
       _get_check_up_value
         _DATAEE_ReadByte
     _default_setup
       _eeprom_setup
         _DATAEE_WriteByte
           _DATAEE_ReadByte (ARG)
           ___lwdiv (ARG)
     _read_alaf
       _DATAEE_ReadByte
     _read_alal
       _DATAEE_ReadByte
     _read_alat
       _DATAEE_ReadByte
     _read_clkh
       _DATAEE_ReadByte
     _read_clkm
       _DATAEE_ReadByte
     _read_nreg
       _DATAEE_ReadByte
     _read_pmon
       _DATAEE_ReadByte
     _read_tala
       _DATAEE_ReadByte
     _used
       _DATAEE_ReadByte
   _notification_memory
     _read_iwrt
       _DATAEE_ReadByte
     _read_nreg
       _DATAEE_ReadByte
     _ring_buffer_laped
       _DATAEE_ReadByte
     _send_msg
       _EUSART_Write
       _strlen
   _putch
     _EUSART_Write
   _read_msgs
     _EUSART_Read
     _EUSART_is_rx_ready
     _interpret_message
       _define_alarm
         _send_confirmation
           _send_msg
             _EUSART_Write
             _strlen
         _strlen
       _modify_pmon
         _send_confirmation
           _send_msg
             _EUSART_Write
             _strlen
         _strlen
         _write_pmon
           _DATAEE_ReadByte
           _DATAEE_WriteByte
             _DATAEE_ReadByte (ARG)
             ___lwdiv (ARG)
       _modify_time_alarm
         _send_confirmation
           _send_msg
             _EUSART_Write
             _strlen
         _strlen
         _write_tala
           _DATAEE_ReadByte
           _DATAEE_WriteByte
             _DATAEE_ReadByte (ARG)
             ___lwdiv (ARG)
       _read_alarms
         _send_msg
           _EUSART_Write
           _strlen
       _read_clock
         _send_msg
           _EUSART_Write
           _strlen
       _read_param
         _send_msg
           _EUSART_Write
           _strlen
       _read_temp_lum
         _send_msg
           _EUSART_Write
           _strlen
       _registers_info
         _read_iwrt
           _DATAEE_ReadByte
         _read_nreg
           _DATAEE_ReadByte
         _ring_buffer_laped
           _DATAEE_ReadByte
         _send_msg
           _EUSART_Write
           _strlen
       _send_confirmation
         _send_msg
           _EUSART_Write
           _strlen
       _set_clock
         _send_confirmation
           _send_msg
             _EUSART_Write
             _strlen
         _strlen
         _update_clk
           _eeprom_clk_update
             _DATAEE_ReadByte
             _DATAEE_WriteByte
               _DATAEE_ReadByte (ARG)
               ___lwdiv (ARG)
       _strlen
       _switch_alarm
         _send_confirmation
           _send_msg
             _EUSART_Write
             _strlen
         _strlen
         _write_alaf
           _DATAEE_ReadByte
           _DATAEE_WriteByte
             _DATAEE_ReadByte (ARG)
             ___lwdiv (ARG)
       _transfer_n_registers
         _putch
           _EUSART_Write
         _read_iwrt
           _DATAEE_ReadByte
         _read_nreg
           _DATAEE_ReadByte
         _ring_buffer_laped
           _DATAEE_ReadByte
         _send_confirmation
           _send_msg
             _EUSART_Write
             _strlen
         _strlen
         _transfer_registers
           ___awmod
           _read_iwrt
             _DATAEE_ReadByte
           _read_nreg
             _DATAEE_ReadByte
           _ring_buffer_laped
             _DATAEE_ReadByte
           _send_register
             _putch
               _EUSART_Write
             _read_buffer
               _DATAEE_ReadByte
               ___wmul
                 _DATAEE_ReadByte (ARG)
       _transfer_registers_i
         ___awmod
         _putch
           _EUSART_Write
         _read_iwrt
           _DATAEE_ReadByte
         _read_nreg
           _DATAEE_ReadByte
         _ring_buffer_laped
           _DATAEE_ReadByte
         _send_confirmation
           _send_msg
             _EUSART_Write
             _strlen
         _strlen
         _transfer_registers
           ___awmod
           _read_iwrt
             _DATAEE_ReadByte
           _read_nreg
             _DATAEE_ReadByte
           _ring_buffer_laped
             _DATAEE_ReadByte
           _send_register
             _putch
               _EUSART_Write
             _read_buffer
               _DATAEE_ReadByte
               ___wmul
                 _DATAEE_ReadByte (ARG)
   _read_nreg
     _DATAEE_ReadByte
   _ring_buffer_write
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _DATAEE_ReadByte (ARG)
       ___lwdiv (ARG)
     ___awdiv
       _read_nreg (ARG)
         _DATAEE_ReadByte
     ___lwdiv
     ___wmul
       _DATAEE_ReadByte (ARG)
     _not_transferred
       _read_iwrt
         _DATAEE_ReadByte
       _read_nreg
         _DATAEE_ReadByte
     _read_nreg
       _DATAEE_ReadByte
   _sys_init
   _update_clk
     _eeprom_clk_update
       _DATAEE_ReadByte
       _DATAEE_WriteByte
         _DATAEE_ReadByte (ARG)
         ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _Switch1 *
         i1_clear_alarm
           i1_PWM_Output_D4_Disable
   _TMR1_ISR *
     Absolute function(Fake) *
     _Blink *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _Timer *
   _countMsg *
     _EUSART_LastByte
     _EUSART_Receive_ISR
       Absolute function(Fake) *
       _EUSART_DefaultErrorHandler *
         _EUSART_RxDataHandler
       _EUSART_DefaultFramingErrorHandler *
       _EUSART_DefaultOverrunErrorHandler *
       _EUSART_RxDataHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      2      18       9       30.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C4      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C4      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 30 16:18:29 2019

                ?_EUSART_SetRxInterruptHandler 0072                                 ___bmul@product 0074  
                                  __CFG_CP$OFF 0000                      __end_of_send_confirmation 1525  
                                           l31 15FA                                             l34 12E6  
                                           l37 12E9                                             l61 1303  
                                           l90 13F8                                             l84 1327  
                                 ___awdiv@sign 0021                            ___wmul@multiplicand 0076  
                  __size_of_PWM6_LoadDutyValue 0016                                    __CFG_LVP$ON 0000  
                                          l182 15BF                                            l185 139C  
                                          l275 0D3A                                            l372 14A4  
                                          l188 1343                                            l357 150E  
                                          l630 13D2                                            l624 1718  
                                          l369 149B                                            l641 1405  
                                          l626 171C                                            l810 1755  
                                          l627 1723                                            l811 175E  
                                          l644 14F8                                            l820 132D  
                                          l805 17D1                                            l814 1777  
                                          l671 080D                                            l499 13DE  
                                          l852 1315                                            l861 131B  
                                          l855 1309                                            l792 13A5  
                                          l849 130F                                            l858 1321  
                                          l786 0ABC                                            l969 13BA  
                                          l995 0B86                                            l987 134B  
                                          _PR2 028D                                   __CFG_CPD$OFF 0000  
                              _timer1ReloadVal 00ED                         ??_EUSART_RxDataHandler 0070  
                   __size_of_modify_time_alarm 0037                 ?_EUSART_SetFramingErrorHandler 0072  
                         _not_transferred$2652 0076                        __size_of_PMD_Initialize 0008  
                                 ___awmod@sign 0078                                _TMR2_Initialize 0800  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 ?_EUSART_Read 0070                                   __CFG_ZCD$OFF 0000  
                                         l1022 01E2                                           l1006 0161  
                                         l1018 01E0                                           l1052 1588  
                                         l1061 0CC6                                           l1142 1729  
                                         l1311 03A8                                           l1048 1582  
                                         l1056 0CEF                                           l1312 03A9  
                                         l1049 1583                                           l1073 0CEE  
                                         l1305 0397                                           l2050 0F9C  
                                         l1154 055A                                           l1162 0EDB  
                                         l1330 03EC                                           l1314 03AD  
                                         l1306 0399                                           l1147 174D  
                                         l1155 05B5                                           l1163 0EDF  
                                         l1139 0929                                           l1059 0CC1  
                                         l1331 03ED                                           l1403 0F3C  
                                         l1068 0CDF                                           l1412 0661  
                                         l1420 0328                                           l1413 06E0  
                                         l1158 1470                                           l1166 14B8  
                                         l1342 041E                                           l1318 03BC  
                                         l2063 0DDD                                           l1175 0B41  
                                         l1343 0420                                           l1319 03BD  
                                         l1416 0C13                                           l1352 0435  
                                         l1424 1450                                           l1432 07FE  
                                         l1361 13C6                                           l1281 0335  
                                         l1409 14E2                                           l1441 138B  
                                         l1282 0336                                           l1450 1353  
                                         l1355 1460                                           l1371 168E  
                                         l1275 1432                                           l1435 137B  
                                         l1364 166E                                           l1348 042F  
                                         l1444 1363                                           l1380 0D8A  
                                         l1349 0430                                           l1293 0365  
                                         l1453 136B                                           l1429 15A3  
                                         l1294 0366                                           l1278 0329  
                                         l1358 1441                                           l1438 1383  
                                         l1710 0500                                           l1375 1697  
                                         l1471 0869                                           l1383 0A3F  
                                         l1447 135B                                           l1623 08F4  
                                         l1368 1677                                           l1456 1373  
                                         l2353 1554                                           l1465 0897  
                                         l2177 0A7B                                           l1386 13AF  
                                         l1474 083B                                           l1722 0E05  
                                         l1730 1524                                           l1634 1638  
                                         l1626 07C4                                           l1618 076C  
                                         l1459 1393                                           l1651 09CC  
                                         l1715 04D8                                           l1707 045F  
                                         l1483 1656                                           l1468 08C5  
                                         l1484 1657                                           l1477 17FF  
                                         l1725 0E30                                           l1645 095F  
                                         l1629 07DA                                           l1741 16FF  
                                         l1662 0AFE                                           l1639 15DC  
                                         l1736 17A4                                           l1656 16DC  
                                         l6001 16DF                                           l1674 0E58  
                                         l1923 14CD                                           l6011 16F2  
                                         l1668 0995                                           l1596 0C5B  
                                         l6021 0D97                                           l6013 0D8B  
                                         l1677 0E83                                           l6101 0483  
                                         l6031 0DAE                                           l6023 0D9B  
                                         l6015 0D8C                                           l6007 16E1  
                                         l6111 04B6                                           l6103 0493  
                                         l1687 0FFF                                           l1695 05DF  
                                         l6041 0DC9                                           l6033 0DB2  
                                         l6025 0DA0                                           l6017 0D90  
                                         l6201 0501                                           l7001 0E23  
                                         l6009 16ED                                           l6121 04FF  
                                         l6113 04BB                                           l6035 0DB6  
                                         l6027 0DA6                                           l6043 0DCF  
                                         l6019 0D95                                           l6131 14C3  
                                         l6051 13A6                                           l6211 054E  
                                         l6203 0534                                           l7003 0E27  
                                         l6115 04C2                                           l1699 0651  
                                         l7011 0C17                                           l6061 1740  
                                         l6053 1725                                           l6213 1461  
                                         l6141 0F3F                                           l6045 0DD4  
                                         l6037 0DC0                                           l6029 0DA9  
                                         l6133 14C5                                           l6125 14BA  
                                         l6205 053A                                           l6221 0EC2  
                                         l7005 0E2B                                           l6301 0956  
                                         l6117 04EE                                           l6109 04B2  
                                         l7021 0C37                                           l7013 0C1E  
                                         l7101 00AB                                           l6063 1741  
                                         l6055 172F                                           l6151 0F53  
                                         l6143 0F43                                           l6047 0DD9  
                                         l6039 0DC4                                           l6135 14CC  
                                         l6127 14BB                                           l6207 0540  
                                         l6223 14A5                                           l6215 0E84  
                                         l6231 0F3B                                           l7007 0E2C  
                                         l6303 095A                                           l6311 09B1  
                                         l6119 04F2                                           l7031 0C57  
                                         l7023 0C3F                                           l7015 0C24  
                                         l7111 00BC                                           l7103 00AC  
                                         l1897 1605                                           l6057 1735  
                                         l6065 1746                                           l6073 17D4  
                                         l6161 0F67                                           l6153 0F57  
                                         l6145 0F48                                           l6129 14BF  
                                         l6209 0541                                           l6217 0EB7  
                                         l7041 0B0D                                           l7033 0AFF  
                                         l6225 0654                                           l6081 089A  
                                         l6305 0998                                           l6321 16BA  
                                         l6241 08D5                                           l6401 0FC5  
                                         l7025 0C43                                           l7017 0C2C  
                                         l7009 0C14                                           l7121 00D4  
                                         l7113 00C2                                           l7105 00B2  
                                         l1899 1619                                           l6067 174B  
                                         l6059 1736                                           l6171 0F83  
                                         l6163 0F6B                                           l6155 0F59  
                                         l6147 0F4A                                           l6139 0F3D  
                                         l6075 083E                                           l6219 0EBD  
                                         l7051 0B21                                           l7043 0B0F  
                                         l7035 0B01                                           l6227 0659  
                                         l6083 1511                                           l6315 09BB  
                                         l6307 099D                                           l6331 16D7  
                                         l6323 16C4                                           l6251 08EF  
                                         l6243 08DF                                           l6235 08C6  
                                         l6091 044E                                           l6411 0FF1  
                                         l6403 0FCF                                           l7027 0C49  
                                         l7019 0C30                                           l7131 00EC  
                                         l7123 00D9                                           l7115 00C8  
                                         l7107 00B3                                           l6069 174C  
                                         l6173 0F88                                           l6165 0F6F  
                                         l6157 0F5F                                           l6149 0F4E  
                                         l6077 0810                                           l7061 0B35  
                                         l7053 0B26                                           l7045 0B15  
                                         l7037 0B05                                           l6501 0D1F  
                                         l6229 0EE0                                           l6085 151F  
                                         l6341 0AD9                                           l6317 09C3  
                                         l6309 09A7                                           l6333 16D8  
                                         l6325 16C9                                           l6253 08F0  
                                         l6245 08E3                                           l6237 08C7  
                                         l6261 0793                                           l6093 0457  
                                         l6413 0FFB                                           l6405 0FDA  
                                         l6421 05E3                                           l7029 0C51  
                                         l7141 0133                                           l7133 00F4  
                                         l7125 00E0                                           l7117 00CD  
                                         l7109 00B6                                           l6167 0F7E  
                                         l6159 0F62                                           l6175 0F8E  
                                         l6183 12FE                                           l7055 0B2B  
                                         l7047 0B1B                                           l7063 0B3A  
                                         l7039 0B06                                           l6191 1316  
                                         l6511 0D29                                           l6503 0D21  
                                         l6087 1520                                           l6343 0AE2  
                                         l6335 0ABF                                           l6079 086C  
                                         l6319 09C7                                           l6327 16CD  
                                         l6247 08E7                                           l6239 08D4  
                                         l6271 07D1                                           l6263 07A6  
                                         l6255 076F                                           l6351 0962  
                                         l6095 0469                                           l6431 0617  
                                         l6423 05E3                                           l6415 05B8  
                                         l7151 0150                                           l7143 0136  
                                         l7135 00FE                                           l7127 00E6  
                                         l7119 00D3                                           l7071 0078  
                                 _submenu_temp 0E84                                           l6601 14E3  
                                         l6185 12E4                                           l6177 0F93  
                                         l6169 0F82                                           l7057 0B2C  
                                         l7049 0B1C                                           l6193 131C  
                                         l6521 0D35                                           l6513 0D2C  
                                         l6505 0D23                                           l6337 0AC4  
                                         l6329 16D3                                           l6249 08EB  
                                         l6281 1634                                           l6273 07D2  
                                         l6257 0774                                           l6265 07BA  
                                         l6361 0985                                           l6353 0967  
                                         l6097 0481                                           l6089 0438  
                                         l6409 0FE4                                           l6441 064D  
                                         l6425 05E8                                           l6417 05CE  
                                         l7161 017E                                           l7153 0162  
                                         l7145 013D                                           l7137 010A  
                                         l7129 00EB                                           l7081 0083  
                                         l7073 007B                                           l6187 12E7  
                                         l6179 0F98                                           l7059 0B30  
                                         l6195 130A                                           l6531 139B  
                                         l6523 0D37                                           l6515 0D2E  
                                         l6507 0D25                                           l6451 15E6  
                                         l6443 15DD                                           l6611 17AB  
                                         l6603 139D                                           l6347 0AEC  
                                         l6339 0ACF                                           l6291 0931  
                                         l6283 15C0                                           l6371 0E50  
                                         l6275 07D5                                           l6259 077F  
                                         l6363 098C                                           l6355 0971  
                                         l6435 0621                                           l6427 05F3  
                                         l6419 05D7                                           l7171 01DA  
                                         l7163 0180                                           l7155 0166  
                                         l7147 0144                                           l7139 0112  
                                         l7091 009D                                           l7083 008A  
                                         l7075 007E                                           l5901 15FD  
                                         l6701 0925                                           l6541 150D  
                                         l6197 1310                                           l6189 1322  
                                         l6461 13EC                                           l6525 1394  
                                         l6517 0D30                                           l6509 0D27  
                                         l6533 13F9                                           l6453 15ED  
                                         l6445 15E0                                           l6621 17CB  
                                         l6613 17BE                                           l6349 0AF9  
                                         l6293 093B                                           l6285 15D7  
                                         l6277 161A                                           l6381 0E76  
                                         l6373 0E60                                           l6269 07C5  
                                         l6365 0990                                           l6357 097B  
                                         l6437 0636                                           l6429 05FE  
                                         l7181 01EE                                           l7173 01DD  
                                         l7165 0182                                           l7157 0169  
                                         l7149 014A                                           l7093 009E  
                                         l7085 0091                                           l7077 0081  
                                         l7069 0075                           __end_of_define_alarm 0AFF  
                                         l5903 1601                                           l6199 1304  
                                         l6463 13EF                                           l6527 1397  
                                         l6519 0D33                                           l6471 0CF6  
                                         l6535 1400                                           l6455 15EF  
                                         l6447 15E2                                           l6551 0808  
                                         l6543 0800                                           l6631 1438  
                                         l6711 1595                                           l6623 17CE  
                                         l6615 17C2                                           l6607 17A5  
                                         l6295 0945                                           l6287 15D8  
                                         l6279 1633                                           l6383 0E7A  
                                         l6375 0E6A                                           l6367 0E31  
                                         l6391 0FA7                                           l6439 0643  
                                         l7255 0746                                           l7183 01EF  
                                         l7175 01E4                                           l7167 0188  
                                         l7159 016E                                           l7095 00A0  
                                         l7087 0098                                           l7079 0082  
                                         l6641 1451                                           l5905 160A  
                                         l5921 1711                                           l5913 1700  
                                         l7257 0914                                           l6537 14F9  
                                         l6561 0A8E                                           l6465 13F6  
                                         l6529 1398                                           l6481 0D00  
                                         l6473 0CF8                                           l6457 15F0  
                                         l6449 15E4                                           l6553 080A  
                                         l6545 0803                                           l6633 1439  
                                         l6721 14CE                                           l6713 159B  
                                         l6625 17D0                                           l6617 17C8  
                                         l6609 17A5                                           l6289 092C  
                                         l6385 0E7E                                           l6377 0E6E  
                                         l6369 0E47                                           l6393 0FB2  
                                         l6801 0727                                           l7185 01F6  
                                         l7177 01EA                                           l7169 018A  
                                         l7097 00A1                                           l7089 009B  
                                         l6643 1456                                           l5907 160F  
                                         l5931 171D                                           l5923 1712  
                                         l5915 1708                                           l6651 1587  
                                         l6539 150B                                           l6571 0A98  
                                         l6563 0A91                                           l6555 0A7C  
                                         l6491 0D15                                           l6483 0D03  
                                         l6475 0CFA                                           l6467 133C  
                                         l6459 15F7                                           l6547 0804  
                                         l6635 143B                                           l6723 14D8  
                                         l6731 1384                                           l6715 15A1  
                                         l6707 1589                                           l6619 17C9  
                                         l6299 094F                                           l6387 0E7F  
                                         l6379 0E72                                           l6395 0FBC  
                                         l6803 072B                                           l6811 073E  
                                         l7187 01F7                                           l7179 01EB  
                                         l7099 00A5                                           l6645 145F  
                                         l5909 1615                                           l5925 1713  
                                         l5917 170C                                           l6901 0345  
                                         l6581 0AB6                                           l6573 0A9F  
                                         l6565 0A93                                           l6557 0A7E  
                                         l6493 0D17                                           l6485 0D05  
                                         l6477 0CFC                                           l6469 0CF0  
                                         l6549 0807                                           l6637 143E  
                                         l6629 1433                                           l6717 15A2  
                                         l6709 1593                                           l5941 1542  
                                         l5933 1329                                           l6397 0FC0  
                                         l6389 0F9F                                           l6805 0730  
                                         l6821 0A48                                           l7189 01F9  
                                         l5871 13CD                                           l5927 1715  
                                         l5919 1710                                           l6591 1498  
                                         l6647 156F                                           l6663 0CAE  
                                         l6655 0CA6                                           l6911 0375  
                                         l6903 0349                                           l6583 0AB8  
                                         l6575 0AA6                                           l6567 0A95  
                                         l6559 0A85                                           l6495 0D19  
                                         l6487 0D07                                           l6479 0CFE  
                                         l6639 1440                                           l6743 134C  
                                         l6735 135C                                           l6751 136C  
                                         l6727 137C                                           l5943 1546  
                                         l5935 07DD                                           l6399 0FC0  
                                         l6807 0735                                           l6831 0A67  
                                         l6823 0A4B                                           l5953 13BC  
                                         l5961 166A                                           l5873 13CE  
                                         l5865 13C7                                           l5929 1717  
                                         l6593 1499                                           l6649 1579  
                                         l6665 0CB7                                           l6657 0CA9  
                                         l6921 03B1                                           l6913 0379  
                                         l6905 0355                                           l6585 0ABA  
                                         l6577 0AB1                                           l6569 0A97  
                                         l6497 0D1B                                           l6489 0D09  
                                         l6761 0A23                                           l5881 174F  
                                         l5945 154E                                           l6833 0A6B  
                                         l6825 0A50                                           l6817 0A40  
                                         l5963 1673                                           l5955 1658  
                                         l5971 1683                                           l5875 13CF  
                                         l5867 13CA                                           l6691 0903  
                                         l6595 149A                                           l6587 1494  
                                         l6667 0CC0                                           l6675 0CCD  
                                         l6931 03E0                                           l6923 03C1  
                                         l6915 0385                                           l6907 0359  
                                         l6579 0AB5                                           l6499 0D1D  
                                         l6851 15B0                                           l6843 15A4  
                                         l6763 0A24                                           l6755 0A06  
                                         l6739 1354                                           l6747 1364  
                                         l5891 176C                                           l5883 174F  
                                         l5939 153D                                           l6835 0A6C  
                                         l6827 0A54                                           l6819 0A42  
                                         l6771 164F                                           l5965 1675  
                                         l5957 165E                                           l5973 168A  
                                         l5877 13D0                                           l5869 13CC  
                                         l6693 0907                                           l6685 08F7  
                                         l6597 14A0                                           l6589 1497  
                                         l6677 0CD6                                           l6669 0CCB  
                                         l6941 0412                                           l6933 03F1  
                                         l6925 03CC                                           l6917 038B  
                                         l6909 036A                                           l6853 15B3  
                                         l6845 15A7                                           l6861 13D3  
                                         l6757 0A20                                           l5949 1374  
                                         l5981 1442                                           l5893 1772  
                                         l5885 175A                                           l6781 06F7  
                                         l6837 0A71                                           l6829 0A58  
                                         l6765 1639                                           l5959 1663  
                                         l5975 1693                                           l5967 1678  
                                         l6687 08FB                                           l6679 0CE3  
                                         l6943 0424                                           l6935 03FC  
                                         l6927 03D0                                           l6919 039D  
                                         l6855 15B6                                           l6847 15AA  
                                         l6863 13D8                                           l6759 0A22  
                                         l5895 1773                                           l5887 175F  
                                         l5991 177E                                           l6791 070F  
                                         l6783 06FE                                           l6775 06E3  
                                         l6839 0A77                                           l6767 1642  
                                         l6951 020E                                           l6881 0B44  
                                         l5977 1695                                           l5969 167E  
                                         l6689 08FF                                           l6697 090B  
                                         l6945 0434                                           l6937 0400  
                                         l6929 03DC                                           l6857 15B9  
                                         l6849 15AD                                           l6865 13D9  
                                         l5985 138C                                           l5889 1768  
                                         l5897 1775                                           l5993 1782  
                                         l6793 0714                                           l6785 0702  
                                         l6777 06EA                                           l6769 1647  
                                         l6953 0220                                           l6873 13B0  
                                         l5899 15FB                                           l6883 0B47  
                                         l5979 0BCF                                           l6699 0922  
                                         l6939 040C                                           l6859 15BC  
                                         l6875 1344                                           l6867 13DB  
                                         l6891 0D87                                           l5995 178C  
                                         l6795 0719                                           l6787 0707  
                                         l6779 06F4                                           l6971 02AC  
                                         l6955 0226                                           l6963 026B  
                                         l6893 1424                                           l6877 1347  
                                         l6885 0D3B                                           l5997 1791  
                                         l5989 177A                                           l6797 071D  
                                         l6789 070B                                           l6981 02FE  
                                         l6973 02BA                                           l6965 0291  
                                         l6957 0235                                           l6949 0200  
                                         l6879 1349                                           l6887 0D43  
                                         l5999 17A0                                           l6991 0DFD  
                                         l6799 0722                                           l6975 02C8  
                                         l6967 0295                                           l6959 0244  
                                         l6897 0329                                           l6889 0D4B  
                                         l6993 0E0D                                           l6977 02D6  
                                         l6969 02A0                                           l6899 033A  
                                         l6995 0E17                                           l6987 0DDE  
                                         l6979 02E4                                           l6997 0E1B  
                                         l6989 0DF4                                           l6999 0E1F  
                                         _LATA 0016                                           _LATB 0017  
                              __end_of_INT_ISR 12F8                                           _LATC 0018  
                                         _LATD 0019                                           _LATE 001A  
                                         u5000 053A                                           u5001 0539  
                                         u5010 0540                                           _T2PR 028D  
                                         u5011 053F                                           u5020 0EBD  
                                         u5100 079D                                           u5021 0EBC  
                                         u5101 079B                                           u5030 0659  
                                         u5110 079E                                           u5031 0658  
                                         u6000 0424                                           u5200 09A7  
                                         u5040 08DC                                           u5120 07A6  
                                         u6001 0423                                           u5201 09A6  
                                         u5121 07A5                                           u6010 042F  
                                         u5210 09B1                                           u5130 07B1  
                                         u5050 0774                                           u6011 042E  
                                         u5211 09B0                                           u5131 07AF  
                                         u5051 0773                                           u6020 0434  
                                         u4500 175A                                           u6100 0E14  
                                         u5220 16C1                                           u5300 0E47  
                                         u5140 07B2                                           u5060 077F  
                                         u6021 0433                                           u4501 1759  
                                         u5301 0E46                                           u5061 077E  
                                         u4510 1772                                           u5230 0AC4  
                                         u5310 0E67                                           u5150 07BA  
                                         u5070 078A                                           u6110 0C24  
                                         u6030 0226                                           u4511 1771  
                                         u5231 0AC3                                           u5151 07B9  
                                         u5071 0788                                           u6111 0C23  
                                         u6031 0225                                           u4520 1601  
                                         u4600 1663                                           u5240 0ACF  
                                         u5160 0931                                           u5080 078B  
                                         u5320 0FA7                                           u5400 05FE  
                                         u6120 0C2C                                           u6040 0235  
                                         u6200 00D9                                           u4521 1600  
                                         u4601 1662                                           u5241 0ACE  
                                         u5161 0930                                           u5321 0FA6  
                                         u5401 05FD                                           u6121 0C2B  
                                         u6041 0234                                           u6201 00D8  
                                         u4610 1673                                           u5250 0AD9  
                                         u5170 093B                                           u5090 0793  
                                         u5330 0FC5                                           u5410 0617  
                                         u6130 0C49                                           u6050 0244  
                                         u6210 00E0                                           u4611 1672  
                                         u5251 0AD8                                           u5171 093A  
                                         u5091 0792                                           u5331 0FC4  
                                         u5411 0616                                           u6131 0C48  
                                         u6051 0243                                           u6211 00DF  
                                         u4620 167E                                           u4700 0D9B  
                                         u5500 1582                                           u5260 0AE2  
                                         u5180 0945                                           u5340 0FCF  
                                         u5420 0643                                           u6140 0C51  
                                         u6060 0269                                           u6300 01DA  
                                         u6220 00E6                                           _PMD0 0796  
                                         u4621 167D                                           u4701 0D9A  
                                         u5501 1581                                           u5261 0AE1  
                                         u5181 0944                                           u5341 0FCE  
                                         u5421 0642                                           u6141 0C50  
                                         u6061 0267                                           u6301 01D9  
                                         u6221 00E5                                           _PMD1 0797  
                                         u4550 1615                                           u4630 1683  
                                         u4710 0DA6                                           u6150 0B1B  
                                         u5430 14A0                                           u5510 1587  
                                         u5190 099D                                           u5270 0967  
                                         u5350 0FDA                                           u6070 026A  
                                         u6310 01EA                                           u6230 0133  
                                         _PMD2 0798                                           u4551 1614  
                                         u4535 1606                                           u4631 1682  
                                         u4711 0DA5                                           u6151 0B1A  
                                         u5431 149F                                           u5511 1586  
                                         u5191 099C                                           u5271 0966  
                                         u5351 0FD9                                           u5415 0613  
                                         u6311 01E9                                           u6231 0132  
                                         _PMD3 0799                                           u4640 1693  
                                         u4800 174B                                           u4560 171C  
                                         u6160 0B2B                                           u5600 0CEE  
                                         u5520 0CAD                                           u5280 0971  
                                         u5360 0FF1                                           u6080 0291  
                                         u6240 013D                                           _PMD4 079A  
                                         u4545 160B                                           u4641 1692  
                                         u4801 174A                                           u4561 171B  
                                         u6161 0B2A                                           u5601 0CED  
                                         u5521 0CAC                                           u5281 0970  
                                         u5361 0FF0                                           u6081 0290  
                                         u6065 0264                                           u6305 01D6  
                                         u6241 013C                                           _PMD5 079B  
                                         u4730 0DB6                                           u6170 0B41  
                                         u5530 0CB7                                           u5610 159B  
                                         u4650 144F                                           u4490 1755  
                                         u4570 154E                                           u6090 0DF4  
                                         u5450 13A4                                           u5290 097B  
                                         u4810 044E                                           u5370 05CE  
                                         u6250 0144                                           u4731 0DB5  
                                         u6171 0B40                                           u5531 0CB6  
                                         u5611 159A                                           u4651 144D  
                                         u4491 1754                                           u4571 154D  
                                         u6091 0DF3                                           u5451 13A2  
                                         u5291 097A                                           u4811 044D  
                                         u5371 05CD                                           u6251 0143  
                                         u4900 0F43                                           u4740 0DC0  
                                         u5540 0CC0                                           u5620 15A1  
                                         u4660 1450                                           u5460 13A5  
                                         u4820 0469                                           u5380 05E8  
                                         u6260 014A                                           u6180 00B2  
                                         i1l45 1481                                           u5445 14F2  
                                         u4901 0F42                                           u4741 0DBF  
                                         u4725 0DAA                                           u5541 0CBF  
                                         u5621 15A0                                           u4821 0468  
                                         u5381 05E7                                           u6085 028D  
                                         u6261 0149                                           u6181 00B1  
                                         u4590 165E                                           u4910 0F4E  
                                         u5550 0CC6                                           u5630 14E1  
                                         u4670 17A0                                           u5470 17AB  
                                         u4830 0481                                           u5390 05F3  
                                         u5710 0A67                                           u6270 0150  
                                         u6190 00CD                                           u4591 165D  
                                         u6327 1686                                           u4911 0F4D  
                                         u5551 0CC5                                           u5631 14DF  
                                         u4671 179F                                           u5471 17AA  
                                         u4831 0480                                           u5391 05F2  
                                         u5711 0A66                                           u6271 014F  
                                         u6191 00CC                                 ??_eeprom_setup 002C  
                                         i1l64 0003                                           u4920 0F5F  
                                         u4760 0DCF                                           u5560 0CCB  
                                         u5800 0345                                           u5640 14E2  
                                         u5480 17C8                                           u4680 16FF  
                                         u4840 0493                                           u6280 017E  
                                         i1l81 13EB                                           u4585 13BF  
                                         u6337 1666                                           u4921 0F5E  
                                         u4761 0DCE                                           u4745 0DBC  
                                         u5561 0CCA                                           u5801 0344  
                                         u5481 17C7                                           u4681 16FE  
                                         u4841 0492                                           u5705 0A59  
                                         u6281 017D                                           i1l58 153B  
                                         u4770 0DD4                                           u4690 0D90  
                                         u5490 1579                                           u5570 0CD6  
                                         u5810 0355                                           u4850 04B1  
                                         u5730 0A77                                           u5650 1647  
                                         u6290 0188                                           u4771 0DD3  
                                         u4755 0DC5                                           u4691 0D8F  
                                         u5491 1578                                           u5571 0CD5  
                                         u5811 0354                                           u4675 179C  
                                         u4851 04B0                                           u4835 047D  
                                         u5731 0A76                                           u5715 0A63  
                                         u5651 1646                                           u6291 0187  
                                         u4780 1735                                           u4940 0F6F  
                                         u5580 0CDF                                           u5900 03B1  
                                         u5820 0365                                           u5740 13D8  
                                         u4860 04C2                                           u5660 06F4  
                                         i1l77 12F7                                           u4781 1734  
                                         u4941 0F6E                                           u5581 0CDE  
                                         u5901 03B0                                           u5821 0364  
                                         u5741 13D7                                           u4685 16FB  
                                         u4861 04C1                                           u4845 048F  
                                         u5661 06F3                                           u5725 0A6D  
                                         u6285 017A                                           u4790 1740  
                                         u5590 0CE3                                           u5910 03BC  
                                         u5830 036A                                           u5750 0D43  
                                         u4870 04FF                                           u5670 0A48  
                                         i1l87 0002                                           u4791 173F  
                                         u4935 0F63                                           u5591 0CE2  
                                         u5911 03BB                                           u5831 0369  
                                         u5751 0D42                                           u4871 04FE  
                                         u4855 04AD                                           u5671 0A47  
                                         u4960 0F7E                                           u4880 14BF  
                                         u5920 03C1                                           u5840 0375  
                                         u5760 0D4B                                           u4961 0F7D  
                                         u4881 14BE                                           u5921 03C0  
                                         u5841 0374                                           u5761 0D4A  
                                         u4890 14CC                                           u5930 03CC  
                                         u5850 0385                                           u5690 0A58  
                                         u4955 0F70                                           u4891 14CB  
                                         u5931 03CB                                           u5851 0384  
                                         u4875 04FB                                           u5691 0A57  
                                         u4980 0F8E                                           u5940 03DC  
                                         u5860 0397                                           u5780 0335  
                                         u4981 0F8D                                           u4965 0F7A  
                                         u5941 03DB                                           u5861 0396  
                                         u5781 0334                                           u5685 0A4C  
                                         u4990 0F93                                           u5950 03EC  
                                         u5870 039D                                           u5790 033A  
                                         u4991 0F92                                           u4975 0F84  
                                         u5775 142D                                           u5951 03EB  
                                         u5871 039C                                           u5791 0339  
                                         u5960 03F1                                           u5880 03A8  
                                         u5961 03F0                                           u5881 03A7  
                                         u5970 03FC                                           u5890 03AD  
                                         u5971 03FB                                           u5891 03AC  
                                         u5980 040C                                           u5981 040B  
                                         u5990 041E                                           u5991 041D  
                                         _TMR2 028C                                           _WPUA 0F39  
                                         _WPUB 0F44                                           _WPUC 0F4F  
                                         _WPUD 0F5A                                           _WPUE 0F65  
                                         _Menu 08F5                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           _alaf 006B  
                                         _alal 00D6                                           _alat 006C  
                                         _clkh 006A                                           _clkm 0069  
                                         _clks 0068                                           _main 0075  
                                         _mode 006E                                           _tala 00D7  
                                         _nreg 00CB                                           _msgs 00CF  
                                         _temp 00D2                                           _pmon 006D  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         _used 1589                                           btemp 007E  
                                __CFG_BOREN$ON 0000            __end_of_INT_DefaultInterruptHandler 0003  
                  _INT_DefaultInterruptHandler 0002                                           start 0055  
              __end_of_INT_SetInterruptHandler 1328                     ??_TMR1_SetInterruptHandler 0074  
                                __CFG_CSWEN$ON 0000                              ___bmul@multiplier 0075  
                                __CFG_MCLRE$ON 0000                                __end_of_ReadI2C 1589  
                             define_alarm@data 0028                      __size_of_DATAEE_WriteByte 0024  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0009  
                                 ?_load_eeprom 0070                                  _submenu_alarm 1461  
                                        ?_Menu 0070                                  _submenu_clock 0501  
                __end_of_OSCILLATOR_Initialize 139D                                  _submenu_illum 14A5  
                                        _ADACQ 009D                                          _ADCAP 009B  
                                        _ADACT 0099                       __end_of_i2c1_driver_open 13DF  
                                        ?_main 0070                                          _ADCLK 0098  
                __size_of_transfer_n_registers 0063                                          _ADCNT 010C  
                                        _ADPCH 009E                                          _ADREF 009A  
                              __end_of___awdiv 0F9D                                          _ADPRE 009C  
                                __CFG_WDTE$OFF 0000                                __end_of_Switch1 1424  
                              __end_of___awmod 0DDE                                          _ADRPT 010D  
                        __end_of_default_setup 0A40                                _TMR1_StartTimer 12E4  
                                        ?_used 0070                                          _T1CLK 0211  
                              ___awdiv@divisor 0074                                          _T1CON 020E  
                                        _T2CON 028E                                          _T2HLT 028F  
                               __CFG_DEBUG$OFF 0000                                __end_of___lwdiv 0A7C  
                                        i1l121 0013                                          i1l130 0048  
                                        i1l124 0020                                          _T2TMR 028C  
                                        i1l126 002A                                          i1l135 0053  
                                        i1l128 0039                                          _T2RST 0291  
                                        i1l823 16B7                                          i1l840 07FF  
                                        i1l833 0A05                                          i1l826 16B9  
                                        i1l843 12F1                                          i1l837 156E  
                                        i1l846 12ED                                          i1l864 12FD  
                                        i1l972 0B87                                          i1l982 0BCC  
                                        i1l992 1423                                          i1l987 133B  
                              ___awdiv@counter 0020                                          _OSCEN 0891  
                                        _TMR1H 020D                                          _TMR1L 020C  
                                        _TRISA 0011                                          _TRISB 0012  
                                        _TRISC 0013                                          _TRISD 0014  
                                        _TRISE 0015                          __size_of_switch_alarm 0036  
                                        _WPUC3 7A7B                                          _WPUC4 7A7C  
                                        _RXPPS 0ECB                                          _Alarm 0B42  
                                        _Blink 0C5C                                   ?_read_alarms 0070  
                              _PWM6_Initialize 13F9                                          _Menus 0AFF  
                                 ?_read_buffer 0020                                          _Timer 0B87  
                             __end_of_TMR1_ISR 153C                         __size_ofi1_clear_alarm 0008  
                              _DATAEE_ReadByte 13C7                                          _alarm 00D0  
                               send_register@i 0029                                 send_register@k 002A  
                                        _iread 007A                                          _illum 00D1  
                                        _hours 00D5                    __end_of_notification_memory 0E31  
                                        _timer 00DA                                          _putch 1328  
                                        main@i 0136                        __end_of_TMR1_Initialize 15FB  
                                        pclath 000A                              ??_EUSART_LastByte 0070  
                             _check_corruption 14CE                     __end_of_transfer_registers 0501  
                                        status 0003                                          wtemp0 007E  
                       ??_PWM_Output_D4_Enable 0072                                _TMR1_WriteTimer 1471  
                              __initialization 0057                                   __end_of_Menu 092A  
                                 __end_of_main 01FE                                   ?_modify_pmon 0070  
                         __size_of_clear_alarm 0008                                   __end_of_used 15A4  
                                 _switch_alarm 0960                     __size_of_send_confirmation 0016  
                               ??_EUSART_Write 0072                                 ?_submenu_alarm 0070  
                             __end_of_ReadTemp 0436                                 ?_submenu_clock 0070  
                      __end_of_TMR2_Initialize 080E                    ?_INTERRUPT_InterruptManager 0070  
                               ?_submenu_illum 0070                                         ??_Menu 0033  
               ??_EUSART_SetRxInterruptHandler 0074                       _notification_memory$2859 002B  
                                       ??_main 0059                                         ??_used 0074  
                              _not_transferred 1639                        _transfer_registers$2853 0034  
                                       ?_Alarm 0020                                         ?_Blink 0070  
                           _get_check_up_value 0EE0                                      ??_INT_ISR 0071  
                                       ?_Menus 0070                                         ?_Timer 0070  
                        __end_of_send_register 1700                                         _ADACCH 0091  
                                       _ADACCL 0090      __end_of_EUSART_DefaultFramingErrorHandler 0800  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 07FF  
                                       _ADCON0 0093                                         _ADCON1 0094  
                                       _ADCON2 0095                                         _ADCON3 0096  
                   _EUSART_OverrunErrorHandler 00E1                                         _ADERRH 0117  
                                       _ADERRL 0116                                         _ADLTHH 010F  
                                       _ADLTHL 010E                                         _ADRESH 008D  
                                       _ADRESL 008C                                         _ADSTAT 0097  
                                       _ADUTHH 0111                               ___awdiv@dividend 0076  
                                       _ADUTHL 0110                               __end_of_WriteI2C 0CF0  
                                       _ANSELA 0F38                                         ?_putch 0070  
                                       _ANSELB 0F43                                         _ANSELC 0F4E  
                                       _ANSELD 0F59                                         _ANSELE 0F64  
                           __CFG_RSTOSC$HFINT1 0000                     __end_of_EUSART_is_rx_ready 13A6  
                                       _T1GATE 0210                                         _T1GCON 020F  
                                       _RC1REG 0119                            ?_get_check_up_value 0070  
                                       _RC1STA 011D                                         _RA6PPS 0F16  
                                       _RC3PPS 0F23                                         Alarm@h 002C  
                                       Alarm@m 0020                        TMR1_WriteTimer@timerVal 0070  
                                       _RC4PPS 0F24                                         Alarm@s 0021  
                                       i1l1192 0CA4                                         _ODCONA 0F3A  
                                       _ODCONB 0F45                                         _ODCONC 0F50  
                                       _RC6PPS 0F26                                         _ODCOND 0F5B  
                                       _ODCONE 0F66                                         i1l1358 1414  
                                       i1l5111 09D7                                         i1l1745 1492  
                                       i1l5121 09F2                                         i1l5113 09DC  
                                       i1l5131 0B87                                         i1l5123 09FB  
                                       i1l5115 09E2                                         i1l5107 09CD  
                                       i1l5141 0BA9                                         i1l5133 0B93  
                                       i1l5125 0A02                                         i1l5117 09E7  
                                       i1l5109 09D2                                         i1l5151 0BBC  
                                       i1l5143 0BAA                                         i1l5135 0B98  
                                       i1l5127 12F8                                         i1l5119 09EC  
                                       i1l5401 12F4                                         i1l5153 0BC1  
                                       i1l5145 0BB0                                         i1l5137 0B9D  
                                       i1l5241 0C69                                         i1l5147 0BB5  
                                       i1l5155 0BC2                                         i1l5139 0BA4  
                                       i1l5243 0C75                                         i1l5157 0BC7  
                                       i1l5149 0BB6                                         i1l5245 0C81  
                                       i1l5237 0C5C                                         i1l4631 1339  
                                       i1l5239 0C5D                                         i1l5441 16B1  
                                       i1l5433 1698                                         i1l4481 1411  
                                       i1l4473 1406                                         i1l5249 0C8D  
                               __CFG_WDTCCS$SC 0000                                         i1l5443 16B2  
                                       i1l5435 169F                                         i1l4483 1413  
                                       i1l4475 140B                                         i1l4627 1334  
                                       i1l4491 1568                                         i1l4651 12EE  
                                       i1l5437 16A6                                         i1l4477 140C  
                                       i1l4629 1337                                         i1l4493 1569  
                                       i1l4485 1555                                         i1l4653 12EA  
                                       i1l5439 16AB                                         i1l4479 140E  
                                       i1l4655 1415                                         i1l5391 1525  
                                       i1l4487 155E                                         i1l4657 141B  
                                       i1l4921 1471                                         i1l5393 1527  
                                       i1l4489 1562                                         i1l4659 141F  
                                       i1l4923 1476                                         i1l4931 147D  
                                       i1l5395 152F                                         i1l5651 001B  
                                       i1l5643 0006                                         i1l4933 147F  
                                       i1l4925 1477                                         i1l5397 1536  
                                       i1l5637 1482                                         i1l5661 0032  
                                       i1l5645 000B                                         i1l4935 13DF  
                                       i1l5399 12F2                                         i1l4927 1479  
                                       i1l5639 148D                                         i1l5663 003D  
                                       i1l5655 0024                                         i1l5647 000F  
                                       i1l4937 13E6                                         i1l4929 147B  
                                       i1l5665 0041                                         i1l5657 0029  
                                       i1l5649 0017                                         i1l7259 0C96  
                                       i1l5667 004C                                         i1l5659 002E  
                                       i1l5669 0050                                         _INLVLA 0F3C  
                                       _INLVLB 0F47                                         _INLVLC 0F52  
                                       _INLVLD 0F5D                                         _INLVLE 0F68  
                                       u323_20 1476                                         u331_20 09D7  
                                       u323_21 1475                                         u331_21 09D6  
                                       u324_20 13E6                                         u340_20 0BC7  
                                       u332_20 09E7                                         u324_21 13E5  
                                       u340_21 0BC6                                         u332_21 09E6  
                                       u421_20 148D                                         u333_20 09FB  
                                       u421_21 148C                                         u333_21 09FA  
                                       u334_20 0B91                                         u430_20 0032  
                                       u422_20 000B                                         u334_21 0B8E  
                                       u430_21 0031                                         u422_21 000A  
                __size_of_transfer_registers_i 009C                                         u431_20 003D  
                                       u423_20 000F                                         u431_21 003C  
                                       u423_21 000E                                         u335_24 0B93  
                                       u336_20 0B98                                         u256_20 1568  
                                       u432_20 0041                                         u424_20 0017  
                                       u336_21 0B97                                         u256_21 1567  
                                       u432_21 0040                                         u424_21 0016  
                                       _INTPPS 0E90                                         u360_24 0C8C  
                                       u337_20 0BA4                                         u353_20 0C66  
                                       u433_20 004C                                         u425_20 001B  
                                       u337_21 0BA3                                         u353_21 0C63  
                                       u433_21 004B                                         u425_21 001A  
                                       u338_20 0BB0                                         u434_20 0050  
                                       u426_20 001F                                         u338_21 0BAF  
                                       u434_21 004F                                         u426_21 001E  
                                       u354_24 0C68                                         u339_20 0BBC  
                                       u355_20 0C72                                         u427_20 0024  
                                       u339_21 0BBB                                         u355_21 0C6F  
                                       u427_21 0023                                         u428_20 0028  
                                       u428_21 0027                                         u356_24 0C74  
                                       u357_20 0C7E                                         u429_20 002E  
                                       u357_21 0C7B                                         u429_21 002D  
                                       u374_20 1536                                         u374_21 1535  
                                       u358_24 0C80                                         u279_20 141B  
                                       u359_20 0C8A                                         u279_21 141A  
                                       u359_21 0C87                                         u376_20 169F  
                                       u376_21 169E                                         u377_20 16B1  
                                       u377_21 16B0                                         _OSCFRQ 0893  
                               _registers_info 0E31                                         _TX1REG 011A  
                                       _TX1STA 011E                             __size_of_ReadIllum 000F  
                                    ??_ReadI2C 0072                                 __CFG_PWRTE$OFF 0000  
                                i1_clear_alarm 1334           __end_of_TMR1_DefaultInterruptHandler 0004  
        __size_of_TMR1_DefaultInterruptHandler 0001                   _TMR1_DefaultInterruptHandler 0003  
                                 _CCPTMRS1bits 021F                                         _s1flag 00CC  
                                       _s2flag 00CD                                         _Update 1724  
                                   _ShowOnLEDs 13BB                                         ___bmul 14B9  
                       send_confirmation@error 0078                        __end_of_TMR1_StartTimer 12E7  
                                       ___wmul 15FB                                      ??___awdiv 0078  
                               __CFG_STVREN$ON 0000                                      ??_Switch1 0070  
                                    ??___awmod 0076                               __end_of_countMsg 1493  
                                    ??___lwdiv 0076                           ??_get_check_up_value 0020  
                          _EUSART_Transmit_ISR 1698                        __end_of_PWM6_Initialize 1406  
                             ___awdiv@quotient 0022                           __end_of_eeprom_setup 06E1  
                              ___awmod@divisor 0072                                ___awmod@counter 0077  
                                ?_INT_CallBack 0070                        __end_of_DATAEE_ReadByte 13D3  
                                       _strlen 153C                               __end_of_send_msg 17A5  
                              _ADCC_Initialize 14F9                                 _PMD_Initialize 133C  
                        __size_of_define_alarm 0042                       ?i1_PWM_Output_D4_Disable 0070  
            __size_of_ADCC_GetSingleConversion 0012               __size_of_INT_SetInterruptHandler 0006  
                    ?_ADCC_GetSingleConversion 0072        INT_SetInterruptHandler@InterruptHandler 0072  
     TMR1_SetInterruptHandler@InterruptHandler 0072                        __end_of_TMR1_WriteTimer 1482  
                       __end_of_registers_info 0E84                        ??_PWM_Output_D4_Disable 0072  
                         ?_EUSART_Transmit_ISR 0070                               ?_TMR1_Initialize 0070  
                             __end_of_sys_init 13BB                           __size_of_EUSART_Read 002D  
                            _SYSTEM_Initialize 15A4                        __end_of__initialization 0071  
                            registers_info@msg 0023                             ?_SYSTEM_Initialize 0070  
                       __size_of_read_temp_lum 001F           __end_of_EUSART_SetTxInterruptHandler 1322  
        __size_of_EUSART_SetTxInterruptHandler 0006                   _EUSART_SetTxInterruptHandler 131C  
                               ?i1_clear_alarm 0070                            ___bmul@multiplicand 0072  
                                __end_of_Alarm 0B87                                  __end_of_Blink 0CA5  
                                __end_of_Menus 0B42                                 __pcstackCOMMON 0070  
                                __end_of_Timer 0BCD                                ??_submenu_alarm 0028  
                              ??_submenu_clock 002C                            ??_SYSTEM_Initialize 0075  
                    _transfer_n_registers$2834 0040                                ??_submenu_illum 0028  
                                    ?_TMR1_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                      __end_of_not_transferred 1658                               _DATAEE_WriteByte 1700  
                                 _define_alarm 0ABD                                  __end_of_putch 132E  
                             ?_TMR2_Initialize 0070                                 ??_INT_CallBack 0071  
                       __end_of_PMD_Initialize 1344                              __end_of_ReadIllum 1433  
                  __size_of_EXT_INT_Initialize 000D                           __size_of_load_eeprom 0050  
                                      ??_Alarm 0022                              _eeprom_clk_update 0BCD  
                         _eusartRxStatusBuffer 00A0                                        ??_Blink 0070  
                                      ??_Menus 0036                                        ??_Timer 0070  
              ??_EUSART_SetOverrunErrorHandler 0074                             ?_eeprom_clk_update 0024  
                         __size_of_read_alarms 0023                     submenu_clock@minutes_units 0030  
                    __end_of_SYSTEM_Initialize 15C0                          ??_EUSART_Transmit_ISR 0070  
                         __size_of_read_buffer 0024                                        ??_putch 0074  
                              ?_registers_info 0070                                     __pbssBANK0 0068  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                         __end_of_EUSART_Write 1778                      _transfer_registers_i$2842 0042  
                                    ?_ReadTemp 0070                            ??_eeprom_clk_update 0025  
                  __size_of_EUSART_Receive_ISR 0039                            read_temp_lum@F13178 00BC  
                           __size_of_read_alaf 0008                             __size_of_read_alal 0008  
                           __size_of_read_alat 0008                             __size_of_read_clkh 0008  
                           __size_of_read_clkm 0008                             __size_of_read_tala 0008  
                           __size_of_read_nreg 0008                             __size_of_read_msgs 0048  
                           __size_of_read_iwrt 0008                             __size_of_read_pmon 0008  
                                   __pmaintext 0075                                        ?_Update 0074  
                                  ?_ShowOnLEDs 0070                                        ?___bmul 0072  
                ?_EUSART_SetTxInterruptHandler 0072               _EUSART_TxDefaultInterruptHandler 00E7  
                                      ?___wmul 0074                               ?_TMR1_StartTimer 0070  
                                   ??_TMR1_ISR 0072                        __end_of_ADCC_Initialize 150F  
                   __end_of_PWM6_LoadDutyValue 14F9                           notification_memory@N 002D  
                        not_transferred@unread 0078                                     __pintentry 0004  
                                      _ADFLTRH 0115                                        _ADFLTRL 0114  
                         __size_of_modify_pmon 0036                                        _ADPREVH 008F  
                                      _ADPREVL 008E                                      ?_WriteI2C 0070  
                             ?_PWM6_Initialize 0070                       __end_of_check_corruption 14E3  
                                      _ADSTPTH 0113                                        _ADSTPTL 0112  
              __end_ofi1_PWM_Output_D4_Disable 1415                   ??_EUSART_DefaultErrorHandler 0071  
                           __size_of_set_clock 006E                                ?_PMD_Initialize 0070  
                                   _flag_timer 00D8                          transfer_n_registers@n 003F  
                    __end_of_eeprom_clk_update 0C14                                        ?_strlen 0072  
                      __size_of_TMR1_StopTimer 0003                               ?_DATAEE_ReadByte 0072  
                            ?_i2c1_driver_open 0070                               read_clock@F13170 0131  
                                _eusartRxCount 00DC                                _EUSART_LastByte 12F8  
                      send_confirmation@F13232 00C0                                  _read_temp_lum 161A  
                                      _SP1BRGH 011C                                        _SP1BRGL 011B  
                           ??_i2c1_driver_open 0072                                        _INT_ISR 12F2  
                                      _OSCCON1 088D                                        _OSCCON3 088F  
                           ring_buffer_write@L 0027                             ring_buffer_write@T 0026  
                __size_of_EUSART_RxDataHandler 001A                           interpret_message@cmd 004A  
                           ring_buffer_write@h 002C                             ring_buffer_write@m 0024  
                           ring_buffer_write@s 0025                                        _NVMADRH 081B  
                                      _NVMADRL 081A                           interpret_message@msg 004B  
                       notification_memory@msg 0023                                 set_clock@hours 002D  
                                      _NVMDATH 081D                                        _OSCTUNE 0892  
                                      _NVMDATL 081C                                        _NVMCON2 081F  
                                      _PWM6DCH 038D                                        _PWM6DCL 038C  
                                      _PWM6CON 038E                                        _SSP1ADD 018D  
                                      _SLRCONA 0F3B                                        _SLRCONB 0F46  
                                      _SLRCONC 0F51                                        _SLRCOND 0F5C  
                                      _SLRCONE 0F67                                        _PPSLOCK 0E8F  
                                      _SSP1BUF 018C                                        _SSP1MSK 018E  
                     ??_EUSART_SetErrorHandler 0074                         __size_of_checkButtonS1 0020  
                       __size_of_checkButtonS2 0020                               ?_TMR1_WriteTimer 0070  
                     eeprom_setup@reset_buffer 002D                                      ?_countMsg 0070  
                 __end_of_transfer_n_registers 1000                           DATAEE_WriteByte@bAdd 0020  
                                  send_msg@msg 0022                             _i2c1_driver_i2cISR 00C5  
                                   ??_ReadTemp 0074                                ??i1_clear_alarm 0070  
                                      _ReadI2C 156F                                      ?_send_msg 0070  
          __size_of_EUSART_DefaultErrorHandler 0004                          __size_of_eeprom_setup 008F  
                              __size_of_Update 002A                           __CFG_SCANE$available 0000  
                              __size_of___bmul 0015                                        ___awdiv 0F3D  
                                      _Switch1 1415                                        ___awmod 0D8B  
                              __size_of___wmul 001F                                        ___lwdiv 0A40  
                             ?_not_transferred 0070                             _transfer_registers 0436  
                                   ??_WriteI2C 0072                                     _read_clock 08C6  
                                   _read_param 15C0                                        __ptext1 13B0  
                                      __ptext2 01FE                                        __ptext3 1639  
                                      __ptext4 0A40                                        __ptext5 0C14  
                                      __ptext6 06E1                                        __ptext7 05B6  
                                      __ptext8 0F9D                                        __ptext9 0436  
                                    ?_sys_init 0070                 ??_TMR1_DefaultInterruptHandler 0070  
                               ?_read_temp_lum 0070                                __size_of_strlen 0019  
                                    _T1CONbits 020E                          _OSCILLATOR_Initialize 1394  
                                    _T2CONbits 028E                              _ring_buffer_laped 1442  
                            __end_of_read_alaf 1354                              __end_of_read_alal 135C  
                          ?_transfer_registers 002C                              __end_of_read_alat 1364  
                            __end_of_read_clkh 136C                              __end_of_read_clkm 1374  
                             ___awmod@dividend 0074              __size_of_TMR1_SetInterruptHandler 0006  
                            __end_of_read_tala 138C                              __end_of_read_nreg 137C  
                            __end_of_read_msgs 0C5C                              __end_of_read_iwrt 1394  
                            __end_of_read_pmon 1384                                        _minutes 00D4  
                     ??_PIN_MANAGER_Initialize 0072                                        _seconds 00D3  
                    ?_TMR1_SetInterruptHandler 0072                                      _T2HLTbits 028F  
                            _ring_buffer_write 01FE                        _INT_SetInterruptHandler 1322  
                           ?_ring_buffer_laped 0070                   submenu_temp@temperature_tens 002C  
                           ?_ring_buffer_write 0024                     __size_of_SYSTEM_Initialize 001C  
                          __size_of_ShowOnLEDs 000C                                        clrloop0 132F  
                                      _switch1 00D9                           end_of_initialization 0071  
                                    _T2RSTbits 0291                                     ??_countMsg 0071  
        __end_of_EUSART_SetOverrunErrorHandler 1316         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 1310                            ??_ring_buffer_laped 0074  
                                 _eeprom_setup 0652                              __end_of_set_clock 07DB  
                         __end_of_INT_CallBack 13EC                            ??_ring_buffer_write 0028  
                            _EUSART_Initialize 0A7C                   __size_of_notification_memory 0053  
                       __size_of_default_setup 003A                           ??_transfer_registers 002D  
                                ??_clear_alarm 0072                  __size_of_PWM_Output_D4_Enable 0010  
                                   ??_send_msg 0077                             ?_EUSART_Initialize 0070  
                                 read_buffer@i 0027                                   read_buffer@j 0020  
                       transfer_registers_i@nr 0046                         transfer_registers_i@wi 0044  
                           _EUSART_is_rx_ready 139D                                        used@val 0076  
                                _checkButtonS1 1658                                  _checkButtonS2 1678  
                             set_clock@minutes 002E                               set_clock@seconds 002F  
                      __end_of_EUSART_LastByte 12FE                               ?_ADCC_Initialize 0070  
                 __end_of_transfer_registers_i 0652               __end_of_ADCC_GetSingleConversion 14A5  
                        __CFG_WDTCPS$WDTCPS_31 0000                                        strlen@a 0075  
                                      strlen@s 0076                            ??_EUSART_Initialize 0074  
               ??_EUSART_SetTxInterruptHandler 0074                      __end_of_ring_buffer_laped 1451  
                    notification_memory@F13227 0120                                      _PORTBbits 000D  
                          ?_EUSART_is_rx_ready 0070                                      _PORTCbits 000E  
                                   ??_sys_init 0072                     __size_of_eeprom_clk_update 0047  
                            _interpret_message 06E1                                   read_msgs@cmd 0058  
                                 read_msgs@aux 004E                      __end_of_ring_buffer_write 0329  
                           ?_interpret_message 0070                                      _TRISCbits 0013  
                                ReadTemp@value 0075                          __size_of_EUSART_Write 002A  
                                   _update_clk 13A6                               __CFG_FEXTOSC$OFF 0000  
              __size_of_EUSART_SetErrorHandler 0006                       __end_of_DATAEE_WriteByte 1724  
                                ShowOnLEDs@num 0073                            ??_interpret_message 0048  
               __size_of_PWM_Output_D4_Disable 000F                      __end_of_EUSART_Initialize 0ABD  
                         ??_EUSART_is_rx_ready 0072                  __end_of_PWM_Output_D4_Disable 1442  
                        check_corruption@check 0076               __size_ofi1_PWM_Output_D4_Disable 000F  
                               ?_checkButtonS1 0070                                 ?_checkButtonS2 0070  
                               __end_of_Update 174E                         __size_of_send_register 0023  
                               __end_of___bmul 14CE             __end_of_EUSART_DefaultErrorHandler 12EE  
                   _EUSART_DefaultErrorHandler 12EA                            __end_of_clear_alarm 134C  
                    __end_of_interpret_message 076D                    __size_of_get_check_up_value 005D  
                               __end_of___wmul 161A                                     _write_alaf 17D2  
                                   _write_alal 080E                                     _write_alat 083C  
                                  ?_read_clock 0070                                ??_read_temp_lum 0078  
                                 _EUSART_Write 174E                                     _write_tala 0898  
                            __size_of_TMR1_ISR 0017                                     _write_pmon 086A  
                                  ?_read_param 0070                                 _TMR1_StopTimer 12E7  
                       ?_OSCILLATOR_Initialize 0070                           _transfer_n_registers 0F9D  
                    ??_INT_SetInterruptHandler 0074                                  _default_setup 0A06  
                               __end_of_strlen 1555                               ??_registers_info 0078  
                          start_initialization 0057                __size_of_PIN_MANAGER_Initialize 004B  
                                    _ReadIllum 1424                                  ??_EUSART_Read 0072  
 EUSART_SetRxInterruptHandler@interruptHandler 0072   EUSART_SetTxInterruptHandler@interruptHandler 0072  
                             WriteI2C@data_out 0073                                  ?_submenu_temp 0070  
                                  putch@txData 0074                              read_alarms@F13188 012C  
                             eeprom_setup@alaf 0029                               eeprom_setup@alal 0028  
                             eeprom_setup@alat 0027                               eeprom_setup@clkh 002A  
                             eeprom_setup@clkm 002B                            DATAEE_ReadByte@bAdd 0072  
                             eeprom_setup@tala 0026                               eeprom_setup@nreg 0024  
                             eeprom_setup@pmon 0025                   ?_INT_DefaultInterruptHandler 0070  
                        eeprom_clk_update@clkh 002A                          eeprom_clk_update@clkm 0024  
                            __size_of_ReadTemp 010D                 ?_EUSART_SetOverrunErrorHandler 0072  
                             __CFG_LPBOREN$OFF 0000                       __size_of_TMR1_Initialize 001E  
                                 ??_ShowOnLEDs 0072                                       ??_Update 0075  
                   _EUSART_FramingErrorHandler 00E3                                       ??___bmul 0073  
                             ??_PMD_Initialize 0072                                       ??___wmul 0078  
                       _EUSART_SetErrorHandler 1304                         __end_of_TMR1_StopTimer 12EA  
                             ?_EUSART_LastByte 0070                          __end_of_submenu_alarm 1471  
                        __end_of_submenu_clock 05B6                                  ??_load_eeprom 0033  
                        __end_of_submenu_illum 14B9                     __end_of_EXT_INT_Initialize 13F9  
                        ?_transfer_n_registers 0070                     __size_of_ring_buffer_laped 000F  
                                    Update@var 0076                                      Update@thr 0074  
                            ?_check_corruption 0070                                       ??_strlen 0074  
                     submenu_clock@hours_units 0032                                 ?_default_setup 0070  
                                   read_msgs@i 0056                     __size_of_ring_buffer_write 012B  
                            __size_of_WriteI2C 004B                       _ADCC_GetSingleConversion 1493  
                  __end_of_EUSART_Transmit_ISR 16BA                             ??_check_corruption 0075  
                             registers_info@ri 002A                               registers_info@nr 0029  
                             registers_info@wi 002E                                  ??_read_alarms 0078  
                                  __pbssCOMMON 007A                                  ??_read_buffer 0021  
                                    ___latbits 0002                               read_param@F13181 00B8  
                                     ?_INT_ISR 0070                                  __pcstackBANK0 0020  
                                __pcstackBANK2 0136                                    ?_update_clk 0070  
                           _PWM6_LoadDutyValue 14E3                       __size_of_TMR2_Initialize 000E  
                                   ?_ReadIllum 0070                                 ??_submenu_temp 0028  
                        __size_of_INT_CallBack 000D                                  _send_register 16DD  
                           __end_of_ShowOnLEDs 13C7                     __end_of_EUSART_Receive_ISR 0A06  
                         _transfer_registers_i 05B6                            ?_PWM6_LoadDutyValue 0072  
                   __size_of_EUSART_Initialize 0041                      ring_buffer_write@ring_pos 002F  
                    __size_of_i2c1_driver_open 000C               _EUSART_RxDefaultInterruptHandler 00E5  
                          __size_of_read_clock 002F                            __end_of_EUSART_Read 17D2  
                                     ?_ReadI2C 0070                            __size_of_read_param 001D  
                            __size_of_countMsg 0011                                      _btn1State 00CA  
                                    _btn2State 00C9                                      __pnvBANK1 00DF  
                              ??_checkButtonS1 0072                                ??_checkButtonS2 0072  
                 __end_of_EUSART_RxDataHandler 156F                                    _clear_alarm 1344  
                             ___lwdiv@dividend 0074                         _PIN_MANAGER_Initialize 0CF0  
                                 _initial_time 00C3                  ??_INT_DefaultInterruptHandler 0070  
                         EUSART_Read@readValue 0073                                  ??_modify_pmon 0028  
             __end_of_TMR1_SetInterruptHandler 1304                ADCC_GetSingleConversion@channel 0075  
                            __size_of_send_msg 002D                                       ?___awdiv 0074  
                                    __ptext100 09CD                                      __ptext101 1482  
                                    __ptext110 0B87                                      __ptext102 12EE  
                                    __ptext111 1471                                      __ptext103 07FF  
                                    __ptext112 12F2                                      __ptext104 12EA  
                                    __ptext113 13DF                                      __ptext105 1555  
                                    __ptext114 0002                                      __ptext106 12F8  
                                    __ptext115 1415                                      __ptext107 1525  
                                    __ptext116 1334                                      __ptext108 0C5C  
                                    __ptext117 1406                                      __ptext109 0003  
                                    __ptext118 1698                                       ?_Switch1 0070  
                                     ?___awmod 0072                                  ?_switch_alarm 0070  
                                     ?___lwdiv 0072                    _i2c1_driver_busCollisionISR 00C7  
                                 _eusartRxHead 007B                                ?_TMR1_StopTimer 0070  
                                 _eusartTxHead 00DE                     __size_of_interpret_message 008C  
                                 _eusartRxTail 006F                               __CFG_PPS1WAY$OFF 0000  
                                  ?_write_alaf 0070                                    ?_write_alal 0070  
                                 _eusartTxTail 00DD                                    ?_write_alat 0070  
                         ??_PWM6_LoadDutyValue 0074                                  set_clock@data 0030  
                                  ?_write_tala 0070                                    ?_write_pmon 0070  
                 ??_INTERRUPT_InterruptManager 0072                          notification_memory@ri 002A  
                        notification_memory@nr 0029                          notification_memory@wi 002E  
                      _eusartTxBufferRemaining 00EF                                   _INT_CallBack 13DF  
                                     _BAUD1CON 011F                            _notification_memory 0DDE  
                     __size_of_TMR1_StartTimer 0003                                 __size_of_Alarm 0045  
                            __size_of_sys_init 000B                                 __size_of_Blink 0049  
                          __end_of_load_eeprom 0D8B                                 __size_of_Menus 0043  
                               __size_of_Timer 0046                       __size_of_PWM6_Initialize 000D  
                              read_clock@hours 0023                                 ?_send_register 0070  
                             ___lwdiv@quotient 0078                                      _read_alaf 134C  
                       transfer_n_registers@nr 003E                                      _read_alal 1354  
                                    _read_alat 135C                                      _read_clkh 1364  
                                    _read_clkm 136C                                       _T2CLKCON 0290  
                     __size_of_DATAEE_ReadByte 000C                                      _read_tala 1384  
                                    _read_nreg 1374                                      _read_msgs 0C14  
                                    _read_iwrt 138C                                      _read_pmon 137C  
                               __size_of_putch 0006                          ?_transfer_registers_i 0070  
                          __end_of_read_alarms 16DD                                 _eusartRxBuffer 00A8  
                          __end_of_read_buffer 07FF                                 _eusartTxBuffer 00B0  
                      i1_PWM_Output_D4_Disable 1406                                 ___wmul@product 0078  
                                     _LATAbits 0016         EUSART_SetErrorHandler@interruptHandler 0072  
                                    clear_ram0 132E                                       _PIE0bits 0716  
                         ?_notification_memory 0070                                       _PIE3bits 0719  
                                     _PIE4bits 071A                                      _used$2624 0075  
                            _eusartRxLastError 00DB                          __end_ofi1_clear_alarm 133C  
                     __size_of_TMR1_WriteTimer 0011            __size_of_INTERRUPT_InterruptManager 0051  
                             switch_alarm@data 0029                                       _PIR0bits 070C  
                                    _set_clock 076D                ??_EUSART_SetFramingErrorHandler 0074  
                                     _PIR3bits 070F                                       _PIR4bits 0710  
                        transfer_registers_i@N 0040                          transfer_registers_i@i 0045  
                        transfer_registers_i@n 0041                          interpret_message@data 004C  
                               ??_switch_alarm 0028                            __size_of_update_clk 000A  
                                     _SSP1CON1 0190                                       _SSP1CON2 0191  
    __end_of_EUSART_DefaultOverrunErrorHandler 12F2     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 12EE                                       _TMR1_ISR 1525  
                                     _SSP1STAT 018F                         ??_transfer_n_registers 003B  
                              ??_default_setup 002E                              ??_TMR1_Initialize 0074  
                                   _ADCON0bits 0093                                     _ADCON1bits 0094  
                                   _ADCON2bits 0095                                     _ADCON3bits 0096  
                            ___wmul@multiplier 0074                            __end_of_modify_pmon 0960  
                                  write_alaf@x 0027                                    write_alal@x 0027  
                                  write_alat@x 0027                   __end_of_PWM_Output_D4_Enable 1461  
         __size_of_INT_DefaultInterruptHandler 0001                                       Menu@mode 0035  
                     __size_of_not_transferred 001F                                    write_tala@x 0027  
                        DATAEE_WriteByte@bData 0022                                    ??_ReadIllum 0076  
                                  write_pmon@x 0027                               __size_of_INT_ISR 0006  
                                  _EUSART_Read 17A5                                     ?_read_alaf 0070  
                                   ?_read_alal 0070                                     ?_read_alat 0070  
                                   ?_read_clkh 0070                                     ?_read_clkm 0070  
                                   ?_read_tala 0070                                     ?_read_nreg 0070  
                                   ?_read_msgs 0070                                     ?_read_iwrt 0070  
                                   ?_read_pmon 0070                              ?_DATAEE_WriteByte 0020  
                            ??_TMR2_Initialize 0072                                       _ReadTemp 0329  
                          __size_of_write_alaf 002E                            __size_of_write_alal 002E  
                          __size_of_write_alat 002E                            __size_of_write_tala 002E  
                           ??_DATAEE_WriteByte 007A                            __size_of_write_pmon 002E  
                        ??_notification_memory 0078                               __size_of_ReadI2C 001A  
                                   _ADSTATbits 0097                    __size_of_transfer_registers 00CB  
                                   ?_set_clock 0070                           send_confirmation@cmd 0023  
                         send_confirmation@msg 0024                           __end_of_submenu_temp 0EE0  
                      ??_OSCILLATOR_Initialize 0072                            _EUSART_ErrorHandler 00DF  
                      submenu_clock@hours_tens 0031                                  ?_define_alarm 0070  
                             __size_of___awdiv 0060                               __size_of_Switch1 000F  
                             __size_of___awmod 0053                    ?_EUSART_DefaultErrorHandler 0070  
                              registers_info@N 002D                              read_clock@minutes 0024  
                            read_clock@seconds 0025                               __size_of___lwdiv 003C  
                                 ??_read_clock 0078                                       _WriteI2C 0CA5  
                                  _load_eeprom 0D3B                                   ??_read_param 0078  
                     _TMR1_SetInterruptHandler 12FE                          _TMR1_InterruptHandler 00EB  
                     transfer_n_registers@data 0042                       __size_of_ADCC_Initialize 0016  
                               read_alarms@msg 0023                                ??_send_register 0028  
                                  _read_alarms 16BA                                    _read_buffer 07DB  
                              ___lwdiv@divisor 0072                           _EUSART_RxDataHandler 1555  
                            _modify_time_alarm 0996                                ___lwdiv@counter 0077  
                                     __ptext10 16DD                                       __ptext11 07DB  
                                     __ptext20 0996                                       __ptext12 1328  
                                     __ptext21 0898                                       __ptext13 0960  
                                   _T1GCONbits 020F                                       __ptext30 153C  
                                     __ptext22 092A                                       __ptext14 076D  
                                     __ptext31 174E                                       __ptext23 086A  
                                     __ptext15 0E31                                       __ptext40 1364  
                                     __ptext32 1442                                       __ptext24 0ABD  
                                     __ptext16 161A                                       __ptext41 135C  
                                     __ptext33 138C                                       __ptext25 150F  
                                     __ptext17 15C0                                       __ptext50 1433  
                                     __ptext42 1354                                       __ptext34 0D3B  
                                     __ptext26 139D                                       __ptext18 08C6  
                                     __ptext51 15A4                                       __ptext43 134C  
                                     __ptext35 1589                                       __ptext27 17A5  
                                     __ptext19 16BA                                       __ptext60 0A7C  
                                     __ptext52 0800                                       __ptext44 0A06  
                                     __ptext36 1384                                       __ptext28 0DDE  
                                     __ptext61 131C                                       __ptext53 15DD  
                                     __ptext45 0652                                       __ptext37 137C  
                                     __ptext29 1778                                       __ptext70 1424  
                                     __ptext62 1316                                       __ptext54 13F9  
                                     __ptext46 14CE                                       __ptext38 1374  
                                     __ptext71 1493                                       __ptext63 1310  
                                     __ptext55 133C                                       __ptext47 0EE0  
                                     __ptext39 136C                                       __ptext80 13A6  
                                     __ptext72 0AFF                                       __ptext64 130A  
                                     __ptext56 0CF0                                       __ptext48 13D3  
                                     __ptext81 0BCD                                       __ptext73 12FE  
                                     __ptext65 1304                                       __ptext57 1394  
                                     __ptext49 1344                                       __ptext90 1678  
                                     __ptext82 14B9                                       __ptext74 08F5  
                                     __ptext66 14F9                                       __ptext58 13EC  
                                     __ptext91 1658                                       __ptext83 0D8B  
                                     __ptext75 0E84                                       __ptext67 0329  
                                     __ptext59 1322                                       __ptext92 13BB  
                                     __ptext84 0F3D                                       __ptext76 083C  
                                     __ptext68 0CA5                                       __ptext93 12E7  
                                     __ptext85 1461                                       __ptext77 14A5  
                                     __ptext69 156F                                       __ptext94 12E4  
                                     __ptext86 17D2                                       __ptext78 080E  
                                     __ptext95 0B42                                       __ptext87 1700  
                                     __ptext79 0501                                       __ptext96 15FB  
                                     __ptext88 13C7                                       __ptext97 1451  
                                     __ptext89 1724                                       __ptext98 14E3  
                                 _SSP1CON1bits 0190                                   _SSP1CON2bits 0191  
                       ??_transfer_registers_i 003B                      ??i1_PWM_Output_D4_Disable 0070  
                        modify_time_alarm@data 0029                             ?_modify_time_alarm 0070  
                            ??_TMR1_StartTimer 0072                    DATAEE_WriteByte@GIEBitValue 0023  
                                    send_msg@i 0020                            _registers_info$2827 002B  
                                     _countMsg 1482                                  __size_of_Menu 0035  
                             _i2c1_driver_open 13D3                              ??_PWM6_Initialize 0072  
                  __size_of_EUSART_is_rx_ready 0009                                  __size_of_main 0189  
                                __size_of_used 001B                             __end_of_read_clock 08F5  
                    submenu_clock@minutes_tens 002F                            ??_modify_time_alarm 0028  
                           __end_of_read_param 15DD                              ??_DATAEE_ReadByte 0074  
                         __CFG_WDTCWS$WDTCWS_7 0000                          _PWM_Output_D4_Disable 1433  
                      ?_EUSART_SetErrorHandler 0072                                       _send_msg 1778  
                         transfer_registers@nr 0033                           transfer_registers@wi 003A  
                                   _RC1STAbits 011D  EUSART_SetOverrunErrorHandler@interruptHandler 0072  
                   __end_of_get_check_up_value 0F3D                                       _num_msgs 00CE  
                     transfer_registers_i@data 0047                     ??_ADCC_GetSingleConversion 0075  
                                  _modify_pmon 092A                                 ??_define_alarm 0027  
                                     int$flags 007E                  submenu_temp@temperature_units 002B  
           __end_of_INTERRUPT_InterruptManager 0055                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 1310         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 130A                                   _SSP1STATbits 018F  
                            ??_TMR1_WriteTimer 0072                                       _sys_init 13B0  
                        __end_of_read_temp_lum 1639                      __end_of_modify_time_alarm 09CD  
                                   _INTCONbits 000B                     ring_buffer_write@ring_pos_ 002D  
                                  _NVMCON1bits 081E                          ?_EUSART_RxDataHandler 0070  
                                 ??_update_clk 002B                           _INT_InterruptHandler 00E9  
                                  ??_read_alaf 0074                                    ??_read_alal 0074  
                                  ??_read_alat 0074                                    ??_read_clkh 0074  
                                  ??_read_clkm 0074                             _EXT_INT_Initialize 13EC  
                         __end_of_switch_alarm 0996                                    ??_read_tala 0074  
                                  ??_read_nreg 0074                                    ??_read_msgs 004D  
                                  ??_read_iwrt 0074                                    ??_read_pmon 0074  
                                     intlevel1 0000                              ??_not_transferred 0074  
                    __size_of_check_corruption 0015                        ?_PIN_MANAGER_Initialize 0070  
                             read_temp_lum@msg 0023                 __end_of_EUSART_SetErrorHandler 130A  
                            __CFG_CLKOUTEN$OFF 0000                            ?_EXT_INT_Initialize 0070  
                                  _PPSLOCKbits 0E8F                                  read_clock@msg 0026  
                                 ?_clear_alarm 0070           __end_of_EUSART_SetRxInterruptHandler 131C  
        __size_of_EUSART_SetRxInterruptHandler 0006                   _EUSART_SetRxInterruptHandler 1316  
                         _PWM_Output_D4_Enable 1451                               ??_TMR1_StopTimer 0072  
                                  ??_set_clock 002C                            transfer_registers@N 0039  
                          transfer_registers@c 0036                            transfer_registers@i 002C  
                          transfer_registers@n 0038                             _EUSART_Receive_ISR 09CD  
                           __end_of_update_clk 13B0  EUSART_SetFramingErrorHandler@interruptHandler 0072  
                     ?_INT_SetInterruptHandler 0072                                   ??_write_alaf 0024  
                                 ??_write_alal 0024                                   ??_write_alat 0024  
                                 ??_write_tala 0024                                   ??_write_pmon 0024  
                            _send_confirmation 150F                           ??_EXT_INT_Initialize 0074  
                          ?_EUSART_Receive_ISR 0070                                     _SSP1DATPPS 0EC6  
                                   _SSP1CLKPPS 0EC5                             ?_send_confirmation 0078  
                                read_param@msg 0023                       __size_of_EUSART_LastByte 0006  
                  PWM6_LoadDutyValue@dutyValue 0072                        get_check_up_value@check 0074  
                                   _TX1STAbits 011E                            ??_send_confirmation 0079  
                           EUSART_Write@txData 0073                   __size_of_EUSART_Transmit_ISR 0022  
               __end_of_PIN_MANAGER_Initialize 0D3B                              ??_ADCC_Initialize 0072  
                                ?_eeprom_setup 0024                         __size_of_submenu_alarm 0010  
                       __size_of_submenu_clock 00B5                         __size_of_submenu_illum 0014  
                      __size_of_registers_info 0053                                modify_pmon@data 0029  
                       ?_PWM_Output_D4_Disable 0070                           ??_EUSART_Receive_ISR 0071  
                           __end_of_write_alaf 1800                             __end_of_write_alal 083C  
                           __end_of_write_alat 086A                             __end_of_write_tala 08C6  
                           __end_of_write_pmon 0898                          ?_PWM_Output_D4_Enable 0070  
                        __size_of_submenu_temp 005C                           registers_info@F13199 0126  
                              _TMR1_Initialize 15DD                          __end_of_checkButtonS1 1678  
                        __end_of_checkButtonS2 1698  
