

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Dec 08 00:13:05 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	text64,local,class=CODE,merge=1,delta=2
    79                           	psect	text65,local,class=CODE,merge=1,delta=2
    80                           	psect	text66,local,class=CODE,merge=1,delta=2
    81                           	psect	text67,local,class=CODE,merge=1,delta=2
    82                           	psect	text68,local,class=CODE,merge=1,delta=2
    83                           	psect	text69,local,class=CODE,merge=1,delta=2
    84                           	psect	text70,local,class=CODE,merge=1,delta=2
    85                           	psect	text71,local,class=CODE,merge=1,delta=2
    86                           	psect	text72,local,class=CODE,merge=1,delta=2
    87                           	psect	text73,local,class=CODE,merge=1,delta=2
    88                           	psect	text74,local,class=CODE,merge=1,delta=2
    89                           	psect	text75,local,class=CODE,merge=1,delta=2
    90                           	psect	text76,local,class=CODE,merge=1,delta=2
    91                           	psect	text77,local,class=CODE,merge=1,delta=2
    92                           	psect	text78,local,class=CODE,merge=1,delta=2
    93                           	psect	text79,local,class=CODE,merge=1,delta=2
    94                           	psect	text80,local,class=CODE,merge=1,delta=2
    95                           	psect	text81,local,class=CODE,merge=1,delta=2
    96                           	psect	text82,local,class=CODE,merge=1,delta=2,group=1
    97                           	psect	text83,local,class=CODE,merge=1,delta=2,group=1
    98                           	psect	text84,local,class=CODE,merge=1,delta=2,group=1
    99                           	psect	text85,local,class=CODE,merge=1,delta=2
   100                           	psect	text86,local,class=CODE,merge=1,delta=2
   101                           	psect	text87,local,class=CODE,merge=1,delta=2
   102                           	psect	text88,local,class=CODE,merge=1,delta=2
   103                           	psect	text89,local,class=CODE,merge=1,delta=2
   104                           	psect	text90,local,class=CODE,merge=1,delta=2
   105                           	psect	text91,local,class=CODE,merge=1,delta=2
   106                           	psect	text92,local,class=CODE,merge=1,delta=2
   107                           	psect	text93,local,class=CODE,merge=1,delta=2
   108                           	psect	text94,local,class=CODE,merge=1,delta=2
   109                           	psect	text95,local,class=CODE,merge=1,delta=2
   110                           	psect	text96,local,class=CODE,merge=1,delta=2,group=1
   111                           	psect	text97,local,class=CODE,merge=1,delta=2
   112                           	psect	text98,local,class=CODE,merge=1,delta=2
   113                           	psect	intentry,global,class=CODE,delta=2
   114                           	psect	text100,local,class=CODE,merge=1,delta=2
   115                           	psect	text101,local,class=CODE,merge=1,delta=2
   116                           	psect	text102,local,class=CODE,merge=1,delta=2
   117                           	psect	text103,local,class=CODE,merge=1,delta=2
   118                           	psect	text104,local,class=CODE,merge=1,delta=2
   119                           	psect	text105,local,class=CODE,merge=1,delta=2
   120                           	psect	text106,local,class=CODE,merge=1,delta=2
   121                           	psect	text107,local,class=CODE,merge=1,delta=2
   122                           	psect	text108,local,class=CODE,merge=1,delta=2
   123                           	psect	text109,local,class=CODE,merge=1,delta=2
   124                           	psect	text110,local,class=CODE,merge=1,delta=2
   125                           	psect	text111,local,class=CODE,merge=1,delta=2
   126                           	psect	text112,local,class=CODE,merge=1,delta=2
   127                           	psect	text113,local,class=CODE,merge=1,delta=2
   128                           	psect	text114,local,class=CODE,merge=1,delta=2
   129                           	psect	text115,local,class=CODE,merge=1,delta=2
   130                           	psect	text116,local,class=CODE,merge=1,delta=2
   131                           	psect	text117,local,class=CODE,merge=1,delta=2
   132                           	psect	text118,local,class=CODE,merge=1,delta=2
   133                           	dabs	1,0x7E,2
   134  0000                     
   135                           ; Version 2.10
   136                           ; Generated 31/07/2019 GMT
   137                           ; 
   138                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   139                           ; All rights reserved.
   140                           ; 
   141                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   142                           ; 
   143                           ; Redistribution and use in source and binary forms, with or without modification, are
   144                           ; permitted provided that the following conditions are met:
   145                           ; 
   146                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   147                           ;        conditions and the following disclaimer.
   148                           ; 
   149                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   150                           ;        of conditions and the following disclaimer in the documentation and/or other
   151                           ;        materials provided with the distribution.
   152                           ; 
   153                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   154                           ;        software without specific prior written permission.
   155                           ; 
   156                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   157                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   158                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   159                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   160                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   161                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   162                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   163                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   164                           ; 
   165                           ; 
   166                           ; Code-generator required, PIC16F18875 Definitions
   167                           ; 
   168                           ; SFR Addresses
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001C                     	;# 
   197  001C                     	;# 
   198  001D                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  008C                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  008E                     	;# 
   207  008F                     	;# 
   208  0090                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0110                     	;# 
   229  0110                     	;# 
   230  0111                     	;# 
   231  0112                     	;# 
   232  0112                     	;# 
   233  0113                     	;# 
   234  0114                     	;# 
   235  0114                     	;# 
   236  0115                     	;# 
   237  0116                     	;# 
   238  0116                     	;# 
   239  0117                     	;# 
   240  0119                     	;# 
   241  0119                     	;# 
   242  0119                     	;# 
   243  011A                     	;# 
   244  011A                     	;# 
   245  011A                     	;# 
   246  011B                     	;# 
   247  011B                     	;# 
   248  011B                     	;# 
   249  011B                     	;# 
   250  011B                     	;# 
   251  011C                     	;# 
   252  011C                     	;# 
   253  011C                     	;# 
   254  011D                     	;# 
   255  011D                     	;# 
   256  011D                     	;# 
   257  011E                     	;# 
   258  011E                     	;# 
   259  011E                     	;# 
   260  011F                     	;# 
   261  011F                     	;# 
   262  011F                     	;# 
   263  011F                     	;# 
   264  011F                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  018E                     	;# 
   268  018F                     	;# 
   269  0190                     	;# 
   270  0191                     	;# 
   271  0192                     	;# 
   272  0196                     	;# 
   273  0197                     	;# 
   274  0198                     	;# 
   275  0199                     	;# 
   276  019A                     	;# 
   277  019B                     	;# 
   278  019C                     	;# 
   279  020C                     	;# 
   280  020C                     	;# 
   281  020D                     	;# 
   282  020E                     	;# 
   283  020F                     	;# 
   284  020F                     	;# 
   285  0210                     	;# 
   286  0210                     	;# 
   287  0211                     	;# 
   288  0211                     	;# 
   289  0212                     	;# 
   290  0212                     	;# 
   291  0213                     	;# 
   292  0214                     	;# 
   293  0215                     	;# 
   294  0215                     	;# 
   295  0216                     	;# 
   296  0216                     	;# 
   297  0217                     	;# 
   298  0217                     	;# 
   299  0218                     	;# 
   300  0218                     	;# 
   301  0219                     	;# 
   302  021A                     	;# 
   303  021B                     	;# 
   304  021B                     	;# 
   305  021C                     	;# 
   306  021C                     	;# 
   307  021D                     	;# 
   308  021D                     	;# 
   309  021E                     	;# 
   310  021F                     	;# 
   311  028C                     	;# 
   312  028C                     	;# 
   313  028D                     	;# 
   314  028D                     	;# 
   315  028E                     	;# 
   316  028F                     	;# 
   317  0290                     	;# 
   318  0290                     	;# 
   319  0291                     	;# 
   320  0292                     	;# 
   321  0292                     	;# 
   322  0293                     	;# 
   323  0293                     	;# 
   324  0294                     	;# 
   325  0295                     	;# 
   326  0296                     	;# 
   327  0296                     	;# 
   328  0297                     	;# 
   329  0298                     	;# 
   330  0298                     	;# 
   331  0299                     	;# 
   332  0299                     	;# 
   333  029A                     	;# 
   334  029B                     	;# 
   335  029C                     	;# 
   336  029C                     	;# 
   337  029D                     	;# 
   338  030C                     	;# 
   339  030C                     	;# 
   340  030D                     	;# 
   341  030E                     	;# 
   342  030F                     	;# 
   343  0310                     	;# 
   344  0310                     	;# 
   345  0311                     	;# 
   346  0312                     	;# 
   347  0313                     	;# 
   348  0314                     	;# 
   349  0314                     	;# 
   350  0315                     	;# 
   351  0316                     	;# 
   352  0317                     	;# 
   353  0318                     	;# 
   354  0318                     	;# 
   355  0319                     	;# 
   356  031A                     	;# 
   357  031B                     	;# 
   358  031C                     	;# 
   359  031C                     	;# 
   360  031D                     	;# 
   361  031E                     	;# 
   362  031F                     	;# 
   363  038C                     	;# 
   364  038C                     	;# 
   365  038D                     	;# 
   366  038E                     	;# 
   367  0390                     	;# 
   368  0390                     	;# 
   369  0391                     	;# 
   370  0392                     	;# 
   371  040C                     	;# 
   372  040D                     	;# 
   373  040E                     	;# 
   374  040F                     	;# 
   375  0410                     	;# 
   376  0411                     	;# 
   377  0416                     	;# 
   378  0416                     	;# 
   379  0417                     	;# 
   380  0418                     	;# 
   381  0418                     	;# 
   382  0419                     	;# 
   383  041A                     	;# 
   384  041A                     	;# 
   385  041B                     	;# 
   386  041C                     	;# 
   387  041C                     	;# 
   388  041D                     	;# 
   389  041E                     	;# 
   390  041F                     	;# 
   391  048C                     	;# 
   392  048C                     	;# 
   393  048D                     	;# 
   394  048E                     	;# 
   395  048F                     	;# 
   396  048F                     	;# 
   397  0490                     	;# 
   398  0491                     	;# 
   399  0492                     	;# 
   400  0492                     	;# 
   401  0493                     	;# 
   402  0494                     	;# 
   403  0495                     	;# 
   404  0495                     	;# 
   405  0496                     	;# 
   406  0497                     	;# 
   407  0498                     	;# 
   408  0499                     	;# 
   409  049A                     	;# 
   410  049B                     	;# 
   411  049C                     	;# 
   412  049D                     	;# 
   413  050C                     	;# 
   414  050C                     	;# 
   415  050D                     	;# 
   416  050E                     	;# 
   417  050F                     	;# 
   418  050F                     	;# 
   419  0510                     	;# 
   420  0511                     	;# 
   421  0512                     	;# 
   422  0512                     	;# 
   423  0513                     	;# 
   424  0514                     	;# 
   425  0515                     	;# 
   426  0515                     	;# 
   427  0516                     	;# 
   428  0517                     	;# 
   429  0518                     	;# 
   430  0519                     	;# 
   431  051A                     	;# 
   432  051B                     	;# 
   433  051C                     	;# 
   434  051D                     	;# 
   435  058C                     	;# 
   436  058C                     	;# 
   437  058D                     	;# 
   438  058E                     	;# 
   439  058F                     	;# 
   440  058F                     	;# 
   441  0590                     	;# 
   442  0591                     	;# 
   443  0592                     	;# 
   444  0593                     	;# 
   445  060C                     	;# 
   446  060D                     	;# 
   447  060E                     	;# 
   448  060F                     	;# 
   449  0610                     	;# 
   450  0611                     	;# 
   451  0612                     	;# 
   452  0613                     	;# 
   453  0614                     	;# 
   454  0616                     	;# 
   455  0617                     	;# 
   456  0618                     	;# 
   457  0619                     	;# 
   458  061A                     	;# 
   459  061B                     	;# 
   460  061C                     	;# 
   461  061D                     	;# 
   462  061E                     	;# 
   463  068C                     	;# 
   464  068D                     	;# 
   465  068E                     	;# 
   466  068F                     	;# 
   467  0690                     	;# 
   468  0691                     	;# 
   469  0692                     	;# 
   470  0693                     	;# 
   471  0694                     	;# 
   472  070C                     	;# 
   473  070D                     	;# 
   474  070E                     	;# 
   475  070F                     	;# 
   476  0710                     	;# 
   477  0711                     	;# 
   478  0712                     	;# 
   479  0713                     	;# 
   480  0714                     	;# 
   481  0716                     	;# 
   482  0717                     	;# 
   483  0718                     	;# 
   484  0719                     	;# 
   485  071A                     	;# 
   486  071B                     	;# 
   487  071C                     	;# 
   488  071D                     	;# 
   489  071E                     	;# 
   490  0796                     	;# 
   491  0797                     	;# 
   492  0798                     	;# 
   493  0799                     	;# 
   494  079A                     	;# 
   495  079B                     	;# 
   496  080C                     	;# 
   497  080D                     	;# 
   498  080E                     	;# 
   499  080F                     	;# 
   500  0810                     	;# 
   501  0811                     	;# 
   502  0812                     	;# 
   503  0813                     	;# 
   504  0814                     	;# 
   505  081A                     	;# 
   506  081B                     	;# 
   507  081C                     	;# 
   508  081D                     	;# 
   509  081E                     	;# 
   510  081F                     	;# 
   511  088C                     	;# 
   512  088D                     	;# 
   513  088E                     	;# 
   514  088F                     	;# 
   515  0890                     	;# 
   516  0891                     	;# 
   517  0892                     	;# 
   518  0893                     	;# 
   519  0895                     	;# 
   520  0896                     	;# 
   521  0897                     	;# 
   522  0898                     	;# 
   523  0899                     	;# 
   524  089A                     	;# 
   525  089B                     	;# 
   526  090C                     	;# 
   527  090E                     	;# 
   528  090F                     	;# 
   529  091F                     	;# 
   530  091F                     	;# 
   531  098F                     	;# 
   532  098F                     	;# 
   533  0990                     	;# 
   534  0991                     	;# 
   535  0992                     	;# 
   536  0993                     	;# 
   537  0994                     	;# 
   538  0995                     	;# 
   539  0996                     	;# 
   540  0997                     	;# 
   541  0E0F                     	;# 
   542  0E10                     	;# 
   543  0E11                     	;# 
   544  0E12                     	;# 
   545  0E13                     	;# 
   546  0E14                     	;# 
   547  0E15                     	;# 
   548  0E16                     	;# 
   549  0E17                     	;# 
   550  0E18                     	;# 
   551  0E19                     	;# 
   552  0E1A                     	;# 
   553  0E1B                     	;# 
   554  0E1C                     	;# 
   555  0E1D                     	;# 
   556  0E1E                     	;# 
   557  0E1F                     	;# 
   558  0E20                     	;# 
   559  0E21                     	;# 
   560  0E22                     	;# 
   561  0E23                     	;# 
   562  0E24                     	;# 
   563  0E25                     	;# 
   564  0E26                     	;# 
   565  0E27                     	;# 
   566  0E28                     	;# 
   567  0E29                     	;# 
   568  0E2A                     	;# 
   569  0E2B                     	;# 
   570  0E2C                     	;# 
   571  0E2D                     	;# 
   572  0E2E                     	;# 
   573  0E2F                     	;# 
   574  0E30                     	;# 
   575  0E31                     	;# 
   576  0E32                     	;# 
   577  0E33                     	;# 
   578  0E34                     	;# 
   579  0E35                     	;# 
   580  0E36                     	;# 
   581  0E37                     	;# 
   582  0E8F                     	;# 
   583  0E90                     	;# 
   584  0E91                     	;# 
   585  0E92                     	;# 
   586  0E93                     	;# 
   587  0E94                     	;# 
   588  0E95                     	;# 
   589  0E96                     	;# 
   590  0E97                     	;# 
   591  0E9C                     	;# 
   592  0E9D                     	;# 
   593  0E9E                     	;# 
   594  0EA1                     	;# 
   595  0EA2                     	;# 
   596  0EA3                     	;# 
   597  0EA4                     	;# 
   598  0EA5                     	;# 
   599  0EA9                     	;# 
   600  0EAA                     	;# 
   601  0EAB                     	;# 
   602  0EAC                     	;# 
   603  0EB1                     	;# 
   604  0EB2                     	;# 
   605  0EB3                     	;# 
   606  0EB8                     	;# 
   607  0EB9                     	;# 
   608  0EBA                     	;# 
   609  0EBB                     	;# 
   610  0EBC                     	;# 
   611  0EBD                     	;# 
   612  0EBE                     	;# 
   613  0EC3                     	;# 
   614  0EC5                     	;# 
   615  0EC6                     	;# 
   616  0EC7                     	;# 
   617  0EC8                     	;# 
   618  0EC9                     	;# 
   619  0ECA                     	;# 
   620  0ECB                     	;# 
   621  0ECC                     	;# 
   622  0F10                     	;# 
   623  0F11                     	;# 
   624  0F12                     	;# 
   625  0F13                     	;# 
   626  0F14                     	;# 
   627  0F15                     	;# 
   628  0F16                     	;# 
   629  0F17                     	;# 
   630  0F18                     	;# 
   631  0F19                     	;# 
   632  0F1A                     	;# 
   633  0F1B                     	;# 
   634  0F1C                     	;# 
   635  0F1D                     	;# 
   636  0F1E                     	;# 
   637  0F1F                     	;# 
   638  0F20                     	;# 
   639  0F21                     	;# 
   640  0F22                     	;# 
   641  0F23                     	;# 
   642  0F24                     	;# 
   643  0F25                     	;# 
   644  0F26                     	;# 
   645  0F27                     	;# 
   646  0F28                     	;# 
   647  0F29                     	;# 
   648  0F2A                     	;# 
   649  0F2B                     	;# 
   650  0F2C                     	;# 
   651  0F2D                     	;# 
   652  0F2E                     	;# 
   653  0F2F                     	;# 
   654  0F30                     	;# 
   655  0F31                     	;# 
   656  0F32                     	;# 
   657  0F38                     	;# 
   658  0F39                     	;# 
   659  0F3A                     	;# 
   660  0F3B                     	;# 
   661  0F3C                     	;# 
   662  0F3D                     	;# 
   663  0F3E                     	;# 
   664  0F3F                     	;# 
   665  0F40                     	;# 
   666  0F41                     	;# 
   667  0F43                     	;# 
   668  0F44                     	;# 
   669  0F45                     	;# 
   670  0F46                     	;# 
   671  0F47                     	;# 
   672  0F48                     	;# 
   673  0F49                     	;# 
   674  0F4A                     	;# 
   675  0F4B                     	;# 
   676  0F4C                     	;# 
   677  0F4E                     	;# 
   678  0F4F                     	;# 
   679  0F50                     	;# 
   680  0F51                     	;# 
   681  0F52                     	;# 
   682  0F53                     	;# 
   683  0F54                     	;# 
   684  0F55                     	;# 
   685  0F56                     	;# 
   686  0F57                     	;# 
   687  0F59                     	;# 
   688  0F5A                     	;# 
   689  0F5B                     	;# 
   690  0F5C                     	;# 
   691  0F5D                     	;# 
   692  0F61                     	;# 
   693  0F62                     	;# 
   694  0F64                     	;# 
   695  0F65                     	;# 
   696  0F66                     	;# 
   697  0F67                     	;# 
   698  0F68                     	;# 
   699  0F69                     	;# 
   700  0F6A                     	;# 
   701  0F6B                     	;# 
   702  0F6C                     	;# 
   703  0F6D                     	;# 
   704  0FE4                     	;# 
   705  0FE5                     	;# 
   706  0FE6                     	;# 
   707  0FE7                     	;# 
   708  0FE8                     	;# 
   709  0FE9                     	;# 
   710  0FEA                     	;# 
   711  0FEB                     	;# 
   712  0FED                     	;# 
   713  0FEE                     	;# 
   714  0FEF                     	;# 
   715  0000                     	;# 
   716  0001                     	;# 
   717  0002                     	;# 
   718  0003                     	;# 
   719  0004                     	;# 
   720  0005                     	;# 
   721  0006                     	;# 
   722  0007                     	;# 
   723  0008                     	;# 
   724  0009                     	;# 
   725  000A                     	;# 
   726  000B                     	;# 
   727  000C                     	;# 
   728  000D                     	;# 
   729  000E                     	;# 
   730  000F                     	;# 
   731  0010                     	;# 
   732  0011                     	;# 
   733  0012                     	;# 
   734  0013                     	;# 
   735  0014                     	;# 
   736  0015                     	;# 
   737  0016                     	;# 
   738  0017                     	;# 
   739  0018                     	;# 
   740  0019                     	;# 
   741  001A                     	;# 
   742  001C                     	;# 
   743  001C                     	;# 
   744  001D                     	;# 
   745  001D                     	;# 
   746  001E                     	;# 
   747  001F                     	;# 
   748  008C                     	;# 
   749  008C                     	;# 
   750  008D                     	;# 
   751  008E                     	;# 
   752  008E                     	;# 
   753  008F                     	;# 
   754  0090                     	;# 
   755  0090                     	;# 
   756  0091                     	;# 
   757  0093                     	;# 
   758  0094                     	;# 
   759  0095                     	;# 
   760  0096                     	;# 
   761  0097                     	;# 
   762  0098                     	;# 
   763  0099                     	;# 
   764  009A                     	;# 
   765  009B                     	;# 
   766  009C                     	;# 
   767  009D                     	;# 
   768  009E                     	;# 
   769  010C                     	;# 
   770  010D                     	;# 
   771  010E                     	;# 
   772  010E                     	;# 
   773  010F                     	;# 
   774  0110                     	;# 
   775  0110                     	;# 
   776  0111                     	;# 
   777  0112                     	;# 
   778  0112                     	;# 
   779  0113                     	;# 
   780  0114                     	;# 
   781  0114                     	;# 
   782  0115                     	;# 
   783  0116                     	;# 
   784  0116                     	;# 
   785  0117                     	;# 
   786  0119                     	;# 
   787  0119                     	;# 
   788  0119                     	;# 
   789  011A                     	;# 
   790  011A                     	;# 
   791  011A                     	;# 
   792  011B                     	;# 
   793  011B                     	;# 
   794  011B                     	;# 
   795  011B                     	;# 
   796  011B                     	;# 
   797  011C                     	;# 
   798  011C                     	;# 
   799  011C                     	;# 
   800  011D                     	;# 
   801  011D                     	;# 
   802  011D                     	;# 
   803  011E                     	;# 
   804  011E                     	;# 
   805  011E                     	;# 
   806  011F                     	;# 
   807  011F                     	;# 
   808  011F                     	;# 
   809  011F                     	;# 
   810  011F                     	;# 
   811  018C                     	;# 
   812  018D                     	;# 
   813  018E                     	;# 
   814  018F                     	;# 
   815  0190                     	;# 
   816  0191                     	;# 
   817  0192                     	;# 
   818  0196                     	;# 
   819  0197                     	;# 
   820  0198                     	;# 
   821  0199                     	;# 
   822  019A                     	;# 
   823  019B                     	;# 
   824  019C                     	;# 
   825  020C                     	;# 
   826  020C                     	;# 
   827  020D                     	;# 
   828  020E                     	;# 
   829  020F                     	;# 
   830  020F                     	;# 
   831  0210                     	;# 
   832  0210                     	;# 
   833  0211                     	;# 
   834  0211                     	;# 
   835  0212                     	;# 
   836  0212                     	;# 
   837  0213                     	;# 
   838  0214                     	;# 
   839  0215                     	;# 
   840  0215                     	;# 
   841  0216                     	;# 
   842  0216                     	;# 
   843  0217                     	;# 
   844  0217                     	;# 
   845  0218                     	;# 
   846  0218                     	;# 
   847  0219                     	;# 
   848  021A                     	;# 
   849  021B                     	;# 
   850  021B                     	;# 
   851  021C                     	;# 
   852  021C                     	;# 
   853  021D                     	;# 
   854  021D                     	;# 
   855  021E                     	;# 
   856  021F                     	;# 
   857  028C                     	;# 
   858  028C                     	;# 
   859  028D                     	;# 
   860  028D                     	;# 
   861  028E                     	;# 
   862  028F                     	;# 
   863  0290                     	;# 
   864  0290                     	;# 
   865  0291                     	;# 
   866  0292                     	;# 
   867  0292                     	;# 
   868  0293                     	;# 
   869  0293                     	;# 
   870  0294                     	;# 
   871  0295                     	;# 
   872  0296                     	;# 
   873  0296                     	;# 
   874  0297                     	;# 
   875  0298                     	;# 
   876  0298                     	;# 
   877  0299                     	;# 
   878  0299                     	;# 
   879  029A                     	;# 
   880  029B                     	;# 
   881  029C                     	;# 
   882  029C                     	;# 
   883  029D                     	;# 
   884  030C                     	;# 
   885  030C                     	;# 
   886  030D                     	;# 
   887  030E                     	;# 
   888  030F                     	;# 
   889  0310                     	;# 
   890  0310                     	;# 
   891  0311                     	;# 
   892  0312                     	;# 
   893  0313                     	;# 
   894  0314                     	;# 
   895  0314                     	;# 
   896  0315                     	;# 
   897  0316                     	;# 
   898  0317                     	;# 
   899  0318                     	;# 
   900  0318                     	;# 
   901  0319                     	;# 
   902  031A                     	;# 
   903  031B                     	;# 
   904  031C                     	;# 
   905  031C                     	;# 
   906  031D                     	;# 
   907  031E                     	;# 
   908  031F                     	;# 
   909  038C                     	;# 
   910  038C                     	;# 
   911  038D                     	;# 
   912  038E                     	;# 
   913  0390                     	;# 
   914  0390                     	;# 
   915  0391                     	;# 
   916  0392                     	;# 
   917  040C                     	;# 
   918  040D                     	;# 
   919  040E                     	;# 
   920  040F                     	;# 
   921  0410                     	;# 
   922  0411                     	;# 
   923  0416                     	;# 
   924  0416                     	;# 
   925  0417                     	;# 
   926  0418                     	;# 
   927  0418                     	;# 
   928  0419                     	;# 
   929  041A                     	;# 
   930  041A                     	;# 
   931  041B                     	;# 
   932  041C                     	;# 
   933  041C                     	;# 
   934  041D                     	;# 
   935  041E                     	;# 
   936  041F                     	;# 
   937  048C                     	;# 
   938  048C                     	;# 
   939  048D                     	;# 
   940  048E                     	;# 
   941  048F                     	;# 
   942  048F                     	;# 
   943  0490                     	;# 
   944  0491                     	;# 
   945  0492                     	;# 
   946  0492                     	;# 
   947  0493                     	;# 
   948  0494                     	;# 
   949  0495                     	;# 
   950  0495                     	;# 
   951  0496                     	;# 
   952  0497                     	;# 
   953  0498                     	;# 
   954  0499                     	;# 
   955  049A                     	;# 
   956  049B                     	;# 
   957  049C                     	;# 
   958  049D                     	;# 
   959  050C                     	;# 
   960  050C                     	;# 
   961  050D                     	;# 
   962  050E                     	;# 
   963  050F                     	;# 
   964  050F                     	;# 
   965  0510                     	;# 
   966  0511                     	;# 
   967  0512                     	;# 
   968  0512                     	;# 
   969  0513                     	;# 
   970  0514                     	;# 
   971  0515                     	;# 
   972  0515                     	;# 
   973  0516                     	;# 
   974  0517                     	;# 
   975  0518                     	;# 
   976  0519                     	;# 
   977  051A                     	;# 
   978  051B                     	;# 
   979  051C                     	;# 
   980  051D                     	;# 
   981  058C                     	;# 
   982  058C                     	;# 
   983  058D                     	;# 
   984  058E                     	;# 
   985  058F                     	;# 
   986  058F                     	;# 
   987  0590                     	;# 
   988  0591                     	;# 
   989  0592                     	;# 
   990  0593                     	;# 
   991  060C                     	;# 
   992  060D                     	;# 
   993  060E                     	;# 
   994  060F                     	;# 
   995  0610                     	;# 
   996  0611                     	;# 
   997  0612                     	;# 
   998  0613                     	;# 
   999  0614                     	;# 
  1000  0616                     	;# 
  1001  0617                     	;# 
  1002  0618                     	;# 
  1003  0619                     	;# 
  1004  061A                     	;# 
  1005  061B                     	;# 
  1006  061C                     	;# 
  1007  061D                     	;# 
  1008  061E                     	;# 
  1009  068C                     	;# 
  1010  068D                     	;# 
  1011  068E                     	;# 
  1012  068F                     	;# 
  1013  0690                     	;# 
  1014  0691                     	;# 
  1015  0692                     	;# 
  1016  0693                     	;# 
  1017  0694                     	;# 
  1018  070C                     	;# 
  1019  070D                     	;# 
  1020  070E                     	;# 
  1021  070F                     	;# 
  1022  0710                     	;# 
  1023  0711                     	;# 
  1024  0712                     	;# 
  1025  0713                     	;# 
  1026  0714                     	;# 
  1027  0716                     	;# 
  1028  0717                     	;# 
  1029  0718                     	;# 
  1030  0719                     	;# 
  1031  071A                     	;# 
  1032  071B                     	;# 
  1033  071C                     	;# 
  1034  071D                     	;# 
  1035  071E                     	;# 
  1036  0796                     	;# 
  1037  0797                     	;# 
  1038  0798                     	;# 
  1039  0799                     	;# 
  1040  079A                     	;# 
  1041  079B                     	;# 
  1042  080C                     	;# 
  1043  080D                     	;# 
  1044  080E                     	;# 
  1045  080F                     	;# 
  1046  0810                     	;# 
  1047  0811                     	;# 
  1048  0812                     	;# 
  1049  0813                     	;# 
  1050  0814                     	;# 
  1051  081A                     	;# 
  1052  081B                     	;# 
  1053  081C                     	;# 
  1054  081D                     	;# 
  1055  081E                     	;# 
  1056  081F                     	;# 
  1057  088C                     	;# 
  1058  088D                     	;# 
  1059  088E                     	;# 
  1060  088F                     	;# 
  1061  0890                     	;# 
  1062  0891                     	;# 
  1063  0892                     	;# 
  1064  0893                     	;# 
  1065  0895                     	;# 
  1066  0896                     	;# 
  1067  0897                     	;# 
  1068  0898                     	;# 
  1069  0899                     	;# 
  1070  089A                     	;# 
  1071  089B                     	;# 
  1072  090C                     	;# 
  1073  090E                     	;# 
  1074  090F                     	;# 
  1075  091F                     	;# 
  1076  091F                     	;# 
  1077  098F                     	;# 
  1078  098F                     	;# 
  1079  0990                     	;# 
  1080  0991                     	;# 
  1081  0992                     	;# 
  1082  0993                     	;# 
  1083  0994                     	;# 
  1084  0995                     	;# 
  1085  0996                     	;# 
  1086  0997                     	;# 
  1087  0E0F                     	;# 
  1088  0E10                     	;# 
  1089  0E11                     	;# 
  1090  0E12                     	;# 
  1091  0E13                     	;# 
  1092  0E14                     	;# 
  1093  0E15                     	;# 
  1094  0E16                     	;# 
  1095  0E17                     	;# 
  1096  0E18                     	;# 
  1097  0E19                     	;# 
  1098  0E1A                     	;# 
  1099  0E1B                     	;# 
  1100  0E1C                     	;# 
  1101  0E1D                     	;# 
  1102  0E1E                     	;# 
  1103  0E1F                     	;# 
  1104  0E20                     	;# 
  1105  0E21                     	;# 
  1106  0E22                     	;# 
  1107  0E23                     	;# 
  1108  0E24                     	;# 
  1109  0E25                     	;# 
  1110  0E26                     	;# 
  1111  0E27                     	;# 
  1112  0E28                     	;# 
  1113  0E29                     	;# 
  1114  0E2A                     	;# 
  1115  0E2B                     	;# 
  1116  0E2C                     	;# 
  1117  0E2D                     	;# 
  1118  0E2E                     	;# 
  1119  0E2F                     	;# 
  1120  0E30                     	;# 
  1121  0E31                     	;# 
  1122  0E32                     	;# 
  1123  0E33                     	;# 
  1124  0E34                     	;# 
  1125  0E35                     	;# 
  1126  0E36                     	;# 
  1127  0E37                     	;# 
  1128  0E8F                     	;# 
  1129  0E90                     	;# 
  1130  0E91                     	;# 
  1131  0E92                     	;# 
  1132  0E93                     	;# 
  1133  0E94                     	;# 
  1134  0E95                     	;# 
  1135  0E96                     	;# 
  1136  0E97                     	;# 
  1137  0E9C                     	;# 
  1138  0E9D                     	;# 
  1139  0E9E                     	;# 
  1140  0EA1                     	;# 
  1141  0EA2                     	;# 
  1142  0EA3                     	;# 
  1143  0EA4                     	;# 
  1144  0EA5                     	;# 
  1145  0EA9                     	;# 
  1146  0EAA                     	;# 
  1147  0EAB                     	;# 
  1148  0EAC                     	;# 
  1149  0EB1                     	;# 
  1150  0EB2                     	;# 
  1151  0EB3                     	;# 
  1152  0EB8                     	;# 
  1153  0EB9                     	;# 
  1154  0EBA                     	;# 
  1155  0EBB                     	;# 
  1156  0EBC                     	;# 
  1157  0EBD                     	;# 
  1158  0EBE                     	;# 
  1159  0EC3                     	;# 
  1160  0EC5                     	;# 
  1161  0EC6                     	;# 
  1162  0EC7                     	;# 
  1163  0EC8                     	;# 
  1164  0EC9                     	;# 
  1165  0ECA                     	;# 
  1166  0ECB                     	;# 
  1167  0ECC                     	;# 
  1168  0F10                     	;# 
  1169  0F11                     	;# 
  1170  0F12                     	;# 
  1171  0F13                     	;# 
  1172  0F14                     	;# 
  1173  0F15                     	;# 
  1174  0F16                     	;# 
  1175  0F17                     	;# 
  1176  0F18                     	;# 
  1177  0F19                     	;# 
  1178  0F1A                     	;# 
  1179  0F1B                     	;# 
  1180  0F1C                     	;# 
  1181  0F1D                     	;# 
  1182  0F1E                     	;# 
  1183  0F1F                     	;# 
  1184  0F20                     	;# 
  1185  0F21                     	;# 
  1186  0F22                     	;# 
  1187  0F23                     	;# 
  1188  0F24                     	;# 
  1189  0F25                     	;# 
  1190  0F26                     	;# 
  1191  0F27                     	;# 
  1192  0F28                     	;# 
  1193  0F29                     	;# 
  1194  0F2A                     	;# 
  1195  0F2B                     	;# 
  1196  0F2C                     	;# 
  1197  0F2D                     	;# 
  1198  0F2E                     	;# 
  1199  0F2F                     	;# 
  1200  0F30                     	;# 
  1201  0F31                     	;# 
  1202  0F32                     	;# 
  1203  0F38                     	;# 
  1204  0F39                     	;# 
  1205  0F3A                     	;# 
  1206  0F3B                     	;# 
  1207  0F3C                     	;# 
  1208  0F3D                     	;# 
  1209  0F3E                     	;# 
  1210  0F3F                     	;# 
  1211  0F40                     	;# 
  1212  0F41                     	;# 
  1213  0F43                     	;# 
  1214  0F44                     	;# 
  1215  0F45                     	;# 
  1216  0F46                     	;# 
  1217  0F47                     	;# 
  1218  0F48                     	;# 
  1219  0F49                     	;# 
  1220  0F4A                     	;# 
  1221  0F4B                     	;# 
  1222  0F4C                     	;# 
  1223  0F4E                     	;# 
  1224  0F4F                     	;# 
  1225  0F50                     	;# 
  1226  0F51                     	;# 
  1227  0F52                     	;# 
  1228  0F53                     	;# 
  1229  0F54                     	;# 
  1230  0F55                     	;# 
  1231  0F56                     	;# 
  1232  0F57                     	;# 
  1233  0F59                     	;# 
  1234  0F5A                     	;# 
  1235  0F5B                     	;# 
  1236  0F5C                     	;# 
  1237  0F5D                     	;# 
  1238  0F61                     	;# 
  1239  0F62                     	;# 
  1240  0F64                     	;# 
  1241  0F65                     	;# 
  1242  0F66                     	;# 
  1243  0F67                     	;# 
  1244  0F68                     	;# 
  1245  0F69                     	;# 
  1246  0F6A                     	;# 
  1247  0F6B                     	;# 
  1248  0F6C                     	;# 
  1249  0F6D                     	;# 
  1250  0FE4                     	;# 
  1251  0FE5                     	;# 
  1252  0FE6                     	;# 
  1253  0FE7                     	;# 
  1254  0FE8                     	;# 
  1255  0FE9                     	;# 
  1256  0FEA                     	;# 
  1257  0FEB                     	;# 
  1258  0FED                     	;# 
  1259  0FEE                     	;# 
  1260  0FEF                     	;# 
  1261  0000                     	;# 
  1262  0001                     	;# 
  1263  0002                     	;# 
  1264  0003                     	;# 
  1265  0004                     	;# 
  1266  0005                     	;# 
  1267  0006                     	;# 
  1268  0007                     	;# 
  1269  0008                     	;# 
  1270  0009                     	;# 
  1271  000A                     	;# 
  1272  000B                     	;# 
  1273  000C                     	;# 
  1274  000D                     	;# 
  1275  000E                     	;# 
  1276  000F                     	;# 
  1277  0010                     	;# 
  1278  0011                     	;# 
  1279  0012                     	;# 
  1280  0013                     	;# 
  1281  0014                     	;# 
  1282  0015                     	;# 
  1283  0016                     	;# 
  1284  0017                     	;# 
  1285  0018                     	;# 
  1286  0019                     	;# 
  1287  001A                     	;# 
  1288  001C                     	;# 
  1289  001C                     	;# 
  1290  001D                     	;# 
  1291  001D                     	;# 
  1292  001E                     	;# 
  1293  001F                     	;# 
  1294  008C                     	;# 
  1295  008C                     	;# 
  1296  008D                     	;# 
  1297  008E                     	;# 
  1298  008E                     	;# 
  1299  008F                     	;# 
  1300  0090                     	;# 
  1301  0090                     	;# 
  1302  0091                     	;# 
  1303  0093                     	;# 
  1304  0094                     	;# 
  1305  0095                     	;# 
  1306  0096                     	;# 
  1307  0097                     	;# 
  1308  0098                     	;# 
  1309  0099                     	;# 
  1310  009A                     	;# 
  1311  009B                     	;# 
  1312  009C                     	;# 
  1313  009D                     	;# 
  1314  009E                     	;# 
  1315  010C                     	;# 
  1316  010D                     	;# 
  1317  010E                     	;# 
  1318  010E                     	;# 
  1319  010F                     	;# 
  1320  0110                     	;# 
  1321  0110                     	;# 
  1322  0111                     	;# 
  1323  0112                     	;# 
  1324  0112                     	;# 
  1325  0113                     	;# 
  1326  0114                     	;# 
  1327  0114                     	;# 
  1328  0115                     	;# 
  1329  0116                     	;# 
  1330  0116                     	;# 
  1331  0117                     	;# 
  1332  0119                     	;# 
  1333  0119                     	;# 
  1334  0119                     	;# 
  1335  011A                     	;# 
  1336  011A                     	;# 
  1337  011A                     	;# 
  1338  011B                     	;# 
  1339  011B                     	;# 
  1340  011B                     	;# 
  1341  011B                     	;# 
  1342  011B                     	;# 
  1343  011C                     	;# 
  1344  011C                     	;# 
  1345  011C                     	;# 
  1346  011D                     	;# 
  1347  011D                     	;# 
  1348  011D                     	;# 
  1349  011E                     	;# 
  1350  011E                     	;# 
  1351  011E                     	;# 
  1352  011F                     	;# 
  1353  011F                     	;# 
  1354  011F                     	;# 
  1355  011F                     	;# 
  1356  011F                     	;# 
  1357  018C                     	;# 
  1358  018D                     	;# 
  1359  018E                     	;# 
  1360  018F                     	;# 
  1361  0190                     	;# 
  1362  0191                     	;# 
  1363  0192                     	;# 
  1364  0196                     	;# 
  1365  0197                     	;# 
  1366  0198                     	;# 
  1367  0199                     	;# 
  1368  019A                     	;# 
  1369  019B                     	;# 
  1370  019C                     	;# 
  1371  020C                     	;# 
  1372  020C                     	;# 
  1373  020D                     	;# 
  1374  020E                     	;# 
  1375  020F                     	;# 
  1376  020F                     	;# 
  1377  0210                     	;# 
  1378  0210                     	;# 
  1379  0211                     	;# 
  1380  0211                     	;# 
  1381  0212                     	;# 
  1382  0212                     	;# 
  1383  0213                     	;# 
  1384  0214                     	;# 
  1385  0215                     	;# 
  1386  0215                     	;# 
  1387  0216                     	;# 
  1388  0216                     	;# 
  1389  0217                     	;# 
  1390  0217                     	;# 
  1391  0218                     	;# 
  1392  0218                     	;# 
  1393  0219                     	;# 
  1394  021A                     	;# 
  1395  021B                     	;# 
  1396  021B                     	;# 
  1397  021C                     	;# 
  1398  021C                     	;# 
  1399  021D                     	;# 
  1400  021D                     	;# 
  1401  021E                     	;# 
  1402  021F                     	;# 
  1403  028C                     	;# 
  1404  028C                     	;# 
  1405  028D                     	;# 
  1406  028D                     	;# 
  1407  028E                     	;# 
  1408  028F                     	;# 
  1409  0290                     	;# 
  1410  0290                     	;# 
  1411  0291                     	;# 
  1412  0292                     	;# 
  1413  0292                     	;# 
  1414  0293                     	;# 
  1415  0293                     	;# 
  1416  0294                     	;# 
  1417  0295                     	;# 
  1418  0296                     	;# 
  1419  0296                     	;# 
  1420  0297                     	;# 
  1421  0298                     	;# 
  1422  0298                     	;# 
  1423  0299                     	;# 
  1424  0299                     	;# 
  1425  029A                     	;# 
  1426  029B                     	;# 
  1427  029C                     	;# 
  1428  029C                     	;# 
  1429  029D                     	;# 
  1430  030C                     	;# 
  1431  030C                     	;# 
  1432  030D                     	;# 
  1433  030E                     	;# 
  1434  030F                     	;# 
  1435  0310                     	;# 
  1436  0310                     	;# 
  1437  0311                     	;# 
  1438  0312                     	;# 
  1439  0313                     	;# 
  1440  0314                     	;# 
  1441  0314                     	;# 
  1442  0315                     	;# 
  1443  0316                     	;# 
  1444  0317                     	;# 
  1445  0318                     	;# 
  1446  0318                     	;# 
  1447  0319                     	;# 
  1448  031A                     	;# 
  1449  031B                     	;# 
  1450  031C                     	;# 
  1451  031C                     	;# 
  1452  031D                     	;# 
  1453  031E                     	;# 
  1454  031F                     	;# 
  1455  038C                     	;# 
  1456  038C                     	;# 
  1457  038D                     	;# 
  1458  038E                     	;# 
  1459  0390                     	;# 
  1460  0390                     	;# 
  1461  0391                     	;# 
  1462  0392                     	;# 
  1463  040C                     	;# 
  1464  040D                     	;# 
  1465  040E                     	;# 
  1466  040F                     	;# 
  1467  0410                     	;# 
  1468  0411                     	;# 
  1469  0416                     	;# 
  1470  0416                     	;# 
  1471  0417                     	;# 
  1472  0418                     	;# 
  1473  0418                     	;# 
  1474  0419                     	;# 
  1475  041A                     	;# 
  1476  041A                     	;# 
  1477  041B                     	;# 
  1478  041C                     	;# 
  1479  041C                     	;# 
  1480  041D                     	;# 
  1481  041E                     	;# 
  1482  041F                     	;# 
  1483  048C                     	;# 
  1484  048C                     	;# 
  1485  048D                     	;# 
  1486  048E                     	;# 
  1487  048F                     	;# 
  1488  048F                     	;# 
  1489  0490                     	;# 
  1490  0491                     	;# 
  1491  0492                     	;# 
  1492  0492                     	;# 
  1493  0493                     	;# 
  1494  0494                     	;# 
  1495  0495                     	;# 
  1496  0495                     	;# 
  1497  0496                     	;# 
  1498  0497                     	;# 
  1499  0498                     	;# 
  1500  0499                     	;# 
  1501  049A                     	;# 
  1502  049B                     	;# 
  1503  049C                     	;# 
  1504  049D                     	;# 
  1505  050C                     	;# 
  1506  050C                     	;# 
  1507  050D                     	;# 
  1508  050E                     	;# 
  1509  050F                     	;# 
  1510  050F                     	;# 
  1511  0510                     	;# 
  1512  0511                     	;# 
  1513  0512                     	;# 
  1514  0512                     	;# 
  1515  0513                     	;# 
  1516  0514                     	;# 
  1517  0515                     	;# 
  1518  0515                     	;# 
  1519  0516                     	;# 
  1520  0517                     	;# 
  1521  0518                     	;# 
  1522  0519                     	;# 
  1523  051A                     	;# 
  1524  051B                     	;# 
  1525  051C                     	;# 
  1526  051D                     	;# 
  1527  058C                     	;# 
  1528  058C                     	;# 
  1529  058D                     	;# 
  1530  058E                     	;# 
  1531  058F                     	;# 
  1532  058F                     	;# 
  1533  0590                     	;# 
  1534  0591                     	;# 
  1535  0592                     	;# 
  1536  0593                     	;# 
  1537  060C                     	;# 
  1538  060D                     	;# 
  1539  060E                     	;# 
  1540  060F                     	;# 
  1541  0610                     	;# 
  1542  0611                     	;# 
  1543  0612                     	;# 
  1544  0613                     	;# 
  1545  0614                     	;# 
  1546  0616                     	;# 
  1547  0617                     	;# 
  1548  0618                     	;# 
  1549  0619                     	;# 
  1550  061A                     	;# 
  1551  061B                     	;# 
  1552  061C                     	;# 
  1553  061D                     	;# 
  1554  061E                     	;# 
  1555  068C                     	;# 
  1556  068D                     	;# 
  1557  068E                     	;# 
  1558  068F                     	;# 
  1559  0690                     	;# 
  1560  0691                     	;# 
  1561  0692                     	;# 
  1562  0693                     	;# 
  1563  0694                     	;# 
  1564  070C                     	;# 
  1565  070D                     	;# 
  1566  070E                     	;# 
  1567  070F                     	;# 
  1568  0710                     	;# 
  1569  0711                     	;# 
  1570  0712                     	;# 
  1571  0713                     	;# 
  1572  0714                     	;# 
  1573  0716                     	;# 
  1574  0717                     	;# 
  1575  0718                     	;# 
  1576  0719                     	;# 
  1577  071A                     	;# 
  1578  071B                     	;# 
  1579  071C                     	;# 
  1580  071D                     	;# 
  1581  071E                     	;# 
  1582  0796                     	;# 
  1583  0797                     	;# 
  1584  0798                     	;# 
  1585  0799                     	;# 
  1586  079A                     	;# 
  1587  079B                     	;# 
  1588  080C                     	;# 
  1589  080D                     	;# 
  1590  080E                     	;# 
  1591  080F                     	;# 
  1592  0810                     	;# 
  1593  0811                     	;# 
  1594  0812                     	;# 
  1595  0813                     	;# 
  1596  0814                     	;# 
  1597  081A                     	;# 
  1598  081B                     	;# 
  1599  081C                     	;# 
  1600  081D                     	;# 
  1601  081E                     	;# 
  1602  081F                     	;# 
  1603  088C                     	;# 
  1604  088D                     	;# 
  1605  088E                     	;# 
  1606  088F                     	;# 
  1607  0890                     	;# 
  1608  0891                     	;# 
  1609  0892                     	;# 
  1610  0893                     	;# 
  1611  0895                     	;# 
  1612  0896                     	;# 
  1613  0897                     	;# 
  1614  0898                     	;# 
  1615  0899                     	;# 
  1616  089A                     	;# 
  1617  089B                     	;# 
  1618  090C                     	;# 
  1619  090E                     	;# 
  1620  090F                     	;# 
  1621  091F                     	;# 
  1622  091F                     	;# 
  1623  098F                     	;# 
  1624  098F                     	;# 
  1625  0990                     	;# 
  1626  0991                     	;# 
  1627  0992                     	;# 
  1628  0993                     	;# 
  1629  0994                     	;# 
  1630  0995                     	;# 
  1631  0996                     	;# 
  1632  0997                     	;# 
  1633  0E0F                     	;# 
  1634  0E10                     	;# 
  1635  0E11                     	;# 
  1636  0E12                     	;# 
  1637  0E13                     	;# 
  1638  0E14                     	;# 
  1639  0E15                     	;# 
  1640  0E16                     	;# 
  1641  0E17                     	;# 
  1642  0E18                     	;# 
  1643  0E19                     	;# 
  1644  0E1A                     	;# 
  1645  0E1B                     	;# 
  1646  0E1C                     	;# 
  1647  0E1D                     	;# 
  1648  0E1E                     	;# 
  1649  0E1F                     	;# 
  1650  0E20                     	;# 
  1651  0E21                     	;# 
  1652  0E22                     	;# 
  1653  0E23                     	;# 
  1654  0E24                     	;# 
  1655  0E25                     	;# 
  1656  0E26                     	;# 
  1657  0E27                     	;# 
  1658  0E28                     	;# 
  1659  0E29                     	;# 
  1660  0E2A                     	;# 
  1661  0E2B                     	;# 
  1662  0E2C                     	;# 
  1663  0E2D                     	;# 
  1664  0E2E                     	;# 
  1665  0E2F                     	;# 
  1666  0E30                     	;# 
  1667  0E31                     	;# 
  1668  0E32                     	;# 
  1669  0E33                     	;# 
  1670  0E34                     	;# 
  1671  0E35                     	;# 
  1672  0E36                     	;# 
  1673  0E37                     	;# 
  1674  0E8F                     	;# 
  1675  0E90                     	;# 
  1676  0E91                     	;# 
  1677  0E92                     	;# 
  1678  0E93                     	;# 
  1679  0E94                     	;# 
  1680  0E95                     	;# 
  1681  0E96                     	;# 
  1682  0E97                     	;# 
  1683  0E9C                     	;# 
  1684  0E9D                     	;# 
  1685  0E9E                     	;# 
  1686  0EA1                     	;# 
  1687  0EA2                     	;# 
  1688  0EA3                     	;# 
  1689  0EA4                     	;# 
  1690  0EA5                     	;# 
  1691  0EA9                     	;# 
  1692  0EAA                     	;# 
  1693  0EAB                     	;# 
  1694  0EAC                     	;# 
  1695  0EB1                     	;# 
  1696  0EB2                     	;# 
  1697  0EB3                     	;# 
  1698  0EB8                     	;# 
  1699  0EB9                     	;# 
  1700  0EBA                     	;# 
  1701  0EBB                     	;# 
  1702  0EBC                     	;# 
  1703  0EBD                     	;# 
  1704  0EBE                     	;# 
  1705  0EC3                     	;# 
  1706  0EC5                     	;# 
  1707  0EC6                     	;# 
  1708  0EC7                     	;# 
  1709  0EC8                     	;# 
  1710  0EC9                     	;# 
  1711  0ECA                     	;# 
  1712  0ECB                     	;# 
  1713  0ECC                     	;# 
  1714  0F10                     	;# 
  1715  0F11                     	;# 
  1716  0F12                     	;# 
  1717  0F13                     	;# 
  1718  0F14                     	;# 
  1719  0F15                     	;# 
  1720  0F16                     	;# 
  1721  0F17                     	;# 
  1722  0F18                     	;# 
  1723  0F19                     	;# 
  1724  0F1A                     	;# 
  1725  0F1B                     	;# 
  1726  0F1C                     	;# 
  1727  0F1D                     	;# 
  1728  0F1E                     	;# 
  1729  0F1F                     	;# 
  1730  0F20                     	;# 
  1731  0F21                     	;# 
  1732  0F22                     	;# 
  1733  0F23                     	;# 
  1734  0F24                     	;# 
  1735  0F25                     	;# 
  1736  0F26                     	;# 
  1737  0F27                     	;# 
  1738  0F28                     	;# 
  1739  0F29                     	;# 
  1740  0F2A                     	;# 
  1741  0F2B                     	;# 
  1742  0F2C                     	;# 
  1743  0F2D                     	;# 
  1744  0F2E                     	;# 
  1745  0F2F                     	;# 
  1746  0F30                     	;# 
  1747  0F31                     	;# 
  1748  0F32                     	;# 
  1749  0F38                     	;# 
  1750  0F39                     	;# 
  1751  0F3A                     	;# 
  1752  0F3B                     	;# 
  1753  0F3C                     	;# 
  1754  0F3D                     	;# 
  1755  0F3E                     	;# 
  1756  0F3F                     	;# 
  1757  0F40                     	;# 
  1758  0F41                     	;# 
  1759  0F43                     	;# 
  1760  0F44                     	;# 
  1761  0F45                     	;# 
  1762  0F46                     	;# 
  1763  0F47                     	;# 
  1764  0F48                     	;# 
  1765  0F49                     	;# 
  1766  0F4A                     	;# 
  1767  0F4B                     	;# 
  1768  0F4C                     	;# 
  1769  0F4E                     	;# 
  1770  0F4F                     	;# 
  1771  0F50                     	;# 
  1772  0F51                     	;# 
  1773  0F52                     	;# 
  1774  0F53                     	;# 
  1775  0F54                     	;# 
  1776  0F55                     	;# 
  1777  0F56                     	;# 
  1778  0F57                     	;# 
  1779  0F59                     	;# 
  1780  0F5A                     	;# 
  1781  0F5B                     	;# 
  1782  0F5C                     	;# 
  1783  0F5D                     	;# 
  1784  0F61                     	;# 
  1785  0F62                     	;# 
  1786  0F64                     	;# 
  1787  0F65                     	;# 
  1788  0F66                     	;# 
  1789  0F67                     	;# 
  1790  0F68                     	;# 
  1791  0F69                     	;# 
  1792  0F6A                     	;# 
  1793  0F6B                     	;# 
  1794  0F6C                     	;# 
  1795  0F6D                     	;# 
  1796  0FE4                     	;# 
  1797  0FE5                     	;# 
  1798  0FE6                     	;# 
  1799  0FE7                     	;# 
  1800  0FE8                     	;# 
  1801  0FE9                     	;# 
  1802  0FEA                     	;# 
  1803  0FEB                     	;# 
  1804  0FED                     	;# 
  1805  0FEE                     	;# 
  1806  0FEF                     	;# 
  1807  0000                     	;# 
  1808  0001                     	;# 
  1809  0002                     	;# 
  1810  0003                     	;# 
  1811  0004                     	;# 
  1812  0005                     	;# 
  1813  0006                     	;# 
  1814  0007                     	;# 
  1815  0008                     	;# 
  1816  0009                     	;# 
  1817  000A                     	;# 
  1818  000B                     	;# 
  1819  000C                     	;# 
  1820  000D                     	;# 
  1821  000E                     	;# 
  1822  000F                     	;# 
  1823  0010                     	;# 
  1824  0011                     	;# 
  1825  0012                     	;# 
  1826  0013                     	;# 
  1827  0014                     	;# 
  1828  0015                     	;# 
  1829  0016                     	;# 
  1830  0017                     	;# 
  1831  0018                     	;# 
  1832  0019                     	;# 
  1833  001A                     	;# 
  1834  001C                     	;# 
  1835  001C                     	;# 
  1836  001D                     	;# 
  1837  001D                     	;# 
  1838  001E                     	;# 
  1839  001F                     	;# 
  1840  008C                     	;# 
  1841  008C                     	;# 
  1842  008D                     	;# 
  1843  008E                     	;# 
  1844  008E                     	;# 
  1845  008F                     	;# 
  1846  0090                     	;# 
  1847  0090                     	;# 
  1848  0091                     	;# 
  1849  0093                     	;# 
  1850  0094                     	;# 
  1851  0095                     	;# 
  1852  0096                     	;# 
  1853  0097                     	;# 
  1854  0098                     	;# 
  1855  0099                     	;# 
  1856  009A                     	;# 
  1857  009B                     	;# 
  1858  009C                     	;# 
  1859  009D                     	;# 
  1860  009E                     	;# 
  1861  010C                     	;# 
  1862  010D                     	;# 
  1863  010E                     	;# 
  1864  010E                     	;# 
  1865  010F                     	;# 
  1866  0110                     	;# 
  1867  0110                     	;# 
  1868  0111                     	;# 
  1869  0112                     	;# 
  1870  0112                     	;# 
  1871  0113                     	;# 
  1872  0114                     	;# 
  1873  0114                     	;# 
  1874  0115                     	;# 
  1875  0116                     	;# 
  1876  0116                     	;# 
  1877  0117                     	;# 
  1878  0119                     	;# 
  1879  0119                     	;# 
  1880  0119                     	;# 
  1881  011A                     	;# 
  1882  011A                     	;# 
  1883  011A                     	;# 
  1884  011B                     	;# 
  1885  011B                     	;# 
  1886  011B                     	;# 
  1887  011B                     	;# 
  1888  011B                     	;# 
  1889  011C                     	;# 
  1890  011C                     	;# 
  1891  011C                     	;# 
  1892  011D                     	;# 
  1893  011D                     	;# 
  1894  011D                     	;# 
  1895  011E                     	;# 
  1896  011E                     	;# 
  1897  011E                     	;# 
  1898  011F                     	;# 
  1899  011F                     	;# 
  1900  011F                     	;# 
  1901  011F                     	;# 
  1902  011F                     	;# 
  1903  018C                     	;# 
  1904  018D                     	;# 
  1905  018E                     	;# 
  1906  018F                     	;# 
  1907  0190                     	;# 
  1908  0191                     	;# 
  1909  0192                     	;# 
  1910  0196                     	;# 
  1911  0197                     	;# 
  1912  0198                     	;# 
  1913  0199                     	;# 
  1914  019A                     	;# 
  1915  019B                     	;# 
  1916  019C                     	;# 
  1917  020C                     	;# 
  1918  020C                     	;# 
  1919  020D                     	;# 
  1920  020E                     	;# 
  1921  020F                     	;# 
  1922  020F                     	;# 
  1923  0210                     	;# 
  1924  0210                     	;# 
  1925  0211                     	;# 
  1926  0211                     	;# 
  1927  0212                     	;# 
  1928  0212                     	;# 
  1929  0213                     	;# 
  1930  0214                     	;# 
  1931  0215                     	;# 
  1932  0215                     	;# 
  1933  0216                     	;# 
  1934  0216                     	;# 
  1935  0217                     	;# 
  1936  0217                     	;# 
  1937  0218                     	;# 
  1938  0218                     	;# 
  1939  0219                     	;# 
  1940  021A                     	;# 
  1941  021B                     	;# 
  1942  021B                     	;# 
  1943  021C                     	;# 
  1944  021C                     	;# 
  1945  021D                     	;# 
  1946  021D                     	;# 
  1947  021E                     	;# 
  1948  021F                     	;# 
  1949  028C                     	;# 
  1950  028C                     	;# 
  1951  028D                     	;# 
  1952  028D                     	;# 
  1953  028E                     	;# 
  1954  028F                     	;# 
  1955  0290                     	;# 
  1956  0290                     	;# 
  1957  0291                     	;# 
  1958  0292                     	;# 
  1959  0292                     	;# 
  1960  0293                     	;# 
  1961  0293                     	;# 
  1962  0294                     	;# 
  1963  0295                     	;# 
  1964  0296                     	;# 
  1965  0296                     	;# 
  1966  0297                     	;# 
  1967  0298                     	;# 
  1968  0298                     	;# 
  1969  0299                     	;# 
  1970  0299                     	;# 
  1971  029A                     	;# 
  1972  029B                     	;# 
  1973  029C                     	;# 
  1974  029C                     	;# 
  1975  029D                     	;# 
  1976  030C                     	;# 
  1977  030C                     	;# 
  1978  030D                     	;# 
  1979  030E                     	;# 
  1980  030F                     	;# 
  1981  0310                     	;# 
  1982  0310                     	;# 
  1983  0311                     	;# 
  1984  0312                     	;# 
  1985  0313                     	;# 
  1986  0314                     	;# 
  1987  0314                     	;# 
  1988  0315                     	;# 
  1989  0316                     	;# 
  1990  0317                     	;# 
  1991  0318                     	;# 
  1992  0318                     	;# 
  1993  0319                     	;# 
  1994  031A                     	;# 
  1995  031B                     	;# 
  1996  031C                     	;# 
  1997  031C                     	;# 
  1998  031D                     	;# 
  1999  031E                     	;# 
  2000  031F                     	;# 
  2001  038C                     	;# 
  2002  038C                     	;# 
  2003  038D                     	;# 
  2004  038E                     	;# 
  2005  0390                     	;# 
  2006  0390                     	;# 
  2007  0391                     	;# 
  2008  0392                     	;# 
  2009  040C                     	;# 
  2010  040D                     	;# 
  2011  040E                     	;# 
  2012  040F                     	;# 
  2013  0410                     	;# 
  2014  0411                     	;# 
  2015  0416                     	;# 
  2016  0416                     	;# 
  2017  0417                     	;# 
  2018  0418                     	;# 
  2019  0418                     	;# 
  2020  0419                     	;# 
  2021  041A                     	;# 
  2022  041A                     	;# 
  2023  041B                     	;# 
  2024  041C                     	;# 
  2025  041C                     	;# 
  2026  041D                     	;# 
  2027  041E                     	;# 
  2028  041F                     	;# 
  2029  048C                     	;# 
  2030  048C                     	;# 
  2031  048D                     	;# 
  2032  048E                     	;# 
  2033  048F                     	;# 
  2034  048F                     	;# 
  2035  0490                     	;# 
  2036  0491                     	;# 
  2037  0492                     	;# 
  2038  0492                     	;# 
  2039  0493                     	;# 
  2040  0494                     	;# 
  2041  0495                     	;# 
  2042  0495                     	;# 
  2043  0496                     	;# 
  2044  0497                     	;# 
  2045  0498                     	;# 
  2046  0499                     	;# 
  2047  049A                     	;# 
  2048  049B                     	;# 
  2049  049C                     	;# 
  2050  049D                     	;# 
  2051  050C                     	;# 
  2052  050C                     	;# 
  2053  050D                     	;# 
  2054  050E                     	;# 
  2055  050F                     	;# 
  2056  050F                     	;# 
  2057  0510                     	;# 
  2058  0511                     	;# 
  2059  0512                     	;# 
  2060  0512                     	;# 
  2061  0513                     	;# 
  2062  0514                     	;# 
  2063  0515                     	;# 
  2064  0515                     	;# 
  2065  0516                     	;# 
  2066  0517                     	;# 
  2067  0518                     	;# 
  2068  0519                     	;# 
  2069  051A                     	;# 
  2070  051B                     	;# 
  2071  051C                     	;# 
  2072  051D                     	;# 
  2073  058C                     	;# 
  2074  058C                     	;# 
  2075  058D                     	;# 
  2076  058E                     	;# 
  2077  058F                     	;# 
  2078  058F                     	;# 
  2079  0590                     	;# 
  2080  0591                     	;# 
  2081  0592                     	;# 
  2082  0593                     	;# 
  2083  060C                     	;# 
  2084  060D                     	;# 
  2085  060E                     	;# 
  2086  060F                     	;# 
  2087  0610                     	;# 
  2088  0611                     	;# 
  2089  0612                     	;# 
  2090  0613                     	;# 
  2091  0614                     	;# 
  2092  0616                     	;# 
  2093  0617                     	;# 
  2094  0618                     	;# 
  2095  0619                     	;# 
  2096  061A                     	;# 
  2097  061B                     	;# 
  2098  061C                     	;# 
  2099  061D                     	;# 
  2100  061E                     	;# 
  2101  068C                     	;# 
  2102  068D                     	;# 
  2103  068E                     	;# 
  2104  068F                     	;# 
  2105  0690                     	;# 
  2106  0691                     	;# 
  2107  0692                     	;# 
  2108  0693                     	;# 
  2109  0694                     	;# 
  2110  070C                     	;# 
  2111  070D                     	;# 
  2112  070E                     	;# 
  2113  070F                     	;# 
  2114  0710                     	;# 
  2115  0711                     	;# 
  2116  0712                     	;# 
  2117  0713                     	;# 
  2118  0714                     	;# 
  2119  0716                     	;# 
  2120  0717                     	;# 
  2121  0718                     	;# 
  2122  0719                     	;# 
  2123  071A                     	;# 
  2124  071B                     	;# 
  2125  071C                     	;# 
  2126  071D                     	;# 
  2127  071E                     	;# 
  2128  0796                     	;# 
  2129  0797                     	;# 
  2130  0798                     	;# 
  2131  0799                     	;# 
  2132  079A                     	;# 
  2133  079B                     	;# 
  2134  080C                     	;# 
  2135  080D                     	;# 
  2136  080E                     	;# 
  2137  080F                     	;# 
  2138  0810                     	;# 
  2139  0811                     	;# 
  2140  0812                     	;# 
  2141  0813                     	;# 
  2142  0814                     	;# 
  2143  081A                     	;# 
  2144  081B                     	;# 
  2145  081C                     	;# 
  2146  081D                     	;# 
  2147  081E                     	;# 
  2148  081F                     	;# 
  2149  088C                     	;# 
  2150  088D                     	;# 
  2151  088E                     	;# 
  2152  088F                     	;# 
  2153  0890                     	;# 
  2154  0891                     	;# 
  2155  0892                     	;# 
  2156  0893                     	;# 
  2157  0895                     	;# 
  2158  0896                     	;# 
  2159  0897                     	;# 
  2160  0898                     	;# 
  2161  0899                     	;# 
  2162  089A                     	;# 
  2163  089B                     	;# 
  2164  090C                     	;# 
  2165  090E                     	;# 
  2166  090F                     	;# 
  2167  091F                     	;# 
  2168  091F                     	;# 
  2169  098F                     	;# 
  2170  098F                     	;# 
  2171  0990                     	;# 
  2172  0991                     	;# 
  2173  0992                     	;# 
  2174  0993                     	;# 
  2175  0994                     	;# 
  2176  0995                     	;# 
  2177  0996                     	;# 
  2178  0997                     	;# 
  2179  0E0F                     	;# 
  2180  0E10                     	;# 
  2181  0E11                     	;# 
  2182  0E12                     	;# 
  2183  0E13                     	;# 
  2184  0E14                     	;# 
  2185  0E15                     	;# 
  2186  0E16                     	;# 
  2187  0E17                     	;# 
  2188  0E18                     	;# 
  2189  0E19                     	;# 
  2190  0E1A                     	;# 
  2191  0E1B                     	;# 
  2192  0E1C                     	;# 
  2193  0E1D                     	;# 
  2194  0E1E                     	;# 
  2195  0E1F                     	;# 
  2196  0E20                     	;# 
  2197  0E21                     	;# 
  2198  0E22                     	;# 
  2199  0E23                     	;# 
  2200  0E24                     	;# 
  2201  0E25                     	;# 
  2202  0E26                     	;# 
  2203  0E27                     	;# 
  2204  0E28                     	;# 
  2205  0E29                     	;# 
  2206  0E2A                     	;# 
  2207  0E2B                     	;# 
  2208  0E2C                     	;# 
  2209  0E2D                     	;# 
  2210  0E2E                     	;# 
  2211  0E2F                     	;# 
  2212  0E30                     	;# 
  2213  0E31                     	;# 
  2214  0E32                     	;# 
  2215  0E33                     	;# 
  2216  0E34                     	;# 
  2217  0E35                     	;# 
  2218  0E36                     	;# 
  2219  0E37                     	;# 
  2220  0E8F                     	;# 
  2221  0E90                     	;# 
  2222  0E91                     	;# 
  2223  0E92                     	;# 
  2224  0E93                     	;# 
  2225  0E94                     	;# 
  2226  0E95                     	;# 
  2227  0E96                     	;# 
  2228  0E97                     	;# 
  2229  0E9C                     	;# 
  2230  0E9D                     	;# 
  2231  0E9E                     	;# 
  2232  0EA1                     	;# 
  2233  0EA2                     	;# 
  2234  0EA3                     	;# 
  2235  0EA4                     	;# 
  2236  0EA5                     	;# 
  2237  0EA9                     	;# 
  2238  0EAA                     	;# 
  2239  0EAB                     	;# 
  2240  0EAC                     	;# 
  2241  0EB1                     	;# 
  2242  0EB2                     	;# 
  2243  0EB3                     	;# 
  2244  0EB8                     	;# 
  2245  0EB9                     	;# 
  2246  0EBA                     	;# 
  2247  0EBB                     	;# 
  2248  0EBC                     	;# 
  2249  0EBD                     	;# 
  2250  0EBE                     	;# 
  2251  0EC3                     	;# 
  2252  0EC5                     	;# 
  2253  0EC6                     	;# 
  2254  0EC7                     	;# 
  2255  0EC8                     	;# 
  2256  0EC9                     	;# 
  2257  0ECA                     	;# 
  2258  0ECB                     	;# 
  2259  0ECC                     	;# 
  2260  0F10                     	;# 
  2261  0F11                     	;# 
  2262  0F12                     	;# 
  2263  0F13                     	;# 
  2264  0F14                     	;# 
  2265  0F15                     	;# 
  2266  0F16                     	;# 
  2267  0F17                     	;# 
  2268  0F18                     	;# 
  2269  0F19                     	;# 
  2270  0F1A                     	;# 
  2271  0F1B                     	;# 
  2272  0F1C                     	;# 
  2273  0F1D                     	;# 
  2274  0F1E                     	;# 
  2275  0F1F                     	;# 
  2276  0F20                     	;# 
  2277  0F21                     	;# 
  2278  0F22                     	;# 
  2279  0F23                     	;# 
  2280  0F24                     	;# 
  2281  0F25                     	;# 
  2282  0F26                     	;# 
  2283  0F27                     	;# 
  2284  0F28                     	;# 
  2285  0F29                     	;# 
  2286  0F2A                     	;# 
  2287  0F2B                     	;# 
  2288  0F2C                     	;# 
  2289  0F2D                     	;# 
  2290  0F2E                     	;# 
  2291  0F2F                     	;# 
  2292  0F30                     	;# 
  2293  0F31                     	;# 
  2294  0F32                     	;# 
  2295  0F38                     	;# 
  2296  0F39                     	;# 
  2297  0F3A                     	;# 
  2298  0F3B                     	;# 
  2299  0F3C                     	;# 
  2300  0F3D                     	;# 
  2301  0F3E                     	;# 
  2302  0F3F                     	;# 
  2303  0F40                     	;# 
  2304  0F41                     	;# 
  2305  0F43                     	;# 
  2306  0F44                     	;# 
  2307  0F45                     	;# 
  2308  0F46                     	;# 
  2309  0F47                     	;# 
  2310  0F48                     	;# 
  2311  0F49                     	;# 
  2312  0F4A                     	;# 
  2313  0F4B                     	;# 
  2314  0F4C                     	;# 
  2315  0F4E                     	;# 
  2316  0F4F                     	;# 
  2317  0F50                     	;# 
  2318  0F51                     	;# 
  2319  0F52                     	;# 
  2320  0F53                     	;# 
  2321  0F54                     	;# 
  2322  0F55                     	;# 
  2323  0F56                     	;# 
  2324  0F57                     	;# 
  2325  0F59                     	;# 
  2326  0F5A                     	;# 
  2327  0F5B                     	;# 
  2328  0F5C                     	;# 
  2329  0F5D                     	;# 
  2330  0F61                     	;# 
  2331  0F62                     	;# 
  2332  0F64                     	;# 
  2333  0F65                     	;# 
  2334  0F66                     	;# 
  2335  0F67                     	;# 
  2336  0F68                     	;# 
  2337  0F69                     	;# 
  2338  0F6A                     	;# 
  2339  0F6B                     	;# 
  2340  0F6C                     	;# 
  2341  0F6D                     	;# 
  2342  0FE4                     	;# 
  2343  0FE5                     	;# 
  2344  0FE6                     	;# 
  2345  0FE7                     	;# 
  2346  0FE8                     	;# 
  2347  0FE9                     	;# 
  2348  0FEA                     	;# 
  2349  0FEB                     	;# 
  2350  0FED                     	;# 
  2351  0FEE                     	;# 
  2352  0FEF                     	;# 
  2353  0000                     	;# 
  2354  0001                     	;# 
  2355  0002                     	;# 
  2356  0003                     	;# 
  2357  0004                     	;# 
  2358  0005                     	;# 
  2359  0006                     	;# 
  2360  0007                     	;# 
  2361  0008                     	;# 
  2362  0009                     	;# 
  2363  000A                     	;# 
  2364  000B                     	;# 
  2365  000C                     	;# 
  2366  000D                     	;# 
  2367  000E                     	;# 
  2368  000F                     	;# 
  2369  0010                     	;# 
  2370  0011                     	;# 
  2371  0012                     	;# 
  2372  0013                     	;# 
  2373  0014                     	;# 
  2374  0015                     	;# 
  2375  0016                     	;# 
  2376  0017                     	;# 
  2377  0018                     	;# 
  2378  0019                     	;# 
  2379  001A                     	;# 
  2380  001C                     	;# 
  2381  001C                     	;# 
  2382  001D                     	;# 
  2383  001D                     	;# 
  2384  001E                     	;# 
  2385  001F                     	;# 
  2386  008C                     	;# 
  2387  008C                     	;# 
  2388  008D                     	;# 
  2389  008E                     	;# 
  2390  008E                     	;# 
  2391  008F                     	;# 
  2392  0090                     	;# 
  2393  0090                     	;# 
  2394  0091                     	;# 
  2395  0093                     	;# 
  2396  0094                     	;# 
  2397  0095                     	;# 
  2398  0096                     	;# 
  2399  0097                     	;# 
  2400  0098                     	;# 
  2401  0099                     	;# 
  2402  009A                     	;# 
  2403  009B                     	;# 
  2404  009C                     	;# 
  2405  009D                     	;# 
  2406  009E                     	;# 
  2407  010C                     	;# 
  2408  010D                     	;# 
  2409  010E                     	;# 
  2410  010E                     	;# 
  2411  010F                     	;# 
  2412  0110                     	;# 
  2413  0110                     	;# 
  2414  0111                     	;# 
  2415  0112                     	;# 
  2416  0112                     	;# 
  2417  0113                     	;# 
  2418  0114                     	;# 
  2419  0114                     	;# 
  2420  0115                     	;# 
  2421  0116                     	;# 
  2422  0116                     	;# 
  2423  0117                     	;# 
  2424  0119                     	;# 
  2425  0119                     	;# 
  2426  0119                     	;# 
  2427  011A                     	;# 
  2428  011A                     	;# 
  2429  011A                     	;# 
  2430  011B                     	;# 
  2431  011B                     	;# 
  2432  011B                     	;# 
  2433  011B                     	;# 
  2434  011B                     	;# 
  2435  011C                     	;# 
  2436  011C                     	;# 
  2437  011C                     	;# 
  2438  011D                     	;# 
  2439  011D                     	;# 
  2440  011D                     	;# 
  2441  011E                     	;# 
  2442  011E                     	;# 
  2443  011E                     	;# 
  2444  011F                     	;# 
  2445  011F                     	;# 
  2446  011F                     	;# 
  2447  011F                     	;# 
  2448  011F                     	;# 
  2449  018C                     	;# 
  2450  018D                     	;# 
  2451  018E                     	;# 
  2452  018F                     	;# 
  2453  0190                     	;# 
  2454  0191                     	;# 
  2455  0192                     	;# 
  2456  0196                     	;# 
  2457  0197                     	;# 
  2458  0198                     	;# 
  2459  0199                     	;# 
  2460  019A                     	;# 
  2461  019B                     	;# 
  2462  019C                     	;# 
  2463  020C                     	;# 
  2464  020C                     	;# 
  2465  020D                     	;# 
  2466  020E                     	;# 
  2467  020F                     	;# 
  2468  020F                     	;# 
  2469  0210                     	;# 
  2470  0210                     	;# 
  2471  0211                     	;# 
  2472  0211                     	;# 
  2473  0212                     	;# 
  2474  0212                     	;# 
  2475  0213                     	;# 
  2476  0214                     	;# 
  2477  0215                     	;# 
  2478  0215                     	;# 
  2479  0216                     	;# 
  2480  0216                     	;# 
  2481  0217                     	;# 
  2482  0217                     	;# 
  2483  0218                     	;# 
  2484  0218                     	;# 
  2485  0219                     	;# 
  2486  021A                     	;# 
  2487  021B                     	;# 
  2488  021B                     	;# 
  2489  021C                     	;# 
  2490  021C                     	;# 
  2491  021D                     	;# 
  2492  021D                     	;# 
  2493  021E                     	;# 
  2494  021F                     	;# 
  2495  028C                     	;# 
  2496  028C                     	;# 
  2497  028D                     	;# 
  2498  028D                     	;# 
  2499  028E                     	;# 
  2500  028F                     	;# 
  2501  0290                     	;# 
  2502  0290                     	;# 
  2503  0291                     	;# 
  2504  0292                     	;# 
  2505  0292                     	;# 
  2506  0293                     	;# 
  2507  0293                     	;# 
  2508  0294                     	;# 
  2509  0295                     	;# 
  2510  0296                     	;# 
  2511  0296                     	;# 
  2512  0297                     	;# 
  2513  0298                     	;# 
  2514  0298                     	;# 
  2515  0299                     	;# 
  2516  0299                     	;# 
  2517  029A                     	;# 
  2518  029B                     	;# 
  2519  029C                     	;# 
  2520  029C                     	;# 
  2521  029D                     	;# 
  2522  030C                     	;# 
  2523  030C                     	;# 
  2524  030D                     	;# 
  2525  030E                     	;# 
  2526  030F                     	;# 
  2527  0310                     	;# 
  2528  0310                     	;# 
  2529  0311                     	;# 
  2530  0312                     	;# 
  2531  0313                     	;# 
  2532  0314                     	;# 
  2533  0314                     	;# 
  2534  0315                     	;# 
  2535  0316                     	;# 
  2536  0317                     	;# 
  2537  0318                     	;# 
  2538  0318                     	;# 
  2539  0319                     	;# 
  2540  031A                     	;# 
  2541  031B                     	;# 
  2542  031C                     	;# 
  2543  031C                     	;# 
  2544  031D                     	;# 
  2545  031E                     	;# 
  2546  031F                     	;# 
  2547  038C                     	;# 
  2548  038C                     	;# 
  2549  038D                     	;# 
  2550  038E                     	;# 
  2551  0390                     	;# 
  2552  0390                     	;# 
  2553  0391                     	;# 
  2554  0392                     	;# 
  2555  040C                     	;# 
  2556  040D                     	;# 
  2557  040E                     	;# 
  2558  040F                     	;# 
  2559  0410                     	;# 
  2560  0411                     	;# 
  2561  0416                     	;# 
  2562  0416                     	;# 
  2563  0417                     	;# 
  2564  0418                     	;# 
  2565  0418                     	;# 
  2566  0419                     	;# 
  2567  041A                     	;# 
  2568  041A                     	;# 
  2569  041B                     	;# 
  2570  041C                     	;# 
  2571  041C                     	;# 
  2572  041D                     	;# 
  2573  041E                     	;# 
  2574  041F                     	;# 
  2575  048C                     	;# 
  2576  048C                     	;# 
  2577  048D                     	;# 
  2578  048E                     	;# 
  2579  048F                     	;# 
  2580  048F                     	;# 
  2581  0490                     	;# 
  2582  0491                     	;# 
  2583  0492                     	;# 
  2584  0492                     	;# 
  2585  0493                     	;# 
  2586  0494                     	;# 
  2587  0495                     	;# 
  2588  0495                     	;# 
  2589  0496                     	;# 
  2590  0497                     	;# 
  2591  0498                     	;# 
  2592  0499                     	;# 
  2593  049A                     	;# 
  2594  049B                     	;# 
  2595  049C                     	;# 
  2596  049D                     	;# 
  2597  050C                     	;# 
  2598  050C                     	;# 
  2599  050D                     	;# 
  2600  050E                     	;# 
  2601  050F                     	;# 
  2602  050F                     	;# 
  2603  0510                     	;# 
  2604  0511                     	;# 
  2605  0512                     	;# 
  2606  0512                     	;# 
  2607  0513                     	;# 
  2608  0514                     	;# 
  2609  0515                     	;# 
  2610  0515                     	;# 
  2611  0516                     	;# 
  2612  0517                     	;# 
  2613  0518                     	;# 
  2614  0519                     	;# 
  2615  051A                     	;# 
  2616  051B                     	;# 
  2617  051C                     	;# 
  2618  051D                     	;# 
  2619  058C                     	;# 
  2620  058C                     	;# 
  2621  058D                     	;# 
  2622  058E                     	;# 
  2623  058F                     	;# 
  2624  058F                     	;# 
  2625  0590                     	;# 
  2626  0591                     	;# 
  2627  0592                     	;# 
  2628  0593                     	;# 
  2629  060C                     	;# 
  2630  060D                     	;# 
  2631  060E                     	;# 
  2632  060F                     	;# 
  2633  0610                     	;# 
  2634  0611                     	;# 
  2635  0612                     	;# 
  2636  0613                     	;# 
  2637  0614                     	;# 
  2638  0616                     	;# 
  2639  0617                     	;# 
  2640  0618                     	;# 
  2641  0619                     	;# 
  2642  061A                     	;# 
  2643  061B                     	;# 
  2644  061C                     	;# 
  2645  061D                     	;# 
  2646  061E                     	;# 
  2647  068C                     	;# 
  2648  068D                     	;# 
  2649  068E                     	;# 
  2650  068F                     	;# 
  2651  0690                     	;# 
  2652  0691                     	;# 
  2653  0692                     	;# 
  2654  0693                     	;# 
  2655  0694                     	;# 
  2656  070C                     	;# 
  2657  070D                     	;# 
  2658  070E                     	;# 
  2659  070F                     	;# 
  2660  0710                     	;# 
  2661  0711                     	;# 
  2662  0712                     	;# 
  2663  0713                     	;# 
  2664  0714                     	;# 
  2665  0716                     	;# 
  2666  0717                     	;# 
  2667  0718                     	;# 
  2668  0719                     	;# 
  2669  071A                     	;# 
  2670  071B                     	;# 
  2671  071C                     	;# 
  2672  071D                     	;# 
  2673  071E                     	;# 
  2674  0796                     	;# 
  2675  0797                     	;# 
  2676  0798                     	;# 
  2677  0799                     	;# 
  2678  079A                     	;# 
  2679  079B                     	;# 
  2680  080C                     	;# 
  2681  080D                     	;# 
  2682  080E                     	;# 
  2683  080F                     	;# 
  2684  0810                     	;# 
  2685  0811                     	;# 
  2686  0812                     	;# 
  2687  0813                     	;# 
  2688  0814                     	;# 
  2689  081A                     	;# 
  2690  081B                     	;# 
  2691  081C                     	;# 
  2692  081D                     	;# 
  2693  081E                     	;# 
  2694  081F                     	;# 
  2695  088C                     	;# 
  2696  088D                     	;# 
  2697  088E                     	;# 
  2698  088F                     	;# 
  2699  0890                     	;# 
  2700  0891                     	;# 
  2701  0892                     	;# 
  2702  0893                     	;# 
  2703  0895                     	;# 
  2704  0896                     	;# 
  2705  0897                     	;# 
  2706  0898                     	;# 
  2707  0899                     	;# 
  2708  089A                     	;# 
  2709  089B                     	;# 
  2710  090C                     	;# 
  2711  090E                     	;# 
  2712  090F                     	;# 
  2713  091F                     	;# 
  2714  091F                     	;# 
  2715  098F                     	;# 
  2716  098F                     	;# 
  2717  0990                     	;# 
  2718  0991                     	;# 
  2719  0992                     	;# 
  2720  0993                     	;# 
  2721  0994                     	;# 
  2722  0995                     	;# 
  2723  0996                     	;# 
  2724  0997                     	;# 
  2725  0E0F                     	;# 
  2726  0E10                     	;# 
  2727  0E11                     	;# 
  2728  0E12                     	;# 
  2729  0E13                     	;# 
  2730  0E14                     	;# 
  2731  0E15                     	;# 
  2732  0E16                     	;# 
  2733  0E17                     	;# 
  2734  0E18                     	;# 
  2735  0E19                     	;# 
  2736  0E1A                     	;# 
  2737  0E1B                     	;# 
  2738  0E1C                     	;# 
  2739  0E1D                     	;# 
  2740  0E1E                     	;# 
  2741  0E1F                     	;# 
  2742  0E20                     	;# 
  2743  0E21                     	;# 
  2744  0E22                     	;# 
  2745  0E23                     	;# 
  2746  0E24                     	;# 
  2747  0E25                     	;# 
  2748  0E26                     	;# 
  2749  0E27                     	;# 
  2750  0E28                     	;# 
  2751  0E29                     	;# 
  2752  0E2A                     	;# 
  2753  0E2B                     	;# 
  2754  0E2C                     	;# 
  2755  0E2D                     	;# 
  2756  0E2E                     	;# 
  2757  0E2F                     	;# 
  2758  0E30                     	;# 
  2759  0E31                     	;# 
  2760  0E32                     	;# 
  2761  0E33                     	;# 
  2762  0E34                     	;# 
  2763  0E35                     	;# 
  2764  0E36                     	;# 
  2765  0E37                     	;# 
  2766  0E8F                     	;# 
  2767  0E90                     	;# 
  2768  0E91                     	;# 
  2769  0E92                     	;# 
  2770  0E93                     	;# 
  2771  0E94                     	;# 
  2772  0E95                     	;# 
  2773  0E96                     	;# 
  2774  0E97                     	;# 
  2775  0E9C                     	;# 
  2776  0E9D                     	;# 
  2777  0E9E                     	;# 
  2778  0EA1                     	;# 
  2779  0EA2                     	;# 
  2780  0EA3                     	;# 
  2781  0EA4                     	;# 
  2782  0EA5                     	;# 
  2783  0EA9                     	;# 
  2784  0EAA                     	;# 
  2785  0EAB                     	;# 
  2786  0EAC                     	;# 
  2787  0EB1                     	;# 
  2788  0EB2                     	;# 
  2789  0EB3                     	;# 
  2790  0EB8                     	;# 
  2791  0EB9                     	;# 
  2792  0EBA                     	;# 
  2793  0EBB                     	;# 
  2794  0EBC                     	;# 
  2795  0EBD                     	;# 
  2796  0EBE                     	;# 
  2797  0EC3                     	;# 
  2798  0EC5                     	;# 
  2799  0EC6                     	;# 
  2800  0EC7                     	;# 
  2801  0EC8                     	;# 
  2802  0EC9                     	;# 
  2803  0ECA                     	;# 
  2804  0ECB                     	;# 
  2805  0ECC                     	;# 
  2806  0F10                     	;# 
  2807  0F11                     	;# 
  2808  0F12                     	;# 
  2809  0F13                     	;# 
  2810  0F14                     	;# 
  2811  0F15                     	;# 
  2812  0F16                     	;# 
  2813  0F17                     	;# 
  2814  0F18                     	;# 
  2815  0F19                     	;# 
  2816  0F1A                     	;# 
  2817  0F1B                     	;# 
  2818  0F1C                     	;# 
  2819  0F1D                     	;# 
  2820  0F1E                     	;# 
  2821  0F1F                     	;# 
  2822  0F20                     	;# 
  2823  0F21                     	;# 
  2824  0F22                     	;# 
  2825  0F23                     	;# 
  2826  0F24                     	;# 
  2827  0F25                     	;# 
  2828  0F26                     	;# 
  2829  0F27                     	;# 
  2830  0F28                     	;# 
  2831  0F29                     	;# 
  2832  0F2A                     	;# 
  2833  0F2B                     	;# 
  2834  0F2C                     	;# 
  2835  0F2D                     	;# 
  2836  0F2E                     	;# 
  2837  0F2F                     	;# 
  2838  0F30                     	;# 
  2839  0F31                     	;# 
  2840  0F32                     	;# 
  2841  0F38                     	;# 
  2842  0F39                     	;# 
  2843  0F3A                     	;# 
  2844  0F3B                     	;# 
  2845  0F3C                     	;# 
  2846  0F3D                     	;# 
  2847  0F3E                     	;# 
  2848  0F3F                     	;# 
  2849  0F40                     	;# 
  2850  0F41                     	;# 
  2851  0F43                     	;# 
  2852  0F44                     	;# 
  2853  0F45                     	;# 
  2854  0F46                     	;# 
  2855  0F47                     	;# 
  2856  0F48                     	;# 
  2857  0F49                     	;# 
  2858  0F4A                     	;# 
  2859  0F4B                     	;# 
  2860  0F4C                     	;# 
  2861  0F4E                     	;# 
  2862  0F4F                     	;# 
  2863  0F50                     	;# 
  2864  0F51                     	;# 
  2865  0F52                     	;# 
  2866  0F53                     	;# 
  2867  0F54                     	;# 
  2868  0F55                     	;# 
  2869  0F56                     	;# 
  2870  0F57                     	;# 
  2871  0F59                     	;# 
  2872  0F5A                     	;# 
  2873  0F5B                     	;# 
  2874  0F5C                     	;# 
  2875  0F5D                     	;# 
  2876  0F61                     	;# 
  2877  0F62                     	;# 
  2878  0F64                     	;# 
  2879  0F65                     	;# 
  2880  0F66                     	;# 
  2881  0F67                     	;# 
  2882  0F68                     	;# 
  2883  0F69                     	;# 
  2884  0F6A                     	;# 
  2885  0F6B                     	;# 
  2886  0F6C                     	;# 
  2887  0F6D                     	;# 
  2888  0FE4                     	;# 
  2889  0FE5                     	;# 
  2890  0FE6                     	;# 
  2891  0FE7                     	;# 
  2892  0FE8                     	;# 
  2893  0FE9                     	;# 
  2894  0FEA                     	;# 
  2895  0FEB                     	;# 
  2896  0FED                     	;# 
  2897  0FEE                     	;# 
  2898  0FEF                     	;# 
  2899  0000                     	;# 
  2900  0001                     	;# 
  2901  0002                     	;# 
  2902  0003                     	;# 
  2903  0004                     	;# 
  2904  0005                     	;# 
  2905  0006                     	;# 
  2906  0007                     	;# 
  2907  0008                     	;# 
  2908  0009                     	;# 
  2909  000A                     	;# 
  2910  000B                     	;# 
  2911  000C                     	;# 
  2912  000D                     	;# 
  2913  000E                     	;# 
  2914  000F                     	;# 
  2915  0010                     	;# 
  2916  0011                     	;# 
  2917  0012                     	;# 
  2918  0013                     	;# 
  2919  0014                     	;# 
  2920  0015                     	;# 
  2921  0016                     	;# 
  2922  0017                     	;# 
  2923  0018                     	;# 
  2924  0019                     	;# 
  2925  001A                     	;# 
  2926  001C                     	;# 
  2927  001C                     	;# 
  2928  001D                     	;# 
  2929  001D                     	;# 
  2930  001E                     	;# 
  2931  001F                     	;# 
  2932  008C                     	;# 
  2933  008C                     	;# 
  2934  008D                     	;# 
  2935  008E                     	;# 
  2936  008E                     	;# 
  2937  008F                     	;# 
  2938  0090                     	;# 
  2939  0090                     	;# 
  2940  0091                     	;# 
  2941  0093                     	;# 
  2942  0094                     	;# 
  2943  0095                     	;# 
  2944  0096                     	;# 
  2945  0097                     	;# 
  2946  0098                     	;# 
  2947  0099                     	;# 
  2948  009A                     	;# 
  2949  009B                     	;# 
  2950  009C                     	;# 
  2951  009D                     	;# 
  2952  009E                     	;# 
  2953  010C                     	;# 
  2954  010D                     	;# 
  2955  010E                     	;# 
  2956  010E                     	;# 
  2957  010F                     	;# 
  2958  0110                     	;# 
  2959  0110                     	;# 
  2960  0111                     	;# 
  2961  0112                     	;# 
  2962  0112                     	;# 
  2963  0113                     	;# 
  2964  0114                     	;# 
  2965  0114                     	;# 
  2966  0115                     	;# 
  2967  0116                     	;# 
  2968  0116                     	;# 
  2969  0117                     	;# 
  2970  0119                     	;# 
  2971  0119                     	;# 
  2972  0119                     	;# 
  2973  011A                     	;# 
  2974  011A                     	;# 
  2975  011A                     	;# 
  2976  011B                     	;# 
  2977  011B                     	;# 
  2978  011B                     	;# 
  2979  011B                     	;# 
  2980  011B                     	;# 
  2981  011C                     	;# 
  2982  011C                     	;# 
  2983  011C                     	;# 
  2984  011D                     	;# 
  2985  011D                     	;# 
  2986  011D                     	;# 
  2987  011E                     	;# 
  2988  011E                     	;# 
  2989  011E                     	;# 
  2990  011F                     	;# 
  2991  011F                     	;# 
  2992  011F                     	;# 
  2993  011F                     	;# 
  2994  011F                     	;# 
  2995  018C                     	;# 
  2996  018D                     	;# 
  2997  018E                     	;# 
  2998  018F                     	;# 
  2999  0190                     	;# 
  3000  0191                     	;# 
  3001  0192                     	;# 
  3002  0196                     	;# 
  3003  0197                     	;# 
  3004  0198                     	;# 
  3005  0199                     	;# 
  3006  019A                     	;# 
  3007  019B                     	;# 
  3008  019C                     	;# 
  3009  020C                     	;# 
  3010  020C                     	;# 
  3011  020D                     	;# 
  3012  020E                     	;# 
  3013  020F                     	;# 
  3014  020F                     	;# 
  3015  0210                     	;# 
  3016  0210                     	;# 
  3017  0211                     	;# 
  3018  0211                     	;# 
  3019  0212                     	;# 
  3020  0212                     	;# 
  3021  0213                     	;# 
  3022  0214                     	;# 
  3023  0215                     	;# 
  3024  0215                     	;# 
  3025  0216                     	;# 
  3026  0216                     	;# 
  3027  0217                     	;# 
  3028  0217                     	;# 
  3029  0218                     	;# 
  3030  0218                     	;# 
  3031  0219                     	;# 
  3032  021A                     	;# 
  3033  021B                     	;# 
  3034  021B                     	;# 
  3035  021C                     	;# 
  3036  021C                     	;# 
  3037  021D                     	;# 
  3038  021D                     	;# 
  3039  021E                     	;# 
  3040  021F                     	;# 
  3041  028C                     	;# 
  3042  028C                     	;# 
  3043  028D                     	;# 
  3044  028D                     	;# 
  3045  028E                     	;# 
  3046  028F                     	;# 
  3047  0290                     	;# 
  3048  0290                     	;# 
  3049  0291                     	;# 
  3050  0292                     	;# 
  3051  0292                     	;# 
  3052  0293                     	;# 
  3053  0293                     	;# 
  3054  0294                     	;# 
  3055  0295                     	;# 
  3056  0296                     	;# 
  3057  0296                     	;# 
  3058  0297                     	;# 
  3059  0298                     	;# 
  3060  0298                     	;# 
  3061  0299                     	;# 
  3062  0299                     	;# 
  3063  029A                     	;# 
  3064  029B                     	;# 
  3065  029C                     	;# 
  3066  029C                     	;# 
  3067  029D                     	;# 
  3068  030C                     	;# 
  3069  030C                     	;# 
  3070  030D                     	;# 
  3071  030E                     	;# 
  3072  030F                     	;# 
  3073  0310                     	;# 
  3074  0310                     	;# 
  3075  0311                     	;# 
  3076  0312                     	;# 
  3077  0313                     	;# 
  3078  0314                     	;# 
  3079  0314                     	;# 
  3080  0315                     	;# 
  3081  0316                     	;# 
  3082  0317                     	;# 
  3083  0318                     	;# 
  3084  0318                     	;# 
  3085  0319                     	;# 
  3086  031A                     	;# 
  3087  031B                     	;# 
  3088  031C                     	;# 
  3089  031C                     	;# 
  3090  031D                     	;# 
  3091  031E                     	;# 
  3092  031F                     	;# 
  3093  038C                     	;# 
  3094  038C                     	;# 
  3095  038D                     	;# 
  3096  038E                     	;# 
  3097  0390                     	;# 
  3098  0390                     	;# 
  3099  0391                     	;# 
  3100  0392                     	;# 
  3101  040C                     	;# 
  3102  040D                     	;# 
  3103  040E                     	;# 
  3104  040F                     	;# 
  3105  0410                     	;# 
  3106  0411                     	;# 
  3107  0416                     	;# 
  3108  0416                     	;# 
  3109  0417                     	;# 
  3110  0418                     	;# 
  3111  0418                     	;# 
  3112  0419                     	;# 
  3113  041A                     	;# 
  3114  041A                     	;# 
  3115  041B                     	;# 
  3116  041C                     	;# 
  3117  041C                     	;# 
  3118  041D                     	;# 
  3119  041E                     	;# 
  3120  041F                     	;# 
  3121  048C                     	;# 
  3122  048C                     	;# 
  3123  048D                     	;# 
  3124  048E                     	;# 
  3125  048F                     	;# 
  3126  048F                     	;# 
  3127  0490                     	;# 
  3128  0491                     	;# 
  3129  0492                     	;# 
  3130  0492                     	;# 
  3131  0493                     	;# 
  3132  0494                     	;# 
  3133  0495                     	;# 
  3134  0495                     	;# 
  3135  0496                     	;# 
  3136  0497                     	;# 
  3137  0498                     	;# 
  3138  0499                     	;# 
  3139  049A                     	;# 
  3140  049B                     	;# 
  3141  049C                     	;# 
  3142  049D                     	;# 
  3143  050C                     	;# 
  3144  050C                     	;# 
  3145  050D                     	;# 
  3146  050E                     	;# 
  3147  050F                     	;# 
  3148  050F                     	;# 
  3149  0510                     	;# 
  3150  0511                     	;# 
  3151  0512                     	;# 
  3152  0512                     	;# 
  3153  0513                     	;# 
  3154  0514                     	;# 
  3155  0515                     	;# 
  3156  0515                     	;# 
  3157  0516                     	;# 
  3158  0517                     	;# 
  3159  0518                     	;# 
  3160  0519                     	;# 
  3161  051A                     	;# 
  3162  051B                     	;# 
  3163  051C                     	;# 
  3164  051D                     	;# 
  3165  058C                     	;# 
  3166  058C                     	;# 
  3167  058D                     	;# 
  3168  058E                     	;# 
  3169  058F                     	;# 
  3170  058F                     	;# 
  3171  0590                     	;# 
  3172  0591                     	;# 
  3173  0592                     	;# 
  3174  0593                     	;# 
  3175  060C                     	;# 
  3176  060D                     	;# 
  3177  060E                     	;# 
  3178  060F                     	;# 
  3179  0610                     	;# 
  3180  0611                     	;# 
  3181  0612                     	;# 
  3182  0613                     	;# 
  3183  0614                     	;# 
  3184  0616                     	;# 
  3185  0617                     	;# 
  3186  0618                     	;# 
  3187  0619                     	;# 
  3188  061A                     	;# 
  3189  061B                     	;# 
  3190  061C                     	;# 
  3191  061D                     	;# 
  3192  061E                     	;# 
  3193  068C                     	;# 
  3194  068D                     	;# 
  3195  068E                     	;# 
  3196  068F                     	;# 
  3197  0690                     	;# 
  3198  0691                     	;# 
  3199  0692                     	;# 
  3200  0693                     	;# 
  3201  0694                     	;# 
  3202  070C                     	;# 
  3203  070D                     	;# 
  3204  070E                     	;# 
  3205  070F                     	;# 
  3206  0710                     	;# 
  3207  0711                     	;# 
  3208  0712                     	;# 
  3209  0713                     	;# 
  3210  0714                     	;# 
  3211  0716                     	;# 
  3212  0717                     	;# 
  3213  0718                     	;# 
  3214  0719                     	;# 
  3215  071A                     	;# 
  3216  071B                     	;# 
  3217  071C                     	;# 
  3218  071D                     	;# 
  3219  071E                     	;# 
  3220  0796                     	;# 
  3221  0797                     	;# 
  3222  0798                     	;# 
  3223  0799                     	;# 
  3224  079A                     	;# 
  3225  079B                     	;# 
  3226  080C                     	;# 
  3227  080D                     	;# 
  3228  080E                     	;# 
  3229  080F                     	;# 
  3230  0810                     	;# 
  3231  0811                     	;# 
  3232  0812                     	;# 
  3233  0813                     	;# 
  3234  0814                     	;# 
  3235  081A                     	;# 
  3236  081B                     	;# 
  3237  081C                     	;# 
  3238  081D                     	;# 
  3239  081E                     	;# 
  3240  081F                     	;# 
  3241  088C                     	;# 
  3242  088D                     	;# 
  3243  088E                     	;# 
  3244  088F                     	;# 
  3245  0890                     	;# 
  3246  0891                     	;# 
  3247  0892                     	;# 
  3248  0893                     	;# 
  3249  0895                     	;# 
  3250  0896                     	;# 
  3251  0897                     	;# 
  3252  0898                     	;# 
  3253  0899                     	;# 
  3254  089A                     	;# 
  3255  089B                     	;# 
  3256  090C                     	;# 
  3257  090E                     	;# 
  3258  090F                     	;# 
  3259  091F                     	;# 
  3260  091F                     	;# 
  3261  098F                     	;# 
  3262  098F                     	;# 
  3263  0990                     	;# 
  3264  0991                     	;# 
  3265  0992                     	;# 
  3266  0993                     	;# 
  3267  0994                     	;# 
  3268  0995                     	;# 
  3269  0996                     	;# 
  3270  0997                     	;# 
  3271  0E0F                     	;# 
  3272  0E10                     	;# 
  3273  0E11                     	;# 
  3274  0E12                     	;# 
  3275  0E13                     	;# 
  3276  0E14                     	;# 
  3277  0E15                     	;# 
  3278  0E16                     	;# 
  3279  0E17                     	;# 
  3280  0E18                     	;# 
  3281  0E19                     	;# 
  3282  0E1A                     	;# 
  3283  0E1B                     	;# 
  3284  0E1C                     	;# 
  3285  0E1D                     	;# 
  3286  0E1E                     	;# 
  3287  0E1F                     	;# 
  3288  0E20                     	;# 
  3289  0E21                     	;# 
  3290  0E22                     	;# 
  3291  0E23                     	;# 
  3292  0E24                     	;# 
  3293  0E25                     	;# 
  3294  0E26                     	;# 
  3295  0E27                     	;# 
  3296  0E28                     	;# 
  3297  0E29                     	;# 
  3298  0E2A                     	;# 
  3299  0E2B                     	;# 
  3300  0E2C                     	;# 
  3301  0E2D                     	;# 
  3302  0E2E                     	;# 
  3303  0E2F                     	;# 
  3304  0E30                     	;# 
  3305  0E31                     	;# 
  3306  0E32                     	;# 
  3307  0E33                     	;# 
  3308  0E34                     	;# 
  3309  0E35                     	;# 
  3310  0E36                     	;# 
  3311  0E37                     	;# 
  3312  0E8F                     	;# 
  3313  0E90                     	;# 
  3314  0E91                     	;# 
  3315  0E92                     	;# 
  3316  0E93                     	;# 
  3317  0E94                     	;# 
  3318  0E95                     	;# 
  3319  0E96                     	;# 
  3320  0E97                     	;# 
  3321  0E9C                     	;# 
  3322  0E9D                     	;# 
  3323  0E9E                     	;# 
  3324  0EA1                     	;# 
  3325  0EA2                     	;# 
  3326  0EA3                     	;# 
  3327  0EA4                     	;# 
  3328  0EA5                     	;# 
  3329  0EA9                     	;# 
  3330  0EAA                     	;# 
  3331  0EAB                     	;# 
  3332  0EAC                     	;# 
  3333  0EB1                     	;# 
  3334  0EB2                     	;# 
  3335  0EB3                     	;# 
  3336  0EB8                     	;# 
  3337  0EB9                     	;# 
  3338  0EBA                     	;# 
  3339  0EBB                     	;# 
  3340  0EBC                     	;# 
  3341  0EBD                     	;# 
  3342  0EBE                     	;# 
  3343  0EC3                     	;# 
  3344  0EC5                     	;# 
  3345  0EC6                     	;# 
  3346  0EC7                     	;# 
  3347  0EC8                     	;# 
  3348  0EC9                     	;# 
  3349  0ECA                     	;# 
  3350  0ECB                     	;# 
  3351  0ECC                     	;# 
  3352  0F10                     	;# 
  3353  0F11                     	;# 
  3354  0F12                     	;# 
  3355  0F13                     	;# 
  3356  0F14                     	;# 
  3357  0F15                     	;# 
  3358  0F16                     	;# 
  3359  0F17                     	;# 
  3360  0F18                     	;# 
  3361  0F19                     	;# 
  3362  0F1A                     	;# 
  3363  0F1B                     	;# 
  3364  0F1C                     	;# 
  3365  0F1D                     	;# 
  3366  0F1E                     	;# 
  3367  0F1F                     	;# 
  3368  0F20                     	;# 
  3369  0F21                     	;# 
  3370  0F22                     	;# 
  3371  0F23                     	;# 
  3372  0F24                     	;# 
  3373  0F25                     	;# 
  3374  0F26                     	;# 
  3375  0F27                     	;# 
  3376  0F28                     	;# 
  3377  0F29                     	;# 
  3378  0F2A                     	;# 
  3379  0F2B                     	;# 
  3380  0F2C                     	;# 
  3381  0F2D                     	;# 
  3382  0F2E                     	;# 
  3383  0F2F                     	;# 
  3384  0F30                     	;# 
  3385  0F31                     	;# 
  3386  0F32                     	;# 
  3387  0F38                     	;# 
  3388  0F39                     	;# 
  3389  0F3A                     	;# 
  3390  0F3B                     	;# 
  3391  0F3C                     	;# 
  3392  0F3D                     	;# 
  3393  0F3E                     	;# 
  3394  0F3F                     	;# 
  3395  0F40                     	;# 
  3396  0F41                     	;# 
  3397  0F43                     	;# 
  3398  0F44                     	;# 
  3399  0F45                     	;# 
  3400  0F46                     	;# 
  3401  0F47                     	;# 
  3402  0F48                     	;# 
  3403  0F49                     	;# 
  3404  0F4A                     	;# 
  3405  0F4B                     	;# 
  3406  0F4C                     	;# 
  3407  0F4E                     	;# 
  3408  0F4F                     	;# 
  3409  0F50                     	;# 
  3410  0F51                     	;# 
  3411  0F52                     	;# 
  3412  0F53                     	;# 
  3413  0F54                     	;# 
  3414  0F55                     	;# 
  3415  0F56                     	;# 
  3416  0F57                     	;# 
  3417  0F59                     	;# 
  3418  0F5A                     	;# 
  3419  0F5B                     	;# 
  3420  0F5C                     	;# 
  3421  0F5D                     	;# 
  3422  0F61                     	;# 
  3423  0F62                     	;# 
  3424  0F64                     	;# 
  3425  0F65                     	;# 
  3426  0F66                     	;# 
  3427  0F67                     	;# 
  3428  0F68                     	;# 
  3429  0F69                     	;# 
  3430  0F6A                     	;# 
  3431  0F6B                     	;# 
  3432  0F6C                     	;# 
  3433  0F6D                     	;# 
  3434  0FE4                     	;# 
  3435  0FE5                     	;# 
  3436  0FE6                     	;# 
  3437  0FE7                     	;# 
  3438  0FE8                     	;# 
  3439  0FE9                     	;# 
  3440  0FEA                     	;# 
  3441  0FEB                     	;# 
  3442  0FED                     	;# 
  3443  0FEE                     	;# 
  3444  0FEF                     	;# 
  3445  0000                     	;# 
  3446  0001                     	;# 
  3447  0002                     	;# 
  3448  0003                     	;# 
  3449  0004                     	;# 
  3450  0005                     	;# 
  3451  0006                     	;# 
  3452  0007                     	;# 
  3453  0008                     	;# 
  3454  0009                     	;# 
  3455  000A                     	;# 
  3456  000B                     	;# 
  3457  000C                     	;# 
  3458  000D                     	;# 
  3459  000E                     	;# 
  3460  000F                     	;# 
  3461  0010                     	;# 
  3462  0011                     	;# 
  3463  0012                     	;# 
  3464  0013                     	;# 
  3465  0014                     	;# 
  3466  0015                     	;# 
  3467  0016                     	;# 
  3468  0017                     	;# 
  3469  0018                     	;# 
  3470  0019                     	;# 
  3471  001A                     	;# 
  3472  001C                     	;# 
  3473  001C                     	;# 
  3474  001D                     	;# 
  3475  001D                     	;# 
  3476  001E                     	;# 
  3477  001F                     	;# 
  3478  008C                     	;# 
  3479  008C                     	;# 
  3480  008D                     	;# 
  3481  008E                     	;# 
  3482  008E                     	;# 
  3483  008F                     	;# 
  3484  0090                     	;# 
  3485  0090                     	;# 
  3486  0091                     	;# 
  3487  0093                     	;# 
  3488  0094                     	;# 
  3489  0095                     	;# 
  3490  0096                     	;# 
  3491  0097                     	;# 
  3492  0098                     	;# 
  3493  0099                     	;# 
  3494  009A                     	;# 
  3495  009B                     	;# 
  3496  009C                     	;# 
  3497  009D                     	;# 
  3498  009E                     	;# 
  3499  010C                     	;# 
  3500  010D                     	;# 
  3501  010E                     	;# 
  3502  010E                     	;# 
  3503  010F                     	;# 
  3504  0110                     	;# 
  3505  0110                     	;# 
  3506  0111                     	;# 
  3507  0112                     	;# 
  3508  0112                     	;# 
  3509  0113                     	;# 
  3510  0114                     	;# 
  3511  0114                     	;# 
  3512  0115                     	;# 
  3513  0116                     	;# 
  3514  0116                     	;# 
  3515  0117                     	;# 
  3516  0119                     	;# 
  3517  0119                     	;# 
  3518  0119                     	;# 
  3519  011A                     	;# 
  3520  011A                     	;# 
  3521  011A                     	;# 
  3522  011B                     	;# 
  3523  011B                     	;# 
  3524  011B                     	;# 
  3525  011B                     	;# 
  3526  011B                     	;# 
  3527  011C                     	;# 
  3528  011C                     	;# 
  3529  011C                     	;# 
  3530  011D                     	;# 
  3531  011D                     	;# 
  3532  011D                     	;# 
  3533  011E                     	;# 
  3534  011E                     	;# 
  3535  011E                     	;# 
  3536  011F                     	;# 
  3537  011F                     	;# 
  3538  011F                     	;# 
  3539  011F                     	;# 
  3540  011F                     	;# 
  3541  018C                     	;# 
  3542  018D                     	;# 
  3543  018E                     	;# 
  3544  018F                     	;# 
  3545  0190                     	;# 
  3546  0191                     	;# 
  3547  0192                     	;# 
  3548  0196                     	;# 
  3549  0197                     	;# 
  3550  0198                     	;# 
  3551  0199                     	;# 
  3552  019A                     	;# 
  3553  019B                     	;# 
  3554  019C                     	;# 
  3555  020C                     	;# 
  3556  020C                     	;# 
  3557  020D                     	;# 
  3558  020E                     	;# 
  3559  020F                     	;# 
  3560  020F                     	;# 
  3561  0210                     	;# 
  3562  0210                     	;# 
  3563  0211                     	;# 
  3564  0211                     	;# 
  3565  0212                     	;# 
  3566  0212                     	;# 
  3567  0213                     	;# 
  3568  0214                     	;# 
  3569  0215                     	;# 
  3570  0215                     	;# 
  3571  0216                     	;# 
  3572  0216                     	;# 
  3573  0217                     	;# 
  3574  0217                     	;# 
  3575  0218                     	;# 
  3576  0218                     	;# 
  3577  0219                     	;# 
  3578  021A                     	;# 
  3579  021B                     	;# 
  3580  021B                     	;# 
  3581  021C                     	;# 
  3582  021C                     	;# 
  3583  021D                     	;# 
  3584  021D                     	;# 
  3585  021E                     	;# 
  3586  021F                     	;# 
  3587  028C                     	;# 
  3588  028C                     	;# 
  3589  028D                     	;# 
  3590  028D                     	;# 
  3591  028E                     	;# 
  3592  028F                     	;# 
  3593  0290                     	;# 
  3594  0290                     	;# 
  3595  0291                     	;# 
  3596  0292                     	;# 
  3597  0292                     	;# 
  3598  0293                     	;# 
  3599  0293                     	;# 
  3600  0294                     	;# 
  3601  0295                     	;# 
  3602  0296                     	;# 
  3603  0296                     	;# 
  3604  0297                     	;# 
  3605  0298                     	;# 
  3606  0298                     	;# 
  3607  0299                     	;# 
  3608  0299                     	;# 
  3609  029A                     	;# 
  3610  029B                     	;# 
  3611  029C                     	;# 
  3612  029C                     	;# 
  3613  029D                     	;# 
  3614  030C                     	;# 
  3615  030C                     	;# 
  3616  030D                     	;# 
  3617  030E                     	;# 
  3618  030F                     	;# 
  3619  0310                     	;# 
  3620  0310                     	;# 
  3621  0311                     	;# 
  3622  0312                     	;# 
  3623  0313                     	;# 
  3624  0314                     	;# 
  3625  0314                     	;# 
  3626  0315                     	;# 
  3627  0316                     	;# 
  3628  0317                     	;# 
  3629  0318                     	;# 
  3630  0318                     	;# 
  3631  0319                     	;# 
  3632  031A                     	;# 
  3633  031B                     	;# 
  3634  031C                     	;# 
  3635  031C                     	;# 
  3636  031D                     	;# 
  3637  031E                     	;# 
  3638  031F                     	;# 
  3639  038C                     	;# 
  3640  038C                     	;# 
  3641  038D                     	;# 
  3642  038E                     	;# 
  3643  0390                     	;# 
  3644  0390                     	;# 
  3645  0391                     	;# 
  3646  0392                     	;# 
  3647  040C                     	;# 
  3648  040D                     	;# 
  3649  040E                     	;# 
  3650  040F                     	;# 
  3651  0410                     	;# 
  3652  0411                     	;# 
  3653  0416                     	;# 
  3654  0416                     	;# 
  3655  0417                     	;# 
  3656  0418                     	;# 
  3657  0418                     	;# 
  3658  0419                     	;# 
  3659  041A                     	;# 
  3660  041A                     	;# 
  3661  041B                     	;# 
  3662  041C                     	;# 
  3663  041C                     	;# 
  3664  041D                     	;# 
  3665  041E                     	;# 
  3666  041F                     	;# 
  3667  048C                     	;# 
  3668  048C                     	;# 
  3669  048D                     	;# 
  3670  048E                     	;# 
  3671  048F                     	;# 
  3672  048F                     	;# 
  3673  0490                     	;# 
  3674  0491                     	;# 
  3675  0492                     	;# 
  3676  0492                     	;# 
  3677  0493                     	;# 
  3678  0494                     	;# 
  3679  0495                     	;# 
  3680  0495                     	;# 
  3681  0496                     	;# 
  3682  0497                     	;# 
  3683  0498                     	;# 
  3684  0499                     	;# 
  3685  049A                     	;# 
  3686  049B                     	;# 
  3687  049C                     	;# 
  3688  049D                     	;# 
  3689  050C                     	;# 
  3690  050C                     	;# 
  3691  050D                     	;# 
  3692  050E                     	;# 
  3693  050F                     	;# 
  3694  050F                     	;# 
  3695  0510                     	;# 
  3696  0511                     	;# 
  3697  0512                     	;# 
  3698  0512                     	;# 
  3699  0513                     	;# 
  3700  0514                     	;# 
  3701  0515                     	;# 
  3702  0515                     	;# 
  3703  0516                     	;# 
  3704  0517                     	;# 
  3705  0518                     	;# 
  3706  0519                     	;# 
  3707  051A                     	;# 
  3708  051B                     	;# 
  3709  051C                     	;# 
  3710  051D                     	;# 
  3711  058C                     	;# 
  3712  058C                     	;# 
  3713  058D                     	;# 
  3714  058E                     	;# 
  3715  058F                     	;# 
  3716  058F                     	;# 
  3717  0590                     	;# 
  3718  0591                     	;# 
  3719  0592                     	;# 
  3720  0593                     	;# 
  3721  060C                     	;# 
  3722  060D                     	;# 
  3723  060E                     	;# 
  3724  060F                     	;# 
  3725  0610                     	;# 
  3726  0611                     	;# 
  3727  0612                     	;# 
  3728  0613                     	;# 
  3729  0614                     	;# 
  3730  0616                     	;# 
  3731  0617                     	;# 
  3732  0618                     	;# 
  3733  0619                     	;# 
  3734  061A                     	;# 
  3735  061B                     	;# 
  3736  061C                     	;# 
  3737  061D                     	;# 
  3738  061E                     	;# 
  3739  068C                     	;# 
  3740  068D                     	;# 
  3741  068E                     	;# 
  3742  068F                     	;# 
  3743  0690                     	;# 
  3744  0691                     	;# 
  3745  0692                     	;# 
  3746  0693                     	;# 
  3747  0694                     	;# 
  3748  070C                     	;# 
  3749  070D                     	;# 
  3750  070E                     	;# 
  3751  070F                     	;# 
  3752  0710                     	;# 
  3753  0711                     	;# 
  3754  0712                     	;# 
  3755  0713                     	;# 
  3756  0714                     	;# 
  3757  0716                     	;# 
  3758  0717                     	;# 
  3759  0718                     	;# 
  3760  0719                     	;# 
  3761  071A                     	;# 
  3762  071B                     	;# 
  3763  071C                     	;# 
  3764  071D                     	;# 
  3765  071E                     	;# 
  3766  0796                     	;# 
  3767  0797                     	;# 
  3768  0798                     	;# 
  3769  0799                     	;# 
  3770  079A                     	;# 
  3771  079B                     	;# 
  3772  080C                     	;# 
  3773  080D                     	;# 
  3774  080E                     	;# 
  3775  080F                     	;# 
  3776  0810                     	;# 
  3777  0811                     	;# 
  3778  0812                     	;# 
  3779  0813                     	;# 
  3780  0814                     	;# 
  3781  081A                     	;# 
  3782  081B                     	;# 
  3783  081C                     	;# 
  3784  081D                     	;# 
  3785  081E                     	;# 
  3786  081F                     	;# 
  3787  088C                     	;# 
  3788  088D                     	;# 
  3789  088E                     	;# 
  3790  088F                     	;# 
  3791  0890                     	;# 
  3792  0891                     	;# 
  3793  0892                     	;# 
  3794  0893                     	;# 
  3795  0895                     	;# 
  3796  0896                     	;# 
  3797  0897                     	;# 
  3798  0898                     	;# 
  3799  0899                     	;# 
  3800  089A                     	;# 
  3801  089B                     	;# 
  3802  090C                     	;# 
  3803  090E                     	;# 
  3804  090F                     	;# 
  3805  091F                     	;# 
  3806  091F                     	;# 
  3807  098F                     	;# 
  3808  098F                     	;# 
  3809  0990                     	;# 
  3810  0991                     	;# 
  3811  0992                     	;# 
  3812  0993                     	;# 
  3813  0994                     	;# 
  3814  0995                     	;# 
  3815  0996                     	;# 
  3816  0997                     	;# 
  3817  0E0F                     	;# 
  3818  0E10                     	;# 
  3819  0E11                     	;# 
  3820  0E12                     	;# 
  3821  0E13                     	;# 
  3822  0E14                     	;# 
  3823  0E15                     	;# 
  3824  0E16                     	;# 
  3825  0E17                     	;# 
  3826  0E18                     	;# 
  3827  0E19                     	;# 
  3828  0E1A                     	;# 
  3829  0E1B                     	;# 
  3830  0E1C                     	;# 
  3831  0E1D                     	;# 
  3832  0E1E                     	;# 
  3833  0E1F                     	;# 
  3834  0E20                     	;# 
  3835  0E21                     	;# 
  3836  0E22                     	;# 
  3837  0E23                     	;# 
  3838  0E24                     	;# 
  3839  0E25                     	;# 
  3840  0E26                     	;# 
  3841  0E27                     	;# 
  3842  0E28                     	;# 
  3843  0E29                     	;# 
  3844  0E2A                     	;# 
  3845  0E2B                     	;# 
  3846  0E2C                     	;# 
  3847  0E2D                     	;# 
  3848  0E2E                     	;# 
  3849  0E2F                     	;# 
  3850  0E30                     	;# 
  3851  0E31                     	;# 
  3852  0E32                     	;# 
  3853  0E33                     	;# 
  3854  0E34                     	;# 
  3855  0E35                     	;# 
  3856  0E36                     	;# 
  3857  0E37                     	;# 
  3858  0E8F                     	;# 
  3859  0E90                     	;# 
  3860  0E91                     	;# 
  3861  0E92                     	;# 
  3862  0E93                     	;# 
  3863  0E94                     	;# 
  3864  0E95                     	;# 
  3865  0E96                     	;# 
  3866  0E97                     	;# 
  3867  0E9C                     	;# 
  3868  0E9D                     	;# 
  3869  0E9E                     	;# 
  3870  0EA1                     	;# 
  3871  0EA2                     	;# 
  3872  0EA3                     	;# 
  3873  0EA4                     	;# 
  3874  0EA5                     	;# 
  3875  0EA9                     	;# 
  3876  0EAA                     	;# 
  3877  0EAB                     	;# 
  3878  0EAC                     	;# 
  3879  0EB1                     	;# 
  3880  0EB2                     	;# 
  3881  0EB3                     	;# 
  3882  0EB8                     	;# 
  3883  0EB9                     	;# 
  3884  0EBA                     	;# 
  3885  0EBB                     	;# 
  3886  0EBC                     	;# 
  3887  0EBD                     	;# 
  3888  0EBE                     	;# 
  3889  0EC3                     	;# 
  3890  0EC5                     	;# 
  3891  0EC6                     	;# 
  3892  0EC7                     	;# 
  3893  0EC8                     	;# 
  3894  0EC9                     	;# 
  3895  0ECA                     	;# 
  3896  0ECB                     	;# 
  3897  0ECC                     	;# 
  3898  0F10                     	;# 
  3899  0F11                     	;# 
  3900  0F12                     	;# 
  3901  0F13                     	;# 
  3902  0F14                     	;# 
  3903  0F15                     	;# 
  3904  0F16                     	;# 
  3905  0F17                     	;# 
  3906  0F18                     	;# 
  3907  0F19                     	;# 
  3908  0F1A                     	;# 
  3909  0F1B                     	;# 
  3910  0F1C                     	;# 
  3911  0F1D                     	;# 
  3912  0F1E                     	;# 
  3913  0F1F                     	;# 
  3914  0F20                     	;# 
  3915  0F21                     	;# 
  3916  0F22                     	;# 
  3917  0F23                     	;# 
  3918  0F24                     	;# 
  3919  0F25                     	;# 
  3920  0F26                     	;# 
  3921  0F27                     	;# 
  3922  0F28                     	;# 
  3923  0F29                     	;# 
  3924  0F2A                     	;# 
  3925  0F2B                     	;# 
  3926  0F2C                     	;# 
  3927  0F2D                     	;# 
  3928  0F2E                     	;# 
  3929  0F2F                     	;# 
  3930  0F30                     	;# 
  3931  0F31                     	;# 
  3932  0F32                     	;# 
  3933  0F38                     	;# 
  3934  0F39                     	;# 
  3935  0F3A                     	;# 
  3936  0F3B                     	;# 
  3937  0F3C                     	;# 
  3938  0F3D                     	;# 
  3939  0F3E                     	;# 
  3940  0F3F                     	;# 
  3941  0F40                     	;# 
  3942  0F41                     	;# 
  3943  0F43                     	;# 
  3944  0F44                     	;# 
  3945  0F45                     	;# 
  3946  0F46                     	;# 
  3947  0F47                     	;# 
  3948  0F48                     	;# 
  3949  0F49                     	;# 
  3950  0F4A                     	;# 
  3951  0F4B                     	;# 
  3952  0F4C                     	;# 
  3953  0F4E                     	;# 
  3954  0F4F                     	;# 
  3955  0F50                     	;# 
  3956  0F51                     	;# 
  3957  0F52                     	;# 
  3958  0F53                     	;# 
  3959  0F54                     	;# 
  3960  0F55                     	;# 
  3961  0F56                     	;# 
  3962  0F57                     	;# 
  3963  0F59                     	;# 
  3964  0F5A                     	;# 
  3965  0F5B                     	;# 
  3966  0F5C                     	;# 
  3967  0F5D                     	;# 
  3968  0F61                     	;# 
  3969  0F62                     	;# 
  3970  0F64                     	;# 
  3971  0F65                     	;# 
  3972  0F66                     	;# 
  3973  0F67                     	;# 
  3974  0F68                     	;# 
  3975  0F69                     	;# 
  3976  0F6A                     	;# 
  3977  0F6B                     	;# 
  3978  0F6C                     	;# 
  3979  0F6D                     	;# 
  3980  0FE4                     	;# 
  3981  0FE5                     	;# 
  3982  0FE6                     	;# 
  3983  0FE7                     	;# 
  3984  0FE8                     	;# 
  3985  0FE9                     	;# 
  3986  0FEA                     	;# 
  3987  0FEB                     	;# 
  3988  0FED                     	;# 
  3989  0FEE                     	;# 
  3990  0FEF                     	;# 
  3991  0000                     	;# 
  3992  0001                     	;# 
  3993  0002                     	;# 
  3994  0003                     	;# 
  3995  0004                     	;# 
  3996  0005                     	;# 
  3997  0006                     	;# 
  3998  0007                     	;# 
  3999  0008                     	;# 
  4000  0009                     	;# 
  4001  000A                     	;# 
  4002  000B                     	;# 
  4003  000C                     	;# 
  4004  000D                     	;# 
  4005  000E                     	;# 
  4006  000F                     	;# 
  4007  0010                     	;# 
  4008  0011                     	;# 
  4009  0012                     	;# 
  4010  0013                     	;# 
  4011  0014                     	;# 
  4012  0015                     	;# 
  4013  0016                     	;# 
  4014  0017                     	;# 
  4015  0018                     	;# 
  4016  0019                     	;# 
  4017  001A                     	;# 
  4018  001C                     	;# 
  4019  001C                     	;# 
  4020  001D                     	;# 
  4021  001D                     	;# 
  4022  001E                     	;# 
  4023  001F                     	;# 
  4024  008C                     	;# 
  4025  008C                     	;# 
  4026  008D                     	;# 
  4027  008E                     	;# 
  4028  008E                     	;# 
  4029  008F                     	;# 
  4030  0090                     	;# 
  4031  0090                     	;# 
  4032  0091                     	;# 
  4033  0093                     	;# 
  4034  0094                     	;# 
  4035  0095                     	;# 
  4036  0096                     	;# 
  4037  0097                     	;# 
  4038  0098                     	;# 
  4039  0099                     	;# 
  4040  009A                     	;# 
  4041  009B                     	;# 
  4042  009C                     	;# 
  4043  009D                     	;# 
  4044  009E                     	;# 
  4045  010C                     	;# 
  4046  010D                     	;# 
  4047  010E                     	;# 
  4048  010E                     	;# 
  4049  010F                     	;# 
  4050  0110                     	;# 
  4051  0110                     	;# 
  4052  0111                     	;# 
  4053  0112                     	;# 
  4054  0112                     	;# 
  4055  0113                     	;# 
  4056  0114                     	;# 
  4057  0114                     	;# 
  4058  0115                     	;# 
  4059  0116                     	;# 
  4060  0116                     	;# 
  4061  0117                     	;# 
  4062  0119                     	;# 
  4063  0119                     	;# 
  4064  0119                     	;# 
  4065  011A                     	;# 
  4066  011A                     	;# 
  4067  011A                     	;# 
  4068  011B                     	;# 
  4069  011B                     	;# 
  4070  011B                     	;# 
  4071  011B                     	;# 
  4072  011B                     	;# 
  4073  011C                     	;# 
  4074  011C                     	;# 
  4075  011C                     	;# 
  4076  011D                     	;# 
  4077  011D                     	;# 
  4078  011D                     	;# 
  4079  011E                     	;# 
  4080  011E                     	;# 
  4081  011E                     	;# 
  4082  011F                     	;# 
  4083  011F                     	;# 
  4084  011F                     	;# 
  4085  011F                     	;# 
  4086  011F                     	;# 
  4087  018C                     	;# 
  4088  018D                     	;# 
  4089  018E                     	;# 
  4090  018F                     	;# 
  4091  0190                     	;# 
  4092  0191                     	;# 
  4093  0192                     	;# 
  4094  0196                     	;# 
  4095  0197                     	;# 
  4096  0198                     	;# 
  4097  0199                     	;# 
  4098  019A                     	;# 
  4099  019B                     	;# 
  4100  019C                     	;# 
  4101  020C                     	;# 
  4102  020C                     	;# 
  4103  020D                     	;# 
  4104  020E                     	;# 
  4105  020F                     	;# 
  4106  020F                     	;# 
  4107  0210                     	;# 
  4108  0210                     	;# 
  4109  0211                     	;# 
  4110  0211                     	;# 
  4111  0212                     	;# 
  4112  0212                     	;# 
  4113  0213                     	;# 
  4114  0214                     	;# 
  4115  0215                     	;# 
  4116  0215                     	;# 
  4117  0216                     	;# 
  4118  0216                     	;# 
  4119  0217                     	;# 
  4120  0217                     	;# 
  4121  0218                     	;# 
  4122  0218                     	;# 
  4123  0219                     	;# 
  4124  021A                     	;# 
  4125  021B                     	;# 
  4126  021B                     	;# 
  4127  021C                     	;# 
  4128  021C                     	;# 
  4129  021D                     	;# 
  4130  021D                     	;# 
  4131  021E                     	;# 
  4132  021F                     	;# 
  4133  028C                     	;# 
  4134  028C                     	;# 
  4135  028D                     	;# 
  4136  028D                     	;# 
  4137  028E                     	;# 
  4138  028F                     	;# 
  4139  0290                     	;# 
  4140  0290                     	;# 
  4141  0291                     	;# 
  4142  0292                     	;# 
  4143  0292                     	;# 
  4144  0293                     	;# 
  4145  0293                     	;# 
  4146  0294                     	;# 
  4147  0295                     	;# 
  4148  0296                     	;# 
  4149  0296                     	;# 
  4150  0297                     	;# 
  4151  0298                     	;# 
  4152  0298                     	;# 
  4153  0299                     	;# 
  4154  0299                     	;# 
  4155  029A                     	;# 
  4156  029B                     	;# 
  4157  029C                     	;# 
  4158  029C                     	;# 
  4159  029D                     	;# 
  4160  030C                     	;# 
  4161  030C                     	;# 
  4162  030D                     	;# 
  4163  030E                     	;# 
  4164  030F                     	;# 
  4165  0310                     	;# 
  4166  0310                     	;# 
  4167  0311                     	;# 
  4168  0312                     	;# 
  4169  0313                     	;# 
  4170  0314                     	;# 
  4171  0314                     	;# 
  4172  0315                     	;# 
  4173  0316                     	;# 
  4174  0317                     	;# 
  4175  0318                     	;# 
  4176  0318                     	;# 
  4177  0319                     	;# 
  4178  031A                     	;# 
  4179  031B                     	;# 
  4180  031C                     	;# 
  4181  031C                     	;# 
  4182  031D                     	;# 
  4183  031E                     	;# 
  4184  031F                     	;# 
  4185  038C                     	;# 
  4186  038C                     	;# 
  4187  038D                     	;# 
  4188  038E                     	;# 
  4189  0390                     	;# 
  4190  0390                     	;# 
  4191  0391                     	;# 
  4192  0392                     	;# 
  4193  040C                     	;# 
  4194  040D                     	;# 
  4195  040E                     	;# 
  4196  040F                     	;# 
  4197  0410                     	;# 
  4198  0411                     	;# 
  4199  0416                     	;# 
  4200  0416                     	;# 
  4201  0417                     	;# 
  4202  0418                     	;# 
  4203  0418                     	;# 
  4204  0419                     	;# 
  4205  041A                     	;# 
  4206  041A                     	;# 
  4207  041B                     	;# 
  4208  041C                     	;# 
  4209  041C                     	;# 
  4210  041D                     	;# 
  4211  041E                     	;# 
  4212  041F                     	;# 
  4213  048C                     	;# 
  4214  048C                     	;# 
  4215  048D                     	;# 
  4216  048E                     	;# 
  4217  048F                     	;# 
  4218  048F                     	;# 
  4219  0490                     	;# 
  4220  0491                     	;# 
  4221  0492                     	;# 
  4222  0492                     	;# 
  4223  0493                     	;# 
  4224  0494                     	;# 
  4225  0495                     	;# 
  4226  0495                     	;# 
  4227  0496                     	;# 
  4228  0497                     	;# 
  4229  0498                     	;# 
  4230  0499                     	;# 
  4231  049A                     	;# 
  4232  049B                     	;# 
  4233  049C                     	;# 
  4234  049D                     	;# 
  4235  050C                     	;# 
  4236  050C                     	;# 
  4237  050D                     	;# 
  4238  050E                     	;# 
  4239  050F                     	;# 
  4240  050F                     	;# 
  4241  0510                     	;# 
  4242  0511                     	;# 
  4243  0512                     	;# 
  4244  0512                     	;# 
  4245  0513                     	;# 
  4246  0514                     	;# 
  4247  0515                     	;# 
  4248  0515                     	;# 
  4249  0516                     	;# 
  4250  0517                     	;# 
  4251  0518                     	;# 
  4252  0519                     	;# 
  4253  051A                     	;# 
  4254  051B                     	;# 
  4255  051C                     	;# 
  4256  051D                     	;# 
  4257  058C                     	;# 
  4258  058C                     	;# 
  4259  058D                     	;# 
  4260  058E                     	;# 
  4261  058F                     	;# 
  4262  058F                     	;# 
  4263  0590                     	;# 
  4264  0591                     	;# 
  4265  0592                     	;# 
  4266  0593                     	;# 
  4267  060C                     	;# 
  4268  060D                     	;# 
  4269  060E                     	;# 
  4270  060F                     	;# 
  4271  0610                     	;# 
  4272  0611                     	;# 
  4273  0612                     	;# 
  4274  0613                     	;# 
  4275  0614                     	;# 
  4276  0616                     	;# 
  4277  0617                     	;# 
  4278  0618                     	;# 
  4279  0619                     	;# 
  4280  061A                     	;# 
  4281  061B                     	;# 
  4282  061C                     	;# 
  4283  061D                     	;# 
  4284  061E                     	;# 
  4285  068C                     	;# 
  4286  068D                     	;# 
  4287  068E                     	;# 
  4288  068F                     	;# 
  4289  0690                     	;# 
  4290  0691                     	;# 
  4291  0692                     	;# 
  4292  0693                     	;# 
  4293  0694                     	;# 
  4294  070C                     	;# 
  4295  070D                     	;# 
  4296  070E                     	;# 
  4297  070F                     	;# 
  4298  0710                     	;# 
  4299  0711                     	;# 
  4300  0712                     	;# 
  4301  0713                     	;# 
  4302  0714                     	;# 
  4303  0716                     	;# 
  4304  0717                     	;# 
  4305  0718                     	;# 
  4306  0719                     	;# 
  4307  071A                     	;# 
  4308  071B                     	;# 
  4309  071C                     	;# 
  4310  071D                     	;# 
  4311  071E                     	;# 
  4312  0796                     	;# 
  4313  0797                     	;# 
  4314  0798                     	;# 
  4315  0799                     	;# 
  4316  079A                     	;# 
  4317  079B                     	;# 
  4318  080C                     	;# 
  4319  080D                     	;# 
  4320  080E                     	;# 
  4321  080F                     	;# 
  4322  0810                     	;# 
  4323  0811                     	;# 
  4324  0812                     	;# 
  4325  0813                     	;# 
  4326  0814                     	;# 
  4327  081A                     	;# 
  4328  081B                     	;# 
  4329  081C                     	;# 
  4330  081D                     	;# 
  4331  081E                     	;# 
  4332  081F                     	;# 
  4333  088C                     	;# 
  4334  088D                     	;# 
  4335  088E                     	;# 
  4336  088F                     	;# 
  4337  0890                     	;# 
  4338  0891                     	;# 
  4339  0892                     	;# 
  4340  0893                     	;# 
  4341  0895                     	;# 
  4342  0896                     	;# 
  4343  0897                     	;# 
  4344  0898                     	;# 
  4345  0899                     	;# 
  4346  089A                     	;# 
  4347  089B                     	;# 
  4348  090C                     	;# 
  4349  090E                     	;# 
  4350  090F                     	;# 
  4351  091F                     	;# 
  4352  091F                     	;# 
  4353  098F                     	;# 
  4354  098F                     	;# 
  4355  0990                     	;# 
  4356  0991                     	;# 
  4357  0992                     	;# 
  4358  0993                     	;# 
  4359  0994                     	;# 
  4360  0995                     	;# 
  4361  0996                     	;# 
  4362  0997                     	;# 
  4363  0E0F                     	;# 
  4364  0E10                     	;# 
  4365  0E11                     	;# 
  4366  0E12                     	;# 
  4367  0E13                     	;# 
  4368  0E14                     	;# 
  4369  0E15                     	;# 
  4370  0E16                     	;# 
  4371  0E17                     	;# 
  4372  0E18                     	;# 
  4373  0E19                     	;# 
  4374  0E1A                     	;# 
  4375  0E1B                     	;# 
  4376  0E1C                     	;# 
  4377  0E1D                     	;# 
  4378  0E1E                     	;# 
  4379  0E1F                     	;# 
  4380  0E20                     	;# 
  4381  0E21                     	;# 
  4382  0E22                     	;# 
  4383  0E23                     	;# 
  4384  0E24                     	;# 
  4385  0E25                     	;# 
  4386  0E26                     	;# 
  4387  0E27                     	;# 
  4388  0E28                     	;# 
  4389  0E29                     	;# 
  4390  0E2A                     	;# 
  4391  0E2B                     	;# 
  4392  0E2C                     	;# 
  4393  0E2D                     	;# 
  4394  0E2E                     	;# 
  4395  0E2F                     	;# 
  4396  0E30                     	;# 
  4397  0E31                     	;# 
  4398  0E32                     	;# 
  4399  0E33                     	;# 
  4400  0E34                     	;# 
  4401  0E35                     	;# 
  4402  0E36                     	;# 
  4403  0E37                     	;# 
  4404  0E8F                     	;# 
  4405  0E90                     	;# 
  4406  0E91                     	;# 
  4407  0E92                     	;# 
  4408  0E93                     	;# 
  4409  0E94                     	;# 
  4410  0E95                     	;# 
  4411  0E96                     	;# 
  4412  0E97                     	;# 
  4413  0E9C                     	;# 
  4414  0E9D                     	;# 
  4415  0E9E                     	;# 
  4416  0EA1                     	;# 
  4417  0EA2                     	;# 
  4418  0EA3                     	;# 
  4419  0EA4                     	;# 
  4420  0EA5                     	;# 
  4421  0EA9                     	;# 
  4422  0EAA                     	;# 
  4423  0EAB                     	;# 
  4424  0EAC                     	;# 
  4425  0EB1                     	;# 
  4426  0EB2                     	;# 
  4427  0EB3                     	;# 
  4428  0EB8                     	;# 
  4429  0EB9                     	;# 
  4430  0EBA                     	;# 
  4431  0EBB                     	;# 
  4432  0EBC                     	;# 
  4433  0EBD                     	;# 
  4434  0EBE                     	;# 
  4435  0EC3                     	;# 
  4436  0EC5                     	;# 
  4437  0EC6                     	;# 
  4438  0EC7                     	;# 
  4439  0EC8                     	;# 
  4440  0EC9                     	;# 
  4441  0ECA                     	;# 
  4442  0ECB                     	;# 
  4443  0ECC                     	;# 
  4444  0F10                     	;# 
  4445  0F11                     	;# 
  4446  0F12                     	;# 
  4447  0F13                     	;# 
  4448  0F14                     	;# 
  4449  0F15                     	;# 
  4450  0F16                     	;# 
  4451  0F17                     	;# 
  4452  0F18                     	;# 
  4453  0F19                     	;# 
  4454  0F1A                     	;# 
  4455  0F1B                     	;# 
  4456  0F1C                     	;# 
  4457  0F1D                     	;# 
  4458  0F1E                     	;# 
  4459  0F1F                     	;# 
  4460  0F20                     	;# 
  4461  0F21                     	;# 
  4462  0F22                     	;# 
  4463  0F23                     	;# 
  4464  0F24                     	;# 
  4465  0F25                     	;# 
  4466  0F26                     	;# 
  4467  0F27                     	;# 
  4468  0F28                     	;# 
  4469  0F29                     	;# 
  4470  0F2A                     	;# 
  4471  0F2B                     	;# 
  4472  0F2C                     	;# 
  4473  0F2D                     	;# 
  4474  0F2E                     	;# 
  4475  0F2F                     	;# 
  4476  0F30                     	;# 
  4477  0F31                     	;# 
  4478  0F32                     	;# 
  4479  0F38                     	;# 
  4480  0F39                     	;# 
  4481  0F3A                     	;# 
  4482  0F3B                     	;# 
  4483  0F3C                     	;# 
  4484  0F3D                     	;# 
  4485  0F3E                     	;# 
  4486  0F3F                     	;# 
  4487  0F40                     	;# 
  4488  0F41                     	;# 
  4489  0F43                     	;# 
  4490  0F44                     	;# 
  4491  0F45                     	;# 
  4492  0F46                     	;# 
  4493  0F47                     	;# 
  4494  0F48                     	;# 
  4495  0F49                     	;# 
  4496  0F4A                     	;# 
  4497  0F4B                     	;# 
  4498  0F4C                     	;# 
  4499  0F4E                     	;# 
  4500  0F4F                     	;# 
  4501  0F50                     	;# 
  4502  0F51                     	;# 
  4503  0F52                     	;# 
  4504  0F53                     	;# 
  4505  0F54                     	;# 
  4506  0F55                     	;# 
  4507  0F56                     	;# 
  4508  0F57                     	;# 
  4509  0F59                     	;# 
  4510  0F5A                     	;# 
  4511  0F5B                     	;# 
  4512  0F5C                     	;# 
  4513  0F5D                     	;# 
  4514  0F61                     	;# 
  4515  0F62                     	;# 
  4516  0F64                     	;# 
  4517  0F65                     	;# 
  4518  0F66                     	;# 
  4519  0F67                     	;# 
  4520  0F68                     	;# 
  4521  0F69                     	;# 
  4522  0F6A                     	;# 
  4523  0F6B                     	;# 
  4524  0F6C                     	;# 
  4525  0F6D                     	;# 
  4526  0FE4                     	;# 
  4527  0FE5                     	;# 
  4528  0FE6                     	;# 
  4529  0FE7                     	;# 
  4530  0FE8                     	;# 
  4531  0FE9                     	;# 
  4532  0FEA                     	;# 
  4533  0FEB                     	;# 
  4534  0FED                     	;# 
  4535  0FEE                     	;# 
  4536  0FEF                     	;# 
  4537  0000                     	;# 
  4538  0001                     	;# 
  4539  0002                     	;# 
  4540  0003                     	;# 
  4541  0004                     	;# 
  4542  0005                     	;# 
  4543  0006                     	;# 
  4544  0007                     	;# 
  4545  0008                     	;# 
  4546  0009                     	;# 
  4547  000A                     	;# 
  4548  000B                     	;# 
  4549  000C                     	;# 
  4550  000D                     	;# 
  4551  000E                     	;# 
  4552  000F                     	;# 
  4553  0010                     	;# 
  4554  0011                     	;# 
  4555  0012                     	;# 
  4556  0013                     	;# 
  4557  0014                     	;# 
  4558  0015                     	;# 
  4559  0016                     	;# 
  4560  0017                     	;# 
  4561  0018                     	;# 
  4562  0019                     	;# 
  4563  001A                     	;# 
  4564  001C                     	;# 
  4565  001C                     	;# 
  4566  001D                     	;# 
  4567  001D                     	;# 
  4568  001E                     	;# 
  4569  001F                     	;# 
  4570  008C                     	;# 
  4571  008C                     	;# 
  4572  008D                     	;# 
  4573  008E                     	;# 
  4574  008E                     	;# 
  4575  008F                     	;# 
  4576  0090                     	;# 
  4577  0090                     	;# 
  4578  0091                     	;# 
  4579  0093                     	;# 
  4580  0094                     	;# 
  4581  0095                     	;# 
  4582  0096                     	;# 
  4583  0097                     	;# 
  4584  0098                     	;# 
  4585  0099                     	;# 
  4586  009A                     	;# 
  4587  009B                     	;# 
  4588  009C                     	;# 
  4589  009D                     	;# 
  4590  009E                     	;# 
  4591  010C                     	;# 
  4592  010D                     	;# 
  4593  010E                     	;# 
  4594  010E                     	;# 
  4595  010F                     	;# 
  4596  0110                     	;# 
  4597  0110                     	;# 
  4598  0111                     	;# 
  4599  0112                     	;# 
  4600  0112                     	;# 
  4601  0113                     	;# 
  4602  0114                     	;# 
  4603  0114                     	;# 
  4604  0115                     	;# 
  4605  0116                     	;# 
  4606  0116                     	;# 
  4607  0117                     	;# 
  4608  0119                     	;# 
  4609  0119                     	;# 
  4610  0119                     	;# 
  4611  011A                     	;# 
  4612  011A                     	;# 
  4613  011A                     	;# 
  4614  011B                     	;# 
  4615  011B                     	;# 
  4616  011B                     	;# 
  4617  011B                     	;# 
  4618  011B                     	;# 
  4619  011C                     	;# 
  4620  011C                     	;# 
  4621  011C                     	;# 
  4622  011D                     	;# 
  4623  011D                     	;# 
  4624  011D                     	;# 
  4625  011E                     	;# 
  4626  011E                     	;# 
  4627  011E                     	;# 
  4628  011F                     	;# 
  4629  011F                     	;# 
  4630  011F                     	;# 
  4631  011F                     	;# 
  4632  011F                     	;# 
  4633  018C                     	;# 
  4634  018D                     	;# 
  4635  018E                     	;# 
  4636  018F                     	;# 
  4637  0190                     	;# 
  4638  0191                     	;# 
  4639  0192                     	;# 
  4640  0196                     	;# 
  4641  0197                     	;# 
  4642  0198                     	;# 
  4643  0199                     	;# 
  4644  019A                     	;# 
  4645  019B                     	;# 
  4646  019C                     	;# 
  4647  020C                     	;# 
  4648  020C                     	;# 
  4649  020D                     	;# 
  4650  020E                     	;# 
  4651  020F                     	;# 
  4652  020F                     	;# 
  4653  0210                     	;# 
  4654  0210                     	;# 
  4655  0211                     	;# 
  4656  0211                     	;# 
  4657  0212                     	;# 
  4658  0212                     	;# 
  4659  0213                     	;# 
  4660  0214                     	;# 
  4661  0215                     	;# 
  4662  0215                     	;# 
  4663  0216                     	;# 
  4664  0216                     	;# 
  4665  0217                     	;# 
  4666  0217                     	;# 
  4667  0218                     	;# 
  4668  0218                     	;# 
  4669  0219                     	;# 
  4670  021A                     	;# 
  4671  021B                     	;# 
  4672  021B                     	;# 
  4673  021C                     	;# 
  4674  021C                     	;# 
  4675  021D                     	;# 
  4676  021D                     	;# 
  4677  021E                     	;# 
  4678  021F                     	;# 
  4679  028C                     	;# 
  4680  028C                     	;# 
  4681  028D                     	;# 
  4682  028D                     	;# 
  4683  028E                     	;# 
  4684  028F                     	;# 
  4685  0290                     	;# 
  4686  0290                     	;# 
  4687  0291                     	;# 
  4688  0292                     	;# 
  4689  0292                     	;# 
  4690  0293                     	;# 
  4691  0293                     	;# 
  4692  0294                     	;# 
  4693  0295                     	;# 
  4694  0296                     	;# 
  4695  0296                     	;# 
  4696  0297                     	;# 
  4697  0298                     	;# 
  4698  0298                     	;# 
  4699  0299                     	;# 
  4700  0299                     	;# 
  4701  029A                     	;# 
  4702  029B                     	;# 
  4703  029C                     	;# 
  4704  029C                     	;# 
  4705  029D                     	;# 
  4706  030C                     	;# 
  4707  030C                     	;# 
  4708  030D                     	;# 
  4709  030E                     	;# 
  4710  030F                     	;# 
  4711  0310                     	;# 
  4712  0310                     	;# 
  4713  0311                     	;# 
  4714  0312                     	;# 
  4715  0313                     	;# 
  4716  0314                     	;# 
  4717  0314                     	;# 
  4718  0315                     	;# 
  4719  0316                     	;# 
  4720  0317                     	;# 
  4721  0318                     	;# 
  4722  0318                     	;# 
  4723  0319                     	;# 
  4724  031A                     	;# 
  4725  031B                     	;# 
  4726  031C                     	;# 
  4727  031C                     	;# 
  4728  031D                     	;# 
  4729  031E                     	;# 
  4730  031F                     	;# 
  4731  038C                     	;# 
  4732  038C                     	;# 
  4733  038D                     	;# 
  4734  038E                     	;# 
  4735  0390                     	;# 
  4736  0390                     	;# 
  4737  0391                     	;# 
  4738  0392                     	;# 
  4739  040C                     	;# 
  4740  040D                     	;# 
  4741  040E                     	;# 
  4742  040F                     	;# 
  4743  0410                     	;# 
  4744  0411                     	;# 
  4745  0416                     	;# 
  4746  0416                     	;# 
  4747  0417                     	;# 
  4748  0418                     	;# 
  4749  0418                     	;# 
  4750  0419                     	;# 
  4751  041A                     	;# 
  4752  041A                     	;# 
  4753  041B                     	;# 
  4754  041C                     	;# 
  4755  041C                     	;# 
  4756  041D                     	;# 
  4757  041E                     	;# 
  4758  041F                     	;# 
  4759  048C                     	;# 
  4760  048C                     	;# 
  4761  048D                     	;# 
  4762  048E                     	;# 
  4763  048F                     	;# 
  4764  048F                     	;# 
  4765  0490                     	;# 
  4766  0491                     	;# 
  4767  0492                     	;# 
  4768  0492                     	;# 
  4769  0493                     	;# 
  4770  0494                     	;# 
  4771  0495                     	;# 
  4772  0495                     	;# 
  4773  0496                     	;# 
  4774  0497                     	;# 
  4775  0498                     	;# 
  4776  0499                     	;# 
  4777  049A                     	;# 
  4778  049B                     	;# 
  4779  049C                     	;# 
  4780  049D                     	;# 
  4781  050C                     	;# 
  4782  050C                     	;# 
  4783  050D                     	;# 
  4784  050E                     	;# 
  4785  050F                     	;# 
  4786  050F                     	;# 
  4787  0510                     	;# 
  4788  0511                     	;# 
  4789  0512                     	;# 
  4790  0512                     	;# 
  4791  0513                     	;# 
  4792  0514                     	;# 
  4793  0515                     	;# 
  4794  0515                     	;# 
  4795  0516                     	;# 
  4796  0517                     	;# 
  4797  0518                     	;# 
  4798  0519                     	;# 
  4799  051A                     	;# 
  4800  051B                     	;# 
  4801  051C                     	;# 
  4802  051D                     	;# 
  4803  058C                     	;# 
  4804  058C                     	;# 
  4805  058D                     	;# 
  4806  058E                     	;# 
  4807  058F                     	;# 
  4808  058F                     	;# 
  4809  0590                     	;# 
  4810  0591                     	;# 
  4811  0592                     	;# 
  4812  0593                     	;# 
  4813  060C                     	;# 
  4814  060D                     	;# 
  4815  060E                     	;# 
  4816  060F                     	;# 
  4817  0610                     	;# 
  4818  0611                     	;# 
  4819  0612                     	;# 
  4820  0613                     	;# 
  4821  0614                     	;# 
  4822  0616                     	;# 
  4823  0617                     	;# 
  4824  0618                     	;# 
  4825  0619                     	;# 
  4826  061A                     	;# 
  4827  061B                     	;# 
  4828  061C                     	;# 
  4829  061D                     	;# 
  4830  061E                     	;# 
  4831  068C                     	;# 
  4832  068D                     	;# 
  4833  068E                     	;# 
  4834  068F                     	;# 
  4835  0690                     	;# 
  4836  0691                     	;# 
  4837  0692                     	;# 
  4838  0693                     	;# 
  4839  0694                     	;# 
  4840  070C                     	;# 
  4841  070D                     	;# 
  4842  070E                     	;# 
  4843  070F                     	;# 
  4844  0710                     	;# 
  4845  0711                     	;# 
  4846  0712                     	;# 
  4847  0713                     	;# 
  4848  0714                     	;# 
  4849  0716                     	;# 
  4850  0717                     	;# 
  4851  0718                     	;# 
  4852  0719                     	;# 
  4853  071A                     	;# 
  4854  071B                     	;# 
  4855  071C                     	;# 
  4856  071D                     	;# 
  4857  071E                     	;# 
  4858  0796                     	;# 
  4859  0797                     	;# 
  4860  0798                     	;# 
  4861  0799                     	;# 
  4862  079A                     	;# 
  4863  079B                     	;# 
  4864  080C                     	;# 
  4865  080D                     	;# 
  4866  080E                     	;# 
  4867  080F                     	;# 
  4868  0810                     	;# 
  4869  0811                     	;# 
  4870  0812                     	;# 
  4871  0813                     	;# 
  4872  0814                     	;# 
  4873  081A                     	;# 
  4874  081B                     	;# 
  4875  081C                     	;# 
  4876  081D                     	;# 
  4877  081E                     	;# 
  4878  081F                     	;# 
  4879  088C                     	;# 
  4880  088D                     	;# 
  4881  088E                     	;# 
  4882  088F                     	;# 
  4883  0890                     	;# 
  4884  0891                     	;# 
  4885  0892                     	;# 
  4886  0893                     	;# 
  4887  0895                     	;# 
  4888  0896                     	;# 
  4889  0897                     	;# 
  4890  0898                     	;# 
  4891  0899                     	;# 
  4892  089A                     	;# 
  4893  089B                     	;# 
  4894  090C                     	;# 
  4895  090E                     	;# 
  4896  090F                     	;# 
  4897  091F                     	;# 
  4898  091F                     	;# 
  4899  098F                     	;# 
  4900  098F                     	;# 
  4901  0990                     	;# 
  4902  0991                     	;# 
  4903  0992                     	;# 
  4904  0993                     	;# 
  4905  0994                     	;# 
  4906  0995                     	;# 
  4907  0996                     	;# 
  4908  0997                     	;# 
  4909  0E0F                     	;# 
  4910  0E10                     	;# 
  4911  0E11                     	;# 
  4912  0E12                     	;# 
  4913  0E13                     	;# 
  4914  0E14                     	;# 
  4915  0E15                     	;# 
  4916  0E16                     	;# 
  4917  0E17                     	;# 
  4918  0E18                     	;# 
  4919  0E19                     	;# 
  4920  0E1A                     	;# 
  4921  0E1B                     	;# 
  4922  0E1C                     	;# 
  4923  0E1D                     	;# 
  4924  0E1E                     	;# 
  4925  0E1F                     	;# 
  4926  0E20                     	;# 
  4927  0E21                     	;# 
  4928  0E22                     	;# 
  4929  0E23                     	;# 
  4930  0E24                     	;# 
  4931  0E25                     	;# 
  4932  0E26                     	;# 
  4933  0E27                     	;# 
  4934  0E28                     	;# 
  4935  0E29                     	;# 
  4936  0E2A                     	;# 
  4937  0E2B                     	;# 
  4938  0E2C                     	;# 
  4939  0E2D                     	;# 
  4940  0E2E                     	;# 
  4941  0E2F                     	;# 
  4942  0E30                     	;# 
  4943  0E31                     	;# 
  4944  0E32                     	;# 
  4945  0E33                     	;# 
  4946  0E34                     	;# 
  4947  0E35                     	;# 
  4948  0E36                     	;# 
  4949  0E37                     	;# 
  4950  0E8F                     	;# 
  4951  0E90                     	;# 
  4952  0E91                     	;# 
  4953  0E92                     	;# 
  4954  0E93                     	;# 
  4955  0E94                     	;# 
  4956  0E95                     	;# 
  4957  0E96                     	;# 
  4958  0E97                     	;# 
  4959  0E9C                     	;# 
  4960  0E9D                     	;# 
  4961  0E9E                     	;# 
  4962  0EA1                     	;# 
  4963  0EA2                     	;# 
  4964  0EA3                     	;# 
  4965  0EA4                     	;# 
  4966  0EA5                     	;# 
  4967  0EA9                     	;# 
  4968  0EAA                     	;# 
  4969  0EAB                     	;# 
  4970  0EAC                     	;# 
  4971  0EB1                     	;# 
  4972  0EB2                     	;# 
  4973  0EB3                     	;# 
  4974  0EB8                     	;# 
  4975  0EB9                     	;# 
  4976  0EBA                     	;# 
  4977  0EBB                     	;# 
  4978  0EBC                     	;# 
  4979  0EBD                     	;# 
  4980  0EBE                     	;# 
  4981  0EC3                     	;# 
  4982  0EC5                     	;# 
  4983  0EC6                     	;# 
  4984  0EC7                     	;# 
  4985  0EC8                     	;# 
  4986  0EC9                     	;# 
  4987  0ECA                     	;# 
  4988  0ECB                     	;# 
  4989  0ECC                     	;# 
  4990  0F10                     	;# 
  4991  0F11                     	;# 
  4992  0F12                     	;# 
  4993  0F13                     	;# 
  4994  0F14                     	;# 
  4995  0F15                     	;# 
  4996  0F16                     	;# 
  4997  0F17                     	;# 
  4998  0F18                     	;# 
  4999  0F19                     	;# 
  5000  0F1A                     	;# 
  5001  0F1B                     	;# 
  5002  0F1C                     	;# 
  5003  0F1D                     	;# 
  5004  0F1E                     	;# 
  5005  0F1F                     	;# 
  5006  0F20                     	;# 
  5007  0F21                     	;# 
  5008  0F22                     	;# 
  5009  0F23                     	;# 
  5010  0F24                     	;# 
  5011  0F25                     	;# 
  5012  0F26                     	;# 
  5013  0F27                     	;# 
  5014  0F28                     	;# 
  5015  0F29                     	;# 
  5016  0F2A                     	;# 
  5017  0F2B                     	;# 
  5018  0F2C                     	;# 
  5019  0F2D                     	;# 
  5020  0F2E                     	;# 
  5021  0F2F                     	;# 
  5022  0F30                     	;# 
  5023  0F31                     	;# 
  5024  0F32                     	;# 
  5025  0F38                     	;# 
  5026  0F39                     	;# 
  5027  0F3A                     	;# 
  5028  0F3B                     	;# 
  5029  0F3C                     	;# 
  5030  0F3D                     	;# 
  5031  0F3E                     	;# 
  5032  0F3F                     	;# 
  5033  0F40                     	;# 
  5034  0F41                     	;# 
  5035  0F43                     	;# 
  5036  0F44                     	;# 
  5037  0F45                     	;# 
  5038  0F46                     	;# 
  5039  0F47                     	;# 
  5040  0F48                     	;# 
  5041  0F49                     	;# 
  5042  0F4A                     	;# 
  5043  0F4B                     	;# 
  5044  0F4C                     	;# 
  5045  0F4E                     	;# 
  5046  0F4F                     	;# 
  5047  0F50                     	;# 
  5048  0F51                     	;# 
  5049  0F52                     	;# 
  5050  0F53                     	;# 
  5051  0F54                     	;# 
  5052  0F55                     	;# 
  5053  0F56                     	;# 
  5054  0F57                     	;# 
  5055  0F59                     	;# 
  5056  0F5A                     	;# 
  5057  0F5B                     	;# 
  5058  0F5C                     	;# 
  5059  0F5D                     	;# 
  5060  0F61                     	;# 
  5061  0F62                     	;# 
  5062  0F64                     	;# 
  5063  0F65                     	;# 
  5064  0F66                     	;# 
  5065  0F67                     	;# 
  5066  0F68                     	;# 
  5067  0F69                     	;# 
  5068  0F6A                     	;# 
  5069  0F6B                     	;# 
  5070  0F6C                     	;# 
  5071  0F6D                     	;# 
  5072  0FE4                     	;# 
  5073  0FE5                     	;# 
  5074  0FE6                     	;# 
  5075  0FE7                     	;# 
  5076  0FE8                     	;# 
  5077  0FE9                     	;# 
  5078  0FEA                     	;# 
  5079  0FEB                     	;# 
  5080  0FED                     	;# 
  5081  0FEE                     	;# 
  5082  0FEF                     	;# 
  5083  0000                     	;# 
  5084  0001                     	;# 
  5085  0002                     	;# 
  5086  0003                     	;# 
  5087  0004                     	;# 
  5088  0005                     	;# 
  5089  0006                     	;# 
  5090  0007                     	;# 
  5091  0008                     	;# 
  5092  0009                     	;# 
  5093  000A                     	;# 
  5094  000B                     	;# 
  5095  000C                     	;# 
  5096  000D                     	;# 
  5097  000E                     	;# 
  5098  000F                     	;# 
  5099  0010                     	;# 
  5100  0011                     	;# 
  5101  0012                     	;# 
  5102  0013                     	;# 
  5103  0014                     	;# 
  5104  0015                     	;# 
  5105  0016                     	;# 
  5106  0017                     	;# 
  5107  0018                     	;# 
  5108  0019                     	;# 
  5109  001A                     	;# 
  5110  001C                     	;# 
  5111  001C                     	;# 
  5112  001D                     	;# 
  5113  001D                     	;# 
  5114  001E                     	;# 
  5115  001F                     	;# 
  5116  008C                     	;# 
  5117  008C                     	;# 
  5118  008D                     	;# 
  5119  008E                     	;# 
  5120  008E                     	;# 
  5121  008F                     	;# 
  5122  0090                     	;# 
  5123  0090                     	;# 
  5124  0091                     	;# 
  5125  0093                     	;# 
  5126  0094                     	;# 
  5127  0095                     	;# 
  5128  0096                     	;# 
  5129  0097                     	;# 
  5130  0098                     	;# 
  5131  0099                     	;# 
  5132  009A                     	;# 
  5133  009B                     	;# 
  5134  009C                     	;# 
  5135  009D                     	;# 
  5136  009E                     	;# 
  5137  010C                     	;# 
  5138  010D                     	;# 
  5139  010E                     	;# 
  5140  010E                     	;# 
  5141  010F                     	;# 
  5142  0110                     	;# 
  5143  0110                     	;# 
  5144  0111                     	;# 
  5145  0112                     	;# 
  5146  0112                     	;# 
  5147  0113                     	;# 
  5148  0114                     	;# 
  5149  0114                     	;# 
  5150  0115                     	;# 
  5151  0116                     	;# 
  5152  0116                     	;# 
  5153  0117                     	;# 
  5154  0119                     	;# 
  5155  0119                     	;# 
  5156  0119                     	;# 
  5157  011A                     	;# 
  5158  011A                     	;# 
  5159  011A                     	;# 
  5160  011B                     	;# 
  5161  011B                     	;# 
  5162  011B                     	;# 
  5163  011B                     	;# 
  5164  011B                     	;# 
  5165  011C                     	;# 
  5166  011C                     	;# 
  5167  011C                     	;# 
  5168  011D                     	;# 
  5169  011D                     	;# 
  5170  011D                     	;# 
  5171  011E                     	;# 
  5172  011E                     	;# 
  5173  011E                     	;# 
  5174  011F                     	;# 
  5175  011F                     	;# 
  5176  011F                     	;# 
  5177  011F                     	;# 
  5178  011F                     	;# 
  5179  018C                     	;# 
  5180  018D                     	;# 
  5181  018E                     	;# 
  5182  018F                     	;# 
  5183  0190                     	;# 
  5184  0191                     	;# 
  5185  0192                     	;# 
  5186  0196                     	;# 
  5187  0197                     	;# 
  5188  0198                     	;# 
  5189  0199                     	;# 
  5190  019A                     	;# 
  5191  019B                     	;# 
  5192  019C                     	;# 
  5193  020C                     	;# 
  5194  020C                     	;# 
  5195  020D                     	;# 
  5196  020E                     	;# 
  5197  020F                     	;# 
  5198  020F                     	;# 
  5199  0210                     	;# 
  5200  0210                     	;# 
  5201  0211                     	;# 
  5202  0211                     	;# 
  5203  0212                     	;# 
  5204  0212                     	;# 
  5205  0213                     	;# 
  5206  0214                     	;# 
  5207  0215                     	;# 
  5208  0215                     	;# 
  5209  0216                     	;# 
  5210  0216                     	;# 
  5211  0217                     	;# 
  5212  0217                     	;# 
  5213  0218                     	;# 
  5214  0218                     	;# 
  5215  0219                     	;# 
  5216  021A                     	;# 
  5217  021B                     	;# 
  5218  021B                     	;# 
  5219  021C                     	;# 
  5220  021C                     	;# 
  5221  021D                     	;# 
  5222  021D                     	;# 
  5223  021E                     	;# 
  5224  021F                     	;# 
  5225  028C                     	;# 
  5226  028C                     	;# 
  5227  028D                     	;# 
  5228  028D                     	;# 
  5229  028E                     	;# 
  5230  028F                     	;# 
  5231  0290                     	;# 
  5232  0290                     	;# 
  5233  0291                     	;# 
  5234  0292                     	;# 
  5235  0292                     	;# 
  5236  0293                     	;# 
  5237  0293                     	;# 
  5238  0294                     	;# 
  5239  0295                     	;# 
  5240  0296                     	;# 
  5241  0296                     	;# 
  5242  0297                     	;# 
  5243  0298                     	;# 
  5244  0298                     	;# 
  5245  0299                     	;# 
  5246  0299                     	;# 
  5247  029A                     	;# 
  5248  029B                     	;# 
  5249  029C                     	;# 
  5250  029C                     	;# 
  5251  029D                     	;# 
  5252  030C                     	;# 
  5253  030C                     	;# 
  5254  030D                     	;# 
  5255  030E                     	;# 
  5256  030F                     	;# 
  5257  0310                     	;# 
  5258  0310                     	;# 
  5259  0311                     	;# 
  5260  0312                     	;# 
  5261  0313                     	;# 
  5262  0314                     	;# 
  5263  0314                     	;# 
  5264  0315                     	;# 
  5265  0316                     	;# 
  5266  0317                     	;# 
  5267  0318                     	;# 
  5268  0318                     	;# 
  5269  0319                     	;# 
  5270  031A                     	;# 
  5271  031B                     	;# 
  5272  031C                     	;# 
  5273  031C                     	;# 
  5274  031D                     	;# 
  5275  031E                     	;# 
  5276  031F                     	;# 
  5277  038C                     	;# 
  5278  038C                     	;# 
  5279  038D                     	;# 
  5280  038E                     	;# 
  5281  0390                     	;# 
  5282  0390                     	;# 
  5283  0391                     	;# 
  5284  0392                     	;# 
  5285  040C                     	;# 
  5286  040D                     	;# 
  5287  040E                     	;# 
  5288  040F                     	;# 
  5289  0410                     	;# 
  5290  0411                     	;# 
  5291  0416                     	;# 
  5292  0416                     	;# 
  5293  0417                     	;# 
  5294  0418                     	;# 
  5295  0418                     	;# 
  5296  0419                     	;# 
  5297  041A                     	;# 
  5298  041A                     	;# 
  5299  041B                     	;# 
  5300  041C                     	;# 
  5301  041C                     	;# 
  5302  041D                     	;# 
  5303  041E                     	;# 
  5304  041F                     	;# 
  5305  048C                     	;# 
  5306  048C                     	;# 
  5307  048D                     	;# 
  5308  048E                     	;# 
  5309  048F                     	;# 
  5310  048F                     	;# 
  5311  0490                     	;# 
  5312  0491                     	;# 
  5313  0492                     	;# 
  5314  0492                     	;# 
  5315  0493                     	;# 
  5316  0494                     	;# 
  5317  0495                     	;# 
  5318  0495                     	;# 
  5319  0496                     	;# 
  5320  0497                     	;# 
  5321  0498                     	;# 
  5322  0499                     	;# 
  5323  049A                     	;# 
  5324  049B                     	;# 
  5325  049C                     	;# 
  5326  049D                     	;# 
  5327  050C                     	;# 
  5328  050C                     	;# 
  5329  050D                     	;# 
  5330  050E                     	;# 
  5331  050F                     	;# 
  5332  050F                     	;# 
  5333  0510                     	;# 
  5334  0511                     	;# 
  5335  0512                     	;# 
  5336  0512                     	;# 
  5337  0513                     	;# 
  5338  0514                     	;# 
  5339  0515                     	;# 
  5340  0515                     	;# 
  5341  0516                     	;# 
  5342  0517                     	;# 
  5343  0518                     	;# 
  5344  0519                     	;# 
  5345  051A                     	;# 
  5346  051B                     	;# 
  5347  051C                     	;# 
  5348  051D                     	;# 
  5349  058C                     	;# 
  5350  058C                     	;# 
  5351  058D                     	;# 
  5352  058E                     	;# 
  5353  058F                     	;# 
  5354  058F                     	;# 
  5355  0590                     	;# 
  5356  0591                     	;# 
  5357  0592                     	;# 
  5358  0593                     	;# 
  5359  060C                     	;# 
  5360  060D                     	;# 
  5361  060E                     	;# 
  5362  060F                     	;# 
  5363  0610                     	;# 
  5364  0611                     	;# 
  5365  0612                     	;# 
  5366  0613                     	;# 
  5367  0614                     	;# 
  5368  0616                     	;# 
  5369  0617                     	;# 
  5370  0618                     	;# 
  5371  0619                     	;# 
  5372  061A                     	;# 
  5373  061B                     	;# 
  5374  061C                     	;# 
  5375  061D                     	;# 
  5376  061E                     	;# 
  5377  068C                     	;# 
  5378  068D                     	;# 
  5379  068E                     	;# 
  5380  068F                     	;# 
  5381  0690                     	;# 
  5382  0691                     	;# 
  5383  0692                     	;# 
  5384  0693                     	;# 
  5385  0694                     	;# 
  5386  070C                     	;# 
  5387  070D                     	;# 
  5388  070E                     	;# 
  5389  070F                     	;# 
  5390  0710                     	;# 
  5391  0711                     	;# 
  5392  0712                     	;# 
  5393  0713                     	;# 
  5394  0714                     	;# 
  5395  0716                     	;# 
  5396  0717                     	;# 
  5397  0718                     	;# 
  5398  0719                     	;# 
  5399  071A                     	;# 
  5400  071B                     	;# 
  5401  071C                     	;# 
  5402  071D                     	;# 
  5403  071E                     	;# 
  5404  0796                     	;# 
  5405  0797                     	;# 
  5406  0798                     	;# 
  5407  0799                     	;# 
  5408  079A                     	;# 
  5409  079B                     	;# 
  5410  080C                     	;# 
  5411  080D                     	;# 
  5412  080E                     	;# 
  5413  080F                     	;# 
  5414  0810                     	;# 
  5415  0811                     	;# 
  5416  0812                     	;# 
  5417  0813                     	;# 
  5418  0814                     	;# 
  5419  081A                     	;# 
  5420  081B                     	;# 
  5421  081C                     	;# 
  5422  081D                     	;# 
  5423  081E                     	;# 
  5424  081F                     	;# 
  5425  088C                     	;# 
  5426  088D                     	;# 
  5427  088E                     	;# 
  5428  088F                     	;# 
  5429  0890                     	;# 
  5430  0891                     	;# 
  5431  0892                     	;# 
  5432  0893                     	;# 
  5433  0895                     	;# 
  5434  0896                     	;# 
  5435  0897                     	;# 
  5436  0898                     	;# 
  5437  0899                     	;# 
  5438  089A                     	;# 
  5439  089B                     	;# 
  5440  090C                     	;# 
  5441  090E                     	;# 
  5442  090F                     	;# 
  5443  091F                     	;# 
  5444  091F                     	;# 
  5445  098F                     	;# 
  5446  098F                     	;# 
  5447  0990                     	;# 
  5448  0991                     	;# 
  5449  0992                     	;# 
  5450  0993                     	;# 
  5451  0994                     	;# 
  5452  0995                     	;# 
  5453  0996                     	;# 
  5454  0997                     	;# 
  5455  0E0F                     	;# 
  5456  0E10                     	;# 
  5457  0E11                     	;# 
  5458  0E12                     	;# 
  5459  0E13                     	;# 
  5460  0E14                     	;# 
  5461  0E15                     	;# 
  5462  0E16                     	;# 
  5463  0E17                     	;# 
  5464  0E18                     	;# 
  5465  0E19                     	;# 
  5466  0E1A                     	;# 
  5467  0E1B                     	;# 
  5468  0E1C                     	;# 
  5469  0E1D                     	;# 
  5470  0E1E                     	;# 
  5471  0E1F                     	;# 
  5472  0E20                     	;# 
  5473  0E21                     	;# 
  5474  0E22                     	;# 
  5475  0E23                     	;# 
  5476  0E24                     	;# 
  5477  0E25                     	;# 
  5478  0E26                     	;# 
  5479  0E27                     	;# 
  5480  0E28                     	;# 
  5481  0E29                     	;# 
  5482  0E2A                     	;# 
  5483  0E2B                     	;# 
  5484  0E2C                     	;# 
  5485  0E2D                     	;# 
  5486  0E2E                     	;# 
  5487  0E2F                     	;# 
  5488  0E30                     	;# 
  5489  0E31                     	;# 
  5490  0E32                     	;# 
  5491  0E33                     	;# 
  5492  0E34                     	;# 
  5493  0E35                     	;# 
  5494  0E36                     	;# 
  5495  0E37                     	;# 
  5496  0E8F                     	;# 
  5497  0E90                     	;# 
  5498  0E91                     	;# 
  5499  0E92                     	;# 
  5500  0E93                     	;# 
  5501  0E94                     	;# 
  5502  0E95                     	;# 
  5503  0E96                     	;# 
  5504  0E97                     	;# 
  5505  0E9C                     	;# 
  5506  0E9D                     	;# 
  5507  0E9E                     	;# 
  5508  0EA1                     	;# 
  5509  0EA2                     	;# 
  5510  0EA3                     	;# 
  5511  0EA4                     	;# 
  5512  0EA5                     	;# 
  5513  0EA9                     	;# 
  5514  0EAA                     	;# 
  5515  0EAB                     	;# 
  5516  0EAC                     	;# 
  5517  0EB1                     	;# 
  5518  0EB2                     	;# 
  5519  0EB3                     	;# 
  5520  0EB8                     	;# 
  5521  0EB9                     	;# 
  5522  0EBA                     	;# 
  5523  0EBB                     	;# 
  5524  0EBC                     	;# 
  5525  0EBD                     	;# 
  5526  0EBE                     	;# 
  5527  0EC3                     	;# 
  5528  0EC5                     	;# 
  5529  0EC6                     	;# 
  5530  0EC7                     	;# 
  5531  0EC8                     	;# 
  5532  0EC9                     	;# 
  5533  0ECA                     	;# 
  5534  0ECB                     	;# 
  5535  0ECC                     	;# 
  5536  0F10                     	;# 
  5537  0F11                     	;# 
  5538  0F12                     	;# 
  5539  0F13                     	;# 
  5540  0F14                     	;# 
  5541  0F15                     	;# 
  5542  0F16                     	;# 
  5543  0F17                     	;# 
  5544  0F18                     	;# 
  5545  0F19                     	;# 
  5546  0F1A                     	;# 
  5547  0F1B                     	;# 
  5548  0F1C                     	;# 
  5549  0F1D                     	;# 
  5550  0F1E                     	;# 
  5551  0F1F                     	;# 
  5552  0F20                     	;# 
  5553  0F21                     	;# 
  5554  0F22                     	;# 
  5555  0F23                     	;# 
  5556  0F24                     	;# 
  5557  0F25                     	;# 
  5558  0F26                     	;# 
  5559  0F27                     	;# 
  5560  0F28                     	;# 
  5561  0F29                     	;# 
  5562  0F2A                     	;# 
  5563  0F2B                     	;# 
  5564  0F2C                     	;# 
  5565  0F2D                     	;# 
  5566  0F2E                     	;# 
  5567  0F2F                     	;# 
  5568  0F30                     	;# 
  5569  0F31                     	;# 
  5570  0F32                     	;# 
  5571  0F38                     	;# 
  5572  0F39                     	;# 
  5573  0F3A                     	;# 
  5574  0F3B                     	;# 
  5575  0F3C                     	;# 
  5576  0F3D                     	;# 
  5577  0F3E                     	;# 
  5578  0F3F                     	;# 
  5579  0F40                     	;# 
  5580  0F41                     	;# 
  5581  0F43                     	;# 
  5582  0F44                     	;# 
  5583  0F45                     	;# 
  5584  0F46                     	;# 
  5585  0F47                     	;# 
  5586  0F48                     	;# 
  5587  0F49                     	;# 
  5588  0F4A                     	;# 
  5589  0F4B                     	;# 
  5590  0F4C                     	;# 
  5591  0F4E                     	;# 
  5592  0F4F                     	;# 
  5593  0F50                     	;# 
  5594  0F51                     	;# 
  5595  0F52                     	;# 
  5596  0F53                     	;# 
  5597  0F54                     	;# 
  5598  0F55                     	;# 
  5599  0F56                     	;# 
  5600  0F57                     	;# 
  5601  0F59                     	;# 
  5602  0F5A                     	;# 
  5603  0F5B                     	;# 
  5604  0F5C                     	;# 
  5605  0F5D                     	;# 
  5606  0F61                     	;# 
  5607  0F62                     	;# 
  5608  0F64                     	;# 
  5609  0F65                     	;# 
  5610  0F66                     	;# 
  5611  0F67                     	;# 
  5612  0F68                     	;# 
  5613  0F69                     	;# 
  5614  0F6A                     	;# 
  5615  0F6B                     	;# 
  5616  0F6C                     	;# 
  5617  0F6D                     	;# 
  5618  0FE4                     	;# 
  5619  0FE5                     	;# 
  5620  0FE6                     	;# 
  5621  0FE7                     	;# 
  5622  0FE8                     	;# 
  5623  0FE9                     	;# 
  5624  0FEA                     	;# 
  5625  0FEB                     	;# 
  5626  0FED                     	;# 
  5627  0FEE                     	;# 
  5628  0FEF                     	;# 
  5629  0000                     	;# 
  5630  0001                     	;# 
  5631  0002                     	;# 
  5632  0003                     	;# 
  5633  0004                     	;# 
  5634  0005                     	;# 
  5635  0006                     	;# 
  5636  0007                     	;# 
  5637  0008                     	;# 
  5638  0009                     	;# 
  5639  000A                     	;# 
  5640  000B                     	;# 
  5641  000C                     	;# 
  5642  000D                     	;# 
  5643  000E                     	;# 
  5644  000F                     	;# 
  5645  0010                     	;# 
  5646  0011                     	;# 
  5647  0012                     	;# 
  5648  0013                     	;# 
  5649  0014                     	;# 
  5650  0015                     	;# 
  5651  0016                     	;# 
  5652  0017                     	;# 
  5653  0018                     	;# 
  5654  0019                     	;# 
  5655  001A                     	;# 
  5656  001C                     	;# 
  5657  001C                     	;# 
  5658  001D                     	;# 
  5659  001D                     	;# 
  5660  001E                     	;# 
  5661  001F                     	;# 
  5662  008C                     	;# 
  5663  008C                     	;# 
  5664  008D                     	;# 
  5665  008E                     	;# 
  5666  008E                     	;# 
  5667  008F                     	;# 
  5668  0090                     	;# 
  5669  0090                     	;# 
  5670  0091                     	;# 
  5671  0093                     	;# 
  5672  0094                     	;# 
  5673  0095                     	;# 
  5674  0096                     	;# 
  5675  0097                     	;# 
  5676  0098                     	;# 
  5677  0099                     	;# 
  5678  009A                     	;# 
  5679  009B                     	;# 
  5680  009C                     	;# 
  5681  009D                     	;# 
  5682  009E                     	;# 
  5683  010C                     	;# 
  5684  010D                     	;# 
  5685  010E                     	;# 
  5686  010E                     	;# 
  5687  010F                     	;# 
  5688  0110                     	;# 
  5689  0110                     	;# 
  5690  0111                     	;# 
  5691  0112                     	;# 
  5692  0112                     	;# 
  5693  0113                     	;# 
  5694  0114                     	;# 
  5695  0114                     	;# 
  5696  0115                     	;# 
  5697  0116                     	;# 
  5698  0116                     	;# 
  5699  0117                     	;# 
  5700  0119                     	;# 
  5701  0119                     	;# 
  5702  0119                     	;# 
  5703  011A                     	;# 
  5704  011A                     	;# 
  5705  011A                     	;# 
  5706  011B                     	;# 
  5707  011B                     	;# 
  5708  011B                     	;# 
  5709  011B                     	;# 
  5710  011B                     	;# 
  5711  011C                     	;# 
  5712  011C                     	;# 
  5713  011C                     	;# 
  5714  011D                     	;# 
  5715  011D                     	;# 
  5716  011D                     	;# 
  5717  011E                     	;# 
  5718  011E                     	;# 
  5719  011E                     	;# 
  5720  011F                     	;# 
  5721  011F                     	;# 
  5722  011F                     	;# 
  5723  011F                     	;# 
  5724  011F                     	;# 
  5725  018C                     	;# 
  5726  018D                     	;# 
  5727  018E                     	;# 
  5728  018F                     	;# 
  5729  0190                     	;# 
  5730  0191                     	;# 
  5731  0192                     	;# 
  5732  0196                     	;# 
  5733  0197                     	;# 
  5734  0198                     	;# 
  5735  0199                     	;# 
  5736  019A                     	;# 
  5737  019B                     	;# 
  5738  019C                     	;# 
  5739  020C                     	;# 
  5740  020C                     	;# 
  5741  020D                     	;# 
  5742  020E                     	;# 
  5743  020F                     	;# 
  5744  020F                     	;# 
  5745  0210                     	;# 
  5746  0210                     	;# 
  5747  0211                     	;# 
  5748  0211                     	;# 
  5749  0212                     	;# 
  5750  0212                     	;# 
  5751  0213                     	;# 
  5752  0214                     	;# 
  5753  0215                     	;# 
  5754  0215                     	;# 
  5755  0216                     	;# 
  5756  0216                     	;# 
  5757  0217                     	;# 
  5758  0217                     	;# 
  5759  0218                     	;# 
  5760  0218                     	;# 
  5761  0219                     	;# 
  5762  021A                     	;# 
  5763  021B                     	;# 
  5764  021B                     	;# 
  5765  021C                     	;# 
  5766  021C                     	;# 
  5767  021D                     	;# 
  5768  021D                     	;# 
  5769  021E                     	;# 
  5770  021F                     	;# 
  5771  028C                     	;# 
  5772  028C                     	;# 
  5773  028D                     	;# 
  5774  028D                     	;# 
  5775  028E                     	;# 
  5776  028F                     	;# 
  5777  0290                     	;# 
  5778  0290                     	;# 
  5779  0291                     	;# 
  5780  0292                     	;# 
  5781  0292                     	;# 
  5782  0293                     	;# 
  5783  0293                     	;# 
  5784  0294                     	;# 
  5785  0295                     	;# 
  5786  0296                     	;# 
  5787  0296                     	;# 
  5788  0297                     	;# 
  5789  0298                     	;# 
  5790  0298                     	;# 
  5791  0299                     	;# 
  5792  0299                     	;# 
  5793  029A                     	;# 
  5794  029B                     	;# 
  5795  029C                     	;# 
  5796  029C                     	;# 
  5797  029D                     	;# 
  5798  030C                     	;# 
  5799  030C                     	;# 
  5800  030D                     	;# 
  5801  030E                     	;# 
  5802  030F                     	;# 
  5803  0310                     	;# 
  5804  0310                     	;# 
  5805  0311                     	;# 
  5806  0312                     	;# 
  5807  0313                     	;# 
  5808  0314                     	;# 
  5809  0314                     	;# 
  5810  0315                     	;# 
  5811  0316                     	;# 
  5812  0317                     	;# 
  5813  0318                     	;# 
  5814  0318                     	;# 
  5815  0319                     	;# 
  5816  031A                     	;# 
  5817  031B                     	;# 
  5818  031C                     	;# 
  5819  031C                     	;# 
  5820  031D                     	;# 
  5821  031E                     	;# 
  5822  031F                     	;# 
  5823  038C                     	;# 
  5824  038C                     	;# 
  5825  038D                     	;# 
  5826  038E                     	;# 
  5827  0390                     	;# 
  5828  0390                     	;# 
  5829  0391                     	;# 
  5830  0392                     	;# 
  5831  040C                     	;# 
  5832  040D                     	;# 
  5833  040E                     	;# 
  5834  040F                     	;# 
  5835  0410                     	;# 
  5836  0411                     	;# 
  5837  0416                     	;# 
  5838  0416                     	;# 
  5839  0417                     	;# 
  5840  0418                     	;# 
  5841  0418                     	;# 
  5842  0419                     	;# 
  5843  041A                     	;# 
  5844  041A                     	;# 
  5845  041B                     	;# 
  5846  041C                     	;# 
  5847  041C                     	;# 
  5848  041D                     	;# 
  5849  041E                     	;# 
  5850  041F                     	;# 
  5851  048C                     	;# 
  5852  048C                     	;# 
  5853  048D                     	;# 
  5854  048E                     	;# 
  5855  048F                     	;# 
  5856  048F                     	;# 
  5857  0490                     	;# 
  5858  0491                     	;# 
  5859  0492                     	;# 
  5860  0492                     	;# 
  5861  0493                     	;# 
  5862  0494                     	;# 
  5863  0495                     	;# 
  5864  0495                     	;# 
  5865  0496                     	;# 
  5866  0497                     	;# 
  5867  0498                     	;# 
  5868  0499                     	;# 
  5869  049A                     	;# 
  5870  049B                     	;# 
  5871  049C                     	;# 
  5872  049D                     	;# 
  5873  050C                     	;# 
  5874  050C                     	;# 
  5875  050D                     	;# 
  5876  050E                     	;# 
  5877  050F                     	;# 
  5878  050F                     	;# 
  5879  0510                     	;# 
  5880  0511                     	;# 
  5881  0512                     	;# 
  5882  0512                     	;# 
  5883  0513                     	;# 
  5884  0514                     	;# 
  5885  0515                     	;# 
  5886  0515                     	;# 
  5887  0516                     	;# 
  5888  0517                     	;# 
  5889  0518                     	;# 
  5890  0519                     	;# 
  5891  051A                     	;# 
  5892  051B                     	;# 
  5893  051C                     	;# 
  5894  051D                     	;# 
  5895  058C                     	;# 
  5896  058C                     	;# 
  5897  058D                     	;# 
  5898  058E                     	;# 
  5899  058F                     	;# 
  5900  058F                     	;# 
  5901  0590                     	;# 
  5902  0591                     	;# 
  5903  0592                     	;# 
  5904  0593                     	;# 
  5905  060C                     	;# 
  5906  060D                     	;# 
  5907  060E                     	;# 
  5908  060F                     	;# 
  5909  0610                     	;# 
  5910  0611                     	;# 
  5911  0612                     	;# 
  5912  0613                     	;# 
  5913  0614                     	;# 
  5914  0616                     	;# 
  5915  0617                     	;# 
  5916  0618                     	;# 
  5917  0619                     	;# 
  5918  061A                     	;# 
  5919  061B                     	;# 
  5920  061C                     	;# 
  5921  061D                     	;# 
  5922  061E                     	;# 
  5923  068C                     	;# 
  5924  068D                     	;# 
  5925  068E                     	;# 
  5926  068F                     	;# 
  5927  0690                     	;# 
  5928  0691                     	;# 
  5929  0692                     	;# 
  5930  0693                     	;# 
  5931  0694                     	;# 
  5932  070C                     	;# 
  5933  070D                     	;# 
  5934  070E                     	;# 
  5935  070F                     	;# 
  5936  0710                     	;# 
  5937  0711                     	;# 
  5938  0712                     	;# 
  5939  0713                     	;# 
  5940  0714                     	;# 
  5941  0716                     	;# 
  5942  0717                     	;# 
  5943  0718                     	;# 
  5944  0719                     	;# 
  5945  071A                     	;# 
  5946  071B                     	;# 
  5947  071C                     	;# 
  5948  071D                     	;# 
  5949  071E                     	;# 
  5950  0796                     	;# 
  5951  0797                     	;# 
  5952  0798                     	;# 
  5953  0799                     	;# 
  5954  079A                     	;# 
  5955  079B                     	;# 
  5956  080C                     	;# 
  5957  080D                     	;# 
  5958  080E                     	;# 
  5959  080F                     	;# 
  5960  0810                     	;# 
  5961  0811                     	;# 
  5962  0812                     	;# 
  5963  0813                     	;# 
  5964  0814                     	;# 
  5965  081A                     	;# 
  5966  081B                     	;# 
  5967  081C                     	;# 
  5968  081D                     	;# 
  5969  081E                     	;# 
  5970  081F                     	;# 
  5971  088C                     	;# 
  5972  088D                     	;# 
  5973  088E                     	;# 
  5974  088F                     	;# 
  5975  0890                     	;# 
  5976  0891                     	;# 
  5977  0892                     	;# 
  5978  0893                     	;# 
  5979  0895                     	;# 
  5980  0896                     	;# 
  5981  0897                     	;# 
  5982  0898                     	;# 
  5983  0899                     	;# 
  5984  089A                     	;# 
  5985  089B                     	;# 
  5986  090C                     	;# 
  5987  090E                     	;# 
  5988  090F                     	;# 
  5989  091F                     	;# 
  5990  091F                     	;# 
  5991  098F                     	;# 
  5992  098F                     	;# 
  5993  0990                     	;# 
  5994  0991                     	;# 
  5995  0992                     	;# 
  5996  0993                     	;# 
  5997  0994                     	;# 
  5998  0995                     	;# 
  5999  0996                     	;# 
  6000  0997                     	;# 
  6001  0E0F                     	;# 
  6002  0E10                     	;# 
  6003  0E11                     	;# 
  6004  0E12                     	;# 
  6005  0E13                     	;# 
  6006  0E14                     	;# 
  6007  0E15                     	;# 
  6008  0E16                     	;# 
  6009  0E17                     	;# 
  6010  0E18                     	;# 
  6011  0E19                     	;# 
  6012  0E1A                     	;# 
  6013  0E1B                     	;# 
  6014  0E1C                     	;# 
  6015  0E1D                     	;# 
  6016  0E1E                     	;# 
  6017  0E1F                     	;# 
  6018  0E20                     	;# 
  6019  0E21                     	;# 
  6020  0E22                     	;# 
  6021  0E23                     	;# 
  6022  0E24                     	;# 
  6023  0E25                     	;# 
  6024  0E26                     	;# 
  6025  0E27                     	;# 
  6026  0E28                     	;# 
  6027  0E29                     	;# 
  6028  0E2A                     	;# 
  6029  0E2B                     	;# 
  6030  0E2C                     	;# 
  6031  0E2D                     	;# 
  6032  0E2E                     	;# 
  6033  0E2F                     	;# 
  6034  0E30                     	;# 
  6035  0E31                     	;# 
  6036  0E32                     	;# 
  6037  0E33                     	;# 
  6038  0E34                     	;# 
  6039  0E35                     	;# 
  6040  0E36                     	;# 
  6041  0E37                     	;# 
  6042  0E8F                     	;# 
  6043  0E90                     	;# 
  6044  0E91                     	;# 
  6045  0E92                     	;# 
  6046  0E93                     	;# 
  6047  0E94                     	;# 
  6048  0E95                     	;# 
  6049  0E96                     	;# 
  6050  0E97                     	;# 
  6051  0E9C                     	;# 
  6052  0E9D                     	;# 
  6053  0E9E                     	;# 
  6054  0EA1                     	;# 
  6055  0EA2                     	;# 
  6056  0EA3                     	;# 
  6057  0EA4                     	;# 
  6058  0EA5                     	;# 
  6059  0EA9                     	;# 
  6060  0EAA                     	;# 
  6061  0EAB                     	;# 
  6062  0EAC                     	;# 
  6063  0EB1                     	;# 
  6064  0EB2                     	;# 
  6065  0EB3                     	;# 
  6066  0EB8                     	;# 
  6067  0EB9                     	;# 
  6068  0EBA                     	;# 
  6069  0EBB                     	;# 
  6070  0EBC                     	;# 
  6071  0EBD                     	;# 
  6072  0EBE                     	;# 
  6073  0EC3                     	;# 
  6074  0EC5                     	;# 
  6075  0EC6                     	;# 
  6076  0EC7                     	;# 
  6077  0EC8                     	;# 
  6078  0EC9                     	;# 
  6079  0ECA                     	;# 
  6080  0ECB                     	;# 
  6081  0ECC                     	;# 
  6082  0F10                     	;# 
  6083  0F11                     	;# 
  6084  0F12                     	;# 
  6085  0F13                     	;# 
  6086  0F14                     	;# 
  6087  0F15                     	;# 
  6088  0F16                     	;# 
  6089  0F17                     	;# 
  6090  0F18                     	;# 
  6091  0F19                     	;# 
  6092  0F1A                     	;# 
  6093  0F1B                     	;# 
  6094  0F1C                     	;# 
  6095  0F1D                     	;# 
  6096  0F1E                     	;# 
  6097  0F1F                     	;# 
  6098  0F20                     	;# 
  6099  0F21                     	;# 
  6100  0F22                     	;# 
  6101  0F23                     	;# 
  6102  0F24                     	;# 
  6103  0F25                     	;# 
  6104  0F26                     	;# 
  6105  0F27                     	;# 
  6106  0F28                     	;# 
  6107  0F29                     	;# 
  6108  0F2A                     	;# 
  6109  0F2B                     	;# 
  6110  0F2C                     	;# 
  6111  0F2D                     	;# 
  6112  0F2E                     	;# 
  6113  0F2F                     	;# 
  6114  0F30                     	;# 
  6115  0F31                     	;# 
  6116  0F32                     	;# 
  6117  0F38                     	;# 
  6118  0F39                     	;# 
  6119  0F3A                     	;# 
  6120  0F3B                     	;# 
  6121  0F3C                     	;# 
  6122  0F3D                     	;# 
  6123  0F3E                     	;# 
  6124  0F3F                     	;# 
  6125  0F40                     	;# 
  6126  0F41                     	;# 
  6127  0F43                     	;# 
  6128  0F44                     	;# 
  6129  0F45                     	;# 
  6130  0F46                     	;# 
  6131  0F47                     	;# 
  6132  0F48                     	;# 
  6133  0F49                     	;# 
  6134  0F4A                     	;# 
  6135  0F4B                     	;# 
  6136  0F4C                     	;# 
  6137  0F4E                     	;# 
  6138  0F4F                     	;# 
  6139  0F50                     	;# 
  6140  0F51                     	;# 
  6141  0F52                     	;# 
  6142  0F53                     	;# 
  6143  0F54                     	;# 
  6144  0F55                     	;# 
  6145  0F56                     	;# 
  6146  0F57                     	;# 
  6147  0F59                     	;# 
  6148  0F5A                     	;# 
  6149  0F5B                     	;# 
  6150  0F5C                     	;# 
  6151  0F5D                     	;# 
  6152  0F61                     	;# 
  6153  0F62                     	;# 
  6154  0F64                     	;# 
  6155  0F65                     	;# 
  6156  0F66                     	;# 
  6157  0F67                     	;# 
  6158  0F68                     	;# 
  6159  0F69                     	;# 
  6160  0F6A                     	;# 
  6161  0F6B                     	;# 
  6162  0F6C                     	;# 
  6163  0F6D                     	;# 
  6164  0FE4                     	;# 
  6165  0FE5                     	;# 
  6166  0FE6                     	;# 
  6167  0FE7                     	;# 
  6168  0FE8                     	;# 
  6169  0FE9                     	;# 
  6170  0FEA                     	;# 
  6171  0FEB                     	;# 
  6172  0FED                     	;# 
  6173  0FEE                     	;# 
  6174  0FEF                     	;# 
  6175  0000                     	;# 
  6176  0001                     	;# 
  6177  0002                     	;# 
  6178  0003                     	;# 
  6179  0004                     	;# 
  6180  0005                     	;# 
  6181  0006                     	;# 
  6182  0007                     	;# 
  6183  0008                     	;# 
  6184  0009                     	;# 
  6185  000A                     	;# 
  6186  000B                     	;# 
  6187  000C                     	;# 
  6188  000D                     	;# 
  6189  000E                     	;# 
  6190  000F                     	;# 
  6191  0010                     	;# 
  6192  0011                     	;# 
  6193  0012                     	;# 
  6194  0013                     	;# 
  6195  0014                     	;# 
  6196  0015                     	;# 
  6197  0016                     	;# 
  6198  0017                     	;# 
  6199  0018                     	;# 
  6200  0019                     	;# 
  6201  001A                     	;# 
  6202  001C                     	;# 
  6203  001C                     	;# 
  6204  001D                     	;# 
  6205  001D                     	;# 
  6206  001E                     	;# 
  6207  001F                     	;# 
  6208  008C                     	;# 
  6209  008C                     	;# 
  6210  008D                     	;# 
  6211  008E                     	;# 
  6212  008E                     	;# 
  6213  008F                     	;# 
  6214  0090                     	;# 
  6215  0090                     	;# 
  6216  0091                     	;# 
  6217  0093                     	;# 
  6218  0094                     	;# 
  6219  0095                     	;# 
  6220  0096                     	;# 
  6221  0097                     	;# 
  6222  0098                     	;# 
  6223  0099                     	;# 
  6224  009A                     	;# 
  6225  009B                     	;# 
  6226  009C                     	;# 
  6227  009D                     	;# 
  6228  009E                     	;# 
  6229  010C                     	;# 
  6230  010D                     	;# 
  6231  010E                     	;# 
  6232  010E                     	;# 
  6233  010F                     	;# 
  6234  0110                     	;# 
  6235  0110                     	;# 
  6236  0111                     	;# 
  6237  0112                     	;# 
  6238  0112                     	;# 
  6239  0113                     	;# 
  6240  0114                     	;# 
  6241  0114                     	;# 
  6242  0115                     	;# 
  6243  0116                     	;# 
  6244  0116                     	;# 
  6245  0117                     	;# 
  6246  0119                     	;# 
  6247  0119                     	;# 
  6248  0119                     	;# 
  6249  011A                     	;# 
  6250  011A                     	;# 
  6251  011A                     	;# 
  6252  011B                     	;# 
  6253  011B                     	;# 
  6254  011B                     	;# 
  6255  011B                     	;# 
  6256  011B                     	;# 
  6257  011C                     	;# 
  6258  011C                     	;# 
  6259  011C                     	;# 
  6260  011D                     	;# 
  6261  011D                     	;# 
  6262  011D                     	;# 
  6263  011E                     	;# 
  6264  011E                     	;# 
  6265  011E                     	;# 
  6266  011F                     	;# 
  6267  011F                     	;# 
  6268  011F                     	;# 
  6269  011F                     	;# 
  6270  011F                     	;# 
  6271  018C                     	;# 
  6272  018D                     	;# 
  6273  018E                     	;# 
  6274  018F                     	;# 
  6275  0190                     	;# 
  6276  0191                     	;# 
  6277  0192                     	;# 
  6278  0196                     	;# 
  6279  0197                     	;# 
  6280  0198                     	;# 
  6281  0199                     	;# 
  6282  019A                     	;# 
  6283  019B                     	;# 
  6284  019C                     	;# 
  6285  020C                     	;# 
  6286  020C                     	;# 
  6287  020D                     	;# 
  6288  020E                     	;# 
  6289  020F                     	;# 
  6290  020F                     	;# 
  6291  0210                     	;# 
  6292  0210                     	;# 
  6293  0211                     	;# 
  6294  0211                     	;# 
  6295  0212                     	;# 
  6296  0212                     	;# 
  6297  0213                     	;# 
  6298  0214                     	;# 
  6299  0215                     	;# 
  6300  0215                     	;# 
  6301  0216                     	;# 
  6302  0216                     	;# 
  6303  0217                     	;# 
  6304  0217                     	;# 
  6305  0218                     	;# 
  6306  0218                     	;# 
  6307  0219                     	;# 
  6308  021A                     	;# 
  6309  021B                     	;# 
  6310  021B                     	;# 
  6311  021C                     	;# 
  6312  021C                     	;# 
  6313  021D                     	;# 
  6314  021D                     	;# 
  6315  021E                     	;# 
  6316  021F                     	;# 
  6317  028C                     	;# 
  6318  028C                     	;# 
  6319  028D                     	;# 
  6320  028D                     	;# 
  6321  028E                     	;# 
  6322  028F                     	;# 
  6323  0290                     	;# 
  6324  0290                     	;# 
  6325  0291                     	;# 
  6326  0292                     	;# 
  6327  0292                     	;# 
  6328  0293                     	;# 
  6329  0293                     	;# 
  6330  0294                     	;# 
  6331  0295                     	;# 
  6332  0296                     	;# 
  6333  0296                     	;# 
  6334  0297                     	;# 
  6335  0298                     	;# 
  6336  0298                     	;# 
  6337  0299                     	;# 
  6338  0299                     	;# 
  6339  029A                     	;# 
  6340  029B                     	;# 
  6341  029C                     	;# 
  6342  029C                     	;# 
  6343  029D                     	;# 
  6344  030C                     	;# 
  6345  030C                     	;# 
  6346  030D                     	;# 
  6347  030E                     	;# 
  6348  030F                     	;# 
  6349  0310                     	;# 
  6350  0310                     	;# 
  6351  0311                     	;# 
  6352  0312                     	;# 
  6353  0313                     	;# 
  6354  0314                     	;# 
  6355  0314                     	;# 
  6356  0315                     	;# 
  6357  0316                     	;# 
  6358  0317                     	;# 
  6359  0318                     	;# 
  6360  0318                     	;# 
  6361  0319                     	;# 
  6362  031A                     	;# 
  6363  031B                     	;# 
  6364  031C                     	;# 
  6365  031C                     	;# 
  6366  031D                     	;# 
  6367  031E                     	;# 
  6368  031F                     	;# 
  6369  038C                     	;# 
  6370  038C                     	;# 
  6371  038D                     	;# 
  6372  038E                     	;# 
  6373  0390                     	;# 
  6374  0390                     	;# 
  6375  0391                     	;# 
  6376  0392                     	;# 
  6377  040C                     	;# 
  6378  040D                     	;# 
  6379  040E                     	;# 
  6380  040F                     	;# 
  6381  0410                     	;# 
  6382  0411                     	;# 
  6383  0416                     	;# 
  6384  0416                     	;# 
  6385  0417                     	;# 
  6386  0418                     	;# 
  6387  0418                     	;# 
  6388  0419                     	;# 
  6389  041A                     	;# 
  6390  041A                     	;# 
  6391  041B                     	;# 
  6392  041C                     	;# 
  6393  041C                     	;# 
  6394  041D                     	;# 
  6395  041E                     	;# 
  6396  041F                     	;# 
  6397  048C                     	;# 
  6398  048C                     	;# 
  6399  048D                     	;# 
  6400  048E                     	;# 
  6401  048F                     	;# 
  6402  048F                     	;# 
  6403  0490                     	;# 
  6404  0491                     	;# 
  6405  0492                     	;# 
  6406  0492                     	;# 
  6407  0493                     	;# 
  6408  0494                     	;# 
  6409  0495                     	;# 
  6410  0495                     	;# 
  6411  0496                     	;# 
  6412  0497                     	;# 
  6413  0498                     	;# 
  6414  0499                     	;# 
  6415  049A                     	;# 
  6416  049B                     	;# 
  6417  049C                     	;# 
  6418  049D                     	;# 
  6419  050C                     	;# 
  6420  050C                     	;# 
  6421  050D                     	;# 
  6422  050E                     	;# 
  6423  050F                     	;# 
  6424  050F                     	;# 
  6425  0510                     	;# 
  6426  0511                     	;# 
  6427  0512                     	;# 
  6428  0512                     	;# 
  6429  0513                     	;# 
  6430  0514                     	;# 
  6431  0515                     	;# 
  6432  0515                     	;# 
  6433  0516                     	;# 
  6434  0517                     	;# 
  6435  0518                     	;# 
  6436  0519                     	;# 
  6437  051A                     	;# 
  6438  051B                     	;# 
  6439  051C                     	;# 
  6440  051D                     	;# 
  6441  058C                     	;# 
  6442  058C                     	;# 
  6443  058D                     	;# 
  6444  058E                     	;# 
  6445  058F                     	;# 
  6446  058F                     	;# 
  6447  0590                     	;# 
  6448  0591                     	;# 
  6449  0592                     	;# 
  6450  0593                     	;# 
  6451  060C                     	;# 
  6452  060D                     	;# 
  6453  060E                     	;# 
  6454  060F                     	;# 
  6455  0610                     	;# 
  6456  0611                     	;# 
  6457  0612                     	;# 
  6458  0613                     	;# 
  6459  0614                     	;# 
  6460  0616                     	;# 
  6461  0617                     	;# 
  6462  0618                     	;# 
  6463  0619                     	;# 
  6464  061A                     	;# 
  6465  061B                     	;# 
  6466  061C                     	;# 
  6467  061D                     	;# 
  6468  061E                     	;# 
  6469  068C                     	;# 
  6470  068D                     	;# 
  6471  068E                     	;# 
  6472  068F                     	;# 
  6473  0690                     	;# 
  6474  0691                     	;# 
  6475  0692                     	;# 
  6476  0693                     	;# 
  6477  0694                     	;# 
  6478  070C                     	;# 
  6479  070D                     	;# 
  6480  070E                     	;# 
  6481  070F                     	;# 
  6482  0710                     	;# 
  6483  0711                     	;# 
  6484  0712                     	;# 
  6485  0713                     	;# 
  6486  0714                     	;# 
  6487  0716                     	;# 
  6488  0717                     	;# 
  6489  0718                     	;# 
  6490  0719                     	;# 
  6491  071A                     	;# 
  6492  071B                     	;# 
  6493  071C                     	;# 
  6494  071D                     	;# 
  6495  071E                     	;# 
  6496  0796                     	;# 
  6497  0797                     	;# 
  6498  0798                     	;# 
  6499  0799                     	;# 
  6500  079A                     	;# 
  6501  079B                     	;# 
  6502  080C                     	;# 
  6503  080D                     	;# 
  6504  080E                     	;# 
  6505  080F                     	;# 
  6506  0810                     	;# 
  6507  0811                     	;# 
  6508  0812                     	;# 
  6509  0813                     	;# 
  6510  0814                     	;# 
  6511  081A                     	;# 
  6512  081B                     	;# 
  6513  081C                     	;# 
  6514  081D                     	;# 
  6515  081E                     	;# 
  6516  081F                     	;# 
  6517  088C                     	;# 
  6518  088D                     	;# 
  6519  088E                     	;# 
  6520  088F                     	;# 
  6521  0890                     	;# 
  6522  0891                     	;# 
  6523  0892                     	;# 
  6524  0893                     	;# 
  6525  0895                     	;# 
  6526  0896                     	;# 
  6527  0897                     	;# 
  6528  0898                     	;# 
  6529  0899                     	;# 
  6530  089A                     	;# 
  6531  089B                     	;# 
  6532  090C                     	;# 
  6533  090E                     	;# 
  6534  090F                     	;# 
  6535  091F                     	;# 
  6536  091F                     	;# 
  6537  098F                     	;# 
  6538  098F                     	;# 
  6539  0990                     	;# 
  6540  0991                     	;# 
  6541  0992                     	;# 
  6542  0993                     	;# 
  6543  0994                     	;# 
  6544  0995                     	;# 
  6545  0996                     	;# 
  6546  0997                     	;# 
  6547  0E0F                     	;# 
  6548  0E10                     	;# 
  6549  0E11                     	;# 
  6550  0E12                     	;# 
  6551  0E13                     	;# 
  6552  0E14                     	;# 
  6553  0E15                     	;# 
  6554  0E16                     	;# 
  6555  0E17                     	;# 
  6556  0E18                     	;# 
  6557  0E19                     	;# 
  6558  0E1A                     	;# 
  6559  0E1B                     	;# 
  6560  0E1C                     	;# 
  6561  0E1D                     	;# 
  6562  0E1E                     	;# 
  6563  0E1F                     	;# 
  6564  0E20                     	;# 
  6565  0E21                     	;# 
  6566  0E22                     	;# 
  6567  0E23                     	;# 
  6568  0E24                     	;# 
  6569  0E25                     	;# 
  6570  0E26                     	;# 
  6571  0E27                     	;# 
  6572  0E28                     	;# 
  6573  0E29                     	;# 
  6574  0E2A                     	;# 
  6575  0E2B                     	;# 
  6576  0E2C                     	;# 
  6577  0E2D                     	;# 
  6578  0E2E                     	;# 
  6579  0E2F                     	;# 
  6580  0E30                     	;# 
  6581  0E31                     	;# 
  6582  0E32                     	;# 
  6583  0E33                     	;# 
  6584  0E34                     	;# 
  6585  0E35                     	;# 
  6586  0E36                     	;# 
  6587  0E37                     	;# 
  6588  0E8F                     	;# 
  6589  0E90                     	;# 
  6590  0E91                     	;# 
  6591  0E92                     	;# 
  6592  0E93                     	;# 
  6593  0E94                     	;# 
  6594  0E95                     	;# 
  6595  0E96                     	;# 
  6596  0E97                     	;# 
  6597  0E9C                     	;# 
  6598  0E9D                     	;# 
  6599  0E9E                     	;# 
  6600  0EA1                     	;# 
  6601  0EA2                     	;# 
  6602  0EA3                     	;# 
  6603  0EA4                     	;# 
  6604  0EA5                     	;# 
  6605  0EA9                     	;# 
  6606  0EAA                     	;# 
  6607  0EAB                     	;# 
  6608  0EAC                     	;# 
  6609  0EB1                     	;# 
  6610  0EB2                     	;# 
  6611  0EB3                     	;# 
  6612  0EB8                     	;# 
  6613  0EB9                     	;# 
  6614  0EBA                     	;# 
  6615  0EBB                     	;# 
  6616  0EBC                     	;# 
  6617  0EBD                     	;# 
  6618  0EBE                     	;# 
  6619  0EC3                     	;# 
  6620  0EC5                     	;# 
  6621  0EC6                     	;# 
  6622  0EC7                     	;# 
  6623  0EC8                     	;# 
  6624  0EC9                     	;# 
  6625  0ECA                     	;# 
  6626  0ECB                     	;# 
  6627  0ECC                     	;# 
  6628  0F10                     	;# 
  6629  0F11                     	;# 
  6630  0F12                     	;# 
  6631  0F13                     	;# 
  6632  0F14                     	;# 
  6633  0F15                     	;# 
  6634  0F16                     	;# 
  6635  0F17                     	;# 
  6636  0F18                     	;# 
  6637  0F19                     	;# 
  6638  0F1A                     	;# 
  6639  0F1B                     	;# 
  6640  0F1C                     	;# 
  6641  0F1D                     	;# 
  6642  0F1E                     	;# 
  6643  0F1F                     	;# 
  6644  0F20                     	;# 
  6645  0F21                     	;# 
  6646  0F22                     	;# 
  6647  0F23                     	;# 
  6648  0F24                     	;# 
  6649  0F25                     	;# 
  6650  0F26                     	;# 
  6651  0F27                     	;# 
  6652  0F28                     	;# 
  6653  0F29                     	;# 
  6654  0F2A                     	;# 
  6655  0F2B                     	;# 
  6656  0F2C                     	;# 
  6657  0F2D                     	;# 
  6658  0F2E                     	;# 
  6659  0F2F                     	;# 
  6660  0F30                     	;# 
  6661  0F31                     	;# 
  6662  0F32                     	;# 
  6663  0F38                     	;# 
  6664  0F39                     	;# 
  6665  0F3A                     	;# 
  6666  0F3B                     	;# 
  6667  0F3C                     	;# 
  6668  0F3D                     	;# 
  6669  0F3E                     	;# 
  6670  0F3F                     	;# 
  6671  0F40                     	;# 
  6672  0F41                     	;# 
  6673  0F43                     	;# 
  6674  0F44                     	;# 
  6675  0F45                     	;# 
  6676  0F46                     	;# 
  6677  0F47                     	;# 
  6678  0F48                     	;# 
  6679  0F49                     	;# 
  6680  0F4A                     	;# 
  6681  0F4B                     	;# 
  6682  0F4C                     	;# 
  6683  0F4E                     	;# 
  6684  0F4F                     	;# 
  6685  0F50                     	;# 
  6686  0F51                     	;# 
  6687  0F52                     	;# 
  6688  0F53                     	;# 
  6689  0F54                     	;# 
  6690  0F55                     	;# 
  6691  0F56                     	;# 
  6692  0F57                     	;# 
  6693  0F59                     	;# 
  6694  0F5A                     	;# 
  6695  0F5B                     	;# 
  6696  0F5C                     	;# 
  6697  0F5D                     	;# 
  6698  0F61                     	;# 
  6699  0F62                     	;# 
  6700  0F64                     	;# 
  6701  0F65                     	;# 
  6702  0F66                     	;# 
  6703  0F67                     	;# 
  6704  0F68                     	;# 
  6705  0F69                     	;# 
  6706  0F6A                     	;# 
  6707  0F6B                     	;# 
  6708  0F6C                     	;# 
  6709  0F6D                     	;# 
  6710  0FE4                     	;# 
  6711  0FE5                     	;# 
  6712  0FE6                     	;# 
  6713  0FE7                     	;# 
  6714  0FE8                     	;# 
  6715  0FE9                     	;# 
  6716  0FEA                     	;# 
  6717  0FEB                     	;# 
  6718  0FED                     	;# 
  6719  0FEE                     	;# 
  6720  0FEF                     	;# 
  6721  0000                     	;# 
  6722  0001                     	;# 
  6723  0002                     	;# 
  6724  0003                     	;# 
  6725  0004                     	;# 
  6726  0005                     	;# 
  6727  0006                     	;# 
  6728  0007                     	;# 
  6729  0008                     	;# 
  6730  0009                     	;# 
  6731  000A                     	;# 
  6732  000B                     	;# 
  6733  000C                     	;# 
  6734  000D                     	;# 
  6735  000E                     	;# 
  6736  000F                     	;# 
  6737  0010                     	;# 
  6738  0011                     	;# 
  6739  0012                     	;# 
  6740  0013                     	;# 
  6741  0014                     	;# 
  6742  0015                     	;# 
  6743  0016                     	;# 
  6744  0017                     	;# 
  6745  0018                     	;# 
  6746  0019                     	;# 
  6747  001A                     	;# 
  6748  001C                     	;# 
  6749  001C                     	;# 
  6750  001D                     	;# 
  6751  001D                     	;# 
  6752  001E                     	;# 
  6753  001F                     	;# 
  6754  008C                     	;# 
  6755  008C                     	;# 
  6756  008D                     	;# 
  6757  008E                     	;# 
  6758  008E                     	;# 
  6759  008F                     	;# 
  6760  0090                     	;# 
  6761  0090                     	;# 
  6762  0091                     	;# 
  6763  0093                     	;# 
  6764  0094                     	;# 
  6765  0095                     	;# 
  6766  0096                     	;# 
  6767  0097                     	;# 
  6768  0098                     	;# 
  6769  0099                     	;# 
  6770  009A                     	;# 
  6771  009B                     	;# 
  6772  009C                     	;# 
  6773  009D                     	;# 
  6774  009E                     	;# 
  6775  010C                     	;# 
  6776  010D                     	;# 
  6777  010E                     	;# 
  6778  010E                     	;# 
  6779  010F                     	;# 
  6780  0110                     	;# 
  6781  0110                     	;# 
  6782  0111                     	;# 
  6783  0112                     	;# 
  6784  0112                     	;# 
  6785  0113                     	;# 
  6786  0114                     	;# 
  6787  0114                     	;# 
  6788  0115                     	;# 
  6789  0116                     	;# 
  6790  0116                     	;# 
  6791  0117                     	;# 
  6792  0119                     	;# 
  6793  0119                     	;# 
  6794  0119                     	;# 
  6795  011A                     	;# 
  6796  011A                     	;# 
  6797  011A                     	;# 
  6798  011B                     	;# 
  6799  011B                     	;# 
  6800  011B                     	;# 
  6801  011B                     	;# 
  6802  011B                     	;# 
  6803  011C                     	;# 
  6804  011C                     	;# 
  6805  011C                     	;# 
  6806  011D                     	;# 
  6807  011D                     	;# 
  6808  011D                     	;# 
  6809  011E                     	;# 
  6810  011E                     	;# 
  6811  011E                     	;# 
  6812  011F                     	;# 
  6813  011F                     	;# 
  6814  011F                     	;# 
  6815  011F                     	;# 
  6816  011F                     	;# 
  6817  018C                     	;# 
  6818  018D                     	;# 
  6819  018E                     	;# 
  6820  018F                     	;# 
  6821  0190                     	;# 
  6822  0191                     	;# 
  6823  0192                     	;# 
  6824  0196                     	;# 
  6825  0197                     	;# 
  6826  0198                     	;# 
  6827  0199                     	;# 
  6828  019A                     	;# 
  6829  019B                     	;# 
  6830  019C                     	;# 
  6831  020C                     	;# 
  6832  020C                     	;# 
  6833  020D                     	;# 
  6834  020E                     	;# 
  6835  020F                     	;# 
  6836  020F                     	;# 
  6837  0210                     	;# 
  6838  0210                     	;# 
  6839  0211                     	;# 
  6840  0211                     	;# 
  6841  0212                     	;# 
  6842  0212                     	;# 
  6843  0213                     	;# 
  6844  0214                     	;# 
  6845  0215                     	;# 
  6846  0215                     	;# 
  6847  0216                     	;# 
  6848  0216                     	;# 
  6849  0217                     	;# 
  6850  0217                     	;# 
  6851  0218                     	;# 
  6852  0218                     	;# 
  6853  0219                     	;# 
  6854  021A                     	;# 
  6855  021B                     	;# 
  6856  021B                     	;# 
  6857  021C                     	;# 
  6858  021C                     	;# 
  6859  021D                     	;# 
  6860  021D                     	;# 
  6861  021E                     	;# 
  6862  021F                     	;# 
  6863  028C                     	;# 
  6864  028C                     	;# 
  6865  028D                     	;# 
  6866  028D                     	;# 
  6867  028E                     	;# 
  6868  028F                     	;# 
  6869  0290                     	;# 
  6870  0290                     	;# 
  6871  0291                     	;# 
  6872  0292                     	;# 
  6873  0292                     	;# 
  6874  0293                     	;# 
  6875  0293                     	;# 
  6876  0294                     	;# 
  6877  0295                     	;# 
  6878  0296                     	;# 
  6879  0296                     	;# 
  6880  0297                     	;# 
  6881  0298                     	;# 
  6882  0298                     	;# 
  6883  0299                     	;# 
  6884  0299                     	;# 
  6885  029A                     	;# 
  6886  029B                     	;# 
  6887  029C                     	;# 
  6888  029C                     	;# 
  6889  029D                     	;# 
  6890  030C                     	;# 
  6891  030C                     	;# 
  6892  030D                     	;# 
  6893  030E                     	;# 
  6894  030F                     	;# 
  6895  0310                     	;# 
  6896  0310                     	;# 
  6897  0311                     	;# 
  6898  0312                     	;# 
  6899  0313                     	;# 
  6900  0314                     	;# 
  6901  0314                     	;# 
  6902  0315                     	;# 
  6903  0316                     	;# 
  6904  0317                     	;# 
  6905  0318                     	;# 
  6906  0318                     	;# 
  6907  0319                     	;# 
  6908  031A                     	;# 
  6909  031B                     	;# 
  6910  031C                     	;# 
  6911  031C                     	;# 
  6912  031D                     	;# 
  6913  031E                     	;# 
  6914  031F                     	;# 
  6915  038C                     	;# 
  6916  038C                     	;# 
  6917  038D                     	;# 
  6918  038E                     	;# 
  6919  0390                     	;# 
  6920  0390                     	;# 
  6921  0391                     	;# 
  6922  0392                     	;# 
  6923  040C                     	;# 
  6924  040D                     	;# 
  6925  040E                     	;# 
  6926  040F                     	;# 
  6927  0410                     	;# 
  6928  0411                     	;# 
  6929  0416                     	;# 
  6930  0416                     	;# 
  6931  0417                     	;# 
  6932  0418                     	;# 
  6933  0418                     	;# 
  6934  0419                     	;# 
  6935  041A                     	;# 
  6936  041A                     	;# 
  6937  041B                     	;# 
  6938  041C                     	;# 
  6939  041C                     	;# 
  6940  041D                     	;# 
  6941  041E                     	;# 
  6942  041F                     	;# 
  6943  048C                     	;# 
  6944  048C                     	;# 
  6945  048D                     	;# 
  6946  048E                     	;# 
  6947  048F                     	;# 
  6948  048F                     	;# 
  6949  0490                     	;# 
  6950  0491                     	;# 
  6951  0492                     	;# 
  6952  0492                     	;# 
  6953  0493                     	;# 
  6954  0494                     	;# 
  6955  0495                     	;# 
  6956  0495                     	;# 
  6957  0496                     	;# 
  6958  0497                     	;# 
  6959  0498                     	;# 
  6960  0499                     	;# 
  6961  049A                     	;# 
  6962  049B                     	;# 
  6963  049C                     	;# 
  6964  049D                     	;# 
  6965  050C                     	;# 
  6966  050C                     	;# 
  6967  050D                     	;# 
  6968  050E                     	;# 
  6969  050F                     	;# 
  6970  050F                     	;# 
  6971  0510                     	;# 
  6972  0511                     	;# 
  6973  0512                     	;# 
  6974  0512                     	;# 
  6975  0513                     	;# 
  6976  0514                     	;# 
  6977  0515                     	;# 
  6978  0515                     	;# 
  6979  0516                     	;# 
  6980  0517                     	;# 
  6981  0518                     	;# 
  6982  0519                     	;# 
  6983  051A                     	;# 
  6984  051B                     	;# 
  6985  051C                     	;# 
  6986  051D                     	;# 
  6987  058C                     	;# 
  6988  058C                     	;# 
  6989  058D                     	;# 
  6990  058E                     	;# 
  6991  058F                     	;# 
  6992  058F                     	;# 
  6993  0590                     	;# 
  6994  0591                     	;# 
  6995  0592                     	;# 
  6996  0593                     	;# 
  6997  060C                     	;# 
  6998  060D                     	;# 
  6999  060E                     	;# 
  7000  060F                     	;# 
  7001  0610                     	;# 
  7002  0611                     	;# 
  7003  0612                     	;# 
  7004  0613                     	;# 
  7005  0614                     	;# 
  7006  0616                     	;# 
  7007  0617                     	;# 
  7008  0618                     	;# 
  7009  0619                     	;# 
  7010  061A                     	;# 
  7011  061B                     	;# 
  7012  061C                     	;# 
  7013  061D                     	;# 
  7014  061E                     	;# 
  7015  068C                     	;# 
  7016  068D                     	;# 
  7017  068E                     	;# 
  7018  068F                     	;# 
  7019  0690                     	;# 
  7020  0691                     	;# 
  7021  0692                     	;# 
  7022  0693                     	;# 
  7023  0694                     	;# 
  7024  070C                     	;# 
  7025  070D                     	;# 
  7026  070E                     	;# 
  7027  070F                     	;# 
  7028  0710                     	;# 
  7029  0711                     	;# 
  7030  0712                     	;# 
  7031  0713                     	;# 
  7032  0714                     	;# 
  7033  0716                     	;# 
  7034  0717                     	;# 
  7035  0718                     	;# 
  7036  0719                     	;# 
  7037  071A                     	;# 
  7038  071B                     	;# 
  7039  071C                     	;# 
  7040  071D                     	;# 
  7041  071E                     	;# 
  7042  0796                     	;# 
  7043  0797                     	;# 
  7044  0798                     	;# 
  7045  0799                     	;# 
  7046  079A                     	;# 
  7047  079B                     	;# 
  7048  080C                     	;# 
  7049  080D                     	;# 
  7050  080E                     	;# 
  7051  080F                     	;# 
  7052  0810                     	;# 
  7053  0811                     	;# 
  7054  0812                     	;# 
  7055  0813                     	;# 
  7056  0814                     	;# 
  7057  081A                     	;# 
  7058  081B                     	;# 
  7059  081C                     	;# 
  7060  081D                     	;# 
  7061  081E                     	;# 
  7062  081F                     	;# 
  7063  088C                     	;# 
  7064  088D                     	;# 
  7065  088E                     	;# 
  7066  088F                     	;# 
  7067  0890                     	;# 
  7068  0891                     	;# 
  7069  0892                     	;# 
  7070  0893                     	;# 
  7071  0895                     	;# 
  7072  0896                     	;# 
  7073  0897                     	;# 
  7074  0898                     	;# 
  7075  0899                     	;# 
  7076  089A                     	;# 
  7077  089B                     	;# 
  7078  090C                     	;# 
  7079  090E                     	;# 
  7080  090F                     	;# 
  7081  091F                     	;# 
  7082  091F                     	;# 
  7083  098F                     	;# 
  7084  098F                     	;# 
  7085  0990                     	;# 
  7086  0991                     	;# 
  7087  0992                     	;# 
  7088  0993                     	;# 
  7089  0994                     	;# 
  7090  0995                     	;# 
  7091  0996                     	;# 
  7092  0997                     	;# 
  7093  0E0F                     	;# 
  7094  0E10                     	;# 
  7095  0E11                     	;# 
  7096  0E12                     	;# 
  7097  0E13                     	;# 
  7098  0E14                     	;# 
  7099  0E15                     	;# 
  7100  0E16                     	;# 
  7101  0E17                     	;# 
  7102  0E18                     	;# 
  7103  0E19                     	;# 
  7104  0E1A                     	;# 
  7105  0E1B                     	;# 
  7106  0E1C                     	;# 
  7107  0E1D                     	;# 
  7108  0E1E                     	;# 
  7109  0E1F                     	;# 
  7110  0E20                     	;# 
  7111  0E21                     	;# 
  7112  0E22                     	;# 
  7113  0E23                     	;# 
  7114  0E24                     	;# 
  7115  0E25                     	;# 
  7116  0E26                     	;# 
  7117  0E27                     	;# 
  7118  0E28                     	;# 
  7119  0E29                     	;# 
  7120  0E2A                     	;# 
  7121  0E2B                     	;# 
  7122  0E2C                     	;# 
  7123  0E2D                     	;# 
  7124  0E2E                     	;# 
  7125  0E2F                     	;# 
  7126  0E30                     	;# 
  7127  0E31                     	;# 
  7128  0E32                     	;# 
  7129  0E33                     	;# 
  7130  0E34                     	;# 
  7131  0E35                     	;# 
  7132  0E36                     	;# 
  7133  0E37                     	;# 
  7134  0E8F                     	;# 
  7135  0E90                     	;# 
  7136  0E91                     	;# 
  7137  0E92                     	;# 
  7138  0E93                     	;# 
  7139  0E94                     	;# 
  7140  0E95                     	;# 
  7141  0E96                     	;# 
  7142  0E97                     	;# 
  7143  0E9C                     	;# 
  7144  0E9D                     	;# 
  7145  0E9E                     	;# 
  7146  0EA1                     	;# 
  7147  0EA2                     	;# 
  7148  0EA3                     	;# 
  7149  0EA4                     	;# 
  7150  0EA5                     	;# 
  7151  0EA9                     	;# 
  7152  0EAA                     	;# 
  7153  0EAB                     	;# 
  7154  0EAC                     	;# 
  7155  0EB1                     	;# 
  7156  0EB2                     	;# 
  7157  0EB3                     	;# 
  7158  0EB8                     	;# 
  7159  0EB9                     	;# 
  7160  0EBA                     	;# 
  7161  0EBB                     	;# 
  7162  0EBC                     	;# 
  7163  0EBD                     	;# 
  7164  0EBE                     	;# 
  7165  0EC3                     	;# 
  7166  0EC5                     	;# 
  7167  0EC6                     	;# 
  7168  0EC7                     	;# 
  7169  0EC8                     	;# 
  7170  0EC9                     	;# 
  7171  0ECA                     	;# 
  7172  0ECB                     	;# 
  7173  0ECC                     	;# 
  7174  0F10                     	;# 
  7175  0F11                     	;# 
  7176  0F12                     	;# 
  7177  0F13                     	;# 
  7178  0F14                     	;# 
  7179  0F15                     	;# 
  7180  0F16                     	;# 
  7181  0F17                     	;# 
  7182  0F18                     	;# 
  7183  0F19                     	;# 
  7184  0F1A                     	;# 
  7185  0F1B                     	;# 
  7186  0F1C                     	;# 
  7187  0F1D                     	;# 
  7188  0F1E                     	;# 
  7189  0F1F                     	;# 
  7190  0F20                     	;# 
  7191  0F21                     	;# 
  7192  0F22                     	;# 
  7193  0F23                     	;# 
  7194  0F24                     	;# 
  7195  0F25                     	;# 
  7196  0F26                     	;# 
  7197  0F27                     	;# 
  7198  0F28                     	;# 
  7199  0F29                     	;# 
  7200  0F2A                     	;# 
  7201  0F2B                     	;# 
  7202  0F2C                     	;# 
  7203  0F2D                     	;# 
  7204  0F2E                     	;# 
  7205  0F2F                     	;# 
  7206  0F30                     	;# 
  7207  0F31                     	;# 
  7208  0F32                     	;# 
  7209  0F38                     	;# 
  7210  0F39                     	;# 
  7211  0F3A                     	;# 
  7212  0F3B                     	;# 
  7213  0F3C                     	;# 
  7214  0F3D                     	;# 
  7215  0F3E                     	;# 
  7216  0F3F                     	;# 
  7217  0F40                     	;# 
  7218  0F41                     	;# 
  7219  0F43                     	;# 
  7220  0F44                     	;# 
  7221  0F45                     	;# 
  7222  0F46                     	;# 
  7223  0F47                     	;# 
  7224  0F48                     	;# 
  7225  0F49                     	;# 
  7226  0F4A                     	;# 
  7227  0F4B                     	;# 
  7228  0F4C                     	;# 
  7229  0F4E                     	;# 
  7230  0F4F                     	;# 
  7231  0F50                     	;# 
  7232  0F51                     	;# 
  7233  0F52                     	;# 
  7234  0F53                     	;# 
  7235  0F54                     	;# 
  7236  0F55                     	;# 
  7237  0F56                     	;# 
  7238  0F57                     	;# 
  7239  0F59                     	;# 
  7240  0F5A                     	;# 
  7241  0F5B                     	;# 
  7242  0F5C                     	;# 
  7243  0F5D                     	;# 
  7244  0F61                     	;# 
  7245  0F62                     	;# 
  7246  0F64                     	;# 
  7247  0F65                     	;# 
  7248  0F66                     	;# 
  7249  0F67                     	;# 
  7250  0F68                     	;# 
  7251  0F69                     	;# 
  7252  0F6A                     	;# 
  7253  0F6B                     	;# 
  7254  0F6C                     	;# 
  7255  0F6D                     	;# 
  7256  0FE4                     	;# 
  7257  0FE5                     	;# 
  7258  0FE6                     	;# 
  7259  0FE7                     	;# 
  7260  0FE8                     	;# 
  7261  0FE9                     	;# 
  7262  0FEA                     	;# 
  7263  0FEB                     	;# 
  7264  0FED                     	;# 
  7265  0FEE                     	;# 
  7266  0FEF                     	;# 
  7267  0000                     	;# 
  7268  0001                     	;# 
  7269  0002                     	;# 
  7270  0003                     	;# 
  7271  0004                     	;# 
  7272  0005                     	;# 
  7273  0006                     	;# 
  7274  0007                     	;# 
  7275  0008                     	;# 
  7276  0009                     	;# 
  7277  000A                     	;# 
  7278  000B                     	;# 
  7279  000C                     	;# 
  7280  000D                     	;# 
  7281  000E                     	;# 
  7282  000F                     	;# 
  7283  0010                     	;# 
  7284  0011                     	;# 
  7285  0012                     	;# 
  7286  0013                     	;# 
  7287  0014                     	;# 
  7288  0015                     	;# 
  7289  0016                     	;# 
  7290  0017                     	;# 
  7291  0018                     	;# 
  7292  0019                     	;# 
  7293  001A                     	;# 
  7294  001C                     	;# 
  7295  001C                     	;# 
  7296  001D                     	;# 
  7297  001D                     	;# 
  7298  001E                     	;# 
  7299  001F                     	;# 
  7300  008C                     	;# 
  7301  008C                     	;# 
  7302  008D                     	;# 
  7303  008E                     	;# 
  7304  008E                     	;# 
  7305  008F                     	;# 
  7306  0090                     	;# 
  7307  0090                     	;# 
  7308  0091                     	;# 
  7309  0093                     	;# 
  7310  0094                     	;# 
  7311  0095                     	;# 
  7312  0096                     	;# 
  7313  0097                     	;# 
  7314  0098                     	;# 
  7315  0099                     	;# 
  7316  009A                     	;# 
  7317  009B                     	;# 
  7318  009C                     	;# 
  7319  009D                     	;# 
  7320  009E                     	;# 
  7321  010C                     	;# 
  7322  010D                     	;# 
  7323  010E                     	;# 
  7324  010E                     	;# 
  7325  010F                     	;# 
  7326  0110                     	;# 
  7327  0110                     	;# 
  7328  0111                     	;# 
  7329  0112                     	;# 
  7330  0112                     	;# 
  7331  0113                     	;# 
  7332  0114                     	;# 
  7333  0114                     	;# 
  7334  0115                     	;# 
  7335  0116                     	;# 
  7336  0116                     	;# 
  7337  0117                     	;# 
  7338  0119                     	;# 
  7339  0119                     	;# 
  7340  0119                     	;# 
  7341  011A                     	;# 
  7342  011A                     	;# 
  7343  011A                     	;# 
  7344  011B                     	;# 
  7345  011B                     	;# 
  7346  011B                     	;# 
  7347  011B                     	;# 
  7348  011B                     	;# 
  7349  011C                     	;# 
  7350  011C                     	;# 
  7351  011C                     	;# 
  7352  011D                     	;# 
  7353  011D                     	;# 
  7354  011D                     	;# 
  7355  011E                     	;# 
  7356  011E                     	;# 
  7357  011E                     	;# 
  7358  011F                     	;# 
  7359  011F                     	;# 
  7360  011F                     	;# 
  7361  011F                     	;# 
  7362  011F                     	;# 
  7363  018C                     	;# 
  7364  018D                     	;# 
  7365  018E                     	;# 
  7366  018F                     	;# 
  7367  0190                     	;# 
  7368  0191                     	;# 
  7369  0192                     	;# 
  7370  0196                     	;# 
  7371  0197                     	;# 
  7372  0198                     	;# 
  7373  0199                     	;# 
  7374  019A                     	;# 
  7375  019B                     	;# 
  7376  019C                     	;# 
  7377  020C                     	;# 
  7378  020C                     	;# 
  7379  020D                     	;# 
  7380  020E                     	;# 
  7381  020F                     	;# 
  7382  020F                     	;# 
  7383  0210                     	;# 
  7384  0210                     	;# 
  7385  0211                     	;# 
  7386  0211                     	;# 
  7387  0212                     	;# 
  7388  0212                     	;# 
  7389  0213                     	;# 
  7390  0214                     	;# 
  7391  0215                     	;# 
  7392  0215                     	;# 
  7393  0216                     	;# 
  7394  0216                     	;# 
  7395  0217                     	;# 
  7396  0217                     	;# 
  7397  0218                     	;# 
  7398  0218                     	;# 
  7399  0219                     	;# 
  7400  021A                     	;# 
  7401  021B                     	;# 
  7402  021B                     	;# 
  7403  021C                     	;# 
  7404  021C                     	;# 
  7405  021D                     	;# 
  7406  021D                     	;# 
  7407  021E                     	;# 
  7408  021F                     	;# 
  7409  028C                     	;# 
  7410  028C                     	;# 
  7411  028D                     	;# 
  7412  028D                     	;# 
  7413  028E                     	;# 
  7414  028F                     	;# 
  7415  0290                     	;# 
  7416  0290                     	;# 
  7417  0291                     	;# 
  7418  0292                     	;# 
  7419  0292                     	;# 
  7420  0293                     	;# 
  7421  0293                     	;# 
  7422  0294                     	;# 
  7423  0295                     	;# 
  7424  0296                     	;# 
  7425  0296                     	;# 
  7426  0297                     	;# 
  7427  0298                     	;# 
  7428  0298                     	;# 
  7429  0299                     	;# 
  7430  0299                     	;# 
  7431  029A                     	;# 
  7432  029B                     	;# 
  7433  029C                     	;# 
  7434  029C                     	;# 
  7435  029D                     	;# 
  7436  030C                     	;# 
  7437  030C                     	;# 
  7438  030D                     	;# 
  7439  030E                     	;# 
  7440  030F                     	;# 
  7441  0310                     	;# 
  7442  0310                     	;# 
  7443  0311                     	;# 
  7444  0312                     	;# 
  7445  0313                     	;# 
  7446  0314                     	;# 
  7447  0314                     	;# 
  7448  0315                     	;# 
  7449  0316                     	;# 
  7450  0317                     	;# 
  7451  0318                     	;# 
  7452  0318                     	;# 
  7453  0319                     	;# 
  7454  031A                     	;# 
  7455  031B                     	;# 
  7456  031C                     	;# 
  7457  031C                     	;# 
  7458  031D                     	;# 
  7459  031E                     	;# 
  7460  031F                     	;# 
  7461  038C                     	;# 
  7462  038C                     	;# 
  7463  038D                     	;# 
  7464  038E                     	;# 
  7465  0390                     	;# 
  7466  0390                     	;# 
  7467  0391                     	;# 
  7468  0392                     	;# 
  7469  040C                     	;# 
  7470  040D                     	;# 
  7471  040E                     	;# 
  7472  040F                     	;# 
  7473  0410                     	;# 
  7474  0411                     	;# 
  7475  0416                     	;# 
  7476  0416                     	;# 
  7477  0417                     	;# 
  7478  0418                     	;# 
  7479  0418                     	;# 
  7480  0419                     	;# 
  7481  041A                     	;# 
  7482  041A                     	;# 
  7483  041B                     	;# 
  7484  041C                     	;# 
  7485  041C                     	;# 
  7486  041D                     	;# 
  7487  041E                     	;# 
  7488  041F                     	;# 
  7489  048C                     	;# 
  7490  048C                     	;# 
  7491  048D                     	;# 
  7492  048E                     	;# 
  7493  048F                     	;# 
  7494  048F                     	;# 
  7495  0490                     	;# 
  7496  0491                     	;# 
  7497  0492                     	;# 
  7498  0492                     	;# 
  7499  0493                     	;# 
  7500  0494                     	;# 
  7501  0495                     	;# 
  7502  0495                     	;# 
  7503  0496                     	;# 
  7504  0497                     	;# 
  7505  0498                     	;# 
  7506  0499                     	;# 
  7507  049A                     	;# 
  7508  049B                     	;# 
  7509  049C                     	;# 
  7510  049D                     	;# 
  7511  050C                     	;# 
  7512  050C                     	;# 
  7513  050D                     	;# 
  7514  050E                     	;# 
  7515  050F                     	;# 
  7516  050F                     	;# 
  7517  0510                     	;# 
  7518  0511                     	;# 
  7519  0512                     	;# 
  7520  0512                     	;# 
  7521  0513                     	;# 
  7522  0514                     	;# 
  7523  0515                     	;# 
  7524  0515                     	;# 
  7525  0516                     	;# 
  7526  0517                     	;# 
  7527  0518                     	;# 
  7528  0519                     	;# 
  7529  051A                     	;# 
  7530  051B                     	;# 
  7531  051C                     	;# 
  7532  051D                     	;# 
  7533  058C                     	;# 
  7534  058C                     	;# 
  7535  058D                     	;# 
  7536  058E                     	;# 
  7537  058F                     	;# 
  7538  058F                     	;# 
  7539  0590                     	;# 
  7540  0591                     	;# 
  7541  0592                     	;# 
  7542  0593                     	;# 
  7543  060C                     	;# 
  7544  060D                     	;# 
  7545  060E                     	;# 
  7546  060F                     	;# 
  7547  0610                     	;# 
  7548  0611                     	;# 
  7549  0612                     	;# 
  7550  0613                     	;# 
  7551  0614                     	;# 
  7552  0616                     	;# 
  7553  0617                     	;# 
  7554  0618                     	;# 
  7555  0619                     	;# 
  7556  061A                     	;# 
  7557  061B                     	;# 
  7558  061C                     	;# 
  7559  061D                     	;# 
  7560  061E                     	;# 
  7561  068C                     	;# 
  7562  068D                     	;# 
  7563  068E                     	;# 
  7564  068F                     	;# 
  7565  0690                     	;# 
  7566  0691                     	;# 
  7567  0692                     	;# 
  7568  0693                     	;# 
  7569  0694                     	;# 
  7570  070C                     	;# 
  7571  070D                     	;# 
  7572  070E                     	;# 
  7573  070F                     	;# 
  7574  0710                     	;# 
  7575  0711                     	;# 
  7576  0712                     	;# 
  7577  0713                     	;# 
  7578  0714                     	;# 
  7579  0716                     	;# 
  7580  0717                     	;# 
  7581  0718                     	;# 
  7582  0719                     	;# 
  7583  071A                     	;# 
  7584  071B                     	;# 
  7585  071C                     	;# 
  7586  071D                     	;# 
  7587  071E                     	;# 
  7588  0796                     	;# 
  7589  0797                     	;# 
  7590  0798                     	;# 
  7591  0799                     	;# 
  7592  079A                     	;# 
  7593  079B                     	;# 
  7594  080C                     	;# 
  7595  080D                     	;# 
  7596  080E                     	;# 
  7597  080F                     	;# 
  7598  0810                     	;# 
  7599  0811                     	;# 
  7600  0812                     	;# 
  7601  0813                     	;# 
  7602  0814                     	;# 
  7603  081A                     	;# 
  7604  081B                     	;# 
  7605  081C                     	;# 
  7606  081D                     	;# 
  7607  081E                     	;# 
  7608  081F                     	;# 
  7609  088C                     	;# 
  7610  088D                     	;# 
  7611  088E                     	;# 
  7612  088F                     	;# 
  7613  0890                     	;# 
  7614  0891                     	;# 
  7615  0892                     	;# 
  7616  0893                     	;# 
  7617  0895                     	;# 
  7618  0896                     	;# 
  7619  0897                     	;# 
  7620  0898                     	;# 
  7621  0899                     	;# 
  7622  089A                     	;# 
  7623  089B                     	;# 
  7624  090C                     	;# 
  7625  090E                     	;# 
  7626  090F                     	;# 
  7627  091F                     	;# 
  7628  091F                     	;# 
  7629  098F                     	;# 
  7630  098F                     	;# 
  7631  0990                     	;# 
  7632  0991                     	;# 
  7633  0992                     	;# 
  7634  0993                     	;# 
  7635  0994                     	;# 
  7636  0995                     	;# 
  7637  0996                     	;# 
  7638  0997                     	;# 
  7639  0E0F                     	;# 
  7640  0E10                     	;# 
  7641  0E11                     	;# 
  7642  0E12                     	;# 
  7643  0E13                     	;# 
  7644  0E14                     	;# 
  7645  0E15                     	;# 
  7646  0E16                     	;# 
  7647  0E17                     	;# 
  7648  0E18                     	;# 
  7649  0E19                     	;# 
  7650  0E1A                     	;# 
  7651  0E1B                     	;# 
  7652  0E1C                     	;# 
  7653  0E1D                     	;# 
  7654  0E1E                     	;# 
  7655  0E1F                     	;# 
  7656  0E20                     	;# 
  7657  0E21                     	;# 
  7658  0E22                     	;# 
  7659  0E23                     	;# 
  7660  0E24                     	;# 
  7661  0E25                     	;# 
  7662  0E26                     	;# 
  7663  0E27                     	;# 
  7664  0E28                     	;# 
  7665  0E29                     	;# 
  7666  0E2A                     	;# 
  7667  0E2B                     	;# 
  7668  0E2C                     	;# 
  7669  0E2D                     	;# 
  7670  0E2E                     	;# 
  7671  0E2F                     	;# 
  7672  0E30                     	;# 
  7673  0E31                     	;# 
  7674  0E32                     	;# 
  7675  0E33                     	;# 
  7676  0E34                     	;# 
  7677  0E35                     	;# 
  7678  0E36                     	;# 
  7679  0E37                     	;# 
  7680  0E8F                     	;# 
  7681  0E90                     	;# 
  7682  0E91                     	;# 
  7683  0E92                     	;# 
  7684  0E93                     	;# 
  7685  0E94                     	;# 
  7686  0E95                     	;# 
  7687  0E96                     	;# 
  7688  0E97                     	;# 
  7689  0E9C                     	;# 
  7690  0E9D                     	;# 
  7691  0E9E                     	;# 
  7692  0EA1                     	;# 
  7693  0EA2                     	;# 
  7694  0EA3                     	;# 
  7695  0EA4                     	;# 
  7696  0EA5                     	;# 
  7697  0EA9                     	;# 
  7698  0EAA                     	;# 
  7699  0EAB                     	;# 
  7700  0EAC                     	;# 
  7701  0EB1                     	;# 
  7702  0EB2                     	;# 
  7703  0EB3                     	;# 
  7704  0EB8                     	;# 
  7705  0EB9                     	;# 
  7706  0EBA                     	;# 
  7707  0EBB                     	;# 
  7708  0EBC                     	;# 
  7709  0EBD                     	;# 
  7710  0EBE                     	;# 
  7711  0EC3                     	;# 
  7712  0EC5                     	;# 
  7713  0EC6                     	;# 
  7714  0EC7                     	;# 
  7715  0EC8                     	;# 
  7716  0EC9                     	;# 
  7717  0ECA                     	;# 
  7718  0ECB                     	;# 
  7719  0ECC                     	;# 
  7720  0F10                     	;# 
  7721  0F11                     	;# 
  7722  0F12                     	;# 
  7723  0F13                     	;# 
  7724  0F14                     	;# 
  7725  0F15                     	;# 
  7726  0F16                     	;# 
  7727  0F17                     	;# 
  7728  0F18                     	;# 
  7729  0F19                     	;# 
  7730  0F1A                     	;# 
  7731  0F1B                     	;# 
  7732  0F1C                     	;# 
  7733  0F1D                     	;# 
  7734  0F1E                     	;# 
  7735  0F1F                     	;# 
  7736  0F20                     	;# 
  7737  0F21                     	;# 
  7738  0F22                     	;# 
  7739  0F23                     	;# 
  7740  0F24                     	;# 
  7741  0F25                     	;# 
  7742  0F26                     	;# 
  7743  0F27                     	;# 
  7744  0F28                     	;# 
  7745  0F29                     	;# 
  7746  0F2A                     	;# 
  7747  0F2B                     	;# 
  7748  0F2C                     	;# 
  7749  0F2D                     	;# 
  7750  0F2E                     	;# 
  7751  0F2F                     	;# 
  7752  0F30                     	;# 
  7753  0F31                     	;# 
  7754  0F32                     	;# 
  7755  0F38                     	;# 
  7756  0F39                     	;# 
  7757  0F3A                     	;# 
  7758  0F3B                     	;# 
  7759  0F3C                     	;# 
  7760  0F3D                     	;# 
  7761  0F3E                     	;# 
  7762  0F3F                     	;# 
  7763  0F40                     	;# 
  7764  0F41                     	;# 
  7765  0F43                     	;# 
  7766  0F44                     	;# 
  7767  0F45                     	;# 
  7768  0F46                     	;# 
  7769  0F47                     	;# 
  7770  0F48                     	;# 
  7771  0F49                     	;# 
  7772  0F4A                     	;# 
  7773  0F4B                     	;# 
  7774  0F4C                     	;# 
  7775  0F4E                     	;# 
  7776  0F4F                     	;# 
  7777  0F50                     	;# 
  7778  0F51                     	;# 
  7779  0F52                     	;# 
  7780  0F53                     	;# 
  7781  0F54                     	;# 
  7782  0F55                     	;# 
  7783  0F56                     	;# 
  7784  0F57                     	;# 
  7785  0F59                     	;# 
  7786  0F5A                     	;# 
  7787  0F5B                     	;# 
  7788  0F5C                     	;# 
  7789  0F5D                     	;# 
  7790  0F61                     	;# 
  7791  0F62                     	;# 
  7792  0F64                     	;# 
  7793  0F65                     	;# 
  7794  0F66                     	;# 
  7795  0F67                     	;# 
  7796  0F68                     	;# 
  7797  0F69                     	;# 
  7798  0F6A                     	;# 
  7799  0F6B                     	;# 
  7800  0F6C                     	;# 
  7801  0F6D                     	;# 
  7802  0FE4                     	;# 
  7803  0FE5                     	;# 
  7804  0FE6                     	;# 
  7805  0FE7                     	;# 
  7806  0FE8                     	;# 
  7807  0FE9                     	;# 
  7808  0FEA                     	;# 
  7809  0FEB                     	;# 
  7810  0FED                     	;# 
  7811  0FEE                     	;# 
  7812  0FEF                     	;# 
  7813  0000                     	;# 
  7814  0001                     	;# 
  7815  0002                     	;# 
  7816  0003                     	;# 
  7817  0004                     	;# 
  7818  0005                     	;# 
  7819  0006                     	;# 
  7820  0007                     	;# 
  7821  0008                     	;# 
  7822  0009                     	;# 
  7823  000A                     	;# 
  7824  000B                     	;# 
  7825  000C                     	;# 
  7826  000D                     	;# 
  7827  000E                     	;# 
  7828  000F                     	;# 
  7829  0010                     	;# 
  7830  0011                     	;# 
  7831  0012                     	;# 
  7832  0013                     	;# 
  7833  0014                     	;# 
  7834  0015                     	;# 
  7835  0016                     	;# 
  7836  0017                     	;# 
  7837  0018                     	;# 
  7838  0019                     	;# 
  7839  001A                     	;# 
  7840  001C                     	;# 
  7841  001C                     	;# 
  7842  001D                     	;# 
  7843  001D                     	;# 
  7844  001E                     	;# 
  7845  001F                     	;# 
  7846  008C                     	;# 
  7847  008C                     	;# 
  7848  008D                     	;# 
  7849  008E                     	;# 
  7850  008E                     	;# 
  7851  008F                     	;# 
  7852  0090                     	;# 
  7853  0090                     	;# 
  7854  0091                     	;# 
  7855  0093                     	;# 
  7856  0094                     	;# 
  7857  0095                     	;# 
  7858  0096                     	;# 
  7859  0097                     	;# 
  7860  0098                     	;# 
  7861  0099                     	;# 
  7862  009A                     	;# 
  7863  009B                     	;# 
  7864  009C                     	;# 
  7865  009D                     	;# 
  7866  009E                     	;# 
  7867  010C                     	;# 
  7868  010D                     	;# 
  7869  010E                     	;# 
  7870  010E                     	;# 
  7871  010F                     	;# 
  7872  0110                     	;# 
  7873  0110                     	;# 
  7874  0111                     	;# 
  7875  0112                     	;# 
  7876  0112                     	;# 
  7877  0113                     	;# 
  7878  0114                     	;# 
  7879  0114                     	;# 
  7880  0115                     	;# 
  7881  0116                     	;# 
  7882  0116                     	;# 
  7883  0117                     	;# 
  7884  0119                     	;# 
  7885  0119                     	;# 
  7886  0119                     	;# 
  7887  011A                     	;# 
  7888  011A                     	;# 
  7889  011A                     	;# 
  7890  011B                     	;# 
  7891  011B                     	;# 
  7892  011B                     	;# 
  7893  011B                     	;# 
  7894  011B                     	;# 
  7895  011C                     	;# 
  7896  011C                     	;# 
  7897  011C                     	;# 
  7898  011D                     	;# 
  7899  011D                     	;# 
  7900  011D                     	;# 
  7901  011E                     	;# 
  7902  011E                     	;# 
  7903  011E                     	;# 
  7904  011F                     	;# 
  7905  011F                     	;# 
  7906  011F                     	;# 
  7907  011F                     	;# 
  7908  011F                     	;# 
  7909  018C                     	;# 
  7910  018D                     	;# 
  7911  018E                     	;# 
  7912  018F                     	;# 
  7913  0190                     	;# 
  7914  0191                     	;# 
  7915  0192                     	;# 
  7916  0196                     	;# 
  7917  0197                     	;# 
  7918  0198                     	;# 
  7919  0199                     	;# 
  7920  019A                     	;# 
  7921  019B                     	;# 
  7922  019C                     	;# 
  7923  020C                     	;# 
  7924  020C                     	;# 
  7925  020D                     	;# 
  7926  020E                     	;# 
  7927  020F                     	;# 
  7928  020F                     	;# 
  7929  0210                     	;# 
  7930  0210                     	;# 
  7931  0211                     	;# 
  7932  0211                     	;# 
  7933  0212                     	;# 
  7934  0212                     	;# 
  7935  0213                     	;# 
  7936  0214                     	;# 
  7937  0215                     	;# 
  7938  0215                     	;# 
  7939  0216                     	;# 
  7940  0216                     	;# 
  7941  0217                     	;# 
  7942  0217                     	;# 
  7943  0218                     	;# 
  7944  0218                     	;# 
  7945  0219                     	;# 
  7946  021A                     	;# 
  7947  021B                     	;# 
  7948  021B                     	;# 
  7949  021C                     	;# 
  7950  021C                     	;# 
  7951  021D                     	;# 
  7952  021D                     	;# 
  7953  021E                     	;# 
  7954  021F                     	;# 
  7955  028C                     	;# 
  7956  028C                     	;# 
  7957  028D                     	;# 
  7958  028D                     	;# 
  7959  028E                     	;# 
  7960  028F                     	;# 
  7961  0290                     	;# 
  7962  0290                     	;# 
  7963  0291                     	;# 
  7964  0292                     	;# 
  7965  0292                     	;# 
  7966  0293                     	;# 
  7967  0293                     	;# 
  7968  0294                     	;# 
  7969  0295                     	;# 
  7970  0296                     	;# 
  7971  0296                     	;# 
  7972  0297                     	;# 
  7973  0298                     	;# 
  7974  0298                     	;# 
  7975  0299                     	;# 
  7976  0299                     	;# 
  7977  029A                     	;# 
  7978  029B                     	;# 
  7979  029C                     	;# 
  7980  029C                     	;# 
  7981  029D                     	;# 
  7982  030C                     	;# 
  7983  030C                     	;# 
  7984  030D                     	;# 
  7985  030E                     	;# 
  7986  030F                     	;# 
  7987  0310                     	;# 
  7988  0310                     	;# 
  7989  0311                     	;# 
  7990  0312                     	;# 
  7991  0313                     	;# 
  7992  0314                     	;# 
  7993  0314                     	;# 
  7994  0315                     	;# 
  7995  0316                     	;# 
  7996  0317                     	;# 
  7997  0318                     	;# 
  7998  0318                     	;# 
  7999  0319                     	;# 
  8000  031A                     	;# 
  8001  031B                     	;# 
  8002  031C                     	;# 
  8003  031C                     	;# 
  8004  031D                     	;# 
  8005  031E                     	;# 
  8006  031F                     	;# 
  8007  038C                     	;# 
  8008  038C                     	;# 
  8009  038D                     	;# 
  8010  038E                     	;# 
  8011  0390                     	;# 
  8012  0390                     	;# 
  8013  0391                     	;# 
  8014  0392                     	;# 
  8015  040C                     	;# 
  8016  040D                     	;# 
  8017  040E                     	;# 
  8018  040F                     	;# 
  8019  0410                     	;# 
  8020  0411                     	;# 
  8021  0416                     	;# 
  8022  0416                     	;# 
  8023  0417                     	;# 
  8024  0418                     	;# 
  8025  0418                     	;# 
  8026  0419                     	;# 
  8027  041A                     	;# 
  8028  041A                     	;# 
  8029  041B                     	;# 
  8030  041C                     	;# 
  8031  041C                     	;# 
  8032  041D                     	;# 
  8033  041E                     	;# 
  8034  041F                     	;# 
  8035  048C                     	;# 
  8036  048C                     	;# 
  8037  048D                     	;# 
  8038  048E                     	;# 
  8039  048F                     	;# 
  8040  048F                     	;# 
  8041  0490                     	;# 
  8042  0491                     	;# 
  8043  0492                     	;# 
  8044  0492                     	;# 
  8045  0493                     	;# 
  8046  0494                     	;# 
  8047  0495                     	;# 
  8048  0495                     	;# 
  8049  0496                     	;# 
  8050  0497                     	;# 
  8051  0498                     	;# 
  8052  0499                     	;# 
  8053  049A                     	;# 
  8054  049B                     	;# 
  8055  049C                     	;# 
  8056  049D                     	;# 
  8057  050C                     	;# 
  8058  050C                     	;# 
  8059  050D                     	;# 
  8060  050E                     	;# 
  8061  050F                     	;# 
  8062  050F                     	;# 
  8063  0510                     	;# 
  8064  0511                     	;# 
  8065  0512                     	;# 
  8066  0512                     	;# 
  8067  0513                     	;# 
  8068  0514                     	;# 
  8069  0515                     	;# 
  8070  0515                     	;# 
  8071  0516                     	;# 
  8072  0517                     	;# 
  8073  0518                     	;# 
  8074  0519                     	;# 
  8075  051A                     	;# 
  8076  051B                     	;# 
  8077  051C                     	;# 
  8078  051D                     	;# 
  8079  058C                     	;# 
  8080  058C                     	;# 
  8081  058D                     	;# 
  8082  058E                     	;# 
  8083  058F                     	;# 
  8084  058F                     	;# 
  8085  0590                     	;# 
  8086  0591                     	;# 
  8087  0592                     	;# 
  8088  0593                     	;# 
  8089  060C                     	;# 
  8090  060D                     	;# 
  8091  060E                     	;# 
  8092  060F                     	;# 
  8093  0610                     	;# 
  8094  0611                     	;# 
  8095  0612                     	;# 
  8096  0613                     	;# 
  8097  0614                     	;# 
  8098  0616                     	;# 
  8099  0617                     	;# 
  8100  0618                     	;# 
  8101  0619                     	;# 
  8102  061A                     	;# 
  8103  061B                     	;# 
  8104  061C                     	;# 
  8105  061D                     	;# 
  8106  061E                     	;# 
  8107  068C                     	;# 
  8108  068D                     	;# 
  8109  068E                     	;# 
  8110  068F                     	;# 
  8111  0690                     	;# 
  8112  0691                     	;# 
  8113  0692                     	;# 
  8114  0693                     	;# 
  8115  0694                     	;# 
  8116  070C                     	;# 
  8117  070D                     	;# 
  8118  070E                     	;# 
  8119  070F                     	;# 
  8120  0710                     	;# 
  8121  0711                     	;# 
  8122  0712                     	;# 
  8123  0713                     	;# 
  8124  0714                     	;# 
  8125  0716                     	;# 
  8126  0717                     	;# 
  8127  0718                     	;# 
  8128  0719                     	;# 
  8129  071A                     	;# 
  8130  071B                     	;# 
  8131  071C                     	;# 
  8132  071D                     	;# 
  8133  071E                     	;# 
  8134  0796                     	;# 
  8135  0797                     	;# 
  8136  0798                     	;# 
  8137  0799                     	;# 
  8138  079A                     	;# 
  8139  079B                     	;# 
  8140  080C                     	;# 
  8141  080D                     	;# 
  8142  080E                     	;# 
  8143  080F                     	;# 
  8144  0810                     	;# 
  8145  0811                     	;# 
  8146  0812                     	;# 
  8147  0813                     	;# 
  8148  0814                     	;# 
  8149  081A                     	;# 
  8150  081B                     	;# 
  8151  081C                     	;# 
  8152  081D                     	;# 
  8153  081E                     	;# 
  8154  081F                     	;# 
  8155  088C                     	;# 
  8156  088D                     	;# 
  8157  088E                     	;# 
  8158  088F                     	;# 
  8159  0890                     	;# 
  8160  0891                     	;# 
  8161  0892                     	;# 
  8162  0893                     	;# 
  8163  0895                     	;# 
  8164  0896                     	;# 
  8165  0897                     	;# 
  8166  0898                     	;# 
  8167  0899                     	;# 
  8168  089A                     	;# 
  8169  089B                     	;# 
  8170  090C                     	;# 
  8171  090E                     	;# 
  8172  090F                     	;# 
  8173  091F                     	;# 
  8174  091F                     	;# 
  8175  098F                     	;# 
  8176  098F                     	;# 
  8177  0990                     	;# 
  8178  0991                     	;# 
  8179  0992                     	;# 
  8180  0993                     	;# 
  8181  0994                     	;# 
  8182  0995                     	;# 
  8183  0996                     	;# 
  8184  0997                     	;# 
  8185  0E0F                     	;# 
  8186  0E10                     	;# 
  8187  0E11                     	;# 
  8188  0E12                     	;# 
  8189  0E13                     	;# 
  8190  0E14                     	;# 
  8191  0E15                     	;# 
  8192  0E16                     	;# 
  8193  0E17                     	;# 
  8194  0E18                     	;# 
  8195  0E19                     	;# 
  8196  0E1A                     	;# 
  8197  0E1B                     	;# 
  8198  0E1C                     	;# 
  8199  0E1D                     	;# 
  8200  0E1E                     	;# 
  8201  0E1F                     	;# 
  8202  0E20                     	;# 
  8203  0E21                     	;# 
  8204  0E22                     	;# 
  8205  0E23                     	;# 
  8206  0E24                     	;# 
  8207  0E25                     	;# 
  8208  0E26                     	;# 
  8209  0E27                     	;# 
  8210  0E28                     	;# 
  8211  0E29                     	;# 
  8212  0E2A                     	;# 
  8213  0E2B                     	;# 
  8214  0E2C                     	;# 
  8215  0E2D                     	;# 
  8216  0E2E                     	;# 
  8217  0E2F                     	;# 
  8218  0E30                     	;# 
  8219  0E31                     	;# 
  8220  0E32                     	;# 
  8221  0E33                     	;# 
  8222  0E34                     	;# 
  8223  0E35                     	;# 
  8224  0E36                     	;# 
  8225  0E37                     	;# 
  8226  0E8F                     	;# 
  8227  0E90                     	;# 
  8228  0E91                     	;# 
  8229  0E92                     	;# 
  8230  0E93                     	;# 
  8231  0E94                     	;# 
  8232  0E95                     	;# 
  8233  0E96                     	;# 
  8234  0E97                     	;# 
  8235  0E9C                     	;# 
  8236  0E9D                     	;# 
  8237  0E9E                     	;# 
  8238  0EA1                     	;# 
  8239  0EA2                     	;# 
  8240  0EA3                     	;# 
  8241  0EA4                     	;# 
  8242  0EA5                     	;# 
  8243  0EA9                     	;# 
  8244  0EAA                     	;# 
  8245  0EAB                     	;# 
  8246  0EAC                     	;# 
  8247  0EB1                     	;# 
  8248  0EB2                     	;# 
  8249  0EB3                     	;# 
  8250  0EB8                     	;# 
  8251  0EB9                     	;# 
  8252  0EBA                     	;# 
  8253  0EBB                     	;# 
  8254  0EBC                     	;# 
  8255  0EBD                     	;# 
  8256  0EBE                     	;# 
  8257  0EC3                     	;# 
  8258  0EC5                     	;# 
  8259  0EC6                     	;# 
  8260  0EC7                     	;# 
  8261  0EC8                     	;# 
  8262  0EC9                     	;# 
  8263  0ECA                     	;# 
  8264  0ECB                     	;# 
  8265  0ECC                     	;# 
  8266  0F10                     	;# 
  8267  0F11                     	;# 
  8268  0F12                     	;# 
  8269  0F13                     	;# 
  8270  0F14                     	;# 
  8271  0F15                     	;# 
  8272  0F16                     	;# 
  8273  0F17                     	;# 
  8274  0F18                     	;# 
  8275  0F19                     	;# 
  8276  0F1A                     	;# 
  8277  0F1B                     	;# 
  8278  0F1C                     	;# 
  8279  0F1D                     	;# 
  8280  0F1E                     	;# 
  8281  0F1F                     	;# 
  8282  0F20                     	;# 
  8283  0F21                     	;# 
  8284  0F22                     	;# 
  8285  0F23                     	;# 
  8286  0F24                     	;# 
  8287  0F25                     	;# 
  8288  0F26                     	;# 
  8289  0F27                     	;# 
  8290  0F28                     	;# 
  8291  0F29                     	;# 
  8292  0F2A                     	;# 
  8293  0F2B                     	;# 
  8294  0F2C                     	;# 
  8295  0F2D                     	;# 
  8296  0F2E                     	;# 
  8297  0F2F                     	;# 
  8298  0F30                     	;# 
  8299  0F31                     	;# 
  8300  0F32                     	;# 
  8301  0F38                     	;# 
  8302  0F39                     	;# 
  8303  0F3A                     	;# 
  8304  0F3B                     	;# 
  8305  0F3C                     	;# 
  8306  0F3D                     	;# 
  8307  0F3E                     	;# 
  8308  0F3F                     	;# 
  8309  0F40                     	;# 
  8310  0F41                     	;# 
  8311  0F43                     	;# 
  8312  0F44                     	;# 
  8313  0F45                     	;# 
  8314  0F46                     	;# 
  8315  0F47                     	;# 
  8316  0F48                     	;# 
  8317  0F49                     	;# 
  8318  0F4A                     	;# 
  8319  0F4B                     	;# 
  8320  0F4C                     	;# 
  8321  0F4E                     	;# 
  8322  0F4F                     	;# 
  8323  0F50                     	;# 
  8324  0F51                     	;# 
  8325  0F52                     	;# 
  8326  0F53                     	;# 
  8327  0F54                     	;# 
  8328  0F55                     	;# 
  8329  0F56                     	;# 
  8330  0F57                     	;# 
  8331  0F59                     	;# 
  8332  0F5A                     	;# 
  8333  0F5B                     	;# 
  8334  0F5C                     	;# 
  8335  0F5D                     	;# 
  8336  0F61                     	;# 
  8337  0F62                     	;# 
  8338  0F64                     	;# 
  8339  0F65                     	;# 
  8340  0F66                     	;# 
  8341  0F67                     	;# 
  8342  0F68                     	;# 
  8343  0F69                     	;# 
  8344  0F6A                     	;# 
  8345  0F6B                     	;# 
  8346  0F6C                     	;# 
  8347  0F6D                     	;# 
  8348  0FE4                     	;# 
  8349  0FE5                     	;# 
  8350  0FE6                     	;# 
  8351  0FE7                     	;# 
  8352  0FE8                     	;# 
  8353  0FE9                     	;# 
  8354  0FEA                     	;# 
  8355  0FEB                     	;# 
  8356  0FED                     	;# 
  8357  0FEE                     	;# 
  8358  0FEF                     	;# 
  8359  0000                     	;# 
  8360  0001                     	;# 
  8361  0002                     	;# 
  8362  0003                     	;# 
  8363  0004                     	;# 
  8364  0005                     	;# 
  8365  0006                     	;# 
  8366  0007                     	;# 
  8367  0008                     	;# 
  8368  0009                     	;# 
  8369  000A                     	;# 
  8370  000B                     	;# 
  8371  000C                     	;# 
  8372  000D                     	;# 
  8373  000E                     	;# 
  8374  000F                     	;# 
  8375  0010                     	;# 
  8376  0011                     	;# 
  8377  0012                     	;# 
  8378  0013                     	;# 
  8379  0014                     	;# 
  8380  0015                     	;# 
  8381  0016                     	;# 
  8382  0017                     	;# 
  8383  0018                     	;# 
  8384  0019                     	;# 
  8385  001A                     	;# 
  8386  001C                     	;# 
  8387  001C                     	;# 
  8388  001D                     	;# 
  8389  001D                     	;# 
  8390  001E                     	;# 
  8391  001F                     	;# 
  8392  008C                     	;# 
  8393  008C                     	;# 
  8394  008D                     	;# 
  8395  008E                     	;# 
  8396  008E                     	;# 
  8397  008F                     	;# 
  8398  0090                     	;# 
  8399  0090                     	;# 
  8400  0091                     	;# 
  8401  0093                     	;# 
  8402  0094                     	;# 
  8403  0095                     	;# 
  8404  0096                     	;# 
  8405  0097                     	;# 
  8406  0098                     	;# 
  8407  0099                     	;# 
  8408  009A                     	;# 
  8409  009B                     	;# 
  8410  009C                     	;# 
  8411  009D                     	;# 
  8412  009E                     	;# 
  8413  010C                     	;# 
  8414  010D                     	;# 
  8415  010E                     	;# 
  8416  010E                     	;# 
  8417  010F                     	;# 
  8418  0110                     	;# 
  8419  0110                     	;# 
  8420  0111                     	;# 
  8421  0112                     	;# 
  8422  0112                     	;# 
  8423  0113                     	;# 
  8424  0114                     	;# 
  8425  0114                     	;# 
  8426  0115                     	;# 
  8427  0116                     	;# 
  8428  0116                     	;# 
  8429  0117                     	;# 
  8430  0119                     	;# 
  8431  0119                     	;# 
  8432  0119                     	;# 
  8433  011A                     	;# 
  8434  011A                     	;# 
  8435  011A                     	;# 
  8436  011B                     	;# 
  8437  011B                     	;# 
  8438  011B                     	;# 
  8439  011B                     	;# 
  8440  011B                     	;# 
  8441  011C                     	;# 
  8442  011C                     	;# 
  8443  011C                     	;# 
  8444  011D                     	;# 
  8445  011D                     	;# 
  8446  011D                     	;# 
  8447  011E                     	;# 
  8448  011E                     	;# 
  8449  011E                     	;# 
  8450  011F                     	;# 
  8451  011F                     	;# 
  8452  011F                     	;# 
  8453  011F                     	;# 
  8454  011F                     	;# 
  8455  018C                     	;# 
  8456  018D                     	;# 
  8457  018E                     	;# 
  8458  018F                     	;# 
  8459  0190                     	;# 
  8460  0191                     	;# 
  8461  0192                     	;# 
  8462  0196                     	;# 
  8463  0197                     	;# 
  8464  0198                     	;# 
  8465  0199                     	;# 
  8466  019A                     	;# 
  8467  019B                     	;# 
  8468  019C                     	;# 
  8469  020C                     	;# 
  8470  020C                     	;# 
  8471  020D                     	;# 
  8472  020E                     	;# 
  8473  020F                     	;# 
  8474  020F                     	;# 
  8475  0210                     	;# 
  8476  0210                     	;# 
  8477  0211                     	;# 
  8478  0211                     	;# 
  8479  0212                     	;# 
  8480  0212                     	;# 
  8481  0213                     	;# 
  8482  0214                     	;# 
  8483  0215                     	;# 
  8484  0215                     	;# 
  8485  0216                     	;# 
  8486  0216                     	;# 
  8487  0217                     	;# 
  8488  0217                     	;# 
  8489  0218                     	;# 
  8490  0218                     	;# 
  8491  0219                     	;# 
  8492  021A                     	;# 
  8493  021B                     	;# 
  8494  021B                     	;# 
  8495  021C                     	;# 
  8496  021C                     	;# 
  8497  021D                     	;# 
  8498  021D                     	;# 
  8499  021E                     	;# 
  8500  021F                     	;# 
  8501  028C                     	;# 
  8502  028C                     	;# 
  8503  028D                     	;# 
  8504  028D                     	;# 
  8505  028E                     	;# 
  8506  028F                     	;# 
  8507  0290                     	;# 
  8508  0290                     	;# 
  8509  0291                     	;# 
  8510  0292                     	;# 
  8511  0292                     	;# 
  8512  0293                     	;# 
  8513  0293                     	;# 
  8514  0294                     	;# 
  8515  0295                     	;# 
  8516  0296                     	;# 
  8517  0296                     	;# 
  8518  0297                     	;# 
  8519  0298                     	;# 
  8520  0298                     	;# 
  8521  0299                     	;# 
  8522  0299                     	;# 
  8523  029A                     	;# 
  8524  029B                     	;# 
  8525  029C                     	;# 
  8526  029C                     	;# 
  8527  029D                     	;# 
  8528  030C                     	;# 
  8529  030C                     	;# 
  8530  030D                     	;# 
  8531  030E                     	;# 
  8532  030F                     	;# 
  8533  0310                     	;# 
  8534  0310                     	;# 
  8535  0311                     	;# 
  8536  0312                     	;# 
  8537  0313                     	;# 
  8538  0314                     	;# 
  8539  0314                     	;# 
  8540  0315                     	;# 
  8541  0316                     	;# 
  8542  0317                     	;# 
  8543  0318                     	;# 
  8544  0318                     	;# 
  8545  0319                     	;# 
  8546  031A                     	;# 
  8547  031B                     	;# 
  8548  031C                     	;# 
  8549  031C                     	;# 
  8550  031D                     	;# 
  8551  031E                     	;# 
  8552  031F                     	;# 
  8553  038C                     	;# 
  8554  038C                     	;# 
  8555  038D                     	;# 
  8556  038E                     	;# 
  8557  0390                     	;# 
  8558  0390                     	;# 
  8559  0391                     	;# 
  8560  0392                     	;# 
  8561  040C                     	;# 
  8562  040D                     	;# 
  8563  040E                     	;# 
  8564  040F                     	;# 
  8565  0410                     	;# 
  8566  0411                     	;# 
  8567  0416                     	;# 
  8568  0416                     	;# 
  8569  0417                     	;# 
  8570  0418                     	;# 
  8571  0418                     	;# 
  8572  0419                     	;# 
  8573  041A                     	;# 
  8574  041A                     	;# 
  8575  041B                     	;# 
  8576  041C                     	;# 
  8577  041C                     	;# 
  8578  041D                     	;# 
  8579  041E                     	;# 
  8580  041F                     	;# 
  8581  048C                     	;# 
  8582  048C                     	;# 
  8583  048D                     	;# 
  8584  048E                     	;# 
  8585  048F                     	;# 
  8586  048F                     	;# 
  8587  0490                     	;# 
  8588  0491                     	;# 
  8589  0492                     	;# 
  8590  0492                     	;# 
  8591  0493                     	;# 
  8592  0494                     	;# 
  8593  0495                     	;# 
  8594  0495                     	;# 
  8595  0496                     	;# 
  8596  0497                     	;# 
  8597  0498                     	;# 
  8598  0499                     	;# 
  8599  049A                     	;# 
  8600  049B                     	;# 
  8601  049C                     	;# 
  8602  049D                     	;# 
  8603  050C                     	;# 
  8604  050C                     	;# 
  8605  050D                     	;# 
  8606  050E                     	;# 
  8607  050F                     	;# 
  8608  050F                     	;# 
  8609  0510                     	;# 
  8610  0511                     	;# 
  8611  0512                     	;# 
  8612  0512                     	;# 
  8613  0513                     	;# 
  8614  0514                     	;# 
  8615  0515                     	;# 
  8616  0515                     	;# 
  8617  0516                     	;# 
  8618  0517                     	;# 
  8619  0518                     	;# 
  8620  0519                     	;# 
  8621  051A                     	;# 
  8622  051B                     	;# 
  8623  051C                     	;# 
  8624  051D                     	;# 
  8625  058C                     	;# 
  8626  058C                     	;# 
  8627  058D                     	;# 
  8628  058E                     	;# 
  8629  058F                     	;# 
  8630  058F                     	;# 
  8631  0590                     	;# 
  8632  0591                     	;# 
  8633  0592                     	;# 
  8634  0593                     	;# 
  8635  060C                     	;# 
  8636  060D                     	;# 
  8637  060E                     	;# 
  8638  060F                     	;# 
  8639  0610                     	;# 
  8640  0611                     	;# 
  8641  0612                     	;# 
  8642  0613                     	;# 
  8643  0614                     	;# 
  8644  0616                     	;# 
  8645  0617                     	;# 
  8646  0618                     	;# 
  8647  0619                     	;# 
  8648  061A                     	;# 
  8649  061B                     	;# 
  8650  061C                     	;# 
  8651  061D                     	;# 
  8652  061E                     	;# 
  8653  068C                     	;# 
  8654  068D                     	;# 
  8655  068E                     	;# 
  8656  068F                     	;# 
  8657  0690                     	;# 
  8658  0691                     	;# 
  8659  0692                     	;# 
  8660  0693                     	;# 
  8661  0694                     	;# 
  8662  070C                     	;# 
  8663  070D                     	;# 
  8664  070E                     	;# 
  8665  070F                     	;# 
  8666  0710                     	;# 
  8667  0711                     	;# 
  8668  0712                     	;# 
  8669  0713                     	;# 
  8670  0714                     	;# 
  8671  0716                     	;# 
  8672  0717                     	;# 
  8673  0718                     	;# 
  8674  0719                     	;# 
  8675  071A                     	;# 
  8676  071B                     	;# 
  8677  071C                     	;# 
  8678  071D                     	;# 
  8679  071E                     	;# 
  8680  0796                     	;# 
  8681  0797                     	;# 
  8682  0798                     	;# 
  8683  0799                     	;# 
  8684  079A                     	;# 
  8685  079B                     	;# 
  8686  080C                     	;# 
  8687  080D                     	;# 
  8688  080E                     	;# 
  8689  080F                     	;# 
  8690  0810                     	;# 
  8691  0811                     	;# 
  8692  0812                     	;# 
  8693  0813                     	;# 
  8694  0814                     	;# 
  8695  081A                     	;# 
  8696  081B                     	;# 
  8697  081C                     	;# 
  8698  081D                     	;# 
  8699  081E                     	;# 
  8700  081F                     	;# 
  8701  088C                     	;# 
  8702  088D                     	;# 
  8703  088E                     	;# 
  8704  088F                     	;# 
  8705  0890                     	;# 
  8706  0891                     	;# 
  8707  0892                     	;# 
  8708  0893                     	;# 
  8709  0895                     	;# 
  8710  0896                     	;# 
  8711  0897                     	;# 
  8712  0898                     	;# 
  8713  0899                     	;# 
  8714  089A                     	;# 
  8715  089B                     	;# 
  8716  090C                     	;# 
  8717  090E                     	;# 
  8718  090F                     	;# 
  8719  091F                     	;# 
  8720  091F                     	;# 
  8721  098F                     	;# 
  8722  098F                     	;# 
  8723  0990                     	;# 
  8724  0991                     	;# 
  8725  0992                     	;# 
  8726  0993                     	;# 
  8727  0994                     	;# 
  8728  0995                     	;# 
  8729  0996                     	;# 
  8730  0997                     	;# 
  8731  0E0F                     	;# 
  8732  0E10                     	;# 
  8733  0E11                     	;# 
  8734  0E12                     	;# 
  8735  0E13                     	;# 
  8736  0E14                     	;# 
  8737  0E15                     	;# 
  8738  0E16                     	;# 
  8739  0E17                     	;# 
  8740  0E18                     	;# 
  8741  0E19                     	;# 
  8742  0E1A                     	;# 
  8743  0E1B                     	;# 
  8744  0E1C                     	;# 
  8745  0E1D                     	;# 
  8746  0E1E                     	;# 
  8747  0E1F                     	;# 
  8748  0E20                     	;# 
  8749  0E21                     	;# 
  8750  0E22                     	;# 
  8751  0E23                     	;# 
  8752  0E24                     	;# 
  8753  0E25                     	;# 
  8754  0E26                     	;# 
  8755  0E27                     	;# 
  8756  0E28                     	;# 
  8757  0E29                     	;# 
  8758  0E2A                     	;# 
  8759  0E2B                     	;# 
  8760  0E2C                     	;# 
  8761  0E2D                     	;# 
  8762  0E2E                     	;# 
  8763  0E2F                     	;# 
  8764  0E30                     	;# 
  8765  0E31                     	;# 
  8766  0E32                     	;# 
  8767  0E33                     	;# 
  8768  0E34                     	;# 
  8769  0E35                     	;# 
  8770  0E36                     	;# 
  8771  0E37                     	;# 
  8772  0E8F                     	;# 
  8773  0E90                     	;# 
  8774  0E91                     	;# 
  8775  0E92                     	;# 
  8776  0E93                     	;# 
  8777  0E94                     	;# 
  8778  0E95                     	;# 
  8779  0E96                     	;# 
  8780  0E97                     	;# 
  8781  0E9C                     	;# 
  8782  0E9D                     	;# 
  8783  0E9E                     	;# 
  8784  0EA1                     	;# 
  8785  0EA2                     	;# 
  8786  0EA3                     	;# 
  8787  0EA4                     	;# 
  8788  0EA5                     	;# 
  8789  0EA9                     	;# 
  8790  0EAA                     	;# 
  8791  0EAB                     	;# 
  8792  0EAC                     	;# 
  8793  0EB1                     	;# 
  8794  0EB2                     	;# 
  8795  0EB3                     	;# 
  8796  0EB8                     	;# 
  8797  0EB9                     	;# 
  8798  0EBA                     	;# 
  8799  0EBB                     	;# 
  8800  0EBC                     	;# 
  8801  0EBD                     	;# 
  8802  0EBE                     	;# 
  8803  0EC3                     	;# 
  8804  0EC5                     	;# 
  8805  0EC6                     	;# 
  8806  0EC7                     	;# 
  8807  0EC8                     	;# 
  8808  0EC9                     	;# 
  8809  0ECA                     	;# 
  8810  0ECB                     	;# 
  8811  0ECC                     	;# 
  8812  0F10                     	;# 
  8813  0F11                     	;# 
  8814  0F12                     	;# 
  8815  0F13                     	;# 
  8816  0F14                     	;# 
  8817  0F15                     	;# 
  8818  0F16                     	;# 
  8819  0F17                     	;# 
  8820  0F18                     	;# 
  8821  0F19                     	;# 
  8822  0F1A                     	;# 
  8823  0F1B                     	;# 
  8824  0F1C                     	;# 
  8825  0F1D                     	;# 
  8826  0F1E                     	;# 
  8827  0F1F                     	;# 
  8828  0F20                     	;# 
  8829  0F21                     	;# 
  8830  0F22                     	;# 
  8831  0F23                     	;# 
  8832  0F24                     	;# 
  8833  0F25                     	;# 
  8834  0F26                     	;# 
  8835  0F27                     	;# 
  8836  0F28                     	;# 
  8837  0F29                     	;# 
  8838  0F2A                     	;# 
  8839  0F2B                     	;# 
  8840  0F2C                     	;# 
  8841  0F2D                     	;# 
  8842  0F2E                     	;# 
  8843  0F2F                     	;# 
  8844  0F30                     	;# 
  8845  0F31                     	;# 
  8846  0F32                     	;# 
  8847  0F38                     	;# 
  8848  0F39                     	;# 
  8849  0F3A                     	;# 
  8850  0F3B                     	;# 
  8851  0F3C                     	;# 
  8852  0F3D                     	;# 
  8853  0F3E                     	;# 
  8854  0F3F                     	;# 
  8855  0F40                     	;# 
  8856  0F41                     	;# 
  8857  0F43                     	;# 
  8858  0F44                     	;# 
  8859  0F45                     	;# 
  8860  0F46                     	;# 
  8861  0F47                     	;# 
  8862  0F48                     	;# 
  8863  0F49                     	;# 
  8864  0F4A                     	;# 
  8865  0F4B                     	;# 
  8866  0F4C                     	;# 
  8867  0F4E                     	;# 
  8868  0F4F                     	;# 
  8869  0F50                     	;# 
  8870  0F51                     	;# 
  8871  0F52                     	;# 
  8872  0F53                     	;# 
  8873  0F54                     	;# 
  8874  0F55                     	;# 
  8875  0F56                     	;# 
  8876  0F57                     	;# 
  8877  0F59                     	;# 
  8878  0F5A                     	;# 
  8879  0F5B                     	;# 
  8880  0F5C                     	;# 
  8881  0F5D                     	;# 
  8882  0F61                     	;# 
  8883  0F62                     	;# 
  8884  0F64                     	;# 
  8885  0F65                     	;# 
  8886  0F66                     	;# 
  8887  0F67                     	;# 
  8888  0F68                     	;# 
  8889  0F69                     	;# 
  8890  0F6A                     	;# 
  8891  0F6B                     	;# 
  8892  0F6C                     	;# 
  8893  0F6D                     	;# 
  8894  0FE4                     	;# 
  8895  0FE5                     	;# 
  8896  0FE6                     	;# 
  8897  0FE7                     	;# 
  8898  0FE8                     	;# 
  8899  0FE9                     	;# 
  8900  0FEA                     	;# 
  8901  0FEB                     	;# 
  8902  0FED                     	;# 
  8903  0FEE                     	;# 
  8904  0FEF                     	;# 
  8905  0000                     	;# 
  8906  0001                     	;# 
  8907  0002                     	;# 
  8908  0003                     	;# 
  8909  0004                     	;# 
  8910  0005                     	;# 
  8911  0006                     	;# 
  8912  0007                     	;# 
  8913  0008                     	;# 
  8914  0009                     	;# 
  8915  000A                     	;# 
  8916  000B                     	;# 
  8917  000C                     	;# 
  8918  000D                     	;# 
  8919  000E                     	;# 
  8920  000F                     	;# 
  8921  0010                     	;# 
  8922  0011                     	;# 
  8923  0012                     	;# 
  8924  0013                     	;# 
  8925  0014                     	;# 
  8926  0015                     	;# 
  8927  0016                     	;# 
  8928  0017                     	;# 
  8929  0018                     	;# 
  8930  0019                     	;# 
  8931  001A                     	;# 
  8932  001C                     	;# 
  8933  001C                     	;# 
  8934  001D                     	;# 
  8935  001D                     	;# 
  8936  001E                     	;# 
  8937  001F                     	;# 
  8938  008C                     	;# 
  8939  008C                     	;# 
  8940  008D                     	;# 
  8941  008E                     	;# 
  8942  008E                     	;# 
  8943  008F                     	;# 
  8944  0090                     	;# 
  8945  0090                     	;# 
  8946  0091                     	;# 
  8947  0093                     	;# 
  8948  0094                     	;# 
  8949  0095                     	;# 
  8950  0096                     	;# 
  8951  0097                     	;# 
  8952  0098                     	;# 
  8953  0099                     	;# 
  8954  009A                     	;# 
  8955  009B                     	;# 
  8956  009C                     	;# 
  8957  009D                     	;# 
  8958  009E                     	;# 
  8959  010C                     	;# 
  8960  010D                     	;# 
  8961  010E                     	;# 
  8962  010E                     	;# 
  8963  010F                     	;# 
  8964  0110                     	;# 
  8965  0110                     	;# 
  8966  0111                     	;# 
  8967  0112                     	;# 
  8968  0112                     	;# 
  8969  0113                     	;# 
  8970  0114                     	;# 
  8971  0114                     	;# 
  8972  0115                     	;# 
  8973  0116                     	;# 
  8974  0116                     	;# 
  8975  0117                     	;# 
  8976  0119                     	;# 
  8977  0119                     	;# 
  8978  0119                     	;# 
  8979  011A                     	;# 
  8980  011A                     	;# 
  8981  011A                     	;# 
  8982  011B                     	;# 
  8983  011B                     	;# 
  8984  011B                     	;# 
  8985  011B                     	;# 
  8986  011B                     	;# 
  8987  011C                     	;# 
  8988  011C                     	;# 
  8989  011C                     	;# 
  8990  011D                     	;# 
  8991  011D                     	;# 
  8992  011D                     	;# 
  8993  011E                     	;# 
  8994  011E                     	;# 
  8995  011E                     	;# 
  8996  011F                     	;# 
  8997  011F                     	;# 
  8998  011F                     	;# 
  8999  011F                     	;# 
  9000  011F                     	;# 
  9001  018C                     	;# 
  9002  018D                     	;# 
  9003  018E                     	;# 
  9004  018F                     	;# 
  9005  0190                     	;# 
  9006  0191                     	;# 
  9007  0192                     	;# 
  9008  0196                     	;# 
  9009  0197                     	;# 
  9010  0198                     	;# 
  9011  0199                     	;# 
  9012  019A                     	;# 
  9013  019B                     	;# 
  9014  019C                     	;# 
  9015  020C                     	;# 
  9016  020C                     	;# 
  9017  020D                     	;# 
  9018  020E                     	;# 
  9019  020F                     	;# 
  9020  020F                     	;# 
  9021  0210                     	;# 
  9022  0210                     	;# 
  9023  0211                     	;# 
  9024  0211                     	;# 
  9025  0212                     	;# 
  9026  0212                     	;# 
  9027  0213                     	;# 
  9028  0214                     	;# 
  9029  0215                     	;# 
  9030  0215                     	;# 
  9031  0216                     	;# 
  9032  0216                     	;# 
  9033  0217                     	;# 
  9034  0217                     	;# 
  9035  0218                     	;# 
  9036  0218                     	;# 
  9037  0219                     	;# 
  9038  021A                     	;# 
  9039  021B                     	;# 
  9040  021B                     	;# 
  9041  021C                     	;# 
  9042  021C                     	;# 
  9043  021D                     	;# 
  9044  021D                     	;# 
  9045  021E                     	;# 
  9046  021F                     	;# 
  9047  028C                     	;# 
  9048  028C                     	;# 
  9049  028D                     	;# 
  9050  028D                     	;# 
  9051  028E                     	;# 
  9052  028F                     	;# 
  9053  0290                     	;# 
  9054  0290                     	;# 
  9055  0291                     	;# 
  9056  0292                     	;# 
  9057  0292                     	;# 
  9058  0293                     	;# 
  9059  0293                     	;# 
  9060  0294                     	;# 
  9061  0295                     	;# 
  9062  0296                     	;# 
  9063  0296                     	;# 
  9064  0297                     	;# 
  9065  0298                     	;# 
  9066  0298                     	;# 
  9067  0299                     	;# 
  9068  0299                     	;# 
  9069  029A                     	;# 
  9070  029B                     	;# 
  9071  029C                     	;# 
  9072  029C                     	;# 
  9073  029D                     	;# 
  9074  030C                     	;# 
  9075  030C                     	;# 
  9076  030D                     	;# 
  9077  030E                     	;# 
  9078  030F                     	;# 
  9079  0310                     	;# 
  9080  0310                     	;# 
  9081  0311                     	;# 
  9082  0312                     	;# 
  9083  0313                     	;# 
  9084  0314                     	;# 
  9085  0314                     	;# 
  9086  0315                     	;# 
  9087  0316                     	;# 
  9088  0317                     	;# 
  9089  0318                     	;# 
  9090  0318                     	;# 
  9091  0319                     	;# 
  9092  031A                     	;# 
  9093  031B                     	;# 
  9094  031C                     	;# 
  9095  031C                     	;# 
  9096  031D                     	;# 
  9097  031E                     	;# 
  9098  031F                     	;# 
  9099  038C                     	;# 
  9100  038C                     	;# 
  9101  038D                     	;# 
  9102  038E                     	;# 
  9103  0390                     	;# 
  9104  0390                     	;# 
  9105  0391                     	;# 
  9106  0392                     	;# 
  9107  040C                     	;# 
  9108  040D                     	;# 
  9109  040E                     	;# 
  9110  040F                     	;# 
  9111  0410                     	;# 
  9112  0411                     	;# 
  9113  0416                     	;# 
  9114  0416                     	;# 
  9115  0417                     	;# 
  9116  0418                     	;# 
  9117  0418                     	;# 
  9118  0419                     	;# 
  9119  041A                     	;# 
  9120  041A                     	;# 
  9121  041B                     	;# 
  9122  041C                     	;# 
  9123  041C                     	;# 
  9124  041D                     	;# 
  9125  041E                     	;# 
  9126  041F                     	;# 
  9127  048C                     	;# 
  9128  048C                     	;# 
  9129  048D                     	;# 
  9130  048E                     	;# 
  9131  048F                     	;# 
  9132  048F                     	;# 
  9133  0490                     	;# 
  9134  0491                     	;# 
  9135  0492                     	;# 
  9136  0492                     	;# 
  9137  0493                     	;# 
  9138  0494                     	;# 
  9139  0495                     	;# 
  9140  0495                     	;# 
  9141  0496                     	;# 
  9142  0497                     	;# 
  9143  0498                     	;# 
  9144  0499                     	;# 
  9145  049A                     	;# 
  9146  049B                     	;# 
  9147  049C                     	;# 
  9148  049D                     	;# 
  9149  050C                     	;# 
  9150  050C                     	;# 
  9151  050D                     	;# 
  9152  050E                     	;# 
  9153  050F                     	;# 
  9154  050F                     	;# 
  9155  0510                     	;# 
  9156  0511                     	;# 
  9157  0512                     	;# 
  9158  0512                     	;# 
  9159  0513                     	;# 
  9160  0514                     	;# 
  9161  0515                     	;# 
  9162  0515                     	;# 
  9163  0516                     	;# 
  9164  0517                     	;# 
  9165  0518                     	;# 
  9166  0519                     	;# 
  9167  051A                     	;# 
  9168  051B                     	;# 
  9169  051C                     	;# 
  9170  051D                     	;# 
  9171  058C                     	;# 
  9172  058C                     	;# 
  9173  058D                     	;# 
  9174  058E                     	;# 
  9175  058F                     	;# 
  9176  058F                     	;# 
  9177  0590                     	;# 
  9178  0591                     	;# 
  9179  0592                     	;# 
  9180  0593                     	;# 
  9181  060C                     	;# 
  9182  060D                     	;# 
  9183  060E                     	;# 
  9184  060F                     	;# 
  9185  0610                     	;# 
  9186  0611                     	;# 
  9187  0612                     	;# 
  9188  0613                     	;# 
  9189  0614                     	;# 
  9190  0616                     	;# 
  9191  0617                     	;# 
  9192  0618                     	;# 
  9193  0619                     	;# 
  9194  061A                     	;# 
  9195  061B                     	;# 
  9196  061C                     	;# 
  9197  061D                     	;# 
  9198  061E                     	;# 
  9199  068C                     	;# 
  9200  068D                     	;# 
  9201  068E                     	;# 
  9202  068F                     	;# 
  9203  0690                     	;# 
  9204  0691                     	;# 
  9205  0692                     	;# 
  9206  0693                     	;# 
  9207  0694                     	;# 
  9208  070C                     	;# 
  9209  070D                     	;# 
  9210  070E                     	;# 
  9211  070F                     	;# 
  9212  0710                     	;# 
  9213  0711                     	;# 
  9214  0712                     	;# 
  9215  0713                     	;# 
  9216  0714                     	;# 
  9217  0716                     	;# 
  9218  0717                     	;# 
  9219  0718                     	;# 
  9220  0719                     	;# 
  9221  071A                     	;# 
  9222  071B                     	;# 
  9223  071C                     	;# 
  9224  071D                     	;# 
  9225  071E                     	;# 
  9226  0796                     	;# 
  9227  0797                     	;# 
  9228  0798                     	;# 
  9229  0799                     	;# 
  9230  079A                     	;# 
  9231  079B                     	;# 
  9232  080C                     	;# 
  9233  080D                     	;# 
  9234  080E                     	;# 
  9235  080F                     	;# 
  9236  0810                     	;# 
  9237  0811                     	;# 
  9238  0812                     	;# 
  9239  0813                     	;# 
  9240  0814                     	;# 
  9241  081A                     	;# 
  9242  081B                     	;# 
  9243  081C                     	;# 
  9244  081D                     	;# 
  9245  081E                     	;# 
  9246  081F                     	;# 
  9247  088C                     	;# 
  9248  088D                     	;# 
  9249  088E                     	;# 
  9250  088F                     	;# 
  9251  0890                     	;# 
  9252  0891                     	;# 
  9253  0892                     	;# 
  9254  0893                     	;# 
  9255  0895                     	;# 
  9256  0896                     	;# 
  9257  0897                     	;# 
  9258  0898                     	;# 
  9259  0899                     	;# 
  9260  089A                     	;# 
  9261  089B                     	;# 
  9262  090C                     	;# 
  9263  090E                     	;# 
  9264  090F                     	;# 
  9265  091F                     	;# 
  9266  091F                     	;# 
  9267  098F                     	;# 
  9268  098F                     	;# 
  9269  0990                     	;# 
  9270  0991                     	;# 
  9271  0992                     	;# 
  9272  0993                     	;# 
  9273  0994                     	;# 
  9274  0995                     	;# 
  9275  0996                     	;# 
  9276  0997                     	;# 
  9277  0E0F                     	;# 
  9278  0E10                     	;# 
  9279  0E11                     	;# 
  9280  0E12                     	;# 
  9281  0E13                     	;# 
  9282  0E14                     	;# 
  9283  0E15                     	;# 
  9284  0E16                     	;# 
  9285  0E17                     	;# 
  9286  0E18                     	;# 
  9287  0E19                     	;# 
  9288  0E1A                     	;# 
  9289  0E1B                     	;# 
  9290  0E1C                     	;# 
  9291  0E1D                     	;# 
  9292  0E1E                     	;# 
  9293  0E1F                     	;# 
  9294  0E20                     	;# 
  9295  0E21                     	;# 
  9296  0E22                     	;# 
  9297  0E23                     	;# 
  9298  0E24                     	;# 
  9299  0E25                     	;# 
  9300  0E26                     	;# 
  9301  0E27                     	;# 
  9302  0E28                     	;# 
  9303  0E29                     	;# 
  9304  0E2A                     	;# 
  9305  0E2B                     	;# 
  9306  0E2C                     	;# 
  9307  0E2D                     	;# 
  9308  0E2E                     	;# 
  9309  0E2F                     	;# 
  9310  0E30                     	;# 
  9311  0E31                     	;# 
  9312  0E32                     	;# 
  9313  0E33                     	;# 
  9314  0E34                     	;# 
  9315  0E35                     	;# 
  9316  0E36                     	;# 
  9317  0E37                     	;# 
  9318  0E8F                     	;# 
  9319  0E90                     	;# 
  9320  0E91                     	;# 
  9321  0E92                     	;# 
  9322  0E93                     	;# 
  9323  0E94                     	;# 
  9324  0E95                     	;# 
  9325  0E96                     	;# 
  9326  0E97                     	;# 
  9327  0E9C                     	;# 
  9328  0E9D                     	;# 
  9329  0E9E                     	;# 
  9330  0EA1                     	;# 
  9331  0EA2                     	;# 
  9332  0EA3                     	;# 
  9333  0EA4                     	;# 
  9334  0EA5                     	;# 
  9335  0EA9                     	;# 
  9336  0EAA                     	;# 
  9337  0EAB                     	;# 
  9338  0EAC                     	;# 
  9339  0EB1                     	;# 
  9340  0EB2                     	;# 
  9341  0EB3                     	;# 
  9342  0EB8                     	;# 
  9343  0EB9                     	;# 
  9344  0EBA                     	;# 
  9345  0EBB                     	;# 
  9346  0EBC                     	;# 
  9347  0EBD                     	;# 
  9348  0EBE                     	;# 
  9349  0EC3                     	;# 
  9350  0EC5                     	;# 
  9351  0EC6                     	;# 
  9352  0EC7                     	;# 
  9353  0EC8                     	;# 
  9354  0EC9                     	;# 
  9355  0ECA                     	;# 
  9356  0ECB                     	;# 
  9357  0ECC                     	;# 
  9358  0F10                     	;# 
  9359  0F11                     	;# 
  9360  0F12                     	;# 
  9361  0F13                     	;# 
  9362  0F14                     	;# 
  9363  0F15                     	;# 
  9364  0F16                     	;# 
  9365  0F17                     	;# 
  9366  0F18                     	;# 
  9367  0F19                     	;# 
  9368  0F1A                     	;# 
  9369  0F1B                     	;# 
  9370  0F1C                     	;# 
  9371  0F1D                     	;# 
  9372  0F1E                     	;# 
  9373  0F1F                     	;# 
  9374  0F20                     	;# 
  9375  0F21                     	;# 
  9376  0F22                     	;# 
  9377  0F23                     	;# 
  9378  0F24                     	;# 
  9379  0F25                     	;# 
  9380  0F26                     	;# 
  9381  0F27                     	;# 
  9382  0F28                     	;# 
  9383  0F29                     	;# 
  9384  0F2A                     	;# 
  9385  0F2B                     	;# 
  9386  0F2C                     	;# 
  9387  0F2D                     	;# 
  9388  0F2E                     	;# 
  9389  0F2F                     	;# 
  9390  0F30                     	;# 
  9391  0F31                     	;# 
  9392  0F32                     	;# 
  9393  0F38                     	;# 
  9394  0F39                     	;# 
  9395  0F3A                     	;# 
  9396  0F3B                     	;# 
  9397  0F3C                     	;# 
  9398  0F3D                     	;# 
  9399  0F3E                     	;# 
  9400  0F3F                     	;# 
  9401  0F40                     	;# 
  9402  0F41                     	;# 
  9403  0F43                     	;# 
  9404  0F44                     	;# 
  9405  0F45                     	;# 
  9406  0F46                     	;# 
  9407  0F47                     	;# 
  9408  0F48                     	;# 
  9409  0F49                     	;# 
  9410  0F4A                     	;# 
  9411  0F4B                     	;# 
  9412  0F4C                     	;# 
  9413  0F4E                     	;# 
  9414  0F4F                     	;# 
  9415  0F50                     	;# 
  9416  0F51                     	;# 
  9417  0F52                     	;# 
  9418  0F53                     	;# 
  9419  0F54                     	;# 
  9420  0F55                     	;# 
  9421  0F56                     	;# 
  9422  0F57                     	;# 
  9423  0F59                     	;# 
  9424  0F5A                     	;# 
  9425  0F5B                     	;# 
  9426  0F5C                     	;# 
  9427  0F5D                     	;# 
  9428  0F61                     	;# 
  9429  0F62                     	;# 
  9430  0F64                     	;# 
  9431  0F65                     	;# 
  9432  0F66                     	;# 
  9433  0F67                     	;# 
  9434  0F68                     	;# 
  9435  0F69                     	;# 
  9436  0F6A                     	;# 
  9437  0F6B                     	;# 
  9438  0F6C                     	;# 
  9439  0F6D                     	;# 
  9440  0FE4                     	;# 
  9441  0FE5                     	;# 
  9442  0FE6                     	;# 
  9443  0FE7                     	;# 
  9444  0FE8                     	;# 
  9445  0FE9                     	;# 
  9446  0FEA                     	;# 
  9447  0FEB                     	;# 
  9448  0FED                     	;# 
  9449  0FEE                     	;# 
  9450  0FEF                     	;# 
  9451  0000                     	;# 
  9452  0001                     	;# 
  9453  0002                     	;# 
  9454  0003                     	;# 
  9455  0004                     	;# 
  9456  0005                     	;# 
  9457  0006                     	;# 
  9458  0007                     	;# 
  9459  0008                     	;# 
  9460  0009                     	;# 
  9461  000A                     	;# 
  9462  000B                     	;# 
  9463  000C                     	;# 
  9464  000D                     	;# 
  9465  000E                     	;# 
  9466  000F                     	;# 
  9467  0010                     	;# 
  9468  0011                     	;# 
  9469  0012                     	;# 
  9470  0013                     	;# 
  9471  0014                     	;# 
  9472  0015                     	;# 
  9473  0016                     	;# 
  9474  0017                     	;# 
  9475  0018                     	;# 
  9476  0019                     	;# 
  9477  001A                     	;# 
  9478  001C                     	;# 
  9479  001C                     	;# 
  9480  001D                     	;# 
  9481  001D                     	;# 
  9482  001E                     	;# 
  9483  001F                     	;# 
  9484  008C                     	;# 
  9485  008C                     	;# 
  9486  008D                     	;# 
  9487  008E                     	;# 
  9488  008E                     	;# 
  9489  008F                     	;# 
  9490  0090                     	;# 
  9491  0090                     	;# 
  9492  0091                     	;# 
  9493  0093                     	;# 
  9494  0094                     	;# 
  9495  0095                     	;# 
  9496  0096                     	;# 
  9497  0097                     	;# 
  9498  0098                     	;# 
  9499  0099                     	;# 
  9500  009A                     	;# 
  9501  009B                     	;# 
  9502  009C                     	;# 
  9503  009D                     	;# 
  9504  009E                     	;# 
  9505  010C                     	;# 
  9506  010D                     	;# 
  9507  010E                     	;# 
  9508  010E                     	;# 
  9509  010F                     	;# 
  9510  0110                     	;# 
  9511  0110                     	;# 
  9512  0111                     	;# 
  9513  0112                     	;# 
  9514  0112                     	;# 
  9515  0113                     	;# 
  9516  0114                     	;# 
  9517  0114                     	;# 
  9518  0115                     	;# 
  9519  0116                     	;# 
  9520  0116                     	;# 
  9521  0117                     	;# 
  9522  0119                     	;# 
  9523  0119                     	;# 
  9524  0119                     	;# 
  9525  011A                     	;# 
  9526  011A                     	;# 
  9527  011A                     	;# 
  9528  011B                     	;# 
  9529  011B                     	;# 
  9530  011B                     	;# 
  9531  011B                     	;# 
  9532  011B                     	;# 
  9533  011C                     	;# 
  9534  011C                     	;# 
  9535  011C                     	;# 
  9536  011D                     	;# 
  9537  011D                     	;# 
  9538  011D                     	;# 
  9539  011E                     	;# 
  9540  011E                     	;# 
  9541  011E                     	;# 
  9542  011F                     	;# 
  9543  011F                     	;# 
  9544  011F                     	;# 
  9545  011F                     	;# 
  9546  011F                     	;# 
  9547  018C                     	;# 
  9548  018D                     	;# 
  9549  018E                     	;# 
  9550  018F                     	;# 
  9551  0190                     	;# 
  9552  0191                     	;# 
  9553  0192                     	;# 
  9554  0196                     	;# 
  9555  0197                     	;# 
  9556  0198                     	;# 
  9557  0199                     	;# 
  9558  019A                     	;# 
  9559  019B                     	;# 
  9560  019C                     	;# 
  9561  020C                     	;# 
  9562  020C                     	;# 
  9563  020D                     	;# 
  9564  020E                     	;# 
  9565  020F                     	;# 
  9566  020F                     	;# 
  9567  0210                     	;# 
  9568  0210                     	;# 
  9569  0211                     	;# 
  9570  0211                     	;# 
  9571  0212                     	;# 
  9572  0212                     	;# 
  9573  0213                     	;# 
  9574  0214                     	;# 
  9575  0215                     	;# 
  9576  0215                     	;# 
  9577  0216                     	;# 
  9578  0216                     	;# 
  9579  0217                     	;# 
  9580  0217                     	;# 
  9581  0218                     	;# 
  9582  0218                     	;# 
  9583  0219                     	;# 
  9584  021A                     	;# 
  9585  021B                     	;# 
  9586  021B                     	;# 
  9587  021C                     	;# 
  9588  021C                     	;# 
  9589  021D                     	;# 
  9590  021D                     	;# 
  9591  021E                     	;# 
  9592  021F                     	;# 
  9593  028C                     	;# 
  9594  028C                     	;# 
  9595  028D                     	;# 
  9596  028D                     	;# 
  9597  028E                     	;# 
  9598  028F                     	;# 
  9599  0290                     	;# 
  9600  0290                     	;# 
  9601  0291                     	;# 
  9602  0292                     	;# 
  9603  0292                     	;# 
  9604  0293                     	;# 
  9605  0293                     	;# 
  9606  0294                     	;# 
  9607  0295                     	;# 
  9608  0296                     	;# 
  9609  0296                     	;# 
  9610  0297                     	;# 
  9611  0298                     	;# 
  9612  0298                     	;# 
  9613  0299                     	;# 
  9614  0299                     	;# 
  9615  029A                     	;# 
  9616  029B                     	;# 
  9617  029C                     	;# 
  9618  029C                     	;# 
  9619  029D                     	;# 
  9620  030C                     	;# 
  9621  030C                     	;# 
  9622  030D                     	;# 
  9623  030E                     	;# 
  9624  030F                     	;# 
  9625  0310                     	;# 
  9626  0310                     	;# 
  9627  0311                     	;# 
  9628  0312                     	;# 
  9629  0313                     	;# 
  9630  0314                     	;# 
  9631  0314                     	;# 
  9632  0315                     	;# 
  9633  0316                     	;# 
  9634  0317                     	;# 
  9635  0318                     	;# 
  9636  0318                     	;# 
  9637  0319                     	;# 
  9638  031A                     	;# 
  9639  031B                     	;# 
  9640  031C                     	;# 
  9641  031C                     	;# 
  9642  031D                     	;# 
  9643  031E                     	;# 
  9644  031F                     	;# 
  9645  038C                     	;# 
  9646  038C                     	;# 
  9647  038D                     	;# 
  9648  038E                     	;# 
  9649  0390                     	;# 
  9650  0390                     	;# 
  9651  0391                     	;# 
  9652  0392                     	;# 
  9653  040C                     	;# 
  9654  040D                     	;# 
  9655  040E                     	;# 
  9656  040F                     	;# 
  9657  0410                     	;# 
  9658  0411                     	;# 
  9659  0416                     	;# 
  9660  0416                     	;# 
  9661  0417                     	;# 
  9662  0418                     	;# 
  9663  0418                     	;# 
  9664  0419                     	;# 
  9665  041A                     	;# 
  9666  041A                     	;# 
  9667  041B                     	;# 
  9668  041C                     	;# 
  9669  041C                     	;# 
  9670  041D                     	;# 
  9671  041E                     	;# 
  9672  041F                     	;# 
  9673  048C                     	;# 
  9674  048C                     	;# 
  9675  048D                     	;# 
  9676  048E                     	;# 
  9677  048F                     	;# 
  9678  048F                     	;# 
  9679  0490                     	;# 
  9680  0491                     	;# 
  9681  0492                     	;# 
  9682  0492                     	;# 
  9683  0493                     	;# 
  9684  0494                     	;# 
  9685  0495                     	;# 
  9686  0495                     	;# 
  9687  0496                     	;# 
  9688  0497                     	;# 
  9689  0498                     	;# 
  9690  0499                     	;# 
  9691  049A                     	;# 
  9692  049B                     	;# 
  9693  049C                     	;# 
  9694  049D                     	;# 
  9695  050C                     	;# 
  9696  050C                     	;# 
  9697  050D                     	;# 
  9698  050E                     	;# 
  9699  050F                     	;# 
  9700  050F                     	;# 
  9701  0510                     	;# 
  9702  0511                     	;# 
  9703  0512                     	;# 
  9704  0512                     	;# 
  9705  0513                     	;# 
  9706  0514                     	;# 
  9707  0515                     	;# 
  9708  0515                     	;# 
  9709  0516                     	;# 
  9710  0517                     	;# 
  9711  0518                     	;# 
  9712  0519                     	;# 
  9713  051A                     	;# 
  9714  051B                     	;# 
  9715  051C                     	;# 
  9716  051D                     	;# 
  9717  058C                     	;# 
  9718  058C                     	;# 
  9719  058D                     	;# 
  9720  058E                     	;# 
  9721  058F                     	;# 
  9722  058F                     	;# 
  9723  0590                     	;# 
  9724  0591                     	;# 
  9725  0592                     	;# 
  9726  0593                     	;# 
  9727  060C                     	;# 
  9728  060D                     	;# 
  9729  060E                     	;# 
  9730  060F                     	;# 
  9731  0610                     	;# 
  9732  0611                     	;# 
  9733  0612                     	;# 
  9734  0613                     	;# 
  9735  0614                     	;# 
  9736  0616                     	;# 
  9737  0617                     	;# 
  9738  0618                     	;# 
  9739  0619                     	;# 
  9740  061A                     	;# 
  9741  061B                     	;# 
  9742  061C                     	;# 
  9743  061D                     	;# 
  9744  061E                     	;# 
  9745  068C                     	;# 
  9746  068D                     	;# 
  9747  068E                     	;# 
  9748  068F                     	;# 
  9749  0690                     	;# 
  9750  0691                     	;# 
  9751  0692                     	;# 
  9752  0693                     	;# 
  9753  0694                     	;# 
  9754  070C                     	;# 
  9755  070D                     	;# 
  9756  070E                     	;# 
  9757  070F                     	;# 
  9758  0710                     	;# 
  9759  0711                     	;# 
  9760  0712                     	;# 
  9761  0713                     	;# 
  9762  0714                     	;# 
  9763  0716                     	;# 
  9764  0717                     	;# 
  9765  0718                     	;# 
  9766  0719                     	;# 
  9767  071A                     	;# 
  9768  071B                     	;# 
  9769  071C                     	;# 
  9770  071D                     	;# 
  9771  071E                     	;# 
  9772  0796                     	;# 
  9773  0797                     	;# 
  9774  0798                     	;# 
  9775  0799                     	;# 
  9776  079A                     	;# 
  9777  079B                     	;# 
  9778  080C                     	;# 
  9779  080D                     	;# 
  9780  080E                     	;# 
  9781  080F                     	;# 
  9782  0810                     	;# 
  9783  0811                     	;# 
  9784  0812                     	;# 
  9785  0813                     	;# 
  9786  0814                     	;# 
  9787  081A                     	;# 
  9788  081B                     	;# 
  9789  081C                     	;# 
  9790  081D                     	;# 
  9791  081E                     	;# 
  9792  081F                     	;# 
  9793  088C                     	;# 
  9794  088D                     	;# 
  9795  088E                     	;# 
  9796  088F                     	;# 
  9797  0890                     	;# 
  9798  0891                     	;# 
  9799  0892                     	;# 
  9800  0893                     	;# 
  9801  0895                     	;# 
  9802  0896                     	;# 
  9803  0897                     	;# 
  9804  0898                     	;# 
  9805  0899                     	;# 
  9806  089A                     	;# 
  9807  089B                     	;# 
  9808  090C                     	;# 
  9809  090E                     	;# 
  9810  090F                     	;# 
  9811  091F                     	;# 
  9812  091F                     	;# 
  9813  098F                     	;# 
  9814  098F                     	;# 
  9815  0990                     	;# 
  9816  0991                     	;# 
  9817  0992                     	;# 
  9818  0993                     	;# 
  9819  0994                     	;# 
  9820  0995                     	;# 
  9821  0996                     	;# 
  9822  0997                     	;# 
  9823  0E0F                     	;# 
  9824  0E10                     	;# 
  9825  0E11                     	;# 
  9826  0E12                     	;# 
  9827  0E13                     	;# 
  9828  0E14                     	;# 
  9829  0E15                     	;# 
  9830  0E16                     	;# 
  9831  0E17                     	;# 
  9832  0E18                     	;# 
  9833  0E19                     	;# 
  9834  0E1A                     	;# 
  9835  0E1B                     	;# 
  9836  0E1C                     	;# 
  9837  0E1D                     	;# 
  9838  0E1E                     	;# 
  9839  0E1F                     	;# 
  9840  0E20                     	;# 
  9841  0E21                     	;# 
  9842  0E22                     	;# 
  9843  0E23                     	;# 
  9844  0E24                     	;# 
  9845  0E25                     	;# 
  9846  0E26                     	;# 
  9847  0E27                     	;# 
  9848  0E28                     	;# 
  9849  0E29                     	;# 
  9850  0E2A                     	;# 
  9851  0E2B                     	;# 
  9852  0E2C                     	;# 
  9853  0E2D                     	;# 
  9854  0E2E                     	;# 
  9855  0E2F                     	;# 
  9856  0E30                     	;# 
  9857  0E31                     	;# 
  9858  0E32                     	;# 
  9859  0E33                     	;# 
  9860  0E34                     	;# 
  9861  0E35                     	;# 
  9862  0E36                     	;# 
  9863  0E37                     	;# 
  9864  0E8F                     	;# 
  9865  0E90                     	;# 
  9866  0E91                     	;# 
  9867  0E92                     	;# 
  9868  0E93                     	;# 
  9869  0E94                     	;# 
  9870  0E95                     	;# 
  9871  0E96                     	;# 
  9872  0E97                     	;# 
  9873  0E9C                     	;# 
  9874  0E9D                     	;# 
  9875  0E9E                     	;# 
  9876  0EA1                     	;# 
  9877  0EA2                     	;# 
  9878  0EA3                     	;# 
  9879  0EA4                     	;# 
  9880  0EA5                     	;# 
  9881  0EA9                     	;# 
  9882  0EAA                     	;# 
  9883  0EAB                     	;# 
  9884  0EAC                     	;# 
  9885  0EB1                     	;# 
  9886  0EB2                     	;# 
  9887  0EB3                     	;# 
  9888  0EB8                     	;# 
  9889  0EB9                     	;# 
  9890  0EBA                     	;# 
  9891  0EBB                     	;# 
  9892  0EBC                     	;# 
  9893  0EBD                     	;# 
  9894  0EBE                     	;# 
  9895  0EC3                     	;# 
  9896  0EC5                     	;# 
  9897  0EC6                     	;# 
  9898  0EC7                     	;# 
  9899  0EC8                     	;# 
  9900  0EC9                     	;# 
  9901  0ECA                     	;# 
  9902  0ECB                     	;# 
  9903  0ECC                     	;# 
  9904  0F10                     	;# 
  9905  0F11                     	;# 
  9906  0F12                     	;# 
  9907  0F13                     	;# 
  9908  0F14                     	;# 
  9909  0F15                     	;# 
  9910  0F16                     	;# 
  9911  0F17                     	;# 
  9912  0F18                     	;# 
  9913  0F19                     	;# 
  9914  0F1A                     	;# 
  9915  0F1B                     	;# 
  9916  0F1C                     	;# 
  9917  0F1D                     	;# 
  9918  0F1E                     	;# 
  9919  0F1F                     	;# 
  9920  0F20                     	;# 
  9921  0F21                     	;# 
  9922  0F22                     	;# 
  9923  0F23                     	;# 
  9924  0F24                     	;# 
  9925  0F25                     	;# 
  9926  0F26                     	;# 
  9927  0F27                     	;# 
  9928  0F28                     	;# 
  9929  0F29                     	;# 
  9930  0F2A                     	;# 
  9931  0F2B                     	;# 
  9932  0F2C                     	;# 
  9933  0F2D                     	;# 
  9934  0F2E                     	;# 
  9935  0F2F                     	;# 
  9936  0F30                     	;# 
  9937  0F31                     	;# 
  9938  0F32                     	;# 
  9939  0F38                     	;# 
  9940  0F39                     	;# 
  9941  0F3A                     	;# 
  9942  0F3B                     	;# 
  9943  0F3C                     	;# 
  9944  0F3D                     	;# 
  9945  0F3E                     	;# 
  9946  0F3F                     	;# 
  9947  0F40                     	;# 
  9948  0F41                     	;# 
  9949  0F43                     	;# 
  9950  0F44                     	;# 
  9951  0F45                     	;# 
  9952  0F46                     	;# 
  9953  0F47                     	;# 
  9954  0F48                     	;# 
  9955  0F49                     	;# 
  9956  0F4A                     	;# 
  9957  0F4B                     	;# 
  9958  0F4C                     	;# 
  9959  0F4E                     	;# 
  9960  0F4F                     	;# 
  9961  0F50                     	;# 
  9962  0F51                     	;# 
  9963  0F52                     	;# 
  9964  0F53                     	;# 
  9965  0F54                     	;# 
  9966  0F55                     	;# 
  9967  0F56                     	;# 
  9968  0F57                     	;# 
  9969  0F59                     	;# 
  9970  0F5A                     	;# 
  9971  0F5B                     	;# 
  9972  0F5C                     	;# 
  9973  0F5D                     	;# 
  9974  0F61                     	;# 
  9975  0F62                     	;# 
  9976  0F64                     	;# 
  9977  0F65                     	;# 
  9978  0F66                     	;# 
  9979  0F67                     	;# 
  9980  0F68                     	;# 
  9981  0F69                     	;# 
  9982  0F6A                     	;# 
  9983  0F6B                     	;# 
  9984  0F6C                     	;# 
  9985  0F6D                     	;# 
  9986  0FE4                     	;# 
  9987  0FE5                     	;# 
  9988  0FE6                     	;# 
  9989  0FE7                     	;# 
  9990  0FE8                     	;# 
  9991  0FE9                     	;# 
  9992  0FEA                     	;# 
  9993  0FEB                     	;# 
  9994  0FED                     	;# 
  9995  0FEE                     	;# 
  9996  0FEF                     	;# 
  9997                           
  9998                           	psect	nvBANK1
  9999  00DF                     __pnvBANK1:	
 10000  00DF                     _EUSART_ErrorHandler:	
 10001  00DF                     	ds	2
 10002  00E1                     _EUSART_OverrunErrorHandler:	
 10003  00E1                     	ds	2
 10004  00E3                     _EUSART_FramingErrorHandler:	
 10005  00E3                     	ds	2
 10006  00E5                     _EUSART_RxDefaultInterruptHandler:	
 10007  00E5                     	ds	2
 10008  00E7                     _EUSART_TxDefaultInterruptHandler:	
 10009  00E7                     	ds	2
 10010  00E9                     _INT_InterruptHandler:	
 10011  00E9                     	ds	2
 10012  00EB                     _TMR1_InterruptHandler:	
 10013  00EB                     	ds	2
 10014  00ED                     _timer1ReloadVal:	
 10015  00ED                     	ds	2
 10016  00EF                     _eusartTxBufferRemaining:	
 10017  00EF                     	ds	1
 10018  000E                     _PORTCbits	set	14
 10019  000D                     _PORTBbits	set	13
 10020  0013                     _TRISCbits	set	19
 10021  0016                     _LATAbits	set	22
 10022  0014                     _TRISD	set	20
 10023  0013                     _TRISC	set	19
 10024  0012                     _TRISB	set	18
 10025  0011                     _TRISA	set	17
 10026  0015                     _TRISE	set	21
 10027  0018                     _LATC	set	24
 10028  0017                     _LATB	set	23
 10029  0016                     _LATA	set	22
 10030  0019                     _LATD	set	25
 10031  001A                     _LATE	set	26
 10032  000B                     _INTCONbits	set	11
 10033  0094                     _ADCON1bits	set	148
 10034  008E                     _ADPREVL	set	142
 10035  008F                     _ADPREVH	set	143
 10036  0097                     _ADSTATbits	set	151
 10037  0090                     _ADACCL	set	144
 10038  0091                     _ADACCH	set	145
 10039  0095                     _ADCON2bits	set	149
 10040  009C                     _ADPRE	set	156
 10041  0096                     _ADCON3bits	set	150
 10042  008C                     _ADRESL	set	140
 10043  008D                     _ADRESH	set	141
 10044  0093                     _ADCON0bits	set	147
 10045  009D                     _ADACQ	set	157
 10046  0093                     _ADCON0	set	147
 10047  0098                     _ADCLK	set	152
 10048  0099                     _ADACT	set	153
 10049  009A                     _ADREF	set	154
 10050  0097                     _ADSTAT	set	151
 10051  0096                     _ADCON3	set	150
 10052  0095                     _ADCON2	set	149
 10053  0094                     _ADCON1	set	148
 10054  009B                     _ADCAP	set	155
 10055  009E                     _ADPCH	set	158
 10056  0119                     _RC1REG	set	281
 10057  011D                     _RC1STAbits	set	285
 10058  011A                     _TX1REG	set	282
 10059  011E                     _TX1STAbits	set	286
 10060  011C                     _SP1BRGH	set	284
 10061  011B                     _SP1BRGL	set	283
 10062  011E                     _TX1STA	set	286
 10063  011D                     _RC1STA	set	285
 10064  011F                     _BAUD1CON	set	287
 10065  0116                     _ADERRL	set	278
 10066  0117                     _ADERRH	set	279
 10067  0114                     _ADFLTRL	set	276
 10068  0115                     _ADFLTRH	set	277
 10069  010C                     _ADCNT	set	268
 10070  010D                     _ADRPT	set	269
 10071  0113                     _ADSTPTH	set	275
 10072  0112                     _ADSTPTL	set	274
 10073  0111                     _ADUTHH	set	273
 10074  0110                     _ADUTHL	set	272
 10075  010F                     _ADLTHH	set	271
 10076  010E                     _ADLTHL	set	270
 10077  018F                     _SSP1STATbits	set	399
 10078  018E                     _SSP1MSK	set	398
 10079  018C                     _SSP1BUF	set	396
 10080  0191                     _SSP1CON2bits	set	401
 10081  018D                     _SSP1ADD	set	397
 10082  0191                     _SSP1CON2	set	401
 10083  0190                     _SSP1CON1	set	400
 10084  018F                     _SSP1STAT	set	399
 10085  0190                     _SSP1CON1bits	set	400
 10086  021F                     _CCPTMRS1bits	set	543
 10087  020F                     _T1GCONbits	set	527
 10088  020E                     _T1CONbits	set	526
 10089  020E                     _T1CON	set	526
 10090  020C                     _TMR1L	set	524
 10091  020D                     _TMR1H	set	525
 10092  0211                     _T1CLK	set	529
 10093  0210                     _T1GATE	set	528
 10094  020F                     _T1GCON	set	527
 10095  028D                     _PR2	set	653
 10096  028C                     _TMR2	set	652
 10097  028E                     _T2CONbits	set	654
 10098  0291                     _T2RSTbits	set	657
 10099  028F                     _T2HLTbits	set	655
 10100  028E                     _T2CON	set	654
 10101  028C                     _T2TMR	set	652
 10102  028D                     _T2PR	set	653
 10103  0291                     _T2RST	set	657
 10104  028F                     _T2HLT	set	655
 10105  0290                     _T2CLKCON	set	656
 10106  038C                     _PWM6DCL	set	908
 10107  038D                     _PWM6DCH	set	909
 10108  038E                     _PWM6CON	set	910
 10109  070F                     _PIR3bits	set	1807
 10110  0719                     _PIE3bits	set	1817
 10111  0716                     _PIE0bits	set	1814
 10112  070C                     _PIR0bits	set	1804
 10113  071A                     _PIE4bits	set	1818
 10114  0710                     _PIR4bits	set	1808
 10115  079B                     _PMD5	set	1947
 10116  079A                     _PMD4	set	1946
 10117  0799                     _PMD3	set	1945
 10118  0798                     _PMD2	set	1944
 10119  0797                     _PMD1	set	1943
 10120  0796                     _PMD0	set	1942
 10121  081F                     _NVMCON2	set	2079
 10122  081C                     _NVMDATL	set	2076
 10123  081D                     _NVMDATH	set	2077
 10124  081E                     _NVMCON1bits	set	2078
 10125  081B                     _NVMADRH	set	2075
 10126  081A                     _NVMADRL	set	2074
 10127  0892                     _OSCTUNE	set	2194
 10128  0893                     _OSCFRQ	set	2195
 10129  0891                     _OSCEN	set	2193
 10130  088F                     _OSCCON3	set	2191
 10131  088D                     _OSCCON1	set	2189
 10132  0E8F                     _PPSLOCKbits	set	3727
 10133  0E8F                     _PPSLOCK	set	3727
 10134  0EC6                     _SSP1DATPPS	set	3782
 10135  0EC5                     _SSP1CLKPPS	set	3781
 10136  0ECB                     _RXPPS	set	3787
 10137  0E90                     _INTPPS	set	3728
 10138  0F16                     _RA6PPS	set	3862
 10139  0F26                     _RC6PPS	set	3878
 10140  0F24                     _RC4PPS	set	3876
 10141  0F23                     _RC3PPS	set	3875
 10142  0F68                     _INLVLE	set	3944
 10143  0F5D                     _INLVLD	set	3933
 10144  0F52                     _INLVLC	set	3922
 10145  0F47                     _INLVLB	set	3911
 10146  0F3C                     _INLVLA	set	3900
 10147  0F67                     _SLRCONE	set	3943
 10148  0F5C                     _SLRCOND	set	3932
 10149  0F51                     _SLRCONC	set	3921
 10150  0F46                     _SLRCONB	set	3910
 10151  0F3B                     _SLRCONA	set	3899
 10152  0F5B                     _ODCOND	set	3931
 10153  0F50                     _ODCONC	set	3920
 10154  0F45                     _ODCONB	set	3909
 10155  0F3A                     _ODCONA	set	3898
 10156  0F66                     _ODCONE	set	3942
 10157  0F4F                     _WPUC	set	3919
 10158  0F39                     _WPUA	set	3897
 10159  0F44                     _WPUB	set	3908
 10160  0F65                     _WPUE	set	3941
 10161  0F5A                     _WPUD	set	3930
 10162  0F38                     _ANSELA	set	3896
 10163  0F64                     _ANSELE	set	3940
 10164  0F43                     _ANSELB	set	3907
 10165  0F4E                     _ANSELC	set	3918
 10166  0F59                     _ANSELD	set	3929
 10167  7A7C                     _WPUC4	set	31356
 10168  7A7B                     _WPUC3	set	31355
 10169                           
 10170                           ; #config settings
 10171  0000                     
 10172                           	psect	cinit
 10173  0057                     start_initialization:	
 10174  0057                     __initialization:	
 10175                           
 10176                           ; Clear objects allocated to COMMON
 10177  0057  01FA               	clrf	__pbssCOMMON& (0+127)
 10178  0058  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
 10179                           
 10180                           ; Clear objects allocated to BANK0
 10181  0059  3068               	movlw	low __pbssBANK0
 10182  005A  0084               	movwf	4
 10183  005B  3000               	movlw	high __pbssBANK0
 10184  005C  0085               	movwf	5
 10185  005D  3008               	movlw	8
 10186  005E  3193  233A  3180   	fcall	clear_ram0
 10187                           
 10188                           ; Clear objects allocated to BANK1
 10189  0061  30A0               	movlw	low __pbssBANK1
 10190  0062  0084               	movwf	4
 10191  0063  3000               	movlw	high __pbssBANK1
 10192  0064  0085               	movwf	5
 10193  0065  303F               	movlw	63
 10194  0066  3193  233A  3180   	fcall	clear_ram0
 10195                           
 10196                           ; Clear objects allocated to BANK2
 10197  0069  3020               	movlw	low __pbssBANK2
 10198  006A  0084               	movwf	4
 10199  006B  3001               	movlw	high __pbssBANK2
 10200  006C  0085               	movwf	5
 10201  006D  3016               	movlw	22
 10202  006E  3193  233A  3180   	fcall	clear_ram0
 10203  0071                     end_of_initialization:	
 10204                           ;End of C runtime variable initialization code
 10205                           
 10206  0071                     __end_of__initialization:	
 10207  0071  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10208  0072  0020               	movlb	0
 10209  0073  3180  2875         	ljmp	_main	;jump to C main() function
 10210                           
 10211                           	psect	bssCOMMON
 10212  007A                     __pbssCOMMON:	
 10213  007A                     _iread:	
 10214  007A                     	ds	1
 10215  007B                     _eusartRxHead:	
 10216  007B                     	ds	1
 10217                           
 10218                           	psect	bssBANK0
 10219  0068                     __pbssBANK0:	
 10220  0068                     _clks:	
 10221  0068                     	ds	1
 10222  0069                     _clkm:	
 10223  0069                     	ds	1
 10224  006A                     _clkh:	
 10225  006A                     	ds	1
 10226  006B                     _alaf:	
 10227  006B                     	ds	1
 10228  006C                     _alat:	
 10229  006C                     	ds	1
 10230  006D                     _pmon:	
 10231  006D                     	ds	1
 10232  006E                     _mode:	
 10233  006E                     	ds	1
 10234  006F                     _eusartRxTail:	
 10235  006F                     	ds	1
 10236                           
 10237                           	psect	bssBANK1
 10238  00A0                     __pbssBANK1:	
 10239  00A0                     _eusartRxStatusBuffer:	
 10240  00A0                     	ds	8
 10241  00A8                     _eusartRxBuffer:	
 10242  00A8                     	ds	8
 10243  00B0                     _eusartTxBuffer:	
 10244  00B0                     	ds	8
 10245  00B8                     read_param@F13181:	
 10246  00B8                     	ds	4
 10247  00BC                     read_temp_lum@F13178:	
 10248  00BC                     	ds	4
 10249  00C0                     send_confirmation@F13232:	
 10250  00C0                     	ds	3
 10251  00C3                     _initial_time:	
 10252  00C3                     	ds	2
 10253  00C5                     _i2c1_driver_i2cISR:	
 10254  00C5                     	ds	2
 10255  00C7                     _i2c1_driver_busCollisionISR:	
 10256  00C7                     	ds	2
 10257  00C9                     _btn2State:	
 10258  00C9                     	ds	1
 10259  00CA                     _btn1State:	
 10260  00CA                     	ds	1
 10261  00CB                     _nreg:	
 10262  00CB                     	ds	1
 10263  00CC                     _s1flag:	
 10264  00CC                     	ds	1
 10265  00CD                     _s2flag:	
 10266  00CD                     	ds	1
 10267  00CE                     _num_msgs:	
 10268  00CE                     	ds	1
 10269  00CF                     _msgs:	
 10270  00CF                     	ds	1
 10271  00D0                     _alarm:	
 10272  00D0                     	ds	1
 10273  00D1                     _illum:	
 10274  00D1                     	ds	1
 10275  00D2                     _temp:	
 10276  00D2                     	ds	1
 10277  00D3                     _seconds:	
 10278  00D3                     	ds	1
 10279  00D4                     _minutes:	
 10280  00D4                     	ds	1
 10281  00D5                     _hours:	
 10282  00D5                     	ds	1
 10283  00D6                     _alal:	
 10284  00D6                     	ds	1
 10285  00D7                     _tala:	
 10286  00D7                     	ds	1
 10287  00D8                     _flag_timer:	
 10288  00D8                     	ds	1
 10289  00D9                     _switch1:	
 10290  00D9                     	ds	1
 10291  00DA                     _timer:	
 10292  00DA                     	ds	1
 10293  00DB                     _eusartRxLastError:	
 10294  00DB                     	ds	1
 10295  00DC                     _eusartRxCount:	
 10296  00DC                     	ds	1
 10297  00DD                     _eusartTxTail:	
 10298  00DD                     	ds	1
 10299  00DE                     _eusartTxHead:	
 10300  00DE                     	ds	1
 10301                           
 10302                           	psect	bssBANK2
 10303  0120                     __pbssBANK2:	
 10304  0120                     notification_memory@F13227:	
 10305  0120                     	ds	6
 10306  0126                     registers_info@F13199:	
 10307  0126                     	ds	6
 10308  012C                     read_alarms@F13188:	
 10309  012C                     	ds	5
 10310  0131                     read_clock@F13170:	
 10311  0131                     	ds	5
 10312                           
 10313                           	psect	clrtext
 10314  133A                     clear_ram0:	
 10315                           ;	Called with FSR0 containing the base address, and
 10316                           ;	WREG with the size to clear
 10317                           
 10318  133A  0064               	clrwdt	;clear the watchdog before getting into this loop
 10319  133B                     clrloop0:	
 10320  133B  0180               	clrf	0	;clear RAM location pointed to by FSR
 10321  133C  3101               	addfsr 0,1
 10322  133D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 10323  133E  2B3B               	goto	clrloop0	;have we reached the end yet?
 10324  133F  3400               	retlw	0	;all done for this memory range, return
 10325                           
 10326                           	psect	cstackBANK2
 10327  0136                     __pcstackBANK2:	
 10328  0136                     main@i:	
 10329                           
 10330                           ; 2 bytes @ 0x0
 10331  0136                     	ds	2
 10332                           
 10333                           	psect	cstackCOMMON
 10334  0070                     __pcstackCOMMON:	
 10335  0070                     ?_i2c1_driver_open:	
 10336  0070                     ?_TMR1_DefaultInterruptHandler:	
 10337                           ; 1 bit 
 10338                           
 10339  0070                     ??_TMR1_DefaultInterruptHandler:	
 10340                           ; 1 bytes @ 0x0
 10341                           
 10342  0070                     ?_INT_CallBack:	
 10343                           ; 1 bytes @ 0x0
 10344                           
 10345  0070                     ?_PMD_Initialize:	
 10346                           ; 1 bytes @ 0x0
 10347                           
 10348  0070                     ?_PIN_MANAGER_Initialize:	
 10349                           ; 1 bytes @ 0x0
 10350                           
 10351  0070                     ?_OSCILLATOR_Initialize:	
 10352                           ; 1 bytes @ 0x0
 10353                           
 10354  0070                     ?_PWM6_Initialize:	
 10355                           ; 1 bytes @ 0x0
 10356                           
 10357  0070                     ?_ADCC_Initialize:	
 10358                           ; 1 bytes @ 0x0
 10359                           
 10360  0070                     ?_TMR2_Initialize:	
 10361                           ; 1 bytes @ 0x0
 10362                           
 10363  0070                     ?_EUSART_Initialize:	
 10364                           ; 1 bytes @ 0x0
 10365                           
 10366  0070                     ?_EUSART_Receive_ISR:	
 10367                           ; 1 bytes @ 0x0
 10368                           
 10369  0070                     ?_EUSART_Transmit_ISR:	
 10370                           ; 1 bytes @ 0x0
 10371                           
 10372  0070                     ??_EUSART_Transmit_ISR:	
 10373                           ; 1 bytes @ 0x0
 10374                           
 10375  0070                     ?_EUSART_DefaultFramingErrorHandler:	
 10376                           ; 1 bytes @ 0x0
 10377                           
 10378  0070                     ??_EUSART_DefaultFramingErrorHandler:	
 10379                           ; 1 bytes @ 0x0
 10380                           
 10381  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
 10382                           ; 1 bytes @ 0x0
 10383                           
 10384  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
 10385                           ; 1 bytes @ 0x0
 10386                           
 10387  0070                     ?_EUSART_DefaultErrorHandler:	
 10388                           ; 1 bytes @ 0x0
 10389                           
 10390  0070                     ?_EUSART_RxDataHandler:	
 10391                           ; 1 bytes @ 0x0
 10392                           
 10393  0070                     ??_EUSART_RxDataHandler:	
 10394                           ; 1 bytes @ 0x0
 10395                           
 10396  0070                     ?_PWM_Output_D4_Disable:	
 10397                           ; 1 bytes @ 0x0
 10398                           
 10399  0070                     ?_PWM_Output_D4_Enable:	
 10400                           ; 1 bytes @ 0x0
 10401                           
 10402  0070                     ?_load_eeprom:	
 10403                           ; 1 bytes @ 0x0
 10404                           
 10405  0070                     ?_countMsg:	
 10406                           ; 1 bytes @ 0x0
 10407                           
 10408  0070                     ?_update_clk:	
 10409                           ; 1 bytes @ 0x0
 10410                           
 10411  0070                     ?_ReadIllum:	
 10412                           ; 1 bytes @ 0x0
 10413                           
 10414  0070                     ?_ReadTemp:	
 10415                           ; 1 bytes @ 0x0
 10416                           
 10417  0070                     ?_notification_memory:	
 10418                           ; 1 bytes @ 0x0
 10419                           
 10420  0070                     ?_read_msgs:	
 10421                           ; 1 bytes @ 0x0
 10422                           
 10423  0070                     ?_Menus:	
 10424                           ; 1 bytes @ 0x0
 10425                           
 10426  0070                     ?_submenu_clock:	
 10427                           ; 1 bytes @ 0x0
 10428                           
 10429  0070                     ?_submenu_alarm:	
 10430                           ; 1 bytes @ 0x0
 10431                           
 10432  0070                     ?_submenu_temp:	
 10433                           ; 1 bytes @ 0x0
 10434                           
 10435  0070                     ?_submenu_illum:	
 10436                           ; 1 bytes @ 0x0
 10437                           
 10438  0070                     ?_ShowOnLEDs:	
 10439                           ; 1 bytes @ 0x0
 10440                           
 10441  0070                     ?_checkButtonS1:	
 10442                           ; 1 bytes @ 0x0
 10443                           
 10444  0070                     ?_checkButtonS2:	
 10445                           ; 1 bytes @ 0x0
 10446                           
 10447  0070                     ?_write_alaf:	
 10448                           ; 1 bytes @ 0x0
 10449                           
 10450  0070                     ?_write_alat:	
 10451                           ; 1 bytes @ 0x0
 10452                           
 10453  0070                     ?_write_alal:	
 10454                           ; 1 bytes @ 0x0
 10455                           
 10456  0070                     ?_Blink:	
 10457                           ; 1 bytes @ 0x0
 10458                           
 10459  0070                     ??_Blink:	
 10460                           ; 1 bytes @ 0x0
 10461                           
 10462  0070                     ?_used:	
 10463                           ; 1 bytes @ 0x0
 10464                           
 10465  0070                     ?_check_corruption:	
 10466                           ; 1 bytes @ 0x0
 10467                           
 10468  0070                     ?_read_pmon:	
 10469                           ; 1 bytes @ 0x0
 10470                           
 10471  0070                     ?_read_nreg:	
 10472                           ; 1 bytes @ 0x0
 10473                           
 10474  0070                     ?_read_tala:	
 10475                           ; 1 bytes @ 0x0
 10476                           
 10477  0070                     ?_read_alat:	
 10478                           ; 1 bytes @ 0x0
 10479                           
 10480  0070                     ?_read_alal:	
 10481                           ; 1 bytes @ 0x0
 10482                           
 10483  0070                     ?_read_alaf:	
 10484                           ; 1 bytes @ 0x0
 10485                           
 10486  0070                     ?_read_clkh:	
 10487                           ; 1 bytes @ 0x0
 10488                           
 10489  0070                     ?_read_clkm:	
 10490                           ; 1 bytes @ 0x0
 10491                           
 10492  0070                     ?_default_setup:	
 10493                           ; 1 bytes @ 0x0
 10494                           
 10495  0070                     ?_not_transferred:	
 10496                           ; 1 bytes @ 0x0
 10497                           
 10498  0070                     ?_interpret_message:	
 10499                           ; 1 bytes @ 0x0
 10500                           
 10501  0070                     ?_read_clock:	
 10502                           ; 1 bytes @ 0x0
 10503                           
 10504  0070                     ?_set_clock:	
 10505                           ; 1 bytes @ 0x0
 10506                           
 10507  0070                     ?_read_temp_lum:	
 10508                           ; 1 bytes @ 0x0
 10509                           
 10510  0070                     ?_read_param:	
 10511                           ; 1 bytes @ 0x0
 10512                           
 10513  0070                     ?_modify_pmon:	
 10514                           ; 1 bytes @ 0x0
 10515                           
 10516  0070                     ?_modify_time_alarm:	
 10517                           ; 1 bytes @ 0x0
 10518                           
 10519  0070                     ?_read_alarms:	
 10520                           ; 1 bytes @ 0x0
 10521                           
 10522  0070                     ?_define_alarm:	
 10523                           ; 1 bytes @ 0x0
 10524                           
 10525  0070                     ?_switch_alarm:	
 10526                           ; 1 bytes @ 0x0
 10527                           
 10528  0070                     ?_registers_info:	
 10529                           ; 1 bytes @ 0x0
 10530                           
 10531  0070                     ?_transfer_n_registers:	
 10532                           ; 1 bytes @ 0x0
 10533                           
 10534  0070                     ?_transfer_registers_i:	
 10535                           ; 1 bytes @ 0x0
 10536                           
 10537  0070                     ?_send_msg:	
 10538                           ; 1 bytes @ 0x0
 10539                           
 10540  0070                     ?_send_register:	
 10541                           ; 1 bytes @ 0x0
 10542                           
 10543  0070                     ?_TMR1_Initialize:	
 10544                           ; 1 bytes @ 0x0
 10545                           
 10546  0070                     ?_TMR1_StartTimer:	
 10547                           ; 1 bytes @ 0x0
 10548                           
 10549  0070                     ?_TMR1_StopTimer:	
 10550                           ; 1 bytes @ 0x0
 10551                           
 10552  0070                     ?_TMR1_WriteTimer:	
 10553                           ; 1 bytes @ 0x0
 10554                           
 10555  0070                     ?_TMR1_ISR:	
 10556                           ; 1 bytes @ 0x0
 10557                           
 10558  0070                     ?_INT_ISR:	
 10559                           ; 1 bytes @ 0x0
 10560                           
 10561  0070                     ?_INT_DefaultInterruptHandler:	
 10562                           ; 1 bytes @ 0x0
 10563                           
 10564  0070                     ??_INT_DefaultInterruptHandler:	
 10565                           ; 1 bytes @ 0x0
 10566                           
 10567  0070                     ?_EXT_INT_Initialize:	
 10568                           ; 1 bytes @ 0x0
 10569                           
 10570  0070                     ?_INTERRUPT_InterruptManager:	
 10571                           ; 1 bytes @ 0x0
 10572                           
 10573  0070                     ?_SYSTEM_Initialize:	
 10574                           ; 1 bytes @ 0x0
 10575                           
 10576  0070                     ?_EUSART_is_rx_ready:	
 10577                           ; 1 bytes @ 0x0
 10578                           
 10579  0070                     ?_EUSART_Read:	
 10580                           ; 1 bytes @ 0x0
 10581                           
 10582  0070                     ?_EUSART_Write:	
 10583                           ; 1 bytes @ 0x0
 10584                           
 10585  0070                     ?_putch:	
 10586                           ; 1 bytes @ 0x0
 10587                           
 10588  0070                     ?_EUSART_LastByte:	
 10589                           ; 1 bytes @ 0x0
 10590                           
 10591  0070                     ??_EUSART_LastByte:	
 10592                           ; 1 bytes @ 0x0
 10593                           
 10594  0070                     ?_sys_init:	
 10595                           ; 1 bytes @ 0x0
 10596                           
 10597  0070                     ?_Timer:	
 10598                           ; 1 bytes @ 0x0
 10599                           
 10600  0070                     ??_Timer:	
 10601                           ; 1 bytes @ 0x0
 10602                           
 10603  0070                     ?_clear_alarm:	
 10604                           ; 1 bytes @ 0x0
 10605                           
 10606  0070                     ?_Switch1:	
 10607                           ; 1 bytes @ 0x0
 10608                           
 10609  0070                     ??_Switch1:	
 10610                           ; 1 bytes @ 0x0
 10611                           
 10612  0070                     ?_main:	
 10613                           ; 1 bytes @ 0x0
 10614                           
 10615  0070                     ?_ReadI2C:	
 10616                           ; 1 bytes @ 0x0
 10617                           
 10618  0070                     ?_WriteI2C:	
 10619                           ; 1 bytes @ 0x0
 10620                           
 10621  0070                     ?_Menu:	
 10622                           ; 1 bytes @ 0x0
 10623                           
 10624  0070                     ?_get_check_up_value:	
 10625                           ; 1 bytes @ 0x0
 10626                           
 10627  0070                     ?_ring_buffer_laped:	
 10628                           ; 1 bytes @ 0x0
 10629                           
 10630  0070                     ?_read_iwrt:	
 10631                           ; 1 bytes @ 0x0
 10632                           
 10633  0070                     ?_write_pmon:	
 10634                           ; 1 bytes @ 0x0
 10635                           
 10636  0070                     ?_write_tala:	
 10637                           ; 1 bytes @ 0x0
 10638                           
 10639  0070                     ?i1_clear_alarm:	
 10640                           ; 1 bytes @ 0x0
 10641                           
 10642  0070                     ??i1_clear_alarm:	
 10643                           ; 1 bytes @ 0x0
 10644                           
 10645  0070                     ?i1_PWM_Output_D4_Disable:	
 10646                           ; 1 bytes @ 0x0
 10647                           
 10648  0070                     ??i1_PWM_Output_D4_Disable:	
 10649                           ; 1 bytes @ 0x0
 10650                           
 10651  0070                     TMR1_WriteTimer@timerVal:	
 10652                           ; 1 bytes @ 0x0
 10653                           
 10654                           
 10655                           ; 2 bytes @ 0x0
 10656  0070                     	ds	1
 10657  0071                     ??_INT_CallBack:	
 10658  0071                     ??_EUSART_Receive_ISR:	
 10659                           ; 1 bytes @ 0x1
 10660                           
 10661  0071                     ??_EUSART_DefaultErrorHandler:	
 10662                           ; 1 bytes @ 0x1
 10663                           
 10664  0071                     ??_countMsg:	
 10665                           ; 1 bytes @ 0x1
 10666                           
 10667  0071                     ??_INT_ISR:	
 10668                           ; 1 bytes @ 0x1
 10669                           
 10670                           
 10671                           ; 1 bytes @ 0x1
 10672  0071                     	ds	1
 10673  0072                     ?_TMR1_SetInterruptHandler:	
 10674  0072                     ??_PMD_Initialize:	
 10675                           ; 1 bytes @ 0x2
 10676                           
 10677  0072                     ??_PIN_MANAGER_Initialize:	
 10678                           ; 1 bytes @ 0x2
 10679                           
 10680  0072                     ??_OSCILLATOR_Initialize:	
 10681                           ; 1 bytes @ 0x2
 10682                           
 10683  0072                     ??_PWM6_Initialize:	
 10684                           ; 1 bytes @ 0x2
 10685                           
 10686  0072                     ??_ADCC_Initialize:	
 10687                           ; 1 bytes @ 0x2
 10688                           
 10689  0072                     ??_TMR2_Initialize:	
 10690                           ; 1 bytes @ 0x2
 10691                           
 10692  0072                     ?_EUSART_SetRxInterruptHandler:	
 10693                           ; 1 bytes @ 0x2
 10694                           
 10695  0072                     ?_EUSART_SetTxInterruptHandler:	
 10696                           ; 1 bytes @ 0x2
 10697                           
 10698  0072                     ?_EUSART_SetFramingErrorHandler:	
 10699                           ; 1 bytes @ 0x2
 10700                           
 10701  0072                     ?_EUSART_SetOverrunErrorHandler:	
 10702                           ; 1 bytes @ 0x2
 10703                           
 10704  0072                     ?_EUSART_SetErrorHandler:	
 10705                           ; 1 bytes @ 0x2
 10706                           
 10707  0072                     ??_PWM_Output_D4_Disable:	
 10708                           ; 1 bytes @ 0x2
 10709                           
 10710  0072                     ??_PWM_Output_D4_Enable:	
 10711                           ; 1 bytes @ 0x2
 10712                           
 10713  0072                     ??_ShowOnLEDs:	
 10714                           ; 1 bytes @ 0x2
 10715                           
 10716  0072                     ??_checkButtonS1:	
 10717                           ; 1 bytes @ 0x2
 10718                           
 10719  0072                     ??_checkButtonS2:	
 10720                           ; 1 bytes @ 0x2
 10721                           
 10722  0072                     ??_TMR1_StartTimer:	
 10723                           ; 1 bytes @ 0x2
 10724                           
 10725  0072                     ??_TMR1_StopTimer:	
 10726                           ; 1 bytes @ 0x2
 10727                           
 10728  0072                     ??_TMR1_WriteTimer:	
 10729                           ; 1 bytes @ 0x2
 10730                           
 10731  0072                     ??_TMR1_ISR:	
 10732                           ; 1 bytes @ 0x2
 10733                           
 10734  0072                     ?_INT_SetInterruptHandler:	
 10735                           ; 1 bytes @ 0x2
 10736                           
 10737  0072                     ??_INTERRUPT_InterruptManager:	
 10738                           ; 1 bytes @ 0x2
 10739                           
 10740  0072                     ??_i2c1_driver_open:	
 10741                           ; 1 bytes @ 0x2
 10742                           
 10743  0072                     ?_DATAEE_ReadByte:	
 10744                           ; 1 bytes @ 0x2
 10745                           
 10746  0072                     ?_PWM6_LoadDutyValue:	
 10747                           ; 1 bytes @ 0x2
 10748                           
 10749  0072                     ??_EUSART_is_rx_ready:	
 10750                           ; 1 bytes @ 0x2
 10751                           
 10752  0072                     ??_EUSART_Read:	
 10753                           ; 1 bytes @ 0x2
 10754                           
 10755  0072                     ??_EUSART_Write:	
 10756                           ; 1 bytes @ 0x2
 10757                           
 10758  0072                     ??_sys_init:	
 10759                           ; 1 bytes @ 0x2
 10760                           
 10761  0072                     ??_clear_alarm:	
 10762                           ; 1 bytes @ 0x2
 10763                           
 10764  0072                     ??_ReadI2C:	
 10765                           ; 1 bytes @ 0x2
 10766                           
 10767  0072                     ??_WriteI2C:	
 10768                           ; 1 bytes @ 0x2
 10769                           
 10770  0072                     ?___bmul:	
 10771                           ; 1 bytes @ 0x2
 10772                           
 10773  0072                     ?_strlen:	
 10774                           ; 1 bytes @ 0x2
 10775                           
 10776  0072                     ?_ADCC_GetSingleConversion:	
 10777                           ; 2 bytes @ 0x2
 10778                           
 10779  0072                     ?___awmod:	
 10780                           ; 2 bytes @ 0x2
 10781                           
 10782  0072                     ?___lwdiv:	
 10783                           ; 2 bytes @ 0x2
 10784                           
 10785  0072                     ___bmul@multiplicand:	
 10786                           ; 2 bytes @ 0x2
 10787                           
 10788  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
 10789                           ; 1 bytes @ 0x2
 10790                           
 10791  0072                     INT_SetInterruptHandler@InterruptHandler:	
 10792                           ; 2 bytes @ 0x2
 10793                           
 10794  0072                     DATAEE_ReadByte@bAdd:	
 10795                           ; 2 bytes @ 0x2
 10796                           
 10797  0072                     PWM6_LoadDutyValue@dutyValue:	
 10798                           ; 2 bytes @ 0x2
 10799                           
 10800  0072                     EUSART_SetFramingErrorHandler@interruptHandler:	
 10801                           ; 2 bytes @ 0x2
 10802                           
 10803  0072                     EUSART_SetOverrunErrorHandler@interruptHandler:	
 10804                           ; 2 bytes @ 0x2
 10805                           
 10806  0072                     EUSART_SetErrorHandler@interruptHandler:	
 10807                           ; 2 bytes @ 0x2
 10808                           
 10809  0072                     EUSART_SetTxInterruptHandler@interruptHandler:	
 10810                           ; 2 bytes @ 0x2
 10811                           
 10812  0072                     EUSART_SetRxInterruptHandler@interruptHandler:	
 10813                           ; 2 bytes @ 0x2
 10814                           
 10815  0072                     ___awmod@divisor:	
 10816                           ; 2 bytes @ 0x2
 10817                           
 10818  0072                     ___lwdiv@divisor:	
 10819                           ; 2 bytes @ 0x2
 10820                           
 10821                           
 10822                           ; 2 bytes @ 0x2
 10823  0072                     	ds	1
 10824  0073                     ??___bmul:	
 10825  0073                     EUSART_Read@readValue:	
 10826                           ; 1 bytes @ 0x3
 10827                           
 10828  0073                     EUSART_Write@txData:	
 10829                           ; 1 bytes @ 0x3
 10830                           
 10831  0073                     WriteI2C@data_out:	
 10832                           ; 1 bytes @ 0x3
 10833                           
 10834  0073                     ShowOnLEDs@num:	
 10835                           ; 1 bytes @ 0x3
 10836                           
 10837                           
 10838                           ; 1 bytes @ 0x3
 10839  0073                     	ds	1
 10840  0074                     ??_TMR1_SetInterruptHandler:	
 10841  0074                     ??_EUSART_Initialize:	
 10842                           ; 1 bytes @ 0x4
 10843                           
 10844  0074                     ??_EUSART_SetRxInterruptHandler:	
 10845                           ; 1 bytes @ 0x4
 10846                           
 10847  0074                     ??_EUSART_SetTxInterruptHandler:	
 10848                           ; 1 bytes @ 0x4
 10849                           
 10850  0074                     ??_EUSART_SetFramingErrorHandler:	
 10851                           ; 1 bytes @ 0x4
 10852                           
 10853  0074                     ??_EUSART_SetOverrunErrorHandler:	
 10854                           ; 1 bytes @ 0x4
 10855                           
 10856  0074                     ??_EUSART_SetErrorHandler:	
 10857                           ; 1 bytes @ 0x4
 10858                           
 10859  0074                     ??_ReadTemp:	
 10860                           ; 1 bytes @ 0x4
 10861                           
 10862  0074                     ??_used:	
 10863                           ; 1 bytes @ 0x4
 10864                           
 10865  0074                     ??_read_pmon:	
 10866                           ; 1 bytes @ 0x4
 10867                           
 10868  0074                     ??_read_nreg:	
 10869                           ; 1 bytes @ 0x4
 10870                           
 10871  0074                     ??_read_tala:	
 10872                           ; 1 bytes @ 0x4
 10873                           
 10874  0074                     ??_read_alat:	
 10875                           ; 1 bytes @ 0x4
 10876                           
 10877  0074                     ??_read_alal:	
 10878                           ; 1 bytes @ 0x4
 10879                           
 10880  0074                     ??_read_alaf:	
 10881                           ; 1 bytes @ 0x4
 10882                           
 10883  0074                     ??_read_clkh:	
 10884                           ; 1 bytes @ 0x4
 10885                           
 10886  0074                     ??_read_clkm:	
 10887                           ; 1 bytes @ 0x4
 10888                           
 10889  0074                     ??_not_transferred:	
 10890                           ; 1 bytes @ 0x4
 10891                           
 10892  0074                     ??_strlen:	
 10893                           ; 1 bytes @ 0x4
 10894                           
 10895  0074                     ??_TMR1_Initialize:	
 10896                           ; 1 bytes @ 0x4
 10897                           
 10898  0074                     ??_INT_SetInterruptHandler:	
 10899                           ; 1 bytes @ 0x4
 10900                           
 10901  0074                     ??_EXT_INT_Initialize:	
 10902                           ; 1 bytes @ 0x4
 10903                           
 10904  0074                     ??_DATAEE_ReadByte:	
 10905                           ; 1 bytes @ 0x4
 10906                           
 10907  0074                     ??_PWM6_LoadDutyValue:	
 10908                           ; 1 bytes @ 0x4
 10909                           
 10910  0074                     ??_putch:	
 10911                           ; 1 bytes @ 0x4
 10912                           
 10913  0074                     ?_Update:	
 10914                           ; 1 bytes @ 0x4
 10915                           
 10916  0074                     ??_ring_buffer_laped:	
 10917                           ; 1 bytes @ 0x4
 10918                           
 10919  0074                     ??_read_iwrt:	
 10920                           ; 1 bytes @ 0x4
 10921                           
 10922  0074                     ?___wmul:	
 10923                           ; 1 bytes @ 0x4
 10924                           
 10925  0074                     ?___awdiv:	
 10926                           ; 2 bytes @ 0x4
 10927                           
 10928  0074                     putch@txData:	
 10929                           ; 2 bytes @ 0x4
 10930                           
 10931  0074                     Update@thr:	
 10932                           ; 1 bytes @ 0x4
 10933                           
 10934  0074                     get_check_up_value@check:	
 10935                           ; 1 bytes @ 0x4
 10936                           
 10937  0074                     ___bmul@product:	
 10938                           ; 1 bytes @ 0x4
 10939                           
 10940  0074                     ___wmul@multiplier:	
 10941                           ; 1 bytes @ 0x4
 10942                           
 10943  0074                     ___awdiv@divisor:	
 10944                           ; 2 bytes @ 0x4
 10945                           
 10946  0074                     ___awmod@dividend:	
 10947                           ; 2 bytes @ 0x4
 10948                           
 10949  0074                     ___lwdiv@dividend:	
 10950                           ; 2 bytes @ 0x4
 10951                           
 10952                           
 10953                           ; 2 bytes @ 0x4
 10954  0074                     	ds	1
 10955  0075                     ??_check_corruption:	
 10956  0075                     ??_SYSTEM_Initialize:	
 10957                           ; 1 bytes @ 0x5
 10958                           
 10959  0075                     ??_ADCC_GetSingleConversion:	
 10960                           ; 1 bytes @ 0x5
 10961                           
 10962  0075                     ??_Update:	
 10963                           ; 1 bytes @ 0x5
 10964                           
 10965  0075                     ADCC_GetSingleConversion@channel:	
 10966                           ; 1 bytes @ 0x5
 10967                           
 10968  0075                     ReadTemp@value:	
 10969                           ; 1 bytes @ 0x5
 10970                           
 10971  0075                     _used$2620:	
 10972                           ; 1 bytes @ 0x5
 10973                           
 10974  0075                     ___bmul@multiplier:	
 10975                           ; 1 bytes @ 0x5
 10976                           
 10977  0075                     strlen@a:	
 10978                           ; 1 bytes @ 0x5
 10979                           
 10980                           
 10981                           ; 1 bytes @ 0x5
 10982  0075                     	ds	1
 10983  0076                     ??_ReadIllum:	
 10984  0076                     ??___awmod:	
 10985                           ; 1 bytes @ 0x6
 10986                           
 10987  0076                     ??___lwdiv:	
 10988                           ; 1 bytes @ 0x6
 10989                           
 10990  0076                     Update@var:	
 10991                           ; 1 bytes @ 0x6
 10992                           
 10993  0076                     check_corruption@check:	
 10994                           ; 1 bytes @ 0x6
 10995                           
 10996  0076                     used@val:	
 10997                           ; 1 bytes @ 0x6
 10998                           
 10999  0076                     strlen@s:	
 11000                           ; 1 bytes @ 0x6
 11001                           
 11002  0076                     _not_transferred$2648:	
 11003                           ; 1 bytes @ 0x6
 11004                           
 11005  0076                     ___wmul@multiplicand:	
 11006                           ; 2 bytes @ 0x6
 11007                           
 11008  0076                     ___awdiv@dividend:	
 11009                           ; 2 bytes @ 0x6
 11010                           
 11011                           
 11012                           ; 2 bytes @ 0x6
 11013  0076                     	ds	1
 11014  0077                     ??_send_msg:	
 11015  0077                     ___awmod@counter:	
 11016                           ; 1 bytes @ 0x7
 11017                           
 11018  0077                     ___lwdiv@counter:	
 11019                           ; 1 bytes @ 0x7
 11020                           
 11021                           
 11022                           ; 1 bytes @ 0x7
 11023  0077                     	ds	1
 11024  0078                     ??_notification_memory:	
 11025  0078                     ??_read_clock:	
 11026                           ; 1 bytes @ 0x8
 11027                           
 11028  0078                     ??_read_temp_lum:	
 11029                           ; 1 bytes @ 0x8
 11030                           
 11031  0078                     ??_read_param:	
 11032                           ; 1 bytes @ 0x8
 11033                           
 11034  0078                     ??_read_alarms:	
 11035                           ; 1 bytes @ 0x8
 11036                           
 11037  0078                     ??_registers_info:	
 11038                           ; 1 bytes @ 0x8
 11039                           
 11040  0078                     ?_send_confirmation:	
 11041                           ; 1 bytes @ 0x8
 11042                           
 11043  0078                     ??___wmul:	
 11044                           ; 1 bytes @ 0x8
 11045                           
 11046  0078                     ??___awdiv:	
 11047                           ; 1 bytes @ 0x8
 11048                           
 11049  0078                     not_transferred@unread:	
 11050                           ; 1 bytes @ 0x8
 11051                           
 11052  0078                     send_confirmation@error:	
 11053                           ; 1 bytes @ 0x8
 11054                           
 11055  0078                     ___awmod@sign:	
 11056                           ; 1 bytes @ 0x8
 11057                           
 11058  0078                     ___wmul@product:	
 11059                           ; 1 bytes @ 0x8
 11060                           
 11061  0078                     ___lwdiv@quotient:	
 11062                           ; 2 bytes @ 0x8
 11063                           
 11064                           
 11065                           ; 2 bytes @ 0x8
 11066  0078                     	ds	1
 11067  0079                     ??_send_confirmation:	
 11068                           
 11069                           ; 1 bytes @ 0x9
 11070  0079                     	ds	1
 11071  007A                     ??_DATAEE_WriteByte:	
 11072                           
 11073                           	psect	cstackBANK0
 11074  0020                     __pcstackBANK0:	
 11075                           ; 1 bytes @ 0xA
 11076                           
 11077  0020                     ?_DATAEE_WriteByte:	
 11078  0020                     ?_Alarm:	
 11079                           ; 1 bytes @ 0x0
 11080                           
 11081  0020                     ??_get_check_up_value:	
 11082                           ; 1 bytes @ 0x0
 11083                           
 11084  0020                     ?_read_buffer:	
 11085                           ; 1 bytes @ 0x0
 11086                           
 11087  0020                     Alarm@m:	
 11088                           ; 1 bytes @ 0x0
 11089                           
 11090  0020                     read_buffer@j:	
 11091                           ; 1 bytes @ 0x0
 11092                           
 11093  0020                     ___awdiv@counter:	
 11094                           ; 1 bytes @ 0x0
 11095                           
 11096  0020                     DATAEE_WriteByte@bAdd:	
 11097                           ; 1 bytes @ 0x0
 11098                           
 11099  0020                     send_msg@i:	
 11100                           ; 2 bytes @ 0x0
 11101                           
 11102                           
 11103                           ; 2 bytes @ 0x0
 11104  0020                     	ds	1
 11105  0021                     ??_read_buffer:	
 11106  0021                     Alarm@s:	
 11107                           ; 1 bytes @ 0x1
 11108                           
 11109  0021                     ___awdiv@sign:	
 11110                           ; 1 bytes @ 0x1
 11111                           
 11112                           
 11113                           ; 1 bytes @ 0x1
 11114  0021                     	ds	1
 11115  0022                     ??_Alarm:	
 11116  0022                     DATAEE_WriteByte@bData:	
 11117                           ; 1 bytes @ 0x2
 11118                           
 11119  0022                     send_msg@msg:	
 11120                           ; 1 bytes @ 0x2
 11121                           
 11122  0022                     ___awdiv@quotient:	
 11123                           ; 1 bytes @ 0x2
 11124                           
 11125                           
 11126                           ; 2 bytes @ 0x2
 11127  0022                     	ds	1
 11128  0023                     DATAEE_WriteByte@GIEBitValue:	
 11129  0023                     read_clock@hours:	
 11130                           ; 1 bytes @ 0x3
 11131                           
 11132  0023                     send_confirmation@cmd:	
 11133                           ; 1 bytes @ 0x3
 11134                           
 11135  0023                     read_temp_lum@msg:	
 11136                           ; 1 bytes @ 0x3
 11137                           
 11138  0023                     read_param@msg:	
 11139                           ; 4 bytes @ 0x3
 11140                           
 11141  0023                     read_alarms@msg:	
 11142                           ; 4 bytes @ 0x3
 11143                           
 11144  0023                     registers_info@msg:	
 11145                           ; 5 bytes @ 0x3
 11146                           
 11147  0023                     notification_memory@msg:	
 11148                           ; 6 bytes @ 0x3
 11149                           
 11150                           
 11151                           ; 6 bytes @ 0x3
 11152  0023                     	ds	1
 11153  0024                     ?_ring_buffer_write:	
 11154  0024                     ??_write_alaf:	
 11155                           ; 1 bytes @ 0x4
 11156                           
 11157  0024                     ??_write_alat:	
 11158                           ; 1 bytes @ 0x4
 11159                           
 11160  0024                     ??_write_alal:	
 11161                           ; 1 bytes @ 0x4
 11162                           
 11163  0024                     ?_eeprom_setup:	
 11164                           ; 1 bytes @ 0x4
 11165                           
 11166  0024                     ?_eeprom_clk_update:	
 11167                           ; 1 bytes @ 0x4
 11168                           
 11169  0024                     ??_write_pmon:	
 11170                           ; 1 bytes @ 0x4
 11171                           
 11172  0024                     ??_write_tala:	
 11173                           ; 1 bytes @ 0x4
 11174                           
 11175  0024                     eeprom_setup@nreg:	
 11176                           ; 1 bytes @ 0x4
 11177                           
 11178  0024                     eeprom_clk_update@clkm:	
 11179                           ; 1 bytes @ 0x4
 11180                           
 11181  0024                     ring_buffer_write@m:	
 11182                           ; 1 bytes @ 0x4
 11183                           
 11184  0024                     read_clock@minutes:	
 11185                           ; 1 bytes @ 0x4
 11186                           
 11187  0024                     send_confirmation@msg:	
 11188                           ; 1 bytes @ 0x4
 11189                           
 11190                           
 11191                           ; 3 bytes @ 0x4
 11192  0024                     	ds	1
 11193  0025                     ??_eeprom_clk_update:	
 11194  0025                     eeprom_setup@pmon:	
 11195                           ; 1 bytes @ 0x5
 11196                           
 11197  0025                     ring_buffer_write@s:	
 11198                           ; 1 bytes @ 0x5
 11199                           
 11200  0025                     read_clock@seconds:	
 11201                           ; 1 bytes @ 0x5
 11202                           
 11203                           
 11204                           ; 1 bytes @ 0x5
 11205  0025                     	ds	1
 11206  0026                     eeprom_setup@tala:	
 11207  0026                     ring_buffer_write@T:	
 11208                           ; 1 bytes @ 0x6
 11209                           
 11210  0026                     read_clock@msg:	
 11211                           ; 1 bytes @ 0x6
 11212                           
 11213                           
 11214                           ; 5 bytes @ 0x6
 11215  0026                     	ds	1
 11216  0027                     ??_define_alarm:	
 11217  0027                     eeprom_setup@alat:	
 11218                           ; 1 bytes @ 0x7
 11219                           
 11220  0027                     ring_buffer_write@L:	
 11221                           ; 1 bytes @ 0x7
 11222                           
 11223  0027                     read_buffer@i:	
 11224                           ; 1 bytes @ 0x7
 11225                           
 11226  0027                     write_pmon@x:	
 11227                           ; 1 bytes @ 0x7
 11228                           
 11229  0027                     write_tala@x:	
 11230                           ; 1 bytes @ 0x7
 11231                           
 11232  0027                     write_alat@x:	
 11233                           ; 1 bytes @ 0x7
 11234                           
 11235  0027                     write_alal@x:	
 11236                           ; 1 bytes @ 0x7
 11237                           
 11238  0027                     write_alaf@x:	
 11239                           ; 1 bytes @ 0x7
 11240                           
 11241                           
 11242                           ; 1 bytes @ 0x7
 11243  0027                     	ds	1
 11244  0028                     ??_ring_buffer_write:	
 11245  0028                     ??_submenu_alarm:	
 11246                           ; 1 bytes @ 0x8
 11247                           
 11248  0028                     ??_submenu_temp:	
 11249                           ; 1 bytes @ 0x8
 11250                           
 11251  0028                     ??_submenu_illum:	
 11252                           ; 1 bytes @ 0x8
 11253                           
 11254  0028                     ??_modify_pmon:	
 11255                           ; 1 bytes @ 0x8
 11256                           
 11257  0028                     ??_modify_time_alarm:	
 11258                           ; 1 bytes @ 0x8
 11259                           
 11260  0028                     ??_switch_alarm:	
 11261                           ; 1 bytes @ 0x8
 11262                           
 11263  0028                     ??_send_register:	
 11264                           ; 1 bytes @ 0x8
 11265                           
 11266  0028                     eeprom_setup@alal:	
 11267                           ; 1 bytes @ 0x8
 11268                           
 11269  0028                     define_alarm@data:	
 11270                           ; 1 bytes @ 0x8
 11271                           
 11272                           
 11273                           ; 1 bytes @ 0x8
 11274  0028                     	ds	1
 11275  0029                     eeprom_setup@alaf:	
 11276  0029                     modify_pmon@data:	
 11277                           ; 1 bytes @ 0x9
 11278                           
 11279  0029                     modify_time_alarm@data:	
 11280                           ; 1 bytes @ 0x9
 11281                           
 11282  0029                     switch_alarm@data:	
 11283                           ; 1 bytes @ 0x9
 11284                           
 11285  0029                     registers_info@nr:	
 11286                           ; 1 bytes @ 0x9
 11287                           
 11288  0029                     notification_memory@nr:	
 11289                           ; 1 bytes @ 0x9
 11290                           
 11291  0029                     send_register@i:	
 11292                           ; 1 bytes @ 0x9
 11293                           
 11294                           
 11295                           ; 1 bytes @ 0x9
 11296  0029                     	ds	1
 11297  002A                     eeprom_setup@clkh:	
 11298  002A                     eeprom_clk_update@clkh:	
 11299                           ; 1 bytes @ 0xA
 11300                           
 11301  002A                     registers_info@ri:	
 11302                           ; 1 bytes @ 0xA
 11303                           
 11304  002A                     notification_memory@ri:	
 11305                           ; 1 bytes @ 0xA
 11306                           
 11307  002A                     send_register@k:	
 11308                           ; 1 bytes @ 0xA
 11309                           
 11310                           
 11311                           ; 2 bytes @ 0xA
 11312  002A                     	ds	1
 11313  002B                     ??_update_clk:	
 11314  002B                     submenu_temp@temperature_units:	
 11315                           ; 1 bytes @ 0xB
 11316                           
 11317  002B                     eeprom_setup@clkm:	
 11318                           ; 1 bytes @ 0xB
 11319                           
 11320  002B                     _registers_info$2824:	
 11321                           ; 1 bytes @ 0xB
 11322                           
 11323  002B                     _notification_memory$2857:	
 11324                           ; 2 bytes @ 0xB
 11325                           
 11326                           
 11327                           ; 2 bytes @ 0xB
 11328  002B                     	ds	1
 11329  002C                     ??_submenu_clock:	
 11330  002C                     ??_eeprom_setup:	
 11331                           ; 1 bytes @ 0xC
 11332                           
 11333  002C                     ??_set_clock:	
 11334                           ; 1 bytes @ 0xC
 11335                           
 11336  002C                     ?_transfer_registers:	
 11337                           ; 1 bytes @ 0xC
 11338                           
 11339  002C                     Alarm@h:	
 11340                           ; 1 bytes @ 0xC
 11341                           
 11342  002C                     submenu_temp@temperature_tens:	
 11343                           ; 1 bytes @ 0xC
 11344                           
 11345  002C                     ring_buffer_write@h:	
 11346                           ; 1 bytes @ 0xC
 11347                           
 11348  002C                     transfer_registers@i:	
 11349                           ; 1 bytes @ 0xC
 11350                           
 11351                           
 11352                           ; 1 bytes @ 0xC
 11353  002C                     	ds	1
 11354  002D                     ??_transfer_registers:	
 11355  002D                     eeprom_setup@reset_buffer:	
 11356                           ; 1 bytes @ 0xD
 11357                           
 11358  002D                     set_clock@hours:	
 11359                           ; 1 bytes @ 0xD
 11360                           
 11361  002D                     registers_info@N:	
 11362                           ; 1 bytes @ 0xD
 11363                           
 11364  002D                     notification_memory@N:	
 11365                           ; 1 bytes @ 0xD
 11366                           
 11367  002D                     ring_buffer_write@ring_pos_:	
 11368                           ; 1 bytes @ 0xD
 11369                           
 11370                           
 11371                           ; 2 bytes @ 0xD
 11372  002D                     	ds	1
 11373  002E                     ??_default_setup:	
 11374  002E                     set_clock@minutes:	
 11375                           ; 1 bytes @ 0xE
 11376                           
 11377  002E                     registers_info@wi:	
 11378                           ; 1 bytes @ 0xE
 11379                           
 11380  002E                     notification_memory@wi:	
 11381                           ; 1 bytes @ 0xE
 11382                           
 11383                           
 11384                           ; 1 bytes @ 0xE
 11385  002E                     	ds	1
 11386  002F                     submenu_clock@minutes_tens:	
 11387  002F                     set_clock@seconds:	
 11388                           ; 1 bytes @ 0xF
 11389                           
 11390  002F                     ring_buffer_write@ring_pos:	
 11391                           ; 1 bytes @ 0xF
 11392                           
 11393                           
 11394                           ; 2 bytes @ 0xF
 11395  002F                     	ds	1
 11396  0030                     submenu_clock@minutes_units:	
 11397  0030                     set_clock@data:	
 11398                           ; 1 bytes @ 0x10
 11399                           
 11400                           
 11401                           ; 1 bytes @ 0x10
 11402  0030                     	ds	1
 11403  0031                     submenu_clock@hours_tens:	
 11404                           
 11405                           ; 1 bytes @ 0x11
 11406  0031                     	ds	1
 11407  0032                     submenu_clock@hours_units:	
 11408                           
 11409                           ; 1 bytes @ 0x12
 11410  0032                     	ds	1
 11411  0033                     ??_load_eeprom:	
 11412  0033                     ??_Menu:	
 11413                           ; 1 bytes @ 0x13
 11414                           
 11415  0033                     transfer_registers@nr:	
 11416                           ; 1 bytes @ 0x13
 11417                           
 11418                           
 11419                           ; 1 bytes @ 0x13
 11420  0033                     	ds	1
 11421  0034                     _transfer_registers$2851:	
 11422                           
 11423                           ; 2 bytes @ 0x14
 11424  0034                     	ds	1
 11425  0035                     Menu@mode:	
 11426                           
 11427                           ; 1 bytes @ 0x15
 11428  0035                     	ds	1
 11429  0036                     ??_Menus:	
 11430  0036                     transfer_registers@c:	
 11431                           ; 1 bytes @ 0x16
 11432                           
 11433                           
 11434                           ; 2 bytes @ 0x16
 11435  0036                     	ds	2
 11436  0038                     transfer_registers@n:	
 11437                           
 11438                           ; 1 bytes @ 0x18
 11439  0038                     	ds	1
 11440  0039                     transfer_registers@N:	
 11441                           
 11442                           ; 1 bytes @ 0x19
 11443  0039                     	ds	1
 11444  003A                     transfer_registers@wi:	
 11445                           
 11446                           ; 1 bytes @ 0x1A
 11447  003A                     	ds	1
 11448  003B                     ??_transfer_n_registers:	
 11449  003B                     ??_transfer_registers_i:	
 11450                           ; 1 bytes @ 0x1B
 11451                           
 11452                           
 11453                           ; 1 bytes @ 0x1B
 11454  003B                     	ds	3
 11455  003E                     transfer_n_registers@nr:	
 11456                           
 11457                           ; 1 bytes @ 0x1E
 11458  003E                     	ds	1
 11459  003F                     transfer_n_registers@n:	
 11460                           
 11461                           ; 1 bytes @ 0x1F
 11462  003F                     	ds	1
 11463  0040                     transfer_registers_i@N:	
 11464  0040                     _transfer_n_registers$2831:	
 11465                           ; 1 bytes @ 0x20
 11466                           
 11467                           
 11468                           ; 2 bytes @ 0x20
 11469  0040                     	ds	1
 11470  0041                     transfer_registers_i@n:	
 11471                           
 11472                           ; 1 bytes @ 0x21
 11473  0041                     	ds	1
 11474  0042                     transfer_n_registers@data:	
 11475  0042                     _transfer_registers_i$2840:	
 11476                           ; 1 bytes @ 0x22
 11477                           
 11478                           
 11479                           ; 2 bytes @ 0x22
 11480  0042                     	ds	2
 11481  0044                     transfer_registers_i@wi:	
 11482                           
 11483                           ; 1 bytes @ 0x24
 11484  0044                     	ds	1
 11485  0045                     transfer_registers_i@i:	
 11486                           
 11487                           ; 1 bytes @ 0x25
 11488  0045                     	ds	1
 11489  0046                     transfer_registers_i@nr:	
 11490                           
 11491                           ; 1 bytes @ 0x26
 11492  0046                     	ds	1
 11493  0047                     transfer_registers_i@data:	
 11494                           
 11495                           ; 1 bytes @ 0x27
 11496  0047                     	ds	1
 11497  0048                     ??_interpret_message:	
 11498                           
 11499                           ; 1 bytes @ 0x28
 11500  0048                     	ds	2
 11501  004A                     interpret_message@cmd:	
 11502                           
 11503                           ; 1 bytes @ 0x2A
 11504  004A                     	ds	1
 11505  004B                     interpret_message@msg:	
 11506                           
 11507                           ; 1 bytes @ 0x2B
 11508  004B                     	ds	1
 11509  004C                     interpret_message@data:	
 11510                           
 11511                           ; 1 bytes @ 0x2C
 11512  004C                     	ds	1
 11513  004D                     ??_read_msgs:	
 11514                           
 11515                           ; 1 bytes @ 0x2D
 11516  004D                     	ds	1
 11517  004E                     read_msgs@aux:	
 11518                           
 11519                           ; 8 bytes @ 0x2E
 11520  004E                     	ds	8
 11521  0056                     read_msgs@i:	
 11522                           
 11523                           ; 2 bytes @ 0x36
 11524  0056                     	ds	2
 11525  0058                     read_msgs@cmd:	
 11526                           
 11527                           ; 1 bytes @ 0x38
 11528  0058                     	ds	1
 11529  0059                     ??_main:	
 11530                           
 11531                           ; 1 bytes @ 0x39
 11532  0059                     	ds	15
 11533                           
 11534                           	psect	maintext
 11535  0075                     __pmaintext:	
 11536 ;;
 11537 ;;Main: autosize = 0, tempsize = 15, incstack = 0, save=0
 11538 ;;
 11539 ;; *************** function _main *****************
 11540 ;; Defined at:
 11541 ;;		line 99 in file "main.c"
 11542 ;; Parameters:    Size  Location     Type
 11543 ;;		None
 11544 ;; Auto vars:     Size  Location     Type
 11545 ;;  i               2    0[BANK2 ] int 
 11546 ;; Return value:  Size  Location     Type
 11547 ;;                  1    wreg      void 
 11548 ;; Registers used:
 11549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11550 ;; Tracked objects:
 11551 ;;		On entry : B1F/0
 11552 ;;		On exit  : 0/0
 11553 ;;		Unchanged: 0/0
 11554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11556 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 11557 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11558 ;;      Totals:         0      15       0       2       0       0       0       0       0       0       0       0       
      +0       0
 11559 ;;Total ram usage:       17 bytes
 11560 ;; Hardware stack levels required when called:   13
 11561 ;; This function calls:
 11562 ;;		_Alarm
 11563 ;;		_EUSART_SetRxInterruptHandler
 11564 ;;		_INT_SetInterruptHandler
 11565 ;;		_Menus
 11566 ;;		_PWM_Output_D4_Disable
 11567 ;;		_ReadIllum
 11568 ;;		_ReadTemp
 11569 ;;		_SYSTEM_Initialize
 11570 ;;		_TMR1_SetInterruptHandler
 11571 ;;		___wmul
 11572 ;;		_clear_alarm
 11573 ;;		_i2c1_driver_open
 11574 ;;		_load_eeprom
 11575 ;;		_notification_memory
 11576 ;;		_read_msgs
 11577 ;;		_ring_buffer_write
 11578 ;;		_sys_init
 11579 ;;		_update_clk
 11580 ;; This function is called by:
 11581 ;;		Startup code after reset
 11582 ;; This function uses a non-reentrant model
 11583 ;;
 11584                           
 11585                           
 11586                           ;psect for function _main
 11587  0075                     _main:	
 11588  0075                     l7067:	
 11589                           ;incstack = 0
 11590                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11591                           
 11592                           
 11593                           ;main.c: 102:     SYSTEM_Initialize();
 11594  0075  3195  25AD  3180   	fcall	_SYSTEM_Initialize
 11595  0078                     l7069:	
 11596                           
 11597                           ;main.c: 103:     sys_init();
 11598  0078  3193  23BC  3180   	fcall	_sys_init
 11599  007B                     l7071:	
 11600                           
 11601                           ;main.c: 104:     load_eeprom();
 11602  007B  318D  253B  3180   	fcall	_load_eeprom
 11603  007E                     l7073:	
 11604                           
 11605                           ;main.c: 105:     clear_alarm();
 11606  007E  3193  2350  3180   	fcall	_clear_alarm
 11607  0081                     l7075:	
 11608                           
 11609                           ;main.c: 108:     (INTCONbits.GIE = 1);
 11610  0081  178B               	bsf	11,7	;volatile
 11611  0082                     l7077:	
 11612                           
 11613                           ;main.c: 111:     (INTCONbits.PEIE = 1);
 11614  0082  170B               	bsf	11,6	;volatile
 11615  0083                     l7079:	
 11616                           
 11617                           ;main.c: 113:     TMR1_SetInterruptHandler(Timer);
 11618  0083  3086               	movlw	low _Timer
 11619  0084  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 11620  0085  300B               	movlw	high _Timer
 11621  0086  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 11622  0087  3193  230A  3180   	fcall	_TMR1_SetInterruptHandler
 11623  008A                     l7081:	
 11624                           
 11625                           ;main.c: 114:     INT_SetInterruptHandler(Switch1);
 11626  008A  302F               	movlw	low _Switch1
 11627  008B  00F2               	movwf	INT_SetInterruptHandler@InterruptHandler
 11628  008C  3014               	movlw	high _Switch1
 11629  008D  00F3               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 11630  008E  3193  232E  3180   	fcall	_INT_SetInterruptHandler
 11631  0091                     l7083:	
 11632                           
 11633                           ;main.c: 115:     EUSART_SetRxInterruptHandler(countMsg);
 11634  0091  309C               	movlw	low _countMsg
 11635  0092  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 11636  0093  3014               	movlw	high _countMsg
 11637  0094  00F3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 11638  0095  3193  2322  3180   	fcall	_EUSART_SetRxInterruptHandler
 11639  0098                     l7085:	
 11640                           
 11641                           ;main.c: 117:     i2c1_driver_open();
 11642  0098  3193  23DF  3180   	fcall	_i2c1_driver_open
 11643  009B                     l7087:	
 11644                           
 11645                           ;main.c: 118:     TRISCbits.TRISC3 = 1;
 11646  009B  0020               	movlb	0	; select bank0
 11647  009C  1593               	bsf	19,3	;volatile
 11648  009D                     l7089:	
 11649                           
 11650                           ;main.c: 119:     TRISCbits.TRISC4 = 1;
 11651  009D  1613               	bsf	19,4	;volatile
 11652  009E                     l7091:	
 11653                           
 11654                           ;main.c: 120:     WPUC3 = 1;
 11655  009E  003E               	movlb	30	; select bank30
 11656  009F  15CF               	bsf	79,3	;volatile
 11657  00A0                     l7093:	
 11658                           
 11659                           ;main.c: 121:     WPUC4 = 1;
 11660  00A0  164F               	bsf	79,4	;volatile
 11661  00A1                     l7095:	
 11662                           
 11663                           ;main.c: 124:     {;main.c: 125:         (INTCONbits.PEIE = 0);
 11664  00A1  130B               	bcf	11,6	;volatile
 11665  00A2                     l7097:	
 11666                           
 11667                           ;main.c: 126:         if(flag_timer){
 11668  00A2  0021               	movlb	1	; select bank1
 11669  00A3  0858               	movf	_flag_timer^(0+128),w	;volatile
 11670  00A4  1903               	btfsc	3,2
 11671  00A5  28A7               	goto	u6151
 11672  00A6  28A8               	goto	u6150
 11673  00A7                     u6151:	
 11674  00A7  28AC               	goto	l7103
 11675  00A8                     u6150:	
 11676  00A8                     l7099:	
 11677                           
 11678                           ;main.c: 127:             flag_timer = 0;
 11679  00A8  01D8               	clrf	_flag_timer^(0+128)	;volatile
 11680  00A9                     l7101:	
 11681                           
 11682                           ;main.c: 128:             update_clk();
 11683  00A9  3193  23B2  3180   	fcall	_update_clk
 11684  00AC                     l7103:	
 11685                           
 11686                           ;main.c: 131:         hours = clkh; minutes = clkm; seconds = clks;
 11687  00AC  0020               	movlb	0	; select bank0
 11688  00AD  086A               	movf	_clkh,w	;volatile
 11689  00AE  00D9               	movwf	??_main
 11690  00AF  0859               	movf	??_main,w
 11691  00B0  0021               	movlb	1	; select bank1
 11692  00B1  00D5               	movwf	_hours^(0+128)
 11693  00B2                     l7105:	
 11694  00B2  0020               	movlb	0	; select bank0
 11695  00B3  0869               	movf	_clkm,w	;volatile
 11696  00B4  00D9               	movwf	??_main
 11697  00B5  0859               	movf	??_main,w
 11698  00B6  0021               	movlb	1	; select bank1
 11699  00B7  00D4               	movwf	_minutes^(0+128)
 11700  00B8                     l7107:	
 11701  00B8  0020               	movlb	0	; select bank0
 11702  00B9  0868               	movf	_clks,w	;volatile
 11703  00BA  00D9               	movwf	??_main
 11704  00BB  0859               	movf	??_main,w
 11705  00BC  0021               	movlb	1	; select bank1
 11706  00BD  00D3               	movwf	_seconds^(0+128)
 11707  00BE                     l7109:	
 11708                           
 11709                           ;main.c: 133:         if(msgs) {
 11710  00BE  084F               	movf	_msgs^(0+128),w	;volatile
 11711  00BF  1903               	btfsc	3,2
 11712  00C0  28C2               	goto	u6161
 11713  00C1  28C3               	goto	u6160
 11714  00C2                     u6161:	
 11715  00C2  28CA               	goto	l7115
 11716  00C3                     u6160:	
 11717  00C3                     l7111:	
 11718                           
 11719                           ;main.c: 134:             num_msgs = msgs;
 11720  00C3  084F               	movf	_msgs^(0+128),w	;volatile
 11721  00C4  0020               	movlb	0	; select bank0
 11722  00C5  00D9               	movwf	??_main
 11723  00C6  0859               	movf	??_main,w
 11724  00C7  0021               	movlb	1	; select bank1
 11725  00C8  00CE               	movwf	_num_msgs^(0+128)
 11726  00C9                     l7113:	
 11727                           
 11728                           ;main.c: 135:             msgs = 0;
 11729  00C9  01CF               	clrf	_msgs^(0+128)	;volatile
 11730  00CA                     l7115:	
 11731                           
 11732                           ;main.c: 138:         if((timer == 0 || timer > pmon) && pmon != 0){
 11733  00CA  085A               	movf	_timer^(0+128),w	;volatile
 11734  00CB  1903               	btfsc	3,2
 11735  00CC  28CE               	goto	u6171
 11736  00CD  28CF               	goto	u6170
 11737  00CE                     u6171:	
 11738  00CE  28D6               	goto	l7119
 11739  00CF                     u6170:	
 11740  00CF                     l7117:	
 11741  00CF  085A               	movf	_timer^(0+128),w	;volatile
 11742  00D0  0020               	movlb	0	; select bank0
 11743  00D1  026D               	subwf	_pmon,w
 11744  00D2  1803               	skipnc
 11745  00D3  28D5               	goto	u6181
 11746  00D4  28D6               	goto	u6180
 11747  00D5                     u6181:	
 11748  00D5  2957               	goto	l1000
 11749  00D6                     u6180:	
 11750  00D6                     l7119:	
 11751  00D6  0020               	movlb	0	; select bank0
 11752  00D7  086D               	movf	_pmon,w
 11753  00D8  1903               	btfsc	3,2
 11754  00D9  28DB               	goto	u6191
 11755  00DA  28DC               	goto	u6190
 11756  00DB                     u6191:	
 11757  00DB  2957               	goto	l1000
 11758  00DC                     u6190:	
 11759  00DC                     l7121:	
 11760                           
 11761                           ;main.c: 139:             timer = 1;
 11762  00DC  3001               	movlw	1
 11763  00DD  00D9               	movwf	??_main
 11764  00DE  0859               	movf	??_main,w
 11765  00DF  0021               	movlb	1	; select bank1
 11766  00E0  00DA               	movwf	_timer^(0+128)	;volatile
 11767  00E1                     l7123:	
 11768                           
 11769                           ;main.c: 140:             (INTCONbits.PEIE = 1);
 11770  00E1  170B               	bsf	11,6	;volatile
 11771  00E2                     l7125:	
 11772                           
 11773                           ;main.c: 141:             illum = ReadIllum();
 11774  00E2  3194  243E  3180   	fcall	_ReadIllum
 11775  00E5  0020               	movlb	0	; select bank0
 11776  00E6  00D9               	movwf	??_main
 11777  00E7  0859               	movf	??_main,w
 11778  00E8  0021               	movlb	1	; select bank1
 11779  00E9  00D1               	movwf	_illum^(0+128)
 11780  00EA                     l7127:	
 11781                           
 11782                           ;main.c: 142:             LATAbits.LATA4 = illum & 1;
 11783  00EA  0851               	movf	_illum^(0+128),w
 11784  00EB  3901               	andlw	1
 11785  00EC  0020               	movlb	0	; select bank0
 11786  00ED  00D9               	movwf	??_main
 11787  00EE  0ED9               	swapf	??_main,f
 11788  00EF  0816               	movf	22,w	;volatile
 11789  00F0  0659               	xorwf	??_main,w
 11790  00F1  39EF               	andlw	-17
 11791  00F2  0659               	xorwf	??_main,w
 11792  00F3  0096               	movwf	22	;volatile
 11793  00F4                     l7129:	
 11794                           
 11795                           ;main.c: 143:             LATAbits.LATA5 = (illum & 2) >> 1;
 11796  00F4  0021               	movlb	1	; select bank1
 11797  00F5  3651               	lsrf	_illum^(0+128),w
 11798  00F6  3901               	andlw	1
 11799  00F7  0020               	movlb	0	; select bank0
 11800  00F8  00D9               	movwf	??_main
 11801  00F9  0ED9               	swapf	??_main,f
 11802  00FA  0DD9               	rlf	??_main,f
 11803  00FB  0816               	movf	22,w	;volatile
 11804  00FC  0659               	xorwf	??_main,w
 11805  00FD  39DF               	andlw	-33
 11806  00FE  0659               	xorwf	??_main,w
 11807  00FF  0096               	movwf	22	;volatile
 11808  0100                     l7131:	
 11809                           
 11810                           ;main.c: 144:             temp = ReadTemp();
 11811  0100  3183  231F  3180   	fcall	_ReadTemp
 11812  0103  0020               	movlb	0	; select bank0
 11813  0104  00D9               	movwf	??_main
 11814  0105  0859               	movf	??_main,w
 11815  0106  0021               	movlb	1	; select bank1
 11816  0107  00D2               	movwf	_temp^(0+128)
 11817  0108                     l7133:	
 11818                           
 11819                           ;main.c: 145:             if(ring_buffer_write(hours, minutes, seconds, temp, illum))
 11820  0108  0854               	movf	_minutes^(0+128),w
 11821  0109  0020               	movlb	0	; select bank0
 11822  010A  00D9               	movwf	??_main
 11823  010B  0859               	movf	??_main,w
 11824  010C  00A4               	movwf	ring_buffer_write@m
 11825  010D  0021               	movlb	1	; select bank1
 11826  010E  0853               	movf	_seconds^(0+128),w
 11827  010F  0020               	movlb	0	; select bank0
 11828  0110  00DA               	movwf	??_main+1
 11829  0111  085A               	movf	??_main+1,w
 11830  0112  00A5               	movwf	ring_buffer_write@s
 11831  0113  0021               	movlb	1	; select bank1
 11832  0114  0852               	movf	_temp^(0+128),w
 11833  0115  0020               	movlb	0	; select bank0
 11834  0116  00DB               	movwf	??_main+2
 11835  0117  085B               	movf	??_main+2,w
 11836  0118  00A6               	movwf	ring_buffer_write@T
 11837  0119  0021               	movlb	1	; select bank1
 11838  011A  0851               	movf	_illum^(0+128),w
 11839  011B  0020               	movlb	0	; select bank0
 11840  011C  00DC               	movwf	??_main+3
 11841  011D  085C               	movf	??_main+3,w
 11842  011E  00A7               	movwf	ring_buffer_write@L
 11843  011F  0021               	movlb	1	; select bank1
 11844  0120  0855               	movf	_hours^(0+128),w
 11845  0121  3181  21F4  3180   	fcall	_ring_buffer_write
 11846  0124  3A00               	xorlw	0
 11847  0125  1903               	skipnz
 11848  0126  2928               	goto	u6201
 11849  0127  2929               	goto	u6200
 11850  0128                     u6201:	
 11851  0128  292C               	goto	l7137
 11852  0129                     u6200:	
 11853  0129                     l7135:	
 11854                           
 11855                           ;main.c: 146:                 notification_memory();
 11856  0129  318D  25DE  3180   	fcall	_notification_memory
 11857  012C                     l7137:	
 11858                           
 11859                           ;main.c: 147:             if((illum < alal || temp > alat) && alaf == 1){
 11860  012C  0021               	movlb	1	; select bank1
 11861  012D  0856               	movf	_alal^(0+128),w
 11862  012E  0251               	subwf	_illum^(0+128),w
 11863  012F  1C03               	skipc
 11864  0130  2932               	goto	u6211
 11865  0131  2933               	goto	u6210
 11866  0132                     u6211:	
 11867  0132  293A               	goto	l7141
 11868  0133                     u6210:	
 11869  0133                     l7139:	
 11870  0133  0852               	movf	_temp^(0+128),w
 11871  0134  0020               	movlb	0	; select bank0
 11872  0135  026C               	subwf	_alat,w
 11873  0136  1803               	skipnc
 11874  0137  2939               	goto	u6221
 11875  0138  293A               	goto	u6220
 11876  0139                     u6221:	
 11877  0139  2958               	goto	l7147
 11878  013A                     u6220:	
 11879  013A                     l7141:	
 11880  013A  0020               	movlb	0	; select bank0
 11881  013B  036B               	decf	_alaf,w
 11882  013C  1D03               	btfss	3,2
 11883  013D  293F               	goto	u6231
 11884  013E  2940               	goto	u6230
 11885  013F                     u6231:	
 11886  013F  2958               	goto	l7147
 11887  0140                     u6230:	
 11888  0140                     l7143:	
 11889                           
 11890                           ;main.c: 148:                 if(!alarm)
 11891  0140  0021               	movlb	1	; select bank1
 11892  0141  0850               	movf	_alarm^(0+128),w
 11893  0142  1D03               	btfss	3,2
 11894  0143  2945               	goto	u6241
 11895  0144  2946               	goto	u6240
 11896  0145                     u6241:	
 11897  0145  2958               	goto	l7147
 11898  0146                     u6240:	
 11899  0146                     l7145:	
 11900                           
 11901                           ;main.c: 149:                     Alarm(hours, minutes, seconds);
 11902  0146  0854               	movf	_minutes^(0+128),w
 11903  0147  0020               	movlb	0	; select bank0
 11904  0148  00D9               	movwf	??_main
 11905  0149  0859               	movf	??_main,w
 11906  014A  00A0               	movwf	Alarm@m
 11907  014B  0021               	movlb	1	; select bank1
 11908  014C  0853               	movf	_seconds^(0+128),w
 11909  014D  0020               	movlb	0	; select bank0
 11910  014E  00DA               	movwf	??_main+1
 11911  014F  085A               	movf	??_main+1,w
 11912  0150  00A1               	movwf	Alarm@s
 11913  0151  0021               	movlb	1	; select bank1
 11914  0152  0855               	movf	_hours^(0+128),w
 11915  0153  318B  2341  3180   	fcall	_Alarm
 11916  0156  2958               	goto	l7147
 11917  0157                     l1000:	
 11918                           
 11919                           ;main.c: 152:             (INTCONbits.PEIE = 1);
 11920  0157  170B               	bsf	11,6	;volatile
 11921  0158                     l7147:	
 11922                           
 11923                           ;main.c: 154:         for(int i = 0; i < num_msgs; i++) {
 11924  0158  0022               	movlb	2	; select bank2
 11925  0159  01B6               	clrf	main@i^(0+256)
 11926  015A  01B7               	clrf	(main@i+1)^(0+256)
 11927  015B  2964               	goto	l7153
 11928  015C                     l7149:	
 11929                           
 11930                           ;main.c: 155:             read_msgs();
 11931  015C  318C  245C  3180   	fcall	_read_msgs
 11932  015F                     l7151:	
 11933                           
 11934                           ;main.c: 156:         }
 11935  015F  3001               	movlw	1
 11936  0160  0022               	movlb	2	; select bank2
 11937  0161  07B6               	addwf	main@i^(0+256),f
 11938  0162  3000               	movlw	0
 11939  0163  3DB7               	addwfc	(main@i+1)^(0+256),f
 11940  0164                     l7153:	
 11941  0164  0837               	movf	(main@i+1)^(0+256),w
 11942  0165  3A80               	xorlw	128
 11943  0166  0020               	movlb	0	; select bank0
 11944  0167  00D9               	movwf	??_main
 11945  0168  3080               	movlw	128
 11946  0169  0259               	subwf	??_main,w
 11947  016A  1D03               	skipz
 11948  016B  2970               	goto	u6255
 11949  016C  0021               	movlb	1	; select bank1
 11950  016D  084E               	movf	_num_msgs^(0+128),w
 11951  016E  0022               	movlb	2	; select bank2
 11952  016F  0236               	subwf	main@i^(0+256),w
 11953  0170                     u6255:	
 11954  0170  1C03               	skipc
 11955  0171  2973               	goto	u6251
 11956  0172  2974               	goto	u6250
 11957  0173                     u6251:	
 11958  0173  295C               	goto	l7149
 11959  0174                     u6250:	
 11960  0174                     l7155:	
 11961                           
 11962                           ;main.c: 157:         num_msgs = 0;
 11963  0174  0021               	movlb	1	; select bank1
 11964  0175  01CE               	clrf	_num_msgs^(0+128)
 11965  0176                     l7157:	
 11966                           
 11967                           ;main.c: 159:         (PIE0bits.INTE = 0);
 11968  0176  002E               	movlb	14	; select bank14
 11969  0177  1016               	bcf	22,0	;volatile
 11970  0178                     l7159:	
 11971                           
 11972                           ;main.c: 160:         if(alarm){
 11973  0178  0021               	movlb	1	; select bank1
 11974  0179  0850               	movf	_alarm^(0+128),w
 11975  017A  1903               	btfsc	3,2
 11976  017B  297D               	goto	u6261
 11977  017C  297E               	goto	u6260
 11978  017D                     u6261:	
 11979  017D  29D6               	goto	l1012
 11980  017E                     u6260:	
 11981  017E                     l7161:	
 11982                           
 11983                           ;main.c: 161:             (PIE0bits.INTE = 1);
 11984  017E  002E               	movlb	14	; select bank14
 11985  017F  1416               	bsf	22,0	;volatile
 11986  0180                     l7163:	
 11987                           
 11988                           ;main.c: 162:             if(hours * 3600 + minutes * 60 + seconds - initial_time >= tal
      +                          a){
 11989  0180  0021               	movlb	1	; select bank1
 11990  0181  0853               	movf	_seconds^(0+128),w
 11991  0182  0020               	movlb	0	; select bank0
 11992  0183  00D9               	movwf	??_main
 11993  0184  01DA               	clrf	??_main+1
 11994  0185  0021               	movlb	1	; select bank1
 11995  0186  0855               	movf	_hours^(0+128),w
 11996  0187  0020               	movlb	0	; select bank0
 11997  0188  00DB               	movwf	??_main+2
 11998  0189  01DC               	clrf	??_main+3
 11999  018A  085B               	movf	??_main+2,w
 12000  018B  00F4               	movwf	___wmul@multiplier
 12001  018C  085C               	movf	??_main+3,w
 12002  018D  00F5               	movwf	___wmul@multiplier+1
 12003  018E  3010               	movlw	16
 12004  018F  00F6               	movwf	___wmul@multiplicand
 12005  0190  300E               	movlw	14
 12006  0191  00F7               	movwf	___wmul@multiplicand+1
 12007  0192  3196  2604  3180   	fcall	___wmul
 12008  0195  0874               	movf	?___wmul,w
 12009  0196  0020               	movlb	0	; select bank0
 12010  0197  00DD               	movwf	??_main+4
 12011  0198  0875               	movf	?___wmul+1,w
 12012  0199  00DE               	movwf	??_main+5
 12013  019A  0021               	movlb	1	; select bank1
 12014  019B  0854               	movf	_minutes^(0+128),w
 12015  019C  0020               	movlb	0	; select bank0
 12016  019D  00DF               	movwf	??_main+6
 12017  019E  01E0               	clrf	??_main+7
 12018  019F  085F               	movf	??_main+6,w
 12019  01A0  00F4               	movwf	___wmul@multiplier
 12020  01A1  0860               	movf	??_main+7,w
 12021  01A2  00F5               	movwf	___wmul@multiplier+1
 12022  01A3  303C               	movlw	60
 12023  01A4  00F6               	movwf	___wmul@multiplicand
 12024  01A5  3000               	movlw	0
 12025  01A6  00F7               	movwf	___wmul@multiplicand+1
 12026  01A7  3196  2604  3180   	fcall	___wmul
 12027  01AA  0874               	movf	?___wmul,w
 12028  01AB  0020               	movlb	0	; select bank0
 12029  01AC  075D               	addwf	??_main+4,w
 12030  01AD  00E1               	movwf	??_main+8
 12031  01AE  0875               	movf	?___wmul+1,w
 12032  01AF  3D5E               	addwfc	??_main+5,w
 12033  01B0  00E2               	movwf	??_main+9
 12034  01B1  0859               	movf	??_main,w
 12035  01B2  0761               	addwf	??_main+8,w
 12036  01B3  00E3               	movwf	??_main+10
 12037  01B4  085A               	movf	??_main+1,w
 12038  01B5  3D62               	addwfc	??_main+9,w
 12039  01B6  00E4               	movwf	??_main+11
 12040  01B7  0021               	movlb	1	; select bank1
 12041  01B8  0843               	movf	_initial_time^(0+128),w
 12042  01B9  0020               	movlb	0	; select bank0
 12043  01BA  0263               	subwf	??_main+10,w
 12044  01BB  00E5               	movwf	??_main+12
 12045  01BC  0021               	movlb	1	; select bank1
 12046  01BD  0844               	movf	(_initial_time+1)^(0+128),w
 12047  01BE  0020               	movlb	0	; select bank0
 12048  01BF  3B64               	subwfb	??_main+11,w
 12049  01C0  00E6               	movwf	??_main+13
 12050  01C1  0866               	movf	??_main+13,w
 12051  01C2  3A80               	xorlw	128
 12052  01C3  00E7               	movwf	??_main+14
 12053  01C4  3080               	movlw	128
 12054  01C5  0267               	subwf	??_main+14,w
 12055  01C6  1D03               	skipz
 12056  01C7  29CC               	goto	u6275
 12057  01C8  0021               	movlb	1	; select bank1
 12058  01C9  0857               	movf	_tala^(0+128),w
 12059  01CA  0020               	movlb	0	; select bank0
 12060  01CB  0265               	subwf	??_main+12,w
 12061  01CC                     u6275:	
 12062  01CC  1C03               	skipc
 12063  01CD  29CF               	goto	u6271
 12064  01CE  29D0               	goto	u6270
 12065  01CF                     u6271:	
 12066  01CF  29D8               	goto	l1016
 12067  01D0                     u6270:	
 12068  01D0                     l7165:	
 12069                           
 12070                           ;main.c: 163:                 PWM_Output_D4_Disable();
 12071  01D0  3194  244D  3180   	fcall	_PWM_Output_D4_Disable
 12072  01D3                     l7167:	
 12073  01D3  0020               	movlb	0	; select bank0
 12074  01D4  1716               	bsf	22,6	;volatile
 12075  01D5  29D8               	goto	l1016
 12076  01D6                     l1012:	
 12077                           
 12078                           ;main.c: 168:             (PIE0bits.INTE = 1);
 12079  01D6  002E               	movlb	14	; select bank14
 12080  01D7  1416               	bsf	22,0	;volatile
 12081  01D8                     l1016:	
 12082                           ;main.c: 170:         }
 12083                           
 12084                           
 12085                           ;main.c: 172:         (PIE0bits.INTE = 0);
 12086  01D8  002E               	movlb	14	; select bank14
 12087  01D9  1016               	bcf	22,0	;volatile
 12088  01DA                     l7169:	
 12089                           
 12090                           ;main.c: 173:         if(switch1){
 12091  01DA  0021               	movlb	1	; select bank1
 12092  01DB  0859               	movf	_switch1^(0+128),w	;volatile
 12093  01DC  1903               	btfsc	3,2
 12094  01DD  29DF               	goto	u6281
 12095  01DE  29E0               	goto	u6280
 12096  01DF                     u6281:	
 12097  01DF  29EF               	goto	l7183
 12098  01E0                     u6280:	
 12099  01E0                     l7171:	
 12100                           
 12101                           ;main.c: 174:             switch1 = 0;
 12102  01E0  01D9               	clrf	_switch1^(0+128)	;volatile
 12103  01E1                     l7173:	
 12104                           
 12105                           ;main.c: 175:             Menus();
 12106  01E1  318A  22FE  3180   	fcall	_Menus
 12107  01E4                     l7175:	
 12108                           
 12109                           ;main.c: 176:             (INTCONbits.PEIE = 0);
 12110  01E4  130B               	bcf	11,6	;volatile
 12111  01E5                     l7177:	
 12112                           
 12113                           ;main.c: 177:             TMR1_SetInterruptHandler(Timer);
 12114  01E5  3086               	movlw	low _Timer
 12115  01E6  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 12116  01E7  300B               	movlw	high _Timer
 12117  01E8  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 12118  01E9  3193  230A  3180   	fcall	_TMR1_SetInterruptHandler
 12119  01EC                     l7179:	
 12120                           
 12121                           ;main.c: 178:             (INTCONbits.PEIE = 1);
 12122  01EC  170B               	bsf	11,6	;volatile
 12123  01ED                     l7181:	
 12124                           
 12125                           ;main.c: 179:             (PIR0bits.INTF = 0);
 12126  01ED  002E               	movlb	14	; select bank14
 12127  01EE  100C               	bcf	12,0	;volatile
 12128  01EF                     l7183:	
 12129                           
 12130                           ;main.c: 181:         (PIE0bits.INTE = 1);
 12131  01EF  002E               	movlb	14	; select bank14
 12132  01F0  1416               	bsf	22,0	;volatile
 12133  01F1  28A1               	goto	l7095
 12134  01F2  3180  2855         	ljmp	start
 12135  01F4                     __end_of_main:	
 12136                           
 12137                           	psect	text1
 12138  13BC                     __ptext1:	
 12139 ;; *************** function _sys_init *****************
 12140 ;; Defined at:
 12141 ;;		line 38 in file "main.c"
 12142 ;; Parameters:    Size  Location     Type
 12143 ;;		None
 12144 ;; Auto vars:     Size  Location     Type
 12145 ;;		None
 12146 ;; Return value:  Size  Location     Type
 12147 ;;                  1    wreg      void 
 12148 ;; Registers used:
 12149 ;;		status,2
 12150 ;; Tracked objects:
 12151 ;;		On entry : 0/0
 12152 ;;		On exit  : 0/0
 12153 ;;		Unchanged: 0/0
 12154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12159 ;;Total ram usage:        0 bytes
 12160 ;; Hardware stack levels used:    1
 12161 ;; Hardware stack levels required when called:    6
 12162 ;; This function calls:
 12163 ;;		Nothing
 12164 ;; This function is called by:
 12165 ;;		_main
 12166 ;; This function uses a non-reentrant model
 12167 ;;
 12168                           
 12169                           
 12170                           ;psect for function _sys_init
 12171  13BC                     _sys_init:	
 12172  13BC                     l6871:	
 12173                           ;incstack = 0
 12174                           ; Regs used in _sys_init: [status,2]
 12175                           
 12176                           
 12177                           ;main.c: 39:     iread = 0;
 12178  13BC  01FA               	clrf	_iread	;volatile
 12179                           
 12180                           ;main.c: 40:     msgs = 0;
 12181  13BD  0021               	movlb	1	; select bank1
 12182  13BE  01CF               	clrf	_msgs^(0+128)	;volatile
 12183                           
 12184                           ;main.c: 41:     num_msgs = 0;
 12185  13BF  01CE               	clrf	_num_msgs^(0+128)
 12186                           
 12187                           ;main.c: 42:     timer = 0;
 12188  13C0  01DA               	clrf	_timer^(0+128)	;volatile
 12189                           
 12190                           ;main.c: 43:     switch1 = 0;
 12191  13C1  01D9               	clrf	_switch1^(0+128)	;volatile
 12192                           
 12193                           ;main.c: 44:     flag_timer = 0;
 12194  13C2  01D8               	clrf	_flag_timer^(0+128)	;volatile
 12195                           
 12196                           ;main.c: 45:     initial_time = 0;
 12197  13C3  01C3               	clrf	_initial_time^(0+128)
 12198  13C4  01C4               	clrf	(_initial_time+1)^(0+128)
 12199                           
 12200                           ;main.c: 46:     alarm = 0;
 12201  13C5  01D0               	clrf	_alarm^(0+128)
 12202  13C6                     l963:	
 12203  13C6  0008               	return
 12204  13C7                     __end_of_sys_init:	
 12205                           
 12206                           	psect	text2
 12207  01F4                     __ptext2:	
 12208 ;; *************** function _ring_buffer_write *****************
 12209 ;; Defined at:
 12210 ;;		line 81 in file "eeprom.c"
 12211 ;; Parameters:    Size  Location     Type
 12212 ;;  h               1    wreg     unsigned char 
 12213 ;;  m               1    4[BANK0 ] unsigned char 
 12214 ;;  s               1    5[BANK0 ] unsigned char 
 12215 ;;  T               1    6[BANK0 ] unsigned char 
 12216 ;;  L               1    7[BANK0 ] unsigned char 
 12217 ;; Auto vars:     Size  Location     Type
 12218 ;;  h               1   12[BANK0 ] unsigned char 
 12219 ;;  ring_pos        2   15[BANK0 ] unsigned short 
 12220 ;;  ring_pos_       2   13[BANK0 ] unsigned short 
 12221 ;; Return value:  Size  Location     Type
 12222 ;;                  1    wreg      _Bool 
 12223 ;; Registers used:
 12224 ;;		wreg, status,2, status,0, pclath, cstack
 12225 ;; Tracked objects:
 12226 ;;		On entry : 0/0
 12227 ;;		On exit  : 0/0
 12228 ;;		Unchanged: 0/0
 12229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12230 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12231 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12232 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12233 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12234 ;;Total ram usage:       13 bytes
 12235 ;; Hardware stack levels used:    1
 12236 ;; Hardware stack levels required when called:    9
 12237 ;; This function calls:
 12238 ;;		_DATAEE_ReadByte
 12239 ;;		_DATAEE_WriteByte
 12240 ;;		___awdiv
 12241 ;;		___lwdiv
 12242 ;;		___wmul
 12243 ;;		_not_transferred
 12244 ;;		_read_nreg
 12245 ;; This function is called by:
 12246 ;;		_main
 12247 ;; This function uses a non-reentrant model
 12248 ;;
 12249                           
 12250                           
 12251                           ;psect for function _ring_buffer_write
 12252  01F4                     _ring_buffer_write:	
 12253                           
 12254                           ;incstack = 0
 12255                           ; Regs used in _ring_buffer_write: [wreg+status,2+status,0+pclath+cstack]
 12256                           ;ring_buffer_write@h stored from wreg
 12257  01F4  0020               	movlb	0	; select bank0
 12258  01F5  00AC               	movwf	ring_buffer_write@h
 12259  01F6                     l6947:	
 12260                           
 12261                           ;eeprom.c: 82:     uint16_t ring_pos_ = DATAEE_ReadByte(0xF00A);
 12262  01F6  300A               	movlw	10
 12263  01F7  00F2               	movwf	DATAEE_ReadByte@bAdd
 12264  01F8  30F0               	movlw	240
 12265  01F9  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 12266  01FA  3193  23D3  3181   	fcall	_DATAEE_ReadByte
 12267  01FD  0020               	movlb	0	; select bank0
 12268  01FE  00A8               	movwf	??_ring_buffer_write
 12269  01FF  01A9               	clrf	??_ring_buffer_write+1
 12270  0200  0828               	movf	??_ring_buffer_write,w
 12271  0201  00AD               	movwf	ring_buffer_write@ring_pos_
 12272  0202  0829               	movf	??_ring_buffer_write+1,w
 12273  0203  00AE               	movwf	ring_buffer_write@ring_pos_+1
 12274  0204                     l6949:	
 12275                           
 12276                           ;eeprom.c: 83:     uint16_t ring_pos = 5*ring_pos_ + 0xF00B;
 12277  0204  082E               	movf	ring_buffer_write@ring_pos_+1,w
 12278  0205  00F5               	movwf	___wmul@multiplier+1
 12279  0206  082D               	movf	ring_buffer_write@ring_pos_,w
 12280  0207  00F4               	movwf	___wmul@multiplier
 12281  0208  3005               	movlw	5
 12282  0209  00F6               	movwf	___wmul@multiplicand
 12283  020A  3000               	movlw	0
 12284  020B  00F7               	movwf	___wmul@multiplicand+1
 12285  020C  3196  2604  3181   	fcall	___wmul
 12286  020F  0874               	movf	?___wmul,w
 12287  0210  3E0B               	addlw	11
 12288  0211  0020               	movlb	0	; select bank0
 12289  0212  00AF               	movwf	ring_buffer_write@ring_pos
 12290  0213  30F0               	movlw	240
 12291  0214  3D75               	addwfc	?___wmul+1,w
 12292  0215  00B0               	movwf	ring_buffer_write@ring_pos+1
 12293  0216                     l6951:	
 12294                           
 12295                           ;eeprom.c: 86:     if (ring_pos_ != 0 && T == DATAEE_ReadByte(ring_pos - 2) && L == DATA
      +                          EE_ReadByte(ring_pos - 1))
 12296  0216  082D               	movf	ring_buffer_write@ring_pos_,w
 12297  0217  042E               	iorwf	ring_buffer_write@ring_pos_+1,w
 12298  0218  1903               	btfsc	3,2
 12299  0219  2A1B               	goto	u6001
 12300  021A  2A1C               	goto	u6000
 12301  021B                     u6001:	
 12302  021B  2A61               	goto	l6961
 12303  021C                     u6000:	
 12304  021C                     l6953:	
 12305  021C  082F               	movf	ring_buffer_write@ring_pos,w
 12306  021D  3EFE               	addlw	254
 12307  021E  00F2               	movwf	DATAEE_ReadByte@bAdd
 12308  021F  30FF               	movlw	255
 12309  0220  3D30               	addwfc	ring_buffer_write@ring_pos+1,w
 12310  0221  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 12311  0222  3193  23D3  3181   	fcall	_DATAEE_ReadByte
 12312  0225  0020               	movlb	0	; select bank0
 12313  0226  0626               	xorwf	ring_buffer_write@T,w
 12314  0227  1D03               	skipz
 12315  0228  2A2A               	goto	u6011
 12316  0229  2A2B               	goto	u6010
 12317  022A                     u6011:	
 12318  022A  2A61               	goto	l6961
 12319  022B                     u6010:	
 12320  022B                     l6955:	
 12321  022B  082F               	movf	ring_buffer_write@ring_pos,w
 12322  022C  3EFF               	addlw	255
 12323  022D  00F2               	movwf	DATAEE_ReadByte@bAdd
 12324  022E  30FF               	movlw	255
 12325  022F  3D30               	addwfc	ring_buffer_write@ring_pos+1,w
 12326  0230  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 12327  0231  3193  23D3  3181   	fcall	_DATAEE_ReadByte
 12328  0234  0020               	movlb	0	; select bank0
 12329  0235  0627               	xorwf	ring_buffer_write@L,w
 12330  0236  1D03               	skipz
 12331  0237  2A39               	goto	u6021
 12332  0238  2A3A               	goto	u6020
 12333  0239                     u6021:	
 12334  0239  2A61               	goto	l6961
 12335  023A                     u6020:	
 12336  023A                     l6957:	
 12337                           
 12338                           ;eeprom.c: 87:         return not_transferred() > read_nreg()/2;
 12339  023A  3196  2642  3181   	fcall	_not_transferred
 12340  023D  0020               	movlb	0	; select bank0
 12341  023E  00A8               	movwf	??_ring_buffer_write
 12342  023F  3002               	movlw	2
 12343  0240  00F4               	movwf	___awdiv@divisor
 12344  0241  3000               	movlw	0
 12345  0242  00F5               	movwf	___awdiv@divisor+1
 12346  0243  3193  2380  3181   	fcall	_read_nreg
 12347  0246  0020               	movlb	0	; select bank0
 12348  0247  00A9               	movwf	??_ring_buffer_write+1
 12349  0248  01AA               	clrf	??_ring_buffer_write+2
 12350  0249  0829               	movf	??_ring_buffer_write+1,w
 12351  024A  00F6               	movwf	___awdiv@dividend
 12352  024B  082A               	movf	??_ring_buffer_write+2,w
 12353  024C  00F7               	movwf	___awdiv@dividend+1
 12354  024D  318F  273D  3181   	fcall	___awdiv
 12355  0250  0875               	movf	?___awdiv+1,w
 12356  0251  3A80               	xorlw	128
 12357  0252  0020               	movlb	0	; select bank0
 12358  0253  00AB               	movwf	??_ring_buffer_write+3
 12359  0254  3080               	movlw	128
 12360  0255  022B               	subwf	??_ring_buffer_write+3,w
 12361  0256  1D03               	skipz
 12362  0257  2A5A               	goto	u6035
 12363  0258  0828               	movf	??_ring_buffer_write,w
 12364  0259  0274               	subwf	?___awdiv,w
 12365  025A                     u6035:	
 12366  025A  1C03               	skipc
 12367  025B  2A5D               	goto	u6031
 12368  025C  2A5F               	goto	u6030
 12369  025D                     u6031:	
 12370  025D  3001               	movlw	1
 12371  025E  2A60               	goto	u6040
 12372  025F                     u6030:	
 12373  025F  3000               	movlw	0
 12374  0260                     u6040:	
 12375  0260  2B1E               	goto	l1414
 12376  0261                     l6961:	
 12377                           
 12378                           ;eeprom.c: 90:     if (ring_pos > (0xF00B + DATAEE_ReadByte(0xF001)*5 - 5) ){
 12379  0261  3001               	movlw	1
 12380  0262  00F2               	movwf	DATAEE_ReadByte@bAdd
 12381  0263  30F0               	movlw	240
 12382  0264  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 12383  0265  3193  23D3  3181   	fcall	_DATAEE_ReadByte
 12384  0268  0020               	movlb	0	; select bank0
 12385  0269  00A8               	movwf	??_ring_buffer_write
 12386  026A  01A9               	clrf	??_ring_buffer_write+1
 12387  026B  0828               	movf	??_ring_buffer_write,w
 12388  026C  00F4               	movwf	___wmul@multiplier
 12389  026D  0829               	movf	??_ring_buffer_write+1,w
 12390  026E  00F5               	movwf	___wmul@multiplier+1
 12391  026F  3005               	movlw	5
 12392  0270  00F6               	movwf	___wmul@multiplicand
 12393  0271  3000               	movlw	0
 12394  0272  00F7               	movwf	___wmul@multiplicand+1
 12395  0273  3196  2604  3181   	fcall	___wmul
 12396  0276  0874               	movf	?___wmul,w
 12397  0277  3E06               	addlw	6
 12398  0278  0020               	movlb	0	; select bank0
 12399  0279  00AA               	movwf	??_ring_buffer_write+2
 12400  027A  30F0               	movlw	240
 12401  027B  3D75               	addwfc	?___wmul+1,w
 12402  027C  00AB               	movwf	??_ring_buffer_write+3
 12403  027D  0830               	movf	ring_buffer_write@ring_pos+1,w
 12404  027E  022B               	subwf	??_ring_buffer_write+3,w
 12405  027F  1D03               	skipz
 12406  0280  2A83               	goto	u6055
 12407  0281  082F               	movf	ring_buffer_write@ring_pos,w
 12408  0282  022A               	subwf	??_ring_buffer_write+2,w
 12409  0283                     u6055:	
 12410  0283  1803               	skipnc
 12411  0284  2A86               	goto	u6051
 12412  0285  2A87               	goto	u6050
 12413  0286                     u6051:	
 12414  0286  2A96               	goto	l6967
 12415  0287                     u6050:	
 12416  0287                     l6963:	
 12417                           
 12418                           ;eeprom.c: 91:         ring_pos = 0xF00B;
 12419  0287  300B               	movlw	11
 12420  0288  00AF               	movwf	ring_buffer_write@ring_pos
 12421  0289  30F0               	movlw	240
 12422  028A  00B0               	movwf	ring_buffer_write@ring_pos+1
 12423  028B                     l6965:	
 12424                           
 12425                           ;eeprom.c: 92:         DATAEE_WriteByte(0xF009, 0x55);
 12426  028B  3009               	movlw	9
 12427  028C  00A0               	movwf	DATAEE_WriteByte@bAdd
 12428  028D  30F0               	movlw	240
 12429  028E  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12430  028F  3055               	movlw	85
 12431  0290  00A8               	movwf	??_ring_buffer_write
 12432  0291  0828               	movf	??_ring_buffer_write,w
 12433  0292  00A2               	movwf	DATAEE_WriteByte@bData
 12434  0293  3197  2709  3181   	fcall	_DATAEE_WriteByte
 12435  0296                     l6967:	
 12436                           
 12437                           ;eeprom.c: 94:     DATAEE_WriteByte(ring_pos , h);
 12438  0296  0020               	movlb	0	; select bank0
 12439  0297  0830               	movf	ring_buffer_write@ring_pos+1,w
 12440  0298  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12441  0299  082F               	movf	ring_buffer_write@ring_pos,w
 12442  029A  00A0               	movwf	DATAEE_WriteByte@bAdd
 12443  029B  082C               	movf	ring_buffer_write@h,w
 12444  029C  00A8               	movwf	??_ring_buffer_write
 12445  029D  0828               	movf	??_ring_buffer_write,w
 12446  029E  00A2               	movwf	DATAEE_WriteByte@bData
 12447  029F  3197  2709  3181   	fcall	_DATAEE_WriteByte
 12448  02A2                     l6969:	
 12449                           
 12450                           ;eeprom.c: 95:     DATAEE_WriteByte(ring_pos+1, m);
 12451  02A2  0020               	movlb	0	; select bank0
 12452  02A3  082F               	movf	ring_buffer_write@ring_pos,w
 12453  02A4  3E01               	addlw	1
 12454  02A5  00A0               	movwf	DATAEE_WriteByte@bAdd
 12455  02A6  3000               	movlw	0
 12456  02A7  3D30               	addwfc	ring_buffer_write@ring_pos+1,w
 12457  02A8  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12458  02A9  0824               	movf	ring_buffer_write@m,w
 12459  02AA  00A8               	movwf	??_ring_buffer_write
 12460  02AB  0828               	movf	??_ring_buffer_write,w
 12461  02AC  00A2               	movwf	DATAEE_WriteByte@bData
 12462  02AD  3197  2709  3181   	fcall	_DATAEE_WriteByte
 12463  02B0                     l6971:	
 12464                           
 12465                           ;eeprom.c: 96:     DATAEE_WriteByte(ring_pos+2, s);
 12466  02B0  0020               	movlb	0	; select bank0
 12467  02B1  082F               	movf	ring_buffer_write@ring_pos,w
 12468  02B2  3E02               	addlw	2
 12469  02B3  00A0               	movwf	DATAEE_WriteByte@bAdd
 12470  02B4  3000               	movlw	0
 12471  02B5  3D30               	addwfc	ring_buffer_write@ring_pos+1,w
 12472  02B6  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12473  02B7  0825               	movf	ring_buffer_write@s,w
 12474  02B8  00A8               	movwf	??_ring_buffer_write
 12475  02B9  0828               	movf	??_ring_buffer_write,w
 12476  02BA  00A2               	movwf	DATAEE_WriteByte@bData
 12477  02BB  3197  2709  3181   	fcall	_DATAEE_WriteByte
 12478  02BE                     l6973:	
 12479                           
 12480                           ;eeprom.c: 97:     DATAEE_WriteByte(ring_pos+3, T);
 12481  02BE  0020               	movlb	0	; select bank0
 12482  02BF  082F               	movf	ring_buffer_write@ring_pos,w
 12483  02C0  3E03               	addlw	3
 12484  02C1  00A0               	movwf	DATAEE_WriteByte@bAdd
 12485  02C2  3000               	movlw	0
 12486  02C3  3D30               	addwfc	ring_buffer_write@ring_pos+1,w
 12487  02C4  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12488  02C5  0826               	movf	ring_buffer_write@T,w
 12489  02C6  00A8               	movwf	??_ring_buffer_write
 12490  02C7  0828               	movf	??_ring_buffer_write,w
 12491  02C8  00A2               	movwf	DATAEE_WriteByte@bData
 12492  02C9  3197  2709  3181   	fcall	_DATAEE_WriteByte
 12493  02CC                     l6975:	
 12494                           
 12495                           ;eeprom.c: 98:     DATAEE_WriteByte(ring_pos+4, L);
 12496  02CC  0020               	movlb	0	; select bank0
 12497  02CD  082F               	movf	ring_buffer_write@ring_pos,w
 12498  02CE  3E04               	addlw	4
 12499  02CF  00A0               	movwf	DATAEE_WriteByte@bAdd
 12500  02D0  3000               	movlw	0
 12501  02D1  3D30               	addwfc	ring_buffer_write@ring_pos+1,w
 12502  02D2  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12503  02D3  0827               	movf	ring_buffer_write@L,w
 12504  02D4  00A8               	movwf	??_ring_buffer_write
 12505  02D5  0828               	movf	??_ring_buffer_write,w
 12506  02D6  00A2               	movwf	DATAEE_WriteByte@bData
 12507  02D7  3197  2709  3181   	fcall	_DATAEE_WriteByte
 12508  02DA                     l6977:	
 12509                           
 12510                           ;eeprom.c: 101:     DATAEE_WriteByte(0xF00A, (ring_pos+5-0xF00B)/5 );
 12511  02DA  300A               	movlw	10
 12512  02DB  0020               	movlb	0	; select bank0
 12513  02DC  00A0               	movwf	DATAEE_WriteByte@bAdd
 12514  02DD  30F0               	movlw	240
 12515  02DE  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12516  02DF  3005               	movlw	5
 12517  02E0  00F2               	movwf	___lwdiv@divisor
 12518  02E1  3000               	movlw	0
 12519  02E2  00F3               	movwf	___lwdiv@divisor+1
 12520  02E3  082F               	movf	ring_buffer_write@ring_pos,w
 12521  02E4  3EFA               	addlw	250
 12522  02E5  00F4               	movwf	___lwdiv@dividend
 12523  02E6  300F               	movlw	15
 12524  02E7  3D30               	addwfc	ring_buffer_write@ring_pos+1,w
 12525  02E8  00F5               	movwf	___lwdiv@dividend+1
 12526  02E9  318A  223F  3181   	fcall	___lwdiv
 12527  02EC  0872               	movf	?___lwdiv,w
 12528  02ED  0020               	movlb	0	; select bank0
 12529  02EE  00A8               	movwf	??_ring_buffer_write
 12530  02EF  0828               	movf	??_ring_buffer_write,w
 12531  02F0  00A2               	movwf	DATAEE_WriteByte@bData
 12532  02F1  3197  2709  3181   	fcall	_DATAEE_WriteByte
 12533  02F4                     l6979:	
 12534                           
 12535                           ;eeprom.c: 104:     DATAEE_WriteByte(0xF000, DATAEE_ReadByte(0xF000) + ((ring_pos+5-0xF0
      +                          0B)/5) - ring_pos_);
 12536  02F4  3000               	movlw	0
 12537  02F5  0020               	movlb	0	; select bank0
 12538  02F6  00A0               	movwf	DATAEE_WriteByte@bAdd
 12539  02F7  30F0               	movlw	240
 12540  02F8  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12541  02F9  3005               	movlw	5
 12542  02FA  00F2               	movwf	___lwdiv@divisor
 12543  02FB  3000               	movlw	0
 12544  02FC  00F3               	movwf	___lwdiv@divisor+1
 12545  02FD  082F               	movf	ring_buffer_write@ring_pos,w
 12546  02FE  3EFA               	addlw	250
 12547  02FF  00F4               	movwf	___lwdiv@dividend
 12548  0300  300F               	movlw	15
 12549  0301  3D30               	addwfc	ring_buffer_write@ring_pos+1,w
 12550  0302  00F5               	movwf	___lwdiv@dividend+1
 12551  0303  318A  223F  3181   	fcall	___lwdiv
 12552  0306  0872               	movf	?___lwdiv,w
 12553  0307  0020               	movlb	0	; select bank0
 12554  0308  00A8               	movwf	??_ring_buffer_write
 12555  0309  0873               	movf	?___lwdiv+1,w
 12556  030A  00A9               	movwf	??_ring_buffer_write+1
 12557  030B  3000               	movlw	0
 12558  030C  00F2               	movwf	DATAEE_ReadByte@bAdd
 12559  030D  30F0               	movlw	240
 12560  030E  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 12561  030F  3193  23D3  3181   	fcall	_DATAEE_ReadByte
 12562  0312  0020               	movlb	0	; select bank0
 12563  0313  0728               	addwf	??_ring_buffer_write,w
 12564  0314  00AA               	movwf	??_ring_buffer_write+2
 12565  0315  082D               	movf	ring_buffer_write@ring_pos_,w
 12566  0316  022A               	subwf	??_ring_buffer_write+2,w
 12567  0317  00AB               	movwf	??_ring_buffer_write+3
 12568  0318  082B               	movf	??_ring_buffer_write+3,w
 12569  0319  00A2               	movwf	DATAEE_WriteByte@bData
 12570  031A  3197  2709  3181   	fcall	_DATAEE_WriteByte
 12571  031D  2A3A               	goto	l6957
 12572  031E                     l1414:	
 12573  031E  0008               	return
 12574  031F                     __end_of_ring_buffer_write:	
 12575                           
 12576                           	psect	text3
 12577  1642                     __ptext3:	
 12578 ;; *************** function _not_transferred *****************
 12579 ;; Defined at:
 12580 ;;		line 170 in file "eeprom.c"
 12581 ;; Parameters:    Size  Location     Type
 12582 ;;		None
 12583 ;; Auto vars:     Size  Location     Type
 12584 ;;  unread          1    8[COMMON] unsigned char 
 12585 ;; Return value:  Size  Location     Type
 12586 ;;                  1    wreg      unsigned char 
 12587 ;; Registers used:
 12588 ;;		wreg, status,2, status,0, pclath, cstack
 12589 ;; Tracked objects:
 12590 ;;		On entry : 0/0
 12591 ;;		On exit  : 0/0
 12592 ;;		Unchanged: 0/0
 12593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12595 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12596 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12597 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12598 ;;Total ram usage:        5 bytes
 12599 ;; Hardware stack levels used:    1
 12600 ;; Hardware stack levels required when called:    8
 12601 ;; This function calls:
 12602 ;;		_read_iwrt
 12603 ;;		_read_nreg
 12604 ;; This function is called by:
 12605 ;;		_ring_buffer_write
 12606 ;; This function uses a non-reentrant model
 12607 ;;
 12608                           
 12609                           
 12610                           ;psect for function _not_transferred
 12611  1642                     _not_transferred:	
 12612  1642                     l6763:	
 12613                           ;incstack = 0
 12614                           ; Regs used in _not_transferred: [wreg+status,2+status,0+pclath+cstack]
 12615                           
 12616                           
 12617                           ;eeprom.c: 171:     uint8_t unread = read_iwrt() - iread;
 12618  1642  3193  2398  3196   	fcall	_read_iwrt
 12619  1645  00F4               	movwf	??_not_transferred
 12620  1646  087A               	movf	_iread,w	;volatile
 12621  1647  0274               	subwf	??_not_transferred,w
 12622  1648  00F5               	movwf	??_not_transferred+1
 12623  1649  0875               	movf	??_not_transferred+1,w
 12624  164A  00F8               	movwf	not_transferred@unread
 12625  164B                     l6765:	
 12626                           
 12627                           ;eeprom.c: 172:     return unread > 0 ? unread : read_nreg() + unread;
 12628  164B  0878               	movf	not_transferred@unread,w
 12629  164C  1D03               	btfss	3,2
 12630  164D  2E4F               	goto	u5621
 12631  164E  2E50               	goto	u5620
 12632  164F                     u5621:	
 12633  164F  2E58               	goto	l6769
 12634  1650                     u5620:	
 12635  1650                     l6767:	
 12636  1650  3193  2380  3196   	fcall	_read_nreg
 12637  1653  0778               	addwf	not_transferred@unread,w
 12638  1654  00F6               	movwf	_not_transferred$2648
 12639  1655  01F7               	clrf	_not_transferred$2648+1
 12640  1656  0DF7               	rlf	_not_transferred$2648+1,f
 12641  1657  2E5F               	goto	l1477
 12642  1658                     l6769:	
 12643  1658  0878               	movf	not_transferred@unread,w
 12644  1659  00F4               	movwf	??_not_transferred
 12645  165A  01F5               	clrf	??_not_transferred+1
 12646  165B  0874               	movf	??_not_transferred,w
 12647  165C  00F6               	movwf	_not_transferred$2648
 12648  165D  0875               	movf	??_not_transferred+1,w
 12649  165E  00F7               	movwf	_not_transferred$2648+1
 12650  165F                     l1477:	
 12651  165F  0876               	movf	_not_transferred$2648,w
 12652  1660                     l1478:	
 12653  1660  0008               	return
 12654  1661                     __end_of_not_transferred:	
 12655                           
 12656                           	psect	text4
 12657  0A3F                     __ptext4:	
 12658 ;; *************** function ___lwdiv *****************
 12659 ;; Defined at:
 12660 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
 12661 ;; Parameters:    Size  Location     Type
 12662 ;;  divisor         2    2[COMMON] unsigned int 
 12663 ;;  dividend        2    4[COMMON] unsigned int 
 12664 ;; Auto vars:     Size  Location     Type
 12665 ;;  quotient        2    8[COMMON] unsigned int 
 12666 ;;  counter         1    7[COMMON] unsigned char 
 12667 ;; Return value:  Size  Location     Type
 12668 ;;                  2    2[COMMON] unsigned int 
 12669 ;; Registers used:
 12670 ;;		wreg, status,2, status,0
 12671 ;; Tracked objects:
 12672 ;;		On entry : 0/0
 12673 ;;		On exit  : 0/0
 12674 ;;		Unchanged: 0/0
 12675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12677 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12678 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12679 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12680 ;;Total ram usage:        8 bytes
 12681 ;; Hardware stack levels used:    1
 12682 ;; Hardware stack levels required when called:    6
 12683 ;; This function calls:
 12684 ;;		Nothing
 12685 ;; This function is called by:
 12686 ;;		_ring_buffer_write
 12687 ;; This function uses a non-reentrant model
 12688 ;;
 12689                           
 12690                           
 12691                           ;psect for function ___lwdiv
 12692  0A3F                     ___lwdiv:	
 12693  0A3F                     l6815:	
 12694                           ;incstack = 0
 12695                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 12696                           
 12697  0A3F  01F8               	clrf	___lwdiv@quotient
 12698  0A40  01F9               	clrf	___lwdiv@quotient+1
 12699  0A41                     l6817:	
 12700  0A41  0872               	movf	___lwdiv@divisor,w
 12701  0A42  0473               	iorwf	___lwdiv@divisor+1,w
 12702  0A43  1903               	btfsc	3,2
 12703  0A44  2A46               	goto	u5641
 12704  0A45  2A47               	goto	u5640
 12705  0A46                     u5641:	
 12706  0A46  2A76               	goto	l6837
 12707  0A47                     u5640:	
 12708  0A47                     l6819:	
 12709  0A47  01F7               	clrf	___lwdiv@counter
 12710  0A48  0AF7               	incf	___lwdiv@counter,f
 12711  0A49  2A53               	goto	l6825
 12712  0A4A                     l6821:	
 12713  0A4A  3001               	movlw	1
 12714  0A4B                     u5655:	
 12715  0A4B  35F2               	lslf	___lwdiv@divisor,f
 12716  0A4C  0DF3               	rlf	___lwdiv@divisor+1,f
 12717  0A4D  0B89               	decfsz	9,f
 12718  0A4E  2A4B               	goto	u5655
 12719  0A4F                     l6823:	
 12720  0A4F  3001               	movlw	1
 12721  0A50  00F6               	movwf	??___lwdiv
 12722  0A51  0876               	movf	??___lwdiv,w
 12723  0A52  07F7               	addwf	___lwdiv@counter,f
 12724  0A53                     l6825:	
 12725  0A53  1FF3               	btfss	___lwdiv@divisor+1,7
 12726  0A54  2A56               	goto	u5661
 12727  0A55  2A57               	goto	u5660
 12728  0A56                     u5661:	
 12729  0A56  2A4A               	goto	l6821
 12730  0A57                     u5660:	
 12731  0A57                     l6827:	
 12732  0A57  3001               	movlw	1
 12733  0A58                     u5675:	
 12734  0A58  35F8               	lslf	___lwdiv@quotient,f
 12735  0A59  0DF9               	rlf	___lwdiv@quotient+1,f
 12736  0A5A  0B89               	decfsz	9,f
 12737  0A5B  2A58               	goto	u5675
 12738  0A5C  0873               	movf	___lwdiv@divisor+1,w
 12739  0A5D  0275               	subwf	___lwdiv@dividend+1,w
 12740  0A5E  1D03               	skipz
 12741  0A5F  2A62               	goto	u5685
 12742  0A60  0872               	movf	___lwdiv@divisor,w
 12743  0A61  0274               	subwf	___lwdiv@dividend,w
 12744  0A62                     u5685:	
 12745  0A62  1C03               	skipc
 12746  0A63  2A65               	goto	u5681
 12747  0A64  2A66               	goto	u5680
 12748  0A65                     u5681:	
 12749  0A65  2A6B               	goto	l6833
 12750  0A66                     u5680:	
 12751  0A66                     l6829:	
 12752  0A66  0872               	movf	___lwdiv@divisor,w
 12753  0A67  02F4               	subwf	___lwdiv@dividend,f
 12754  0A68  0873               	movf	___lwdiv@divisor+1,w
 12755  0A69  3BF5               	subwfb	___lwdiv@dividend+1,f
 12756  0A6A                     l6831:	
 12757  0A6A  1478               	bsf	___lwdiv@quotient,0
 12758  0A6B                     l6833:	
 12759  0A6B  3001               	movlw	1
 12760  0A6C                     u5695:	
 12761  0A6C  36F3               	lsrf	___lwdiv@divisor+1,f
 12762  0A6D  0CF2               	rrf	___lwdiv@divisor,f
 12763  0A6E  0B89               	decfsz	9,f
 12764  0A6F  2A6C               	goto	u5695
 12765  0A70                     l6835:	
 12766  0A70  3001               	movlw	1
 12767  0A71  02F7               	subwf	___lwdiv@counter,f
 12768  0A72  1D03               	btfss	3,2
 12769  0A73  2A75               	goto	u5701
 12770  0A74  2A76               	goto	u5700
 12771  0A75                     u5701:	
 12772  0A75  2A57               	goto	l6827
 12773  0A76                     u5700:	
 12774  0A76                     l6837:	
 12775  0A76  0879               	movf	___lwdiv@quotient+1,w
 12776  0A77  00F3               	movwf	?___lwdiv+1
 12777  0A78  0878               	movf	___lwdiv@quotient,w
 12778  0A79  00F2               	movwf	?___lwdiv
 12779  0A7A                     l2173:	
 12780  0A7A  0008               	return
 12781  0A7B                     __end_of___lwdiv:	
 12782                           
 12783                           	psect	text5
 12784  0C5C                     __ptext5:	
 12785 ;; *************** function _read_msgs *****************
 12786 ;; Defined at:
 12787 ;;		line 26 in file "communications.c"
 12788 ;; Parameters:    Size  Location     Type
 12789 ;;		None
 12790 ;; Auto vars:     Size  Location     Type
 12791 ;;  aux             8   46[BANK0 ] unsigned char [8]
 12792 ;;  i               2   54[BANK0 ] int 
 12793 ;;  cmd             1   56[BANK0 ] unsigned char 
 12794 ;; Return value:  Size  Location     Type
 12795 ;;                  1    wreg      void 
 12796 ;; Registers used:
 12797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12798 ;; Tracked objects:
 12799 ;;		On entry : 0/0
 12800 ;;		On exit  : 0/0
 12801 ;;		Unchanged: 0/0
 12802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12804 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12805 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12806 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12807 ;;Total ram usage:       12 bytes
 12808 ;; Hardware stack levels used:    1
 12809 ;; Hardware stack levels required when called:   12
 12810 ;; This function calls:
 12811 ;;		_EUSART_Read
 12812 ;;		_EUSART_is_rx_ready
 12813 ;;		_interpret_message
 12814 ;; This function is called by:
 12815 ;;		_main
 12816 ;; This function uses a non-reentrant model
 12817 ;;
 12818                           
 12819                           
 12820                           ;psect for function _read_msgs
 12821  0C5C                     _read_msgs:	
 12822  0C5C                     l7007:	
 12823                           ;incstack = 0
 12824                           ; Regs used in _read_msgs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12825                           
 12826                           
 12827                           ;communications.c: 29:     int i = 0;
 12828  0C5C  0020               	movlb	0	; select bank0
 12829  0C5D  01D6               	clrf	read_msgs@i
 12830  0C5E  01D7               	clrf	read_msgs@i+1
 12831  0C5F                     l7009:	
 12832                           
 12833                           ;communications.c: 32:         cmd = EUSART_Read();
 12834  0C5F  3197  27A5  318C   	fcall	_EUSART_Read
 12835  0C62  0020               	movlb	0	; select bank0
 12836  0C63  00CD               	movwf	??_read_msgs
 12837  0C64  084D               	movf	??_read_msgs,w
 12838  0C65  00D8               	movwf	read_msgs@cmd
 12839  0C66                     l7011:	
 12840                           
 12841                           ;communications.c: 34:     } while (cmd != 0xFD && EUSART_is_rx_ready());
 12842  0C66  30FD               	movlw	253
 12843  0C67  0658               	xorwf	read_msgs@cmd,w
 12844  0C68  1903               	btfsc	3,2
 12845  0C69  2C6B               	goto	u6081
 12846  0C6A  2C6C               	goto	u6080
 12847  0C6B                     u6081:	
 12848  0C6B  2C74               	goto	l7015
 12849  0C6C                     u6080:	
 12850  0C6C                     l7013:	
 12851  0C6C  3193  23A9  318C   	fcall	_EUSART_is_rx_ready
 12852  0C6F  3A00               	xorlw	0
 12853  0C70  1D03               	skipz
 12854  0C71  2C73               	goto	u6091
 12855  0C72  2C74               	goto	u6090
 12856  0C73                     u6091:	
 12857  0C73  2C5F               	goto	l7009
 12858  0C74                     u6090:	
 12859  0C74                     l7015:	
 12860                           
 12861                           ;communications.c: 36:     for(i = 0; cmd != 0xFE && EUSART_is_rx_ready(); i++) {
 12862  0C74  0020               	movlb	0	; select bank0
 12863  0C75  01D6               	clrf	read_msgs@i
 12864  0C76  01D7               	clrf	read_msgs@i+1
 12865  0C77  2C8B               	goto	l7023
 12866  0C78                     l7017:	
 12867                           
 12868                           ;communications.c: 37:         cmd = EUSART_Read();
 12869  0C78  3197  27A5  318C   	fcall	_EUSART_Read
 12870  0C7B  0020               	movlb	0	; select bank0
 12871  0C7C  00CD               	movwf	??_read_msgs
 12872  0C7D  084D               	movf	??_read_msgs,w
 12873  0C7E  00D8               	movwf	read_msgs@cmd
 12874  0C7F                     l7019:	
 12875                           
 12876                           ;communications.c: 38:         aux[i] = cmd;
 12877  0C7F  0858               	movf	read_msgs@cmd,w
 12878  0C80  00CD               	movwf	??_read_msgs
 12879  0C81  0856               	movf	read_msgs@i,w
 12880  0C82  3E4E               	addlw	(low (read_msgs@aux| 0))& (0+255)
 12881  0C83  0086               	movwf	6
 12882  0C84  0187               	clrf	7
 12883  0C85  084D               	movf	??_read_msgs,w
 12884  0C86  0081               	movwf	1
 12885  0C87                     l7021:	
 12886                           
 12887                           ;communications.c: 39:     }
 12888  0C87  3001               	movlw	1
 12889  0C88  07D6               	addwf	read_msgs@i,f
 12890  0C89  3000               	movlw	0
 12891  0C8A  3DD7               	addwfc	read_msgs@i+1,f
 12892  0C8B                     l7023:	
 12893  0C8B  30FE               	movlw	254
 12894  0C8C  0658               	xorwf	read_msgs@cmd,w
 12895  0C8D  1903               	btfsc	3,2
 12896  0C8E  2C90               	goto	u6101
 12897  0C8F  2C91               	goto	u6100
 12898  0C90                     u6101:	
 12899  0C90  2C99               	goto	l7027
 12900  0C91                     u6100:	
 12901  0C91                     l7025:	
 12902  0C91  3193  23A9  318C   	fcall	_EUSART_is_rx_ready
 12903  0C94  3A00               	xorlw	0
 12904  0C95  1D03               	skipz
 12905  0C96  2C98               	goto	u6111
 12906  0C97  2C99               	goto	u6110
 12907  0C98                     u6111:	
 12908  0C98  2C78               	goto	l7017
 12909  0C99                     u6110:	
 12910  0C99                     l7027:	
 12911                           
 12912                           ;communications.c: 40:     aux[i-1] = '\0';
 12913  0C99  0020               	movlb	0	; select bank0
 12914  0C9A  0856               	movf	read_msgs@i,w
 12915  0C9B  3EFF               	addlw	255
 12916  0C9C  3E4E               	addlw	(low (read_msgs@aux| 0))& (0+255)
 12917  0C9D  0086               	movwf	6
 12918  0C9E  0187               	clrf	7
 12919  0C9F  0181               	clrf	1
 12920  0CA0                     l7029:	
 12921                           
 12922                           ;communications.c: 42:     interpret_message(aux);
 12923  0CA0  304E               	movlw	(low (read_msgs@aux| 0))& (0+255)
 12924  0CA1  3186  26D7  318C   	fcall	_interpret_message
 12925  0CA4                     l1592:	
 12926  0CA4  0008               	return
 12927  0CA5                     __end_of_read_msgs:	
 12928                           
 12929                           	psect	text6
 12930  06D7                     __ptext6:	
 12931 ;; *************** function _interpret_message *****************
 12932 ;; Defined at:
 12933 ;;		line 45 in file "communications.c"
 12934 ;; Parameters:    Size  Location     Type
 12935 ;;  msg             1    wreg     PTR unsigned char 
 12936 ;;		 -> read_msgs@aux(8), 
 12937 ;; Auto vars:     Size  Location     Type
 12938 ;;  msg             1   43[BANK0 ] PTR unsigned char 
 12939 ;;		 -> read_msgs@aux(8), 
 12940 ;;  data            1   44[BANK0 ] PTR unsigned char 
 12941 ;;		 -> NULL(0), read_msgs@aux(8), 
 12942 ;;  cmd             1   42[BANK0 ] unsigned char 
 12943 ;; Return value:  Size  Location     Type
 12944 ;;                  1    wreg      void 
 12945 ;; Registers used:
 12946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12947 ;; Tracked objects:
 12948 ;;		On entry : 0/0
 12949 ;;		On exit  : 0/0
 12950 ;;		Unchanged: 0/0
 12951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12953 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12954 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12955 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12956 ;;Total ram usage:        5 bytes
 12957 ;; Hardware stack levels used:    1
 12958 ;; Hardware stack levels required when called:   11
 12959 ;; This function calls:
 12960 ;;		_define_alarm
 12961 ;;		_modify_pmon
 12962 ;;		_modify_time_alarm
 12963 ;;		_read_alarms
 12964 ;;		_read_clock
 12965 ;;		_read_param
 12966 ;;		_read_temp_lum
 12967 ;;		_registers_info
 12968 ;;		_send_confirmation
 12969 ;;		_set_clock
 12970 ;;		_strlen
 12971 ;;		_switch_alarm
 12972 ;;		_transfer_n_registers
 12973 ;;		_transfer_registers_i
 12974 ;; This function is called by:
 12975 ;;		_read_msgs
 12976 ;; This function uses a non-reentrant model
 12977 ;;
 12978                           
 12979                           
 12980                           ;psect for function _interpret_message
 12981  06D7                     _interpret_message:	
 12982                           
 12983                           ;incstack = 0
 12984                           ; Regs used in _interpret_message: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12985                           ;interpret_message@msg stored from wreg
 12986  06D7  0020               	movlb	0	; select bank0
 12987  06D8  00CB               	movwf	interpret_message@msg
 12988  06D9                     l6773:	
 12989                           
 12990                           ;communications.c: 46:     uint8_t cmd = msg[0];
 12991  06D9  084B               	movf	interpret_message@msg,w
 12992  06DA  0086               	movwf	6
 12993  06DB  0187               	clrf	7
 12994  06DC  0801               	movf	1,w
 12995  06DD  00C8               	movwf	??_interpret_message
 12996  06DE  0848               	movf	??_interpret_message,w
 12997  06DF  00CA               	movwf	interpret_message@cmd
 12998  06E0                     l6775:	
 12999                           
 13000                           ;communications.c: 47:     char * data = strlen(msg) != 1 ? msg + 1 : ((void*)0);
 13001  06E0  084B               	movf	interpret_message@msg,w
 13002  06E1  3195  2545  3186   	fcall	_strlen
 13003  06E4  0372               	decf	?_strlen,w
 13004  06E5  0473               	iorwf	?_strlen+1,w
 13005  06E6  1D03               	btfss	3,2
 13006  06E7  2EE9               	goto	u5631
 13007  06E8  2EEA               	goto	u5630
 13008  06E9                     u5631:	
 13009  06E9  2EED               	goto	l6779
 13010  06EA                     u5630:	
 13011  06EA                     l6777:	
 13012  06EA  0020               	movlb	0	; select bank0
 13013  06EB  01CC               	clrf	interpret_message@data
 13014  06EC  2F34               	goto	l6809
 13015  06ED                     l6779:	
 13016  06ED  0020               	movlb	0	; select bank0
 13017  06EE  084B               	movf	interpret_message@msg,w
 13018  06EF  3E01               	addlw	1
 13019  06F0  00C8               	movwf	??_interpret_message
 13020  06F1  0848               	movf	??_interpret_message,w
 13021  06F2  00CC               	movwf	interpret_message@data
 13022  06F3  2F34               	goto	l6809
 13023  06F4                     l6781:	
 13024                           
 13025                           ;communications.c: 51:             read_clock();
 13026  06F4  3187  27D1  3186   	fcall	_read_clock
 13027                           
 13028                           ;communications.c: 52:             break;
 13029  06F7  2F62               	goto	l1614
 13030  06F8                     l6783:	
 13031                           
 13032                           ;communications.c: 54:             set_clock(data);
 13033  06F8  084C               	movf	interpret_message@data,w
 13034  06F9  3187  2763  3186   	fcall	_set_clock
 13035                           
 13036                           ;communications.c: 55:             break;
 13037  06FC  2F62               	goto	l1614
 13038  06FD                     l6785:	
 13039                           
 13040                           ;communications.c: 57:             read_temp_lum();
 13041  06FD  3196  2623  3186   	fcall	_read_temp_lum
 13042                           
 13043                           ;communications.c: 58:             break;
 13044  0700  2F62               	goto	l1614
 13045  0701                     l6787:	
 13046                           
 13047                           ;communications.c: 60:             read_param();
 13048  0701  3195  25C9  3186   	fcall	_read_param
 13049                           
 13050                           ;communications.c: 61:             break;
 13051  0704  2F62               	goto	l1614
 13052  0705                     l6789:	
 13053                           
 13054                           ;communications.c: 63:             modify_pmon(data);
 13055  0705  084C               	movf	interpret_message@data,w
 13056  0706  3189  215F  3186   	fcall	_modify_pmon
 13057                           
 13058                           ;communications.c: 64:             break;
 13059  0709  2F62               	goto	l1614
 13060  070A                     l6791:	
 13061                           
 13062                           ;communications.c: 66:             modify_time_alarm(data);
 13063  070A  084C               	movf	interpret_message@data,w
 13064  070B  3189  2195  3186   	fcall	_modify_time_alarm
 13065                           
 13066                           ;communications.c: 67:             break;
 13067  070E  2F62               	goto	l1614
 13068  070F                     l6793:	
 13069                           
 13070                           ;communications.c: 69:             read_alarms();
 13071  070F  3196  26C3  3186   	fcall	_read_alarms
 13072                           
 13073                           ;communications.c: 70:             break;
 13074  0712  2F62               	goto	l1614
 13075  0713                     l6795:	
 13076                           
 13077                           ;communications.c: 72:             define_alarm(data);
 13078  0713  084C               	movf	interpret_message@data,w
 13079  0714  318A  22BC  3186   	fcall	_define_alarm
 13080                           
 13081                           ;communications.c: 73:             break;
 13082  0717  2F62               	goto	l1614
 13083  0718                     l6797:	
 13084                           
 13085                           ;communications.c: 75:             switch_alarm(data);
 13086  0718  084C               	movf	interpret_message@data,w
 13087  0719  3188  20F8  3186   	fcall	_switch_alarm
 13088                           
 13089                           ;communications.c: 76:             break;
 13090  071C  2F62               	goto	l1614
 13091  071D                     l6799:	
 13092                           
 13093                           ;communications.c: 78:             registers_info();
 13094  071D  318E  2631  3186   	fcall	_registers_info
 13095                           
 13096                           ;communications.c: 79:             break;
 13097  0720  2F62               	goto	l1614
 13098  0721                     l6801:	
 13099                           
 13100                           ;communications.c: 81:             transfer_n_registers(data);
 13101  0721  084C               	movf	interpret_message@data,w
 13102  0722  318F  279D  3186   	fcall	_transfer_n_registers
 13103                           
 13104                           ;communications.c: 82:             break;
 13105  0725  2F62               	goto	l1614
 13106  0726                     l6803:	
 13107                           
 13108                           ;communications.c: 84:             transfer_registers_i(data);
 13109  0726  084C               	movf	interpret_message@data,w
 13110  0727  3185  25AC  3186   	fcall	_transfer_registers_i
 13111                           
 13112                           ;communications.c: 85:             break;
 13113  072A  2F62               	goto	l1614
 13114  072B                     l6805:	
 13115                           
 13116                           ;communications.c: 87:             send_confirmation(cmd, 0xFF);
 13117  072B  30FF               	movlw	255
 13118  072C  00C8               	movwf	??_interpret_message
 13119  072D  0848               	movf	??_interpret_message,w
 13120  072E  00F8               	movwf	send_confirmation@error
 13121  072F  084A               	movf	interpret_message@cmd,w
 13122  0730  3195  2518  3186   	fcall	_send_confirmation
 13123                           
 13124                           ;communications.c: 88:             break;
 13125  0733  2F62               	goto	l1614
 13126  0734                     l6809:	
 13127  0734  084A               	movf	interpret_message@cmd,w
 13128  0735  00C8               	movwf	??_interpret_message
 13129  0736  01C9               	clrf	??_interpret_message+1
 13130                           
 13131                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13132                           ; Switch size 1, requested type "simple"
 13133                           ; Number of cases is 1, Range of values is 0 to 0
 13134                           ; switch strategies available:
 13135                           ; Name         Instructions Cycles
 13136                           ; simple_byte            4     3 (average)
 13137                           ; direct_byte            8     6 (fixed)
 13138                           ; jumptable            260     6 (fixed)
 13139                           ;	Chosen strategy is simple_byte
 13140  0737  0849               	movf	??_interpret_message+1,w
 13141  0738  3A00               	xorlw	0	; case 0
 13142  0739  1903               	skipnz
 13143  073A  2F3C               	goto	l7249
 13144  073B  2F2B               	goto	l6805
 13145  073C                     l7249:	
 13146                           
 13147                           ; Switch size 1, requested type "simple"
 13148                           ; Number of cases is 12, Range of values is 192 to 203
 13149                           ; switch strategies available:
 13150                           ; Name         Instructions Cycles
 13151                           ; direct_byte           33     9 (fixed)
 13152                           ; simple_byte           37    19 (average)
 13153                           ; jumptable            263     9 (fixed)
 13154                           ;	Chosen strategy is simple_byte
 13155  073C  0848               	movf	??_interpret_message,w
 13156  073D  3AC0               	xorlw	192	; case 192
 13157  073E  1903               	skipnz
 13158  073F  2EF4               	goto	l6781
 13159  0740  3A01               	xorlw	1	; case 193
 13160  0741  1903               	skipnz
 13161  0742  2EF8               	goto	l6783
 13162  0743  3A03               	xorlw	3	; case 194
 13163  0744  1903               	skipnz
 13164  0745  2EFD               	goto	l6785
 13165  0746  3A01               	xorlw	1	; case 195
 13166  0747  1903               	skipnz
 13167  0748  2F01               	goto	l6787
 13168  0749  3A07               	xorlw	7	; case 196
 13169  074A  1903               	skipnz
 13170  074B  2F05               	goto	l6789
 13171  074C  3A01               	xorlw	1	; case 197
 13172  074D  1903               	skipnz
 13173  074E  2F0A               	goto	l6791
 13174  074F  3A03               	xorlw	3	; case 198
 13175  0750  1903               	skipnz
 13176  0751  2F0F               	goto	l6793
 13177  0752  3A01               	xorlw	1	; case 199
 13178  0753  1903               	skipnz
 13179  0754  2F13               	goto	l6795
 13180  0755  3A0F               	xorlw	15	; case 200
 13181  0756  1903               	skipnz
 13182  0757  2F18               	goto	l6797
 13183  0758  3A01               	xorlw	1	; case 201
 13184  0759  1903               	skipnz
 13185  075A  2F1D               	goto	l6799
 13186  075B  3A03               	xorlw	3	; case 202
 13187  075C  1903               	skipnz
 13188  075D  2F21               	goto	l6801
 13189  075E  3A01               	xorlw	1	; case 203
 13190  075F  1903               	skipnz
 13191  0760  2F26               	goto	l6803
 13192  0761  2F2B               	goto	l6805
 13193  0762                     l1614:	
 13194  0762  0008               	return
 13195  0763                     __end_of_interpret_message:	
 13196                           
 13197                           	psect	text7
 13198  05AC                     __ptext7:	
 13199 ;; *************** function _transfer_registers_i *****************
 13200 ;; Defined at:
 13201 ;;		line 186 in file "communications.c"
 13202 ;; Parameters:    Size  Location     Type
 13203 ;;  data            1    wreg     PTR unsigned char 
 13204 ;;		 -> NULL(0), read_msgs@aux(8), 
 13205 ;; Auto vars:     Size  Location     Type
 13206 ;;  data            1   39[BANK0 ] PTR unsigned char 
 13207 ;;		 -> NULL(0), read_msgs@aux(8), 
 13208 ;;  nr              1   38[BANK0 ] unsigned char 
 13209 ;;  i               1   37[BANK0 ] unsigned char 
 13210 ;;  wi              1   36[BANK0 ] unsigned char 
 13211 ;;  n               1   33[BANK0 ] unsigned char 
 13212 ;;  N               1   32[BANK0 ] unsigned char 
 13213 ;;  sanity          1    0        _Bool 
 13214 ;;  ri              1    0        unsigned char 
 13215 ;; Return value:  Size  Location     Type
 13216 ;;                  1    wreg      void 
 13217 ;; Registers used:
 13218 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13219 ;; Tracked objects:
 13220 ;;		On entry : 0/0
 13221 ;;		On exit  : 0/0
 13222 ;;		Unchanged: 0/0
 13223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13225 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13226 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13227 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13228 ;;Total ram usage:       13 bytes
 13229 ;; Hardware stack levels used:    1
 13230 ;; Hardware stack levels required when called:   10
 13231 ;; This function calls:
 13232 ;;		___awmod
 13233 ;;		_putch
 13234 ;;		_read_iwrt
 13235 ;;		_read_nreg
 13236 ;;		_ring_buffer_laped
 13237 ;;		_send_confirmation
 13238 ;;		_strlen
 13239 ;;		_transfer_registers
 13240 ;; This function is called by:
 13241 ;;		_interpret_message
 13242 ;; This function uses a non-reentrant model
 13243 ;;
 13244                           
 13245                           
 13246                           ;psect for function _transfer_registers_i
 13247  05AC                     _transfer_registers_i:	
 13248                           
 13249                           ;incstack = 0
 13250                           ; Regs used in _transfer_registers_i: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13251                           ;transfer_registers_i@data stored from wreg
 13252  05AC  0020               	movlb	0	; select bank0
 13253  05AD  00C7               	movwf	transfer_registers_i@data
 13254  05AE                     l6413:	
 13255                           
 13256                           ;communications.c: 187:     uint8_t N = read_nreg(), wi = read_iwrt(), nr = ring_buffer_
      +                          laped() ? N : wi, ri = iread, n, i;
 13257  05AE  3193  2380  3185   	fcall	_read_nreg
 13258  05B1  0020               	movlb	0	; select bank0
 13259  05B2  00BB               	movwf	??_transfer_registers_i
 13260  05B3  083B               	movf	??_transfer_registers_i,w
 13261  05B4  00C0               	movwf	transfer_registers_i@N
 13262  05B5  3193  2398  3185   	fcall	_read_iwrt
 13263  05B8  0020               	movlb	0	; select bank0
 13264  05B9  00BB               	movwf	??_transfer_registers_i
 13265  05BA  083B               	movf	??_transfer_registers_i,w
 13266  05BB  00C4               	movwf	transfer_registers_i@wi
 13267  05BC  3194  245C  3185   	fcall	_ring_buffer_laped
 13268  05BF  3A00               	xorlw	0
 13269  05C0  1D03               	skipz
 13270  05C1  2DC3               	goto	u5341
 13271  05C2  2DC4               	goto	u5340
 13272  05C3                     u5341:	
 13273  05C3  2DCD               	goto	l6417
 13274  05C4                     u5340:	
 13275  05C4                     l6415:	
 13276  05C4  0020               	movlb	0	; select bank0
 13277  05C5  0844               	movf	transfer_registers_i@wi,w
 13278  05C6  00BB               	movwf	??_transfer_registers_i
 13279  05C7  01BC               	clrf	??_transfer_registers_i+1
 13280  05C8  083B               	movf	??_transfer_registers_i,w
 13281  05C9  00C2               	movwf	_transfer_registers_i$2840
 13282  05CA  083C               	movf	??_transfer_registers_i+1,w
 13283  05CB  00C3               	movwf	_transfer_registers_i$2840+1
 13284  05CC  2DD5               	goto	l1691
 13285  05CD                     l6417:	
 13286  05CD  0020               	movlb	0	; select bank0
 13287  05CE  0840               	movf	transfer_registers_i@N,w
 13288  05CF  00BB               	movwf	??_transfer_registers_i
 13289  05D0  01BC               	clrf	??_transfer_registers_i+1
 13290  05D1  083B               	movf	??_transfer_registers_i,w
 13291  05D2  00C2               	movwf	_transfer_registers_i$2840
 13292  05D3  083C               	movf	??_transfer_registers_i+1,w
 13293  05D4  00C3               	movwf	_transfer_registers_i$2840+1
 13294  05D5                     l1691:	
 13295  05D5  0842               	movf	_transfer_registers_i$2840,w
 13296  05D6  00BB               	movwf	??_transfer_registers_i
 13297  05D7  083B               	movf	??_transfer_registers_i,w
 13298  05D8  00C6               	movwf	transfer_registers_i@nr
 13299  05D9                     l6419:	
 13300  05D9                     l6421:	
 13301                           
 13302                           ;communications.c: 190:     if(!data || strlen(data) != 2 || (n = data[0]) > nr || (i = 
      +                          data[1]) > nr - 1) {
 13303  05D9  0847               	movf	transfer_registers_i@data,w
 13304  05DA  1903               	btfsc	3,2
 13305  05DB  2DDD               	goto	u5351
 13306  05DC  2DDE               	goto	u5350
 13307  05DD                     u5351:	
 13308  05DD  2E0D               	goto	l6429
 13309  05DE                     u5350:	
 13310  05DE                     l6423:	
 13311  05DE  0847               	movf	transfer_registers_i@data,w
 13312  05DF  3195  2545  3185   	fcall	_strlen
 13313  05E2  3002               	movlw	2
 13314  05E3  0672               	xorwf	?_strlen,w
 13315  05E4  0473               	iorwf	?_strlen+1,w
 13316  05E5  1D03               	btfss	3,2
 13317  05E6  2DE8               	goto	u5361
 13318  05E7  2DE9               	goto	u5360
 13319  05E8                     u5361:	
 13320  05E8  2E0D               	goto	l6429
 13321  05E9                     u5360:	
 13322  05E9                     l6425:	
 13323  05E9  0020               	movlb	0	; select bank0
 13324  05EA  0847               	movf	transfer_registers_i@data,w
 13325  05EB  0086               	movwf	6
 13326  05EC  0187               	clrf	7
 13327  05ED  0801               	movf	1,w
 13328  05EE  00C1               	movwf	transfer_registers_i@n
 13329  05EF  0246               	subwf	transfer_registers_i@nr,w
 13330  05F0  1C03               	skipc
 13331  05F1  2DF3               	goto	u5371
 13332  05F2  2DF4               	goto	u5370
 13333  05F3                     u5371:	
 13334  05F3  2E0D               	goto	l6429
 13335  05F4                     u5370:	
 13336  05F4                     l6427:	
 13337  05F4  0847               	movf	transfer_registers_i@data,w
 13338  05F5  0086               	movwf	6
 13339  05F6  0187               	clrf	7
 13340  05F7  3F41               	moviw [1]fsr1
 13341  05F8  00C5               	movwf	transfer_registers_i@i
 13342  05F9  0846               	movf	transfer_registers_i@nr,w
 13343  05FA  3EFF               	addlw	255
 13344  05FB  00BB               	movwf	??_transfer_registers_i
 13345  05FC  30FF               	movlw	255
 13346  05FD  1803               	skipnc
 13347  05FE  3000               	movlw	0
 13348  05FF  00BC               	movwf	??_transfer_registers_i+1
 13349  0600  083C               	movf	??_transfer_registers_i+1,w
 13350  0601  3A80               	xorlw	128
 13351  0602  00BD               	movwf	??_transfer_registers_i+2
 13352  0603  3080               	movlw	128
 13353  0604  023D               	subwf	??_transfer_registers_i+2,w
 13354  0605  1D03               	skipz
 13355  0606  2E09               	goto	u5385
 13356  0607  0845               	movf	transfer_registers_i@i,w
 13357  0608  023B               	subwf	??_transfer_registers_i,w
 13358  0609                     u5385:	
 13359  0609  1803               	skipnc
 13360  060A  2E0C               	goto	u5381
 13361  060B  2E0D               	goto	u5380
 13362  060C                     u5381:	
 13363  060C  2E17               	goto	l6433
 13364  060D                     u5380:	
 13365  060D                     l6429:	
 13366                           
 13367                           ;communications.c: 191:         send_confirmation(0XCB, 0xFF);
 13368  060D  30FF               	movlw	255
 13369  060E  0020               	movlb	0	; select bank0
 13370  060F  00BB               	movwf	??_transfer_registers_i
 13371  0610  083B               	movf	??_transfer_registers_i,w
 13372  0611  00F8               	movwf	send_confirmation@error
 13373  0612  30CB               	movlw	203
 13374  0613  3195  2518  3185   	fcall	_send_confirmation
 13375  0616  2E47               	goto	l1695
 13376  0617                     l6433:	
 13377                           
 13378                           ;communications.c: 195:     i = (i + wi) % nr;
 13379  0617  0020               	movlb	0	; select bank0
 13380  0618  0846               	movf	transfer_registers_i@nr,w
 13381  0619  00BB               	movwf	??_transfer_registers_i
 13382  061A  01BC               	clrf	??_transfer_registers_i+1
 13383  061B  083B               	movf	??_transfer_registers_i,w
 13384  061C  00F2               	movwf	___awmod@divisor
 13385  061D  083C               	movf	??_transfer_registers_i+1,w
 13386  061E  00F3               	movwf	___awmod@divisor+1
 13387  061F  0845               	movf	transfer_registers_i@i,w
 13388  0620  0744               	addwf	transfer_registers_i@wi,w
 13389  0621  00F4               	movwf	___awmod@dividend
 13390  0622  01F5               	clrf	___awmod@dividend+1
 13391  0623  0DF5               	rlf	___awmod@dividend+1,f
 13392  0624  318D  258B  3185   	fcall	___awmod
 13393  0627  0872               	movf	?___awmod,w
 13394  0628  0020               	movlb	0	; select bank0
 13395  0629  00BD               	movwf	??_transfer_registers_i+2
 13396  062A  083D               	movf	??_transfer_registers_i+2,w
 13397  062B  00C5               	movwf	transfer_registers_i@i
 13398  062C                     l6435:	
 13399                           
 13400                           ;communications.c: 197:     if(!transfer_registers(n, i))
 13401  062C  0845               	movf	transfer_registers_i@i,w
 13402  062D  00BB               	movwf	??_transfer_registers_i
 13403  062E  083B               	movf	??_transfer_registers_i,w
 13404  062F  00AC               	movwf	transfer_registers@i
 13405  0630  0841               	movf	transfer_registers_i@n,w
 13406  0631  3184  242C  3185   	fcall	_transfer_registers
 13407  0634  3A00               	xorlw	0
 13408  0635  1D03               	skipz
 13409  0636  2E38               	goto	u5391
 13410  0637  2E39               	goto	u5390
 13411  0638                     u5391:	
 13412  0638  2E43               	goto	l6439
 13413  0639                     u5390:	
 13414  0639                     l6437:	
 13415                           
 13416                           ;communications.c: 198:         send_confirmation(0XCB, 0xFF);
 13417  0639  30FF               	movlw	255
 13418  063A  0020               	movlb	0	; select bank0
 13419  063B  00BB               	movwf	??_transfer_registers_i
 13420  063C  083B               	movf	??_transfer_registers_i,w
 13421  063D  00F8               	movwf	send_confirmation@error
 13422  063E  30CB               	movlw	203
 13423  063F  3195  2518  3185   	fcall	_send_confirmation
 13424  0642  2E47               	goto	l1695
 13425  0643                     l6439:	
 13426  0643  30FE               	movlw	254
 13427  0644  3193  2334  3185   	fcall	_putch
 13428  0647                     l1695:	
 13429  0647  0008               	return
 13430  0648                     __end_of_transfer_registers_i:	
 13431                           
 13432                           	psect	text8
 13433  0F9D                     __ptext8:	
 13434 ;; *************** function _transfer_n_registers *****************
 13435 ;; Defined at:
 13436 ;;		line 175 in file "communications.c"
 13437 ;; Parameters:    Size  Location     Type
 13438 ;;  data            1    wreg     PTR unsigned char 
 13439 ;;		 -> NULL(0), read_msgs@aux(8), 
 13440 ;; Auto vars:     Size  Location     Type
 13441 ;;  data            1   34[BANK0 ] PTR unsigned char 
 13442 ;;		 -> NULL(0), read_msgs@aux(8), 
 13443 ;;  n               1   31[BANK0 ] unsigned char 
 13444 ;;  nr              1   30[BANK0 ] unsigned char 
 13445 ;;  ri              1    0        unsigned char 
 13446 ;; Return value:  Size  Location     Type
 13447 ;;                  1    wreg      void 
 13448 ;; Registers used:
 13449 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13450 ;; Tracked objects:
 13451 ;;		On entry : 0/0
 13452 ;;		On exit  : 0/0
 13453 ;;		Unchanged: 0/0
 13454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13456 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13457 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13458 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13459 ;;Total ram usage:        8 bytes
 13460 ;; Hardware stack levels used:    1
 13461 ;; Hardware stack levels required when called:   10
 13462 ;; This function calls:
 13463 ;;		_putch
 13464 ;;		_read_iwrt
 13465 ;;		_read_nreg
 13466 ;;		_ring_buffer_laped
 13467 ;;		_send_confirmation
 13468 ;;		_strlen
 13469 ;;		_transfer_registers
 13470 ;; This function is called by:
 13471 ;;		_interpret_message
 13472 ;; This function uses a non-reentrant model
 13473 ;;
 13474                           
 13475                           
 13476                           ;psect for function _transfer_n_registers
 13477  0F9D                     _transfer_n_registers:	
 13478                           
 13479                           ;incstack = 0
 13480                           ; Regs used in _transfer_n_registers: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13481                           ;transfer_n_registers@data stored from wreg
 13482  0F9D  0020               	movlb	0	; select bank0
 13483  0F9E  00C2               	movwf	transfer_n_registers@data
 13484  0F9F                     l6387:	
 13485                           
 13486                           ;communications.c: 176:     uint8_t nr = ring_buffer_laped() ? read_nreg() : read_iwrt()
      +                          , ri = iread, n;
 13487  0F9F  3194  245C  318F   	fcall	_ring_buffer_laped
 13488  0FA2  3A00               	xorlw	0
 13489  0FA3  1D03               	skipz
 13490  0FA4  2FA6               	goto	u5291
 13491  0FA5  2FA7               	goto	u5290
 13492  0FA6                     u5291:	
 13493  0FA6  2FB2               	goto	l6391
 13494  0FA7                     u5290:	
 13495  0FA7                     l6389:	
 13496  0FA7  3193  2398  318F   	fcall	_read_iwrt
 13497  0FAA  0020               	movlb	0	; select bank0
 13498  0FAB  00BB               	movwf	??_transfer_n_registers
 13499  0FAC  01BC               	clrf	??_transfer_n_registers+1
 13500  0FAD  083B               	movf	??_transfer_n_registers,w
 13501  0FAE  00C0               	movwf	_transfer_n_registers$2831
 13502  0FAF  083C               	movf	??_transfer_n_registers+1,w
 13503  0FB0  00C1               	movwf	_transfer_n_registers$2831+1
 13504  0FB1  2FBC               	goto	l6393
 13505  0FB2                     l6391:	
 13506  0FB2  3193  2380  318F   	fcall	_read_nreg
 13507  0FB5  0020               	movlb	0	; select bank0
 13508  0FB6  00BB               	movwf	??_transfer_n_registers
 13509  0FB7  01BC               	clrf	??_transfer_n_registers+1
 13510  0FB8  083B               	movf	??_transfer_n_registers,w
 13511  0FB9  00C0               	movwf	_transfer_n_registers$2831
 13512  0FBA  083C               	movf	??_transfer_n_registers+1,w
 13513  0FBB  00C1               	movwf	_transfer_n_registers$2831+1
 13514  0FBC                     l6393:	
 13515  0FBC  0840               	movf	_transfer_n_registers$2831,w
 13516  0FBD  00BB               	movwf	??_transfer_n_registers
 13517  0FBE  083B               	movf	??_transfer_n_registers,w
 13518  0FBF  00BE               	movwf	transfer_n_registers@nr
 13519  0FC0                     l6395:	
 13520  0FC0                     l6397:	
 13521                           
 13522                           ;communications.c: 177:     if(!data || strlen(data) != 1 || (n = data[0]) > nr) {
 13523  0FC0  0842               	movf	transfer_n_registers@data,w
 13524  0FC1  1903               	btfsc	3,2
 13525  0FC2  2FC4               	goto	u5301
 13526  0FC3  2FC5               	goto	u5300
 13527  0FC4                     u5301:	
 13528  0FC4  2FDA               	goto	l6403
 13529  0FC5                     u5300:	
 13530  0FC5                     l6399:	
 13531  0FC5  0842               	movf	transfer_n_registers@data,w
 13532  0FC6  3195  2545  318F   	fcall	_strlen
 13533  0FC9  0372               	decf	?_strlen,w
 13534  0FCA  0473               	iorwf	?_strlen+1,w
 13535  0FCB  1D03               	btfss	3,2
 13536  0FCC  2FCE               	goto	u5311
 13537  0FCD  2FCF               	goto	u5310
 13538  0FCE                     u5311:	
 13539  0FCE  2FDA               	goto	l6403
 13540  0FCF                     u5310:	
 13541  0FCF                     l6401:	
 13542  0FCF  0020               	movlb	0	; select bank0
 13543  0FD0  0842               	movf	transfer_n_registers@data,w
 13544  0FD1  0086               	movwf	6
 13545  0FD2  0187               	clrf	7
 13546  0FD3  0801               	movf	1,w
 13547  0FD4  00BF               	movwf	transfer_n_registers@n
 13548  0FD5  023E               	subwf	transfer_n_registers@nr,w
 13549  0FD6  1803               	skipnc
 13550  0FD7  2FD9               	goto	u5321
 13551  0FD8  2FDA               	goto	u5320
 13552  0FD9                     u5321:	
 13553  0FD9  2FE4               	goto	l6407
 13554  0FDA                     u5320:	
 13555  0FDA                     l6403:	
 13556                           
 13557                           ;communications.c: 178:         send_confirmation(0XCA, 0xFF);
 13558  0FDA  30FF               	movlw	255
 13559  0FDB  0020               	movlb	0	; select bank0
 13560  0FDC  00BB               	movwf	??_transfer_n_registers
 13561  0FDD  083B               	movf	??_transfer_n_registers,w
 13562  0FDE  00F8               	movwf	send_confirmation@error
 13563  0FDF  30CA               	movlw	202
 13564  0FE0  3195  2518  318F   	fcall	_send_confirmation
 13565  0FE3  2FFF               	goto	l1683
 13566  0FE4                     l6407:	
 13567                           
 13568                           ;communications.c: 181:     if(!transfer_registers(n, iread))
 13569  0FE4  087A               	movf	_iread,w	;volatile
 13570  0FE5  00BB               	movwf	??_transfer_n_registers
 13571  0FE6  083B               	movf	??_transfer_n_registers,w
 13572  0FE7  00AC               	movwf	transfer_registers@i
 13573  0FE8  083F               	movf	transfer_n_registers@n,w
 13574  0FE9  3184  242C  318F   	fcall	_transfer_registers
 13575  0FEC  3A00               	xorlw	0
 13576  0FED  1D03               	skipz
 13577  0FEE  2FF0               	goto	u5331
 13578  0FEF  2FF1               	goto	u5330
 13579  0FF0                     u5331:	
 13580  0FF0  2FFB               	goto	l6411
 13581  0FF1                     u5330:	
 13582  0FF1                     l6409:	
 13583                           
 13584                           ;communications.c: 182:         send_confirmation(0XCA, 0xFF);
 13585  0FF1  30FF               	movlw	255
 13586  0FF2  0020               	movlb	0	; select bank0
 13587  0FF3  00BB               	movwf	??_transfer_n_registers
 13588  0FF4  083B               	movf	??_transfer_n_registers,w
 13589  0FF5  00F8               	movwf	send_confirmation@error
 13590  0FF6  30CA               	movlw	202
 13591  0FF7  3195  2518  318F   	fcall	_send_confirmation
 13592  0FFA  2FFF               	goto	l1683
 13593  0FFB                     l6411:	
 13594  0FFB  30FE               	movlw	254
 13595  0FFC  3193  2334  318F   	fcall	_putch
 13596  0FFF                     l1683:	
 13597  0FFF  0008               	return
 13598  1000                     __end_of_transfer_n_registers:	
 13599                           
 13600                           	psect	text9
 13601  042C                     __ptext9:	
 13602 ;; *************** function _transfer_registers *****************
 13603 ;; Defined at:
 13604 ;;		line 203 in file "communications.c"
 13605 ;; Parameters:    Size  Location     Type
 13606 ;;  n               1    wreg     unsigned char 
 13607 ;;  i               1   12[BANK0 ] unsigned char 
 13608 ;; Auto vars:     Size  Location     Type
 13609 ;;  n               1   24[BANK0 ] unsigned char 
 13610 ;;  c               2   22[BANK0 ] int 
 13611 ;;  wi              1   26[BANK0 ] unsigned char 
 13612 ;;  N               1   25[BANK0 ] unsigned char 
 13613 ;;  nr              1   19[BANK0 ] unsigned char 
 13614 ;; Return value:  Size  Location     Type
 13615 ;;                  1    wreg      _Bool 
 13616 ;; Registers used:
 13617 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13618 ;; Tracked objects:
 13619 ;;		On entry : 0/0
 13620 ;;		On exit  : 0/0
 13621 ;;		Unchanged: 0/0
 13622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13623 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13624 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13625 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13626 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13627 ;;Total ram usage:       15 bytes
 13628 ;; Hardware stack levels used:    1
 13629 ;; Hardware stack levels required when called:    9
 13630 ;; This function calls:
 13631 ;;		___awmod
 13632 ;;		_read_iwrt
 13633 ;;		_read_nreg
 13634 ;;		_ring_buffer_laped
 13635 ;;		_send_register
 13636 ;; This function is called by:
 13637 ;;		_transfer_n_registers
 13638 ;;		_transfer_registers_i
 13639 ;; This function uses a non-reentrant model
 13640 ;;
 13641                           
 13642                           
 13643                           ;psect for function _transfer_registers
 13644  042C                     _transfer_registers:	
 13645                           
 13646                           ;incstack = 0
 13647                           ; Regs used in _transfer_registers: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13648                           ;transfer_registers@n stored from wreg
 13649  042C  0020               	movlb	0	; select bank0
 13650  042D  00B8               	movwf	transfer_registers@n
 13651  042E                     l6087:	
 13652                           
 13653                           ;communications.c: 204:     uint8_t N = read_nreg(), wi = read_iwrt(), nr = ring_buffer_
      +                          laped() ? N : wi;
 13654  042E  3193  2380  3184   	fcall	_read_nreg
 13655  0431  0020               	movlb	0	; select bank0
 13656  0432  00AD               	movwf	??_transfer_registers
 13657  0433  082D               	movf	??_transfer_registers,w
 13658  0434  00B9               	movwf	transfer_registers@N
 13659  0435  3193  2398  3184   	fcall	_read_iwrt
 13660  0438  0020               	movlb	0	; select bank0
 13661  0439  00AD               	movwf	??_transfer_registers
 13662  043A  082D               	movf	??_transfer_registers,w
 13663  043B  00BA               	movwf	transfer_registers@wi
 13664  043C  3194  245C  3184   	fcall	_ring_buffer_laped
 13665  043F  3A00               	xorlw	0
 13666  0440  1D03               	skipz
 13667  0441  2C43               	goto	u4791
 13668  0442  2C44               	goto	u4790
 13669  0443                     u4791:	
 13670  0443  2C4D               	goto	l6091
 13671  0444                     u4790:	
 13672  0444                     l6089:	
 13673  0444  0020               	movlb	0	; select bank0
 13674  0445  083A               	movf	transfer_registers@wi,w
 13675  0446  00AD               	movwf	??_transfer_registers
 13676  0447  01AE               	clrf	??_transfer_registers+1
 13677  0448  082D               	movf	??_transfer_registers,w
 13678  0449  00B4               	movwf	_transfer_registers$2851
 13679  044A  082E               	movf	??_transfer_registers+1,w
 13680  044B  00B5               	movwf	_transfer_registers$2851+1
 13681  044C  2C55               	goto	l1703
 13682  044D                     l6091:	
 13683  044D  0020               	movlb	0	; select bank0
 13684  044E  0839               	movf	transfer_registers@N,w
 13685  044F  00AD               	movwf	??_transfer_registers
 13686  0450  01AE               	clrf	??_transfer_registers+1
 13687  0451  082D               	movf	??_transfer_registers,w
 13688  0452  00B4               	movwf	_transfer_registers$2851
 13689  0453  082E               	movf	??_transfer_registers+1,w
 13690  0454  00B5               	movwf	_transfer_registers$2851+1
 13691  0455                     l1703:	
 13692  0455  0834               	movf	_transfer_registers$2851,w
 13693  0456  00AD               	movwf	??_transfer_registers
 13694  0457  082D               	movf	??_transfer_registers,w
 13695  0458  00B3               	movwf	transfer_registers@nr
 13696                           
 13697                           ;communications.c: 206:     if(i < wi) {
 13698  0459  083A               	movf	transfer_registers@wi,w
 13699  045A  022C               	subwf	transfer_registers@i,w
 13700  045B  1803               	skipnc
 13701  045C  2C5E               	goto	u4801
 13702  045D  2C5F               	goto	u4800
 13703  045E                     u4801:	
 13704  045E  2C79               	goto	l6099
 13705  045F                     u4800:	
 13706  045F                     l6093:	
 13707                           
 13708                           ;communications.c: 207:         if(i + n - 1 >= wi) return 0;
 13709  045F  082C               	movf	transfer_registers@i,w
 13710  0460  0738               	addwf	transfer_registers@n,w
 13711  0461  00AD               	movwf	??_transfer_registers
 13712  0462  01AE               	clrf	??_transfer_registers+1
 13713  0463  0DAE               	rlf	??_transfer_registers+1,f
 13714  0464  082D               	movf	??_transfer_registers,w
 13715  0465  3EFF               	addlw	255
 13716  0466  00AF               	movwf	??_transfer_registers+2
 13717  0467  30FF               	movlw	255
 13718  0468  3D2E               	addwfc	??_transfer_registers+1,w
 13719  0469  00B0               	movwf	??_transfer_registers+3
 13720  046A  0830               	movf	??_transfer_registers+3,w
 13721  046B  3A80               	xorlw	128
 13722  046C  00B1               	movwf	??_transfer_registers+4
 13723  046D  3080               	movlw	128
 13724  046E  0231               	subwf	??_transfer_registers+4,w
 13725  046F  1D03               	skipz
 13726  0470  2C73               	goto	u4815
 13727  0471  083A               	movf	transfer_registers@wi,w
 13728  0472  022F               	subwf	??_transfer_registers+2,w
 13729  0473                     u4815:	
 13730  0473  1C03               	skipc
 13731  0474  2C76               	goto	u4811
 13732  0475  2C77               	goto	u4810
 13733  0476                     u4811:	
 13734  0476  2CA8               	goto	l6107
 13735  0477                     u4810:	
 13736  0477                     l6095:	
 13737  0477  3000               	movlw	0
 13738  0478  2CF6               	goto	l1706
 13739  0479                     l6099:	
 13740  0479  082C               	movf	transfer_registers@i,w
 13741  047A  0738               	addwf	transfer_registers@n,w
 13742  047B  00AD               	movwf	??_transfer_registers
 13743  047C  01AE               	clrf	??_transfer_registers+1
 13744  047D  0DAE               	rlf	??_transfer_registers+1,f
 13745  047E  082E               	movf	??_transfer_registers+1,w
 13746  047F  3A80               	xorlw	128
 13747  0480  3C80               	sublw	128
 13748  0481  1D03               	skipz
 13749  0482  2C85               	goto	u4825
 13750  0483  082D               	movf	??_transfer_registers,w
 13751  0484  0239               	subwf	transfer_registers@N,w
 13752  0485                     u4825:	
 13753  0485  1803               	skipnc
 13754  0486  2C88               	goto	u4821
 13755  0487  2C89               	goto	u4820
 13756  0488                     u4821:	
 13757  0488  2CA8               	goto	l6107
 13758  0489                     u4820:	
 13759  0489                     l6101:	
 13760  0489  0020               	movlb	0	; select bank0
 13761  048A  082C               	movf	transfer_registers@i,w
 13762  048B  0738               	addwf	transfer_registers@n,w
 13763  048C  00AD               	movwf	??_transfer_registers
 13764  048D  01AE               	clrf	??_transfer_registers+1
 13765  048E  0DAE               	rlf	??_transfer_registers+1,f
 13766  048F  082E               	movf	??_transfer_registers+1,w
 13767  0490  00B0               	movwf	??_transfer_registers+3
 13768  0491  0839               	movf	transfer_registers@N,w
 13769  0492  022D               	subwf	??_transfer_registers,w
 13770  0493  00AF               	movwf	??_transfer_registers+2
 13771  0494  1C03               	skipc
 13772  0495  03B0               	decf	??_transfer_registers+3,f
 13773  0496  082F               	movf	??_transfer_registers+2,w
 13774  0497  3EFF               	addlw	255
 13775  0498  00B1               	movwf	??_transfer_registers+4
 13776  0499  30FF               	movlw	255
 13777  049A  3D30               	addwfc	??_transfer_registers+3,w
 13778  049B  00B2               	movwf	??_transfer_registers+5
 13779  049C  0832               	movf	??_transfer_registers+5,w
 13780  049D  3A80               	xorlw	128
 13781  049E  3C80               	sublw	128
 13782  049F  1D03               	skipz
 13783  04A0  2CA3               	goto	u4835
 13784  04A1  0831               	movf	??_transfer_registers+4,w
 13785  04A2  023A               	subwf	transfer_registers@wi,w
 13786  04A3                     u4835:	
 13787  04A3  1803               	skipnc
 13788  04A4  2CA6               	goto	u4831
 13789  04A5  2CA7               	goto	u4830
 13790  04A6                     u4831:	
 13791  04A6  2CA8               	goto	l6107
 13792  04A7                     u4830:	
 13793  04A7  2C77               	goto	l6095
 13794  04A8                     l6107:	
 13795                           
 13796                           ;communications.c: 210:     for(int c = 0; c < n; i = (i + 1) % nr, ++c){
 13797  04A8  0020               	movlb	0	; select bank0
 13798  04A9  01B6               	clrf	transfer_registers@c
 13799  04AA  01B7               	clrf	transfer_registers@c+1
 13800  04AB  2CE8               	goto	l6117
 13801  04AC                     l6109:	
 13802                           
 13803                           ;communications.c: 211:         send_register(i);
 13804  04AC  0020               	movlb	0	; select bank0
 13805  04AD  082C               	movf	transfer_registers@i,w
 13806  04AE  3196  26E6  3184   	fcall	_send_register
 13807  04B1                     l6111:	
 13808                           
 13809                           ;communications.c: 212:         if(i == iread) iread = (iread + 1) % N;
 13810  04B1  0020               	movlb	0	; select bank0
 13811  04B2  082C               	movf	transfer_registers@i,w
 13812  04B3  067A               	xorwf	_iread,w	;volatile
 13813  04B4  1D03               	skipz
 13814  04B5  2CB7               	goto	u4841
 13815  04B6  2CB8               	goto	u4840
 13816  04B7                     u4841:	
 13817  04B7  2CCE               	goto	l1711
 13818  04B8                     u4840:	
 13819  04B8                     l6113:	
 13820  04B8  0839               	movf	transfer_registers@N,w
 13821  04B9  00AD               	movwf	??_transfer_registers
 13822  04BA  01AE               	clrf	??_transfer_registers+1
 13823  04BB  082D               	movf	??_transfer_registers,w
 13824  04BC  00F2               	movwf	___awmod@divisor
 13825  04BD  082E               	movf	??_transfer_registers+1,w
 13826  04BE  00F3               	movwf	___awmod@divisor+1
 13827  04BF  087A               	movf	_iread,w	;volatile
 13828  04C0  3E01               	addlw	1
 13829  04C1  00F4               	movwf	___awmod@dividend
 13830  04C2  3000               	movlw	0
 13831  04C3  1803               	skipnc
 13832  04C4  3001               	movlw	1
 13833  04C5  00F5               	movwf	___awmod@dividend+1
 13834  04C6  318D  258B  3184   	fcall	___awmod
 13835  04C9  0872               	movf	?___awmod,w
 13836  04CA  0020               	movlb	0	; select bank0
 13837  04CB  00AF               	movwf	??_transfer_registers+2
 13838  04CC  082F               	movf	??_transfer_registers+2,w
 13839  04CD  00FA               	movwf	_iread	;volatile
 13840  04CE                     l1711:	
 13841                           
 13842                           ;communications.c: 213:     }
 13843  04CE  0833               	movf	transfer_registers@nr,w
 13844  04CF  00AD               	movwf	??_transfer_registers
 13845  04D0  01AE               	clrf	??_transfer_registers+1
 13846  04D1  082D               	movf	??_transfer_registers,w
 13847  04D2  00F2               	movwf	___awmod@divisor
 13848  04D3  082E               	movf	??_transfer_registers+1,w
 13849  04D4  00F3               	movwf	___awmod@divisor+1
 13850  04D5  082C               	movf	transfer_registers@i,w
 13851  04D6  3E01               	addlw	1
 13852  04D7  00F4               	movwf	___awmod@dividend
 13853  04D8  3000               	movlw	0
 13854  04D9  1803               	skipnc
 13855  04DA  3001               	movlw	1
 13856  04DB  00F5               	movwf	___awmod@dividend+1
 13857  04DC  318D  258B  3184   	fcall	___awmod
 13858  04DF  0872               	movf	?___awmod,w
 13859  04E0  0020               	movlb	0	; select bank0
 13860  04E1  00AF               	movwf	??_transfer_registers+2
 13861  04E2  082F               	movf	??_transfer_registers+2,w
 13862  04E3  00AC               	movwf	transfer_registers@i
 13863  04E4                     l6115:	
 13864  04E4  3001               	movlw	1
 13865  04E5  07B6               	addwf	transfer_registers@c,f
 13866  04E6  3000               	movlw	0
 13867  04E7  3DB7               	addwfc	transfer_registers@c+1,f
 13868  04E8                     l6117:	
 13869  04E8  0837               	movf	transfer_registers@c+1,w
 13870  04E9  3A80               	xorlw	128
 13871  04EA  00AD               	movwf	??_transfer_registers
 13872  04EB  3080               	movlw	128
 13873  04EC  022D               	subwf	??_transfer_registers,w
 13874  04ED  1D03               	skipz
 13875  04EE  2CF1               	goto	u4855
 13876  04EF  0838               	movf	transfer_registers@n,w
 13877  04F0  0236               	subwf	transfer_registers@c,w
 13878  04F1                     u4855:	
 13879  04F1  1C03               	skipc
 13880  04F2  2CF4               	goto	u4851
 13881  04F3  2CF5               	goto	u4850
 13882  04F4                     u4851:	
 13883  04F4  2CAC               	goto	l6109
 13884  04F5                     u4850:	
 13885  04F5                     l6119:	
 13886                           
 13887                           ;communications.c: 214:     return 1;
 13888  04F5  3001               	movlw	1
 13889  04F6                     l1706:	
 13890  04F6  0008               	return
 13891  04F7                     __end_of_transfer_registers:	
 13892                           
 13893                           	psect	text10
 13894  16E6                     __ptext10:	
 13895 ;; *************** function _send_register *****************
 13896 ;; Defined at:
 13897 ;;		line 236 in file "communications.c"
 13898 ;; Parameters:    Size  Location     Type
 13899 ;;  i               1    wreg     unsigned char 
 13900 ;; Auto vars:     Size  Location     Type
 13901 ;;  i               1    9[BANK0 ] unsigned char 
 13902 ;;  k               2   10[BANK0 ] int 
 13903 ;; Return value:  Size  Location     Type
 13904 ;;                  1    wreg      void 
 13905 ;; Registers used:
 13906 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13907 ;; Tracked objects:
 13908 ;;		On entry : 0/0
 13909 ;;		On exit  : 0/0
 13910 ;;		Unchanged: 0/0
 13911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13913 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13914 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13915 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13916 ;;Total ram usage:        4 bytes
 13917 ;; Hardware stack levels used:    1
 13918 ;; Hardware stack levels required when called:    8
 13919 ;; This function calls:
 13920 ;;		_putch
 13921 ;;		_read_buffer
 13922 ;; This function is called by:
 13923 ;;		_transfer_registers
 13924 ;; This function uses a non-reentrant model
 13925 ;;
 13926                           
 13927                           
 13928                           ;psect for function _send_register
 13929  16E6                     _send_register:	
 13930                           
 13931                           ;incstack = 0
 13932                           ; Regs used in _send_register: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13933                           ;send_register@i stored from wreg
 13934  16E6  0020               	movlb	0	; select bank0
 13935  16E7  00A9               	movwf	send_register@i
 13936  16E8                     l5999:	
 13937                           
 13938                           ;communications.c: 237:     for(int k = 0; k < 5; ++k)
 13939  16E8  01AA               	clrf	send_register@k
 13940  16E9  01AB               	clrf	send_register@k+1
 13941  16EA                     l6005:	
 13942                           
 13943                           ;communications.c: 238:         putch(read_buffer(i, k));
 13944  16EA  0020               	movlb	0	; select bank0
 13945  16EB  082A               	movf	send_register@k,w
 13946  16EC  00A8               	movwf	??_send_register
 13947  16ED  0828               	movf	??_send_register,w
 13948  16EE  00A0               	movwf	read_buffer@j
 13949  16EF  0829               	movf	send_register@i,w
 13950  16F0  3197  272D  3196   	fcall	_read_buffer
 13951  16F3  3193  2334  3196   	fcall	_putch
 13952  16F6                     l6007:	
 13953  16F6  3001               	movlw	1
 13954  16F7  0020               	movlb	0	; select bank0
 13955  16F8  07AA               	addwf	send_register@k,f
 13956  16F9  3000               	movlw	0
 13957  16FA  3DAB               	addwfc	send_register@k+1,f
 13958  16FB                     l6009:	
 13959  16FB  082B               	movf	send_register@k+1,w
 13960  16FC  3A80               	xorlw	128
 13961  16FD  00A8               	movwf	??_send_register
 13962  16FE  3080               	movlw	128
 13963  16FF  0228               	subwf	??_send_register,w
 13964  1700  1D03               	skipz
 13965  1701  2F04               	goto	u4665
 13966  1702  3005               	movlw	5
 13967  1703  022A               	subwf	send_register@k,w
 13968  1704                     u4665:	
 13969  1704  1C03               	skipc
 13970  1705  2F07               	goto	u4661
 13971  1706  2F08               	goto	u4660
 13972  1707                     u4661:	
 13973  1707  2EEA               	goto	l6005
 13974  1708                     u4660:	
 13975  1708                     l1737:	
 13976  1708  0008               	return
 13977  1709                     __end_of_send_register:	
 13978                           
 13979                           	psect	text11
 13980  172D                     __ptext11:	
 13981 ;; *************** function _read_buffer *****************
 13982 ;; Defined at:
 13983 ;;		line 117 in file "eeprom.c"
 13984 ;; Parameters:    Size  Location     Type
 13985 ;;  i               1    wreg     unsigned char 
 13986 ;;  j               1    0[BANK0 ] unsigned char 
 13987 ;; Auto vars:     Size  Location     Type
 13988 ;;  i               1    7[BANK0 ] unsigned char 
 13989 ;; Return value:  Size  Location     Type
 13990 ;;                  1    wreg      unsigned char 
 13991 ;; Registers used:
 13992 ;;		wreg, status,2, status,0, pclath, cstack
 13993 ;; Tracked objects:
 13994 ;;		On entry : 0/0
 13995 ;;		On exit  : 0/0
 13996 ;;		Unchanged: 0/0
 13997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13998 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13999 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14000 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14001 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14002 ;;Total ram usage:        8 bytes
 14003 ;; Hardware stack levels used:    1
 14004 ;; Hardware stack levels required when called:    7
 14005 ;; This function calls:
 14006 ;;		_DATAEE_ReadByte
 14007 ;;		___wmul
 14008 ;; This function is called by:
 14009 ;;		_send_register
 14010 ;; This function uses a non-reentrant model
 14011 ;;
 14012                           
 14013                           
 14014                           ;psect for function _read_buffer
 14015  172D                     _read_buffer:	
 14016                           
 14017                           ;incstack = 0
 14018                           ; Regs used in _read_buffer: [wreg+status,2+status,0+pclath+cstack]
 14019                           ;read_buffer@i stored from wreg
 14020  172D  0020               	movlb	0	; select bank0
 14021  172E  00A7               	movwf	read_buffer@i
 14022  172F                     l5931:	
 14023  172F  0820               	movf	read_buffer@j,w
 14024  1730  00A1               	movwf	??_read_buffer
 14025  1731  01A2               	clrf	??_read_buffer+1
 14026  1732  0827               	movf	read_buffer@i,w
 14027  1733  00A3               	movwf	??_read_buffer+2
 14028  1734  01A4               	clrf	??_read_buffer+3
 14029  1735  0823               	movf	??_read_buffer+2,w
 14030  1736  00F4               	movwf	___wmul@multiplier
 14031  1737  0824               	movf	??_read_buffer+3,w
 14032  1738  00F5               	movwf	___wmul@multiplier+1
 14033  1739  3005               	movlw	5
 14034  173A  00F6               	movwf	___wmul@multiplicand
 14035  173B  3000               	movlw	0
 14036  173C  00F7               	movwf	___wmul@multiplicand+1
 14037  173D  3196  2604  3197   	fcall	___wmul
 14038  1740  0020               	movlb	0	; select bank0
 14039  1741  0821               	movf	??_read_buffer,w
 14040  1742  0774               	addwf	?___wmul,w
 14041  1743  00A5               	movwf	??_read_buffer+4
 14042  1744  0822               	movf	??_read_buffer+1,w
 14043  1745  3D75               	addwfc	?___wmul+1,w
 14044  1746  00A6               	movwf	??_read_buffer+5
 14045  1747  0825               	movf	??_read_buffer+4,w
 14046  1748  3E0B               	addlw	11
 14047  1749  00F2               	movwf	DATAEE_ReadByte@bAdd
 14048  174A  30F0               	movlw	240
 14049  174B  3D26               	addwfc	??_read_buffer+5,w
 14050  174C  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 14051  174D  3193  23D3  3197   	fcall	_DATAEE_ReadByte
 14052  1750                     l1426:	
 14053  1750  0008               	return
 14054  1751                     __end_of_read_buffer:	
 14055                           
 14056                           	psect	text12
 14057  1334                     __ptext12:	
 14058 ;; *************** function _putch *****************
 14059 ;; Defined at:
 14060 ;;		line 201 in file "mcc_generated_files/eusart.c"
 14061 ;; Parameters:    Size  Location     Type
 14062 ;;  txData          1    wreg     unsigned char 
 14063 ;; Auto vars:     Size  Location     Type
 14064 ;;  txData          1    4[COMMON] unsigned char 
 14065 ;; Return value:  Size  Location     Type
 14066 ;;                  1    wreg      void 
 14067 ;; Registers used:
 14068 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14069 ;; Tracked objects:
 14070 ;;		On entry : 0/0
 14071 ;;		On exit  : 0/0
 14072 ;;		Unchanged: 0/0
 14073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14077 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14078 ;;Total ram usage:        1 bytes
 14079 ;; Hardware stack levels used:    1
 14080 ;; Hardware stack levels required when called:    7
 14081 ;; This function calls:
 14082 ;;		_EUSART_Write
 14083 ;; This function is called by:
 14084 ;;		_transfer_n_registers
 14085 ;;		_transfer_registers_i
 14086 ;;		_send_register
 14087 ;; This function uses a non-reentrant model
 14088 ;;
 14089                           
 14090                           
 14091                           ;psect for function _putch
 14092  1334                     _putch:	
 14093                           
 14094                           ;incstack = 0
 14095                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14096                           ;putch@txData stored from wreg
 14097  1334  00F4               	movwf	putch@txData
 14098  1335                     l5929:	
 14099                           
 14100                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
 14101  1335  0874               	movf	putch@txData,w
 14102  1336  3197  277B  3193   	fcall	_EUSART_Write
 14103  1339                     l820:	
 14104  1339  0008               	return
 14105  133A                     __end_of_putch:	
 14106                           
 14107                           	psect	text13
 14108  08F8                     __ptext13:	
 14109 ;; *************** function _switch_alarm *****************
 14110 ;; Defined at:
 14111 ;;		line 157 in file "communications.c"
 14112 ;; Parameters:    Size  Location     Type
 14113 ;;  data            1    wreg     PTR unsigned char 
 14114 ;;		 -> NULL(0), read_msgs@aux(8), 
 14115 ;; Auto vars:     Size  Location     Type
 14116 ;;  data            1    9[BANK0 ] PTR unsigned char 
 14117 ;;		 -> NULL(0), read_msgs@aux(8), 
 14118 ;; Return value:  Size  Location     Type
 14119 ;;                  1    wreg      void 
 14120 ;; Registers used:
 14121 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14122 ;; Tracked objects:
 14123 ;;		On entry : 0/0
 14124 ;;		On exit  : 0/0
 14125 ;;		Unchanged: 0/0
 14126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14128 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14129 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14130 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14131 ;;Total ram usage:        2 bytes
 14132 ;; Hardware stack levels used:    1
 14133 ;; Hardware stack levels required when called:    9
 14134 ;; This function calls:
 14135 ;;		_send_confirmation
 14136 ;;		_strlen
 14137 ;;		_write_alaf
 14138 ;; This function is called by:
 14139 ;;		_interpret_message
 14140 ;; This function uses a non-reentrant model
 14141 ;;
 14142                           
 14143                           
 14144                           ;psect for function _switch_alarm
 14145  08F8                     _switch_alarm:	
 14146                           
 14147                           ;incstack = 0
 14148                           ; Regs used in _switch_alarm: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14149                           ;switch_alarm@data stored from wreg
 14150  08F8  0020               	movlb	0	; select bank0
 14151  08F9  00A9               	movwf	switch_alarm@data
 14152  08FA                     l6349:	
 14153                           
 14154                           ;communications.c: 158:     if(strlen(data) != 1 || data[0] > 1) {
 14155  08FA  0829               	movf	switch_alarm@data,w
 14156  08FB  3195  2545  3188   	fcall	_strlen
 14157  08FE  0372               	decf	?_strlen,w
 14158  08FF  0473               	iorwf	?_strlen+1,w
 14159  0900  1D03               	btfss	3,2
 14160  0901  2903               	goto	u5251
 14161  0902  2904               	goto	u5250
 14162  0903                     u5251:	
 14163  0903  290E               	goto	l6353
 14164  0904                     u5250:	
 14165  0904                     l6351:	
 14166  0904  0020               	movlb	0	; select bank0
 14167  0905  0829               	movf	switch_alarm@data,w
 14168  0906  0086               	movwf	6
 14169  0907  0187               	clrf	7
 14170  0908  3002               	movlw	2
 14171  0909  0201               	subwf	1,w
 14172  090A  1C03               	skipc
 14173  090B  290D               	goto	u5261
 14174  090C  290E               	goto	u5260
 14175  090D                     u5261:	
 14176  090D  2919               	goto	l6359
 14177  090E                     u5260:	
 14178  090E                     l6353:	
 14179                           
 14180                           ;communications.c: 159:         send_confirmation(0XC8, 0xFF);
 14181  090E  30FF               	movlw	255
 14182  090F  0020               	movlb	0	; select bank0
 14183  0910  00A8               	movwf	??_switch_alarm
 14184  0911  0828               	movf	??_switch_alarm,w
 14185  0912  00F8               	movwf	send_confirmation@error
 14186  0913  30C8               	movlw	200
 14187  0914  3195  2518  3188   	fcall	_send_confirmation
 14188  0917                     l6355:	
 14189                           
 14190                           ;communications.c: 160:         __nop();
 14191  0917  0000               	nop
 14192  0918  2929               	goto	l1664
 14193  0919                     l6359:	
 14194                           
 14195                           ;communications.c: 163:     alaf = data[0];
 14196  0919  0829               	movf	switch_alarm@data,w
 14197  091A  0086               	movwf	6
 14198  091B  0187               	clrf	7
 14199  091C  0801               	movf	1,w
 14200  091D  00A8               	movwf	??_switch_alarm
 14201  091E  0828               	movf	??_switch_alarm,w
 14202  091F  00EB               	movwf	_alaf
 14203  0920                     l6361:	
 14204                           
 14205                           ;communications.c: 164:     write_alaf(alaf);
 14206  0920  086B               	movf	_alaf,w
 14207  0921  3197  27D2  3188   	fcall	_write_alaf
 14208  0924                     l6363:	
 14209                           
 14210                           ;communications.c: 165:     send_confirmation(0XC8, 0);
 14211  0924  01F8               	clrf	send_confirmation@error
 14212  0925  30C8               	movlw	200
 14213  0926  3195  2518  3188   	fcall	_send_confirmation
 14214  0929                     l1664:	
 14215  0929  0008               	return
 14216  092A                     __end_of_switch_alarm:	
 14217                           
 14218                           	psect	text14
 14219  0763                     __ptext14:	
 14220 ;; *************** function _set_clock *****************
 14221 ;; Defined at:
 14222 ;;		line 100 in file "communications.c"
 14223 ;; Parameters:    Size  Location     Type
 14224 ;;  data            1    wreg     PTR unsigned char 
 14225 ;;		 -> NULL(0), read_msgs@aux(8), 
 14226 ;; Auto vars:     Size  Location     Type
 14227 ;;  data            1   16[BANK0 ] PTR unsigned char 
 14228 ;;		 -> NULL(0), read_msgs@aux(8), 
 14229 ;;  seconds         1   15[BANK0 ] unsigned char 
 14230 ;;  minutes         1   14[BANK0 ] unsigned char 
 14231 ;;  hours           1   13[BANK0 ] unsigned char 
 14232 ;; Return value:  Size  Location     Type
 14233 ;;                  1    wreg      void 
 14234 ;; Registers used:
 14235 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14236 ;; Tracked objects:
 14237 ;;		On entry : 0/0
 14238 ;;		On exit  : 0/0
 14239 ;;		Unchanged: 0/0
 14240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14242 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14243 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14244 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14245 ;;Total ram usage:        5 bytes
 14246 ;; Hardware stack levels used:    1
 14247 ;; Hardware stack levels required when called:    9
 14248 ;; This function calls:
 14249 ;;		_send_confirmation
 14250 ;;		_strlen
 14251 ;;		_update_clk
 14252 ;; This function is called by:
 14253 ;;		_interpret_message
 14254 ;; This function uses a non-reentrant model
 14255 ;;
 14256                           
 14257                           
 14258                           ;psect for function _set_clock
 14259  0763                     _set_clock:	
 14260                           
 14261                           ;incstack = 0
 14262                           ; Regs used in _set_clock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14263                           ;set_clock@data stored from wreg
 14264  0763  0020               	movlb	0	; select bank0
 14265  0764  00B0               	movwf	set_clock@data
 14266  0765                     l6253:	
 14267                           
 14268                           ;communications.c: 101:     uint8_t hours, minutes, seconds;;communications.c: 102:     
      +                          if(!data || strlen(data) != 3 || (hours = data[0] > 23) || (minutes = data[1] > 59) || (
      +                          seconds = data[2] > 59)) {
 14269  0765  0830               	movf	set_clock@data,w
 14270  0766  1903               	btfsc	3,2
 14271  0767  2F69               	goto	u5031
 14272  0768  2F6A               	goto	u5030
 14273  0769                     u5031:	
 14274  0769  2FB0               	goto	l6263
 14275  076A                     u5030:	
 14276  076A                     l6255:	
 14277  076A  0830               	movf	set_clock@data,w
 14278  076B  3195  2545  3187   	fcall	_strlen
 14279  076E  3003               	movlw	3
 14280  076F  0672               	xorwf	?_strlen,w
 14281  0770  0473               	iorwf	?_strlen+1,w
 14282  0771  1D03               	btfss	3,2
 14283  0772  2F74               	goto	u5041
 14284  0773  2F75               	goto	u5040
 14285  0774                     u5041:	
 14286  0774  2FB0               	goto	l6263
 14287  0775                     u5040:	
 14288  0775                     l6257:	
 14289  0775  0020               	movlb	0	; select bank0
 14290  0776  0830               	movf	set_clock@data,w
 14291  0777  0086               	movwf	6
 14292  0778  0187               	clrf	7
 14293  0779  3018               	movlw	24
 14294  077A  0201               	subwf	1,w
 14295  077B  1803               	skipnc
 14296  077C  2F7E               	goto	u5051
 14297  077D  2F80               	goto	u5050
 14298  077E                     u5051:	
 14299  077E  3001               	movlw	1
 14300  077F  2F81               	goto	u5060
 14301  0780                     u5050:	
 14302  0780  3000               	movlw	0
 14303  0781                     u5060:	
 14304  0781  00AC               	movwf	??_set_clock
 14305  0782  082C               	movf	??_set_clock,w
 14306  0783  00AD               	movwf	set_clock@hours
 14307  0784  082D               	movf	set_clock@hours,w
 14308  0785  1D03               	btfss	3,2
 14309  0786  2F88               	goto	u5071
 14310  0787  2F89               	goto	u5070
 14311  0788                     u5071:	
 14312  0788  2FB0               	goto	l6263
 14313  0789                     u5070:	
 14314  0789                     l6259:	
 14315  0789  0A30               	incf	set_clock@data,w
 14316  078A  0086               	movwf	6
 14317  078B  0187               	clrf	7
 14318  078C  303C               	movlw	60
 14319  078D  0201               	subwf	1,w
 14320  078E  1803               	skipnc
 14321  078F  2F91               	goto	u5081
 14322  0790  2F93               	goto	u5080
 14323  0791                     u5081:	
 14324  0791  3001               	movlw	1
 14325  0792  2F94               	goto	u5090
 14326  0793                     u5080:	
 14327  0793  3000               	movlw	0
 14328  0794                     u5090:	
 14329  0794  00AC               	movwf	??_set_clock
 14330  0795  082C               	movf	??_set_clock,w
 14331  0796  00AE               	movwf	set_clock@minutes
 14332  0797  082E               	movf	set_clock@minutes,w
 14333  0798  1D03               	btfss	3,2
 14334  0799  2F9B               	goto	u5101
 14335  079A  2F9C               	goto	u5100
 14336  079B                     u5101:	
 14337  079B  2FB0               	goto	l6263
 14338  079C                     u5100:	
 14339  079C                     l6261:	
 14340  079C  0830               	movf	set_clock@data,w
 14341  079D  3E02               	addlw	2
 14342  079E  0086               	movwf	6
 14343  079F  0187               	clrf	7
 14344  07A0  303C               	movlw	60
 14345  07A1  0201               	subwf	1,w
 14346  07A2  1803               	skipnc
 14347  07A3  2FA5               	goto	u5111
 14348  07A4  2FA7               	goto	u5110
 14349  07A5                     u5111:	
 14350  07A5  3001               	movlw	1
 14351  07A6  2FA8               	goto	u5120
 14352  07A7                     u5110:	
 14353  07A7  3000               	movlw	0
 14354  07A8                     u5120:	
 14355  07A8  00AC               	movwf	??_set_clock
 14356  07A9  082C               	movf	??_set_clock,w
 14357  07AA  00AF               	movwf	set_clock@seconds
 14358  07AB  082F               	movf	set_clock@seconds,w
 14359  07AC  1903               	btfsc	3,2
 14360  07AD  2FAF               	goto	u5131
 14361  07AE  2FB0               	goto	u5130
 14362  07AF                     u5131:	
 14363  07AF  2FBA               	goto	l1622
 14364  07B0                     u5130:	
 14365  07B0                     l6263:	
 14366                           
 14367                           ;communications.c: 103:         send_confirmation(0XC1, 0xFF);
 14368  07B0  30FF               	movlw	255
 14369  07B1  0020               	movlb	0	; select bank0
 14370  07B2  00AC               	movwf	??_set_clock
 14371  07B3  082C               	movf	??_set_clock,w
 14372  07B4  00F8               	movwf	send_confirmation@error
 14373  07B5  30C1               	movlw	193
 14374  07B6  3195  2518  3187   	fcall	_send_confirmation
 14375  07B9  2FD0               	goto	l1625
 14376  07BA                     l1622:	
 14377                           ;communications.c: 105:     }
 14378                           
 14379                           
 14380                           ;communications.c: 106:     (INTCONbits.PEIE = 0);
 14381  07BA  130B               	bcf	11,6	;volatile
 14382  07BB                     l6267:	
 14383                           
 14384                           ;communications.c: 107:     clkh = hours; clkm = minutes; clks = seconds;
 14385  07BB  082D               	movf	set_clock@hours,w
 14386  07BC  00AC               	movwf	??_set_clock
 14387  07BD  082C               	movf	??_set_clock,w
 14388  07BE  00EA               	movwf	_clkh	;volatile
 14389  07BF  082E               	movf	set_clock@minutes,w
 14390  07C0  00AC               	movwf	??_set_clock
 14391  07C1  082C               	movf	??_set_clock,w
 14392  07C2  00E9               	movwf	_clkm	;volatile
 14393  07C3  082F               	movf	set_clock@seconds,w
 14394  07C4  00AC               	movwf	??_set_clock
 14395  07C5  082C               	movf	??_set_clock,w
 14396  07C6  00E8               	movwf	_clks	;volatile
 14397  07C7                     l6269:	
 14398                           
 14399                           ;communications.c: 108:     (INTCONbits.PEIE = 1);
 14400  07C7  170B               	bsf	11,6	;volatile
 14401  07C8                     l6271:	
 14402                           
 14403                           ;communications.c: 109:     update_clk();
 14404  07C8  3193  23B2  3187   	fcall	_update_clk
 14405  07CB                     l6273:	
 14406                           
 14407                           ;communications.c: 110:     send_confirmation(0XC1, 0);
 14408  07CB  01F8               	clrf	send_confirmation@error
 14409  07CC  30C1               	movlw	193
 14410  07CD  3195  2518  3187   	fcall	_send_confirmation
 14411  07D0                     l1625:	
 14412  07D0  0008               	return
 14413  07D1                     __end_of_set_clock:	
 14414                           
 14415                           	psect	text15
 14416  0E31                     __ptext15:	
 14417 ;; *************** function _registers_info *****************
 14418 ;; Defined at:
 14419 ;;		line 168 in file "communications.c"
 14420 ;; Parameters:    Size  Location     Type
 14421 ;;		None
 14422 ;; Auto vars:     Size  Location     Type
 14423 ;;  msg             6    3[BANK0 ] unsigned char [6]
 14424 ;;  wi              1   14[BANK0 ] unsigned char 
 14425 ;;  N               1   13[BANK0 ] unsigned char 
 14426 ;;  ri              1   10[BANK0 ] unsigned char 
 14427 ;;  nr              1    9[BANK0 ] unsigned char 
 14428 ;; Return value:  Size  Location     Type
 14429 ;;                  1    wreg      void 
 14430 ;; Registers used:
 14431 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14432 ;; Tracked objects:
 14433 ;;		On entry : 0/0
 14434 ;;		On exit  : 0/0
 14435 ;;		Unchanged: 0/0
 14436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14438 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14439 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14440 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14441 ;;Total ram usage:       14 bytes
 14442 ;; Hardware stack levels used:    1
 14443 ;; Hardware stack levels required when called:    8
 14444 ;; This function calls:
 14445 ;;		_read_iwrt
 14446 ;;		_read_nreg
 14447 ;;		_ring_buffer_laped
 14448 ;;		_send_msg
 14449 ;; This function is called by:
 14450 ;;		_interpret_message
 14451 ;; This function uses a non-reentrant model
 14452 ;;
 14453                           
 14454                           
 14455                           ;psect for function _registers_info
 14456  0E31                     _registers_info:	
 14457  0E31                     l6365:	
 14458                           ;incstack = 0
 14459                           ; Regs used in _registers_info: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14460                           
 14461                           
 14462                           ;communications.c: 169:     uint8_t N = read_nreg(), wi = read_iwrt(), nr = ring_buffer_
      +                          laped() ? N : wi, ri = iread;
 14463  0E31  3193  2380  318E   	fcall	_read_nreg
 14464  0E34  00F8               	movwf	??_registers_info
 14465  0E35  0878               	movf	??_registers_info,w
 14466  0E36  0020               	movlb	0	; select bank0
 14467  0E37  00AD               	movwf	registers_info@N
 14468  0E38  3193  2398  318E   	fcall	_read_iwrt
 14469  0E3B  00F8               	movwf	??_registers_info
 14470  0E3C  0878               	movf	??_registers_info,w
 14471  0E3D  0020               	movlb	0	; select bank0
 14472  0E3E  00AE               	movwf	registers_info@wi
 14473  0E3F  3194  245C  318E   	fcall	_ring_buffer_laped
 14474  0E42  3A00               	xorlw	0
 14475  0E43  1D03               	skipz
 14476  0E44  2E46               	goto	u5271
 14477  0E45  2E47               	goto	u5270
 14478  0E46                     u5271:	
 14479  0E46  2E50               	goto	l6369
 14480  0E47                     u5270:	
 14481  0E47                     l6367:	
 14482  0E47  0020               	movlb	0	; select bank0
 14483  0E48  082E               	movf	registers_info@wi,w
 14484  0E49  00F8               	movwf	??_registers_info
 14485  0E4A  01F9               	clrf	??_registers_info+1
 14486  0E4B  0878               	movf	??_registers_info,w
 14487  0E4C  00AB               	movwf	_registers_info$2824
 14488  0E4D  0879               	movf	??_registers_info+1,w
 14489  0E4E  00AC               	movwf	_registers_info$2824+1
 14490  0E4F  2E58               	goto	l1670
 14491  0E50                     l6369:	
 14492  0E50  0020               	movlb	0	; select bank0
 14493  0E51  082D               	movf	registers_info@N,w
 14494  0E52  00F8               	movwf	??_registers_info
 14495  0E53  01F9               	clrf	??_registers_info+1
 14496  0E54  0878               	movf	??_registers_info,w
 14497  0E55  00AB               	movwf	_registers_info$2824
 14498  0E56  0879               	movf	??_registers_info+1,w
 14499  0E57  00AC               	movwf	_registers_info$2824+1
 14500  0E58                     l1670:	
 14501  0E58  082B               	movf	_registers_info$2824,w
 14502  0E59  00F8               	movwf	??_registers_info
 14503  0E5A  0878               	movf	??_registers_info,w
 14504  0E5B  00A9               	movwf	registers_info@nr
 14505  0E5C  087A               	movf	_iread,w	;volatile
 14506  0E5D  00F8               	movwf	??_registers_info
 14507  0E5E  0878               	movf	??_registers_info,w
 14508  0E5F  00AA               	movwf	registers_info@ri
 14509  0E60                     l6371:	
 14510                           
 14511                           ;communications.c: 171:     char msg[] = {0XC9, N, nr, ri, wi, '\0'};
 14512  0E60  3023               	movlw	low registers_info@msg
 14513  0E61  0086               	movwf	6
 14514  0E62  3000               	movlw	high registers_info@msg
 14515  0E63  0087               	movwf	7
 14516  0E64  3006               	movlw	6
 14517  0E65  00F8               	movwf	??_registers_info
 14518  0E66  3000               	movlw	0
 14519  0E67                     u5280:	
 14520  0E67  001E               	movwi fsr1++
 14521  0E68  0BF8               	decfsz	??_registers_info,f
 14522  0E69  2E67               	goto	u5280
 14523  0E6A                     l6373:	
 14524  0E6A  30C9               	movlw	201
 14525  0E6B  00F8               	movwf	??_registers_info
 14526  0E6C  0878               	movf	??_registers_info,w
 14527  0E6D  00A3               	movwf	registers_info@msg
 14528  0E6E                     l6375:	
 14529  0E6E  082D               	movf	registers_info@N,w
 14530  0E6F  00F8               	movwf	??_registers_info
 14531  0E70  0878               	movf	??_registers_info,w
 14532  0E71  00A4               	movwf	registers_info@msg+1
 14533  0E72                     l6377:	
 14534  0E72  0829               	movf	registers_info@nr,w
 14535  0E73  00F8               	movwf	??_registers_info
 14536  0E74  0878               	movf	??_registers_info,w
 14537  0E75  00A5               	movwf	registers_info@msg+2
 14538  0E76                     l6379:	
 14539  0E76  082A               	movf	registers_info@ri,w
 14540  0E77  00F8               	movwf	??_registers_info
 14541  0E78  0878               	movf	??_registers_info,w
 14542  0E79  00A6               	movwf	registers_info@msg+3
 14543  0E7A                     l6381:	
 14544  0E7A  082E               	movf	registers_info@wi,w
 14545  0E7B  00F8               	movwf	??_registers_info
 14546  0E7C  0878               	movf	??_registers_info,w
 14547  0E7D  00A7               	movwf	registers_info@msg+4
 14548  0E7E                     l6383:	
 14549  0E7E  01A8               	clrf	registers_info@msg+5
 14550  0E7F                     l6385:	
 14551                           
 14552                           ;communications.c: 172:     send_msg(msg);
 14553  0E7F  3023               	movlw	(low (registers_info@msg| 0))& (0+255)
 14554  0E80  3188  206E  318E   	fcall	_send_msg
 14555  0E83                     l1673:	
 14556  0E83  0008               	return
 14557  0E84                     __end_of_registers_info:	
 14558                           
 14559                           	psect	text16
 14560  1623                     __ptext16:	
 14561 ;; *************** function _read_temp_lum *****************
 14562 ;; Defined at:
 14563 ;;		line 113 in file "communications.c"
 14564 ;; Parameters:    Size  Location     Type
 14565 ;;		None
 14566 ;; Auto vars:     Size  Location     Type
 14567 ;;  msg             4    3[BANK0 ] unsigned char [4]
 14568 ;; Return value:  Size  Location     Type
 14569 ;;                  1    wreg      void 
 14570 ;; Registers used:
 14571 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14572 ;; Tracked objects:
 14573 ;;		On entry : 0/0
 14574 ;;		On exit  : 0/0
 14575 ;;		Unchanged: 0/0
 14576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14578 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14579 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14580 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14581 ;;Total ram usage:        5 bytes
 14582 ;; Hardware stack levels used:    1
 14583 ;; Hardware stack levels required when called:    8
 14584 ;; This function calls:
 14585 ;;		_send_msg
 14586 ;; This function is called by:
 14587 ;;		_interpret_message
 14588 ;; This function uses a non-reentrant model
 14589 ;;
 14590                           
 14591                           
 14592                           ;psect for function _read_temp_lum
 14593  1623                     _read_temp_lum:	
 14594  1623                     l6275:	
 14595                           ;incstack = 0
 14596                           ; Regs used in _read_temp_lum: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14597                           
 14598                           
 14599                           ;communications.c: 114:     char msg[] = {0XC2, temp, illum, '\0'};
 14600  1623  3000               	movlw	0
 14601  1624  0020               	movlb	0	; select bank0
 14602  1625  00A6               	movwf	read_temp_lum@msg+3
 14603  1626  3000               	movlw	0
 14604  1627  00A5               	movwf	read_temp_lum@msg+2
 14605  1628  3000               	movlw	0
 14606  1629  00A4               	movwf	read_temp_lum@msg+1
 14607  162A  3000               	movlw	0
 14608  162B  00A3               	movwf	read_temp_lum@msg
 14609  162C  30C2               	movlw	194
 14610  162D  00F8               	movwf	??_read_temp_lum
 14611  162E  0878               	movf	??_read_temp_lum,w
 14612  162F  00A3               	movwf	read_temp_lum@msg
 14613  1630  0021               	movlb	1	; select bank1
 14614  1631  0852               	movf	_temp^(0+128),w
 14615  1632  00F8               	movwf	??_read_temp_lum
 14616  1633  0878               	movf	??_read_temp_lum,w
 14617  1634  0020               	movlb	0	; select bank0
 14618  1635  00A4               	movwf	read_temp_lum@msg+1
 14619  1636  0021               	movlb	1	; select bank1
 14620  1637  0851               	movf	_illum^(0+128),w
 14621  1638  00F8               	movwf	??_read_temp_lum
 14622  1639  0878               	movf	??_read_temp_lum,w
 14623  163A  0020               	movlb	0	; select bank0
 14624  163B  00A5               	movwf	read_temp_lum@msg+2
 14625  163C                     l6277:	
 14626  163C  01A6               	clrf	read_temp_lum@msg+3
 14627  163D                     l6279:	
 14628                           
 14629                           ;communications.c: 115:     send_msg(msg);
 14630  163D  3023               	movlw	(low (read_temp_lum@msg| 0))& (0+255)
 14631  163E  3188  206E  3196   	fcall	_send_msg
 14632  1641                     l1630:	
 14633  1641  0008               	return
 14634  1642                     __end_of_read_temp_lum:	
 14635                           
 14636                           	psect	text17
 14637  15C9                     __ptext17:	
 14638 ;; *************** function _read_param *****************
 14639 ;; Defined at:
 14640 ;;		line 118 in file "communications.c"
 14641 ;; Parameters:    Size  Location     Type
 14642 ;;		None
 14643 ;; Auto vars:     Size  Location     Type
 14644 ;;  msg             4    3[BANK0 ] unsigned char [4]
 14645 ;; Return value:  Size  Location     Type
 14646 ;;                  1    wreg      void 
 14647 ;; Registers used:
 14648 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14649 ;; Tracked objects:
 14650 ;;		On entry : 0/0
 14651 ;;		On exit  : 0/0
 14652 ;;		Unchanged: 0/0
 14653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14655 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14656 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14657 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14658 ;;Total ram usage:        5 bytes
 14659 ;; Hardware stack levels used:    1
 14660 ;; Hardware stack levels required when called:    8
 14661 ;; This function calls:
 14662 ;;		_send_msg
 14663 ;; This function is called by:
 14664 ;;		_interpret_message
 14665 ;; This function uses a non-reentrant model
 14666 ;;
 14667                           
 14668                           
 14669                           ;psect for function _read_param
 14670  15C9                     _read_param:	
 14671  15C9                     l6281:	
 14672                           ;incstack = 0
 14673                           ; Regs used in _read_param: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14674                           
 14675                           
 14676                           ;communications.c: 119:     char msg[] = {0XC3, pmon, tala, '\0'};
 14677  15C9  3000               	movlw	0
 14678  15CA  0020               	movlb	0	; select bank0
 14679  15CB  00A6               	movwf	read_param@msg+3
 14680  15CC  3000               	movlw	0
 14681  15CD  00A5               	movwf	read_param@msg+2
 14682  15CE  3000               	movlw	0
 14683  15CF  00A4               	movwf	read_param@msg+1
 14684  15D0  3000               	movlw	0
 14685  15D1  00A3               	movwf	read_param@msg
 14686  15D2  30C3               	movlw	195
 14687  15D3  00F8               	movwf	??_read_param
 14688  15D4  0878               	movf	??_read_param,w
 14689  15D5  00A3               	movwf	read_param@msg
 14690  15D6  086D               	movf	_pmon,w
 14691  15D7  00F8               	movwf	??_read_param
 14692  15D8  0878               	movf	??_read_param,w
 14693  15D9  00A4               	movwf	read_param@msg+1
 14694  15DA  0021               	movlb	1	; select bank1
 14695  15DB  0857               	movf	_tala^(0+128),w
 14696  15DC  00F8               	movwf	??_read_param
 14697  15DD  0878               	movf	??_read_param,w
 14698  15DE  0020               	movlb	0	; select bank0
 14699  15DF  00A5               	movwf	read_param@msg+2
 14700  15E0                     l6283:	
 14701  15E0  01A6               	clrf	read_param@msg+3
 14702  15E1                     l6285:	
 14703                           
 14704                           ;communications.c: 120:     send_msg(msg);
 14705  15E1  3023               	movlw	(low (read_param@msg| 0))& (0+255)
 14706  15E2  3188  206E  3195   	fcall	_send_msg
 14707  15E5                     l1635:	
 14708  15E5  0008               	return
 14709  15E6                     __end_of_read_param:	
 14710                           
 14711                           	psect	text18
 14712  07D1                     __ptext18:	
 14713 ;; *************** function _read_clock *****************
 14714 ;; Defined at:
 14715 ;;		line 92 in file "communications.c"
 14716 ;; Parameters:    Size  Location     Type
 14717 ;;		None
 14718 ;; Auto vars:     Size  Location     Type
 14719 ;;  msg             5    6[BANK0 ] unsigned char [5]
 14720 ;;  seconds         1    5[BANK0 ] unsigned char 
 14721 ;;  minutes         1    4[BANK0 ] unsigned char 
 14722 ;;  hours           1    3[BANK0 ] unsigned char 
 14723 ;; Return value:  Size  Location     Type
 14724 ;;                  1    wreg      void 
 14725 ;; Registers used:
 14726 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14727 ;; Tracked objects:
 14728 ;;		On entry : 0/0
 14729 ;;		On exit  : 0/0
 14730 ;;		Unchanged: 0/0
 14731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14733 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14734 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14735 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14736 ;;Total ram usage:        9 bytes
 14737 ;; Hardware stack levels used:    1
 14738 ;; Hardware stack levels required when called:    8
 14739 ;; This function calls:
 14740 ;;		_send_msg
 14741 ;; This function is called by:
 14742 ;;		_interpret_message
 14743 ;; This function uses a non-reentrant model
 14744 ;;
 14745                           
 14746                           
 14747                           ;psect for function _read_clock
 14748  07D1                     _read_clock:	
 14749  07D1                     l6233:	
 14750                           ;incstack = 0
 14751                           ; Regs used in _read_clock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14752                           
 14753                           
 14754                           ;communications.c: 93:     (INTCONbits.PEIE = 0);
 14755  07D1  130B               	bcf	11,6	;volatile
 14756  07D2                     l6235:	
 14757                           
 14758                           ;communications.c: 94:     uint8_t hours = clkh, minutes = clkm, seconds = clks;
 14759  07D2  0020               	movlb	0	; select bank0
 14760  07D3  086A               	movf	_clkh,w	;volatile
 14761  07D4  00F8               	movwf	??_read_clock
 14762  07D5  0878               	movf	??_read_clock,w
 14763  07D6  00A3               	movwf	read_clock@hours
 14764  07D7  0869               	movf	_clkm,w	;volatile
 14765  07D8  00F8               	movwf	??_read_clock
 14766  07D9  0878               	movf	??_read_clock,w
 14767  07DA  00A4               	movwf	read_clock@minutes
 14768  07DB  0868               	movf	_clks,w	;volatile
 14769  07DC  00F8               	movwf	??_read_clock
 14770  07DD  0878               	movf	??_read_clock,w
 14771  07DE  00A5               	movwf	read_clock@seconds
 14772  07DF                     l6237:	
 14773                           
 14774                           ;communications.c: 95:     (INTCONbits.PEIE = 1);
 14775  07DF  170B               	bsf	11,6	;volatile
 14776  07E0                     l6239:	
 14777                           
 14778                           ;communications.c: 96:     char msg[] = {0xC0, hours, minutes, seconds, '\0'};
 14779  07E0  3026               	movlw	low read_clock@msg
 14780  07E1  0086               	movwf	6
 14781  07E2  3000               	movlw	high read_clock@msg
 14782  07E3  0087               	movwf	7
 14783  07E4  3005               	movlw	5
 14784  07E5  00F8               	movwf	??_read_clock
 14785  07E6  3000               	movlw	0
 14786  07E7                     u5020:	
 14787  07E7  001E               	movwi fsr1++
 14788  07E8  0BF8               	decfsz	??_read_clock,f
 14789  07E9  2FE7               	goto	u5020
 14790  07EA                     l6241:	
 14791  07EA  30C0               	movlw	192
 14792  07EB  00F8               	movwf	??_read_clock
 14793  07EC  0878               	movf	??_read_clock,w
 14794  07ED  00A6               	movwf	read_clock@msg
 14795  07EE                     l6243:	
 14796  07EE  0823               	movf	read_clock@hours,w
 14797  07EF  00F8               	movwf	??_read_clock
 14798  07F0  0878               	movf	??_read_clock,w
 14799  07F1  00A7               	movwf	read_clock@msg+1
 14800  07F2                     l6245:	
 14801  07F2  0824               	movf	read_clock@minutes,w
 14802  07F3  00F8               	movwf	??_read_clock
 14803  07F4  0878               	movf	??_read_clock,w
 14804  07F5  00A8               	movwf	read_clock@msg+2
 14805  07F6                     l6247:	
 14806  07F6  0825               	movf	read_clock@seconds,w
 14807  07F7  00F8               	movwf	??_read_clock
 14808  07F8  0878               	movf	??_read_clock,w
 14809  07F9  00A9               	movwf	read_clock@msg+3
 14810  07FA                     l6249:	
 14811  07FA  01AA               	clrf	read_clock@msg+4
 14812  07FB                     l6251:	
 14813                           
 14814                           ;communications.c: 97:     send_msg(msg);
 14815  07FB  3026               	movlw	(low (read_clock@msg| 0))& (0+255)
 14816  07FC  3188  206E  3187   	fcall	_send_msg
 14817  07FF                     l1619:	
 14818  07FF  0008               	return
 14819  0800                     __end_of_read_clock:	
 14820                           
 14821                           	psect	text19
 14822  16C3                     __ptext19:	
 14823 ;; *************** function _read_alarms *****************
 14824 ;; Defined at:
 14825 ;;		line 143 in file "communications.c"
 14826 ;; Parameters:    Size  Location     Type
 14827 ;;		None
 14828 ;; Auto vars:     Size  Location     Type
 14829 ;;  msg             5    3[BANK0 ] unsigned char [5]
 14830 ;; Return value:  Size  Location     Type
 14831 ;;                  1    wreg      void 
 14832 ;; Registers used:
 14833 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14834 ;; Tracked objects:
 14835 ;;		On entry : 0/0
 14836 ;;		On exit  : 0/0
 14837 ;;		Unchanged: 0/0
 14838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14840 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14842 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14843 ;;Total ram usage:        6 bytes
 14844 ;; Hardware stack levels used:    1
 14845 ;; Hardware stack levels required when called:    8
 14846 ;; This function calls:
 14847 ;;		_send_msg
 14848 ;; This function is called by:
 14849 ;;		_interpret_message
 14850 ;; This function uses a non-reentrant model
 14851 ;;
 14852                           
 14853                           
 14854                           ;psect for function _read_alarms
 14855  16C3                     _read_alarms:	
 14856  16C3                     l6319:	
 14857                           ;incstack = 0
 14858                           ; Regs used in _read_alarms: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14859                           
 14860                           
 14861                           ;communications.c: 144:     char msg[] = {0XC6, alat, alal, alaf, '\0'};
 14862  16C3  3023               	movlw	low read_alarms@msg
 14863  16C4  0086               	movwf	6
 14864  16C5  3000               	movlw	high read_alarms@msg
 14865  16C6  0087               	movwf	7
 14866  16C7  3005               	movlw	5
 14867  16C8  00F8               	movwf	??_read_alarms
 14868  16C9  3000               	movlw	0
 14869  16CA                     u5200:	
 14870  16CA  001E               	movwi fsr1++
 14871  16CB  0BF8               	decfsz	??_read_alarms,f
 14872  16CC  2ECA               	goto	u5200
 14873  16CD                     l6321:	
 14874  16CD  30C6               	movlw	198
 14875  16CE  00F8               	movwf	??_read_alarms
 14876  16CF  0878               	movf	??_read_alarms,w
 14877  16D0  0020               	movlb	0	; select bank0
 14878  16D1  00A3               	movwf	read_alarms@msg
 14879  16D2                     l6323:	
 14880  16D2  086C               	movf	_alat,w
 14881  16D3  00F8               	movwf	??_read_alarms
 14882  16D4  0878               	movf	??_read_alarms,w
 14883  16D5  00A4               	movwf	read_alarms@msg+1
 14884  16D6                     l6325:	
 14885  16D6  0021               	movlb	1	; select bank1
 14886  16D7  0856               	movf	_alal^(0+128),w
 14887  16D8  00F8               	movwf	??_read_alarms
 14888  16D9  0878               	movf	??_read_alarms,w
 14889  16DA  0020               	movlb	0	; select bank0
 14890  16DB  00A5               	movwf	read_alarms@msg+2
 14891  16DC                     l6327:	
 14892  16DC  086B               	movf	_alaf,w
 14893  16DD  00F8               	movwf	??_read_alarms
 14894  16DE  0878               	movf	??_read_alarms,w
 14895  16DF  00A6               	movwf	read_alarms@msg+3
 14896  16E0                     l6329:	
 14897  16E0  01A7               	clrf	read_alarms@msg+4
 14898  16E1                     l6331:	
 14899                           
 14900                           ;communications.c: 145:     send_msg(msg);
 14901  16E1  3023               	movlw	(low (read_alarms@msg| 0))& (0+255)
 14902  16E2  3188  206E  3196   	fcall	_send_msg
 14903  16E5                     l1652:	
 14904  16E5  0008               	return
 14905  16E6                     __end_of_read_alarms:	
 14906                           
 14907                           	psect	text20
 14908  0995                     __ptext20:	
 14909 ;; *************** function _modify_time_alarm *****************
 14910 ;; Defined at:
 14911 ;;		line 133 in file "communications.c"
 14912 ;; Parameters:    Size  Location     Type
 14913 ;;  data            1    wreg     PTR unsigned char 
 14914 ;;		 -> NULL(0), read_msgs@aux(8), 
 14915 ;; Auto vars:     Size  Location     Type
 14916 ;;  data            1    9[BANK0 ] PTR unsigned char 
 14917 ;;		 -> NULL(0), read_msgs@aux(8), 
 14918 ;; Return value:  Size  Location     Type
 14919 ;;                  1    wreg      void 
 14920 ;; Registers used:
 14921 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14922 ;; Tracked objects:
 14923 ;;		On entry : 0/0
 14924 ;;		On exit  : 0/0
 14925 ;;		Unchanged: 0/0
 14926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14928 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14929 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14930 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14931 ;;Total ram usage:        2 bytes
 14932 ;; Hardware stack levels used:    1
 14933 ;; Hardware stack levels required when called:    9
 14934 ;; This function calls:
 14935 ;;		_send_confirmation
 14936 ;;		_strlen
 14937 ;;		_write_tala
 14938 ;; This function is called by:
 14939 ;;		_interpret_message
 14940 ;; This function uses a non-reentrant model
 14941 ;;
 14942                           
 14943                           
 14944                           ;psect for function _modify_time_alarm
 14945  0995                     _modify_time_alarm:	
 14946                           
 14947                           ;incstack = 0
 14948                           ; Regs used in _modify_time_alarm: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14949                           ;modify_time_alarm@data stored from wreg
 14950  0995  0020               	movlb	0	; select bank0
 14951  0996  00A9               	movwf	modify_time_alarm@data
 14952  0997                     l6303:	
 14953                           
 14954                           ;communications.c: 134:     if(!data || strlen(data) != 1 || data[0] > 60) {
 14955  0997  0829               	movf	modify_time_alarm@data,w
 14956  0998  1903               	btfsc	3,2
 14957  0999  299B               	goto	u5171
 14958  099A  299C               	goto	u5170
 14959  099B                     u5171:	
 14960  099B  29B0               	goto	l6309
 14961  099C                     u5170:	
 14962  099C                     l6305:	
 14963  099C  0829               	movf	modify_time_alarm@data,w
 14964  099D  3195  2545  3189   	fcall	_strlen
 14965  09A0  0372               	decf	?_strlen,w
 14966  09A1  0473               	iorwf	?_strlen+1,w
 14967  09A2  1D03               	btfss	3,2
 14968  09A3  29A5               	goto	u5181
 14969  09A4  29A6               	goto	u5180
 14970  09A5                     u5181:	
 14971  09A5  29B0               	goto	l6309
 14972  09A6                     u5180:	
 14973  09A6                     l6307:	
 14974  09A6  0020               	movlb	0	; select bank0
 14975  09A7  0829               	movf	modify_time_alarm@data,w
 14976  09A8  0086               	movwf	6
 14977  09A9  0187               	clrf	7
 14978  09AA  303D               	movlw	61
 14979  09AB  0201               	subwf	1,w
 14980  09AC  1C03               	skipc
 14981  09AD  29AF               	goto	u5191
 14982  09AE  29B0               	goto	u5190
 14983  09AF                     u5191:	
 14984  09AF  29BA               	goto	l6313
 14985  09B0                     u5190:	
 14986  09B0                     l6309:	
 14987                           
 14988                           ;communications.c: 135:         send_confirmation(0XC5, 0xFF);
 14989  09B0  30FF               	movlw	255
 14990  09B1  0020               	movlb	0	; select bank0
 14991  09B2  00A8               	movwf	??_modify_time_alarm
 14992  09B3  0828               	movf	??_modify_time_alarm,w
 14993  09B4  00F8               	movwf	send_confirmation@error
 14994  09B5  30C5               	movlw	197
 14995  09B6  3195  2518  3189   	fcall	_send_confirmation
 14996  09B9  29CB               	goto	l1647
 14997  09BA                     l6313:	
 14998                           
 14999                           ;communications.c: 138:     tala = data[0];
 15000  09BA  0829               	movf	modify_time_alarm@data,w
 15001  09BB  0086               	movwf	6
 15002  09BC  0187               	clrf	7
 15003  09BD  0801               	movf	1,w
 15004  09BE  00A8               	movwf	??_modify_time_alarm
 15005  09BF  0828               	movf	??_modify_time_alarm,w
 15006  09C0  0021               	movlb	1	; select bank1
 15007  09C1  00D7               	movwf	_tala^(0+128)
 15008  09C2                     l6315:	
 15009                           
 15010                           ;communications.c: 139:     write_tala(tala);
 15011  09C2  0857               	movf	_tala^(0+128),w
 15012  09C3  3188  20CA  3189   	fcall	_write_tala
 15013  09C6                     l6317:	
 15014                           
 15015                           ;communications.c: 140:     send_confirmation(0XC5, 0);
 15016  09C6  01F8               	clrf	send_confirmation@error
 15017  09C7  30C5               	movlw	197
 15018  09C8  3195  2518  3189   	fcall	_send_confirmation
 15019  09CB                     l1647:	
 15020  09CB  0008               	return
 15021  09CC                     __end_of_modify_time_alarm:	
 15022                           
 15023                           	psect	text21
 15024  08CA                     __ptext21:	
 15025 ;; *************** function _write_tala *****************
 15026 ;; Defined at:
 15027 ;;		line 142 in file "eeprom.c"
 15028 ;; Parameters:    Size  Location     Type
 15029 ;;  x               1    wreg     unsigned char 
 15030 ;; Auto vars:     Size  Location     Type
 15031 ;;  x               1    7[BANK0 ] unsigned char 
 15032 ;; Return value:  Size  Location     Type
 15033 ;;                  1    wreg      void 
 15034 ;; Registers used:
 15035 ;;		wreg, status,2, status,0, pclath, cstack
 15036 ;; Tracked objects:
 15037 ;;		On entry : 0/0
 15038 ;;		On exit  : 0/0
 15039 ;;		Unchanged: 0/0
 15040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15042 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15043 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15044 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15045 ;;Total ram usage:        4 bytes
 15046 ;; Hardware stack levels used:    1
 15047 ;; Hardware stack levels required when called:    7
 15048 ;; This function calls:
 15049 ;;		_DATAEE_ReadByte
 15050 ;;		_DATAEE_WriteByte
 15051 ;; This function is called by:
 15052 ;;		_modify_time_alarm
 15053 ;; This function uses a non-reentrant model
 15054 ;;
 15055                           
 15056                           
 15057                           ;psect for function _write_tala
 15058  08CA                     _write_tala:	
 15059                           
 15060                           ;incstack = 0
 15061                           ; Regs used in _write_tala: [wreg+status,2+status,0+pclath+cstack]
 15062                           ;write_tala@x stored from wreg
 15063  08CA  0020               	movlb	0	; select bank0
 15064  08CB  00A7               	movwf	write_tala@x
 15065  08CC                     l6079:	
 15066                           
 15067                           ;eeprom.c: 144:     DATAEE_WriteByte(0xF000, DATAEE_ReadByte(0xF000) + x - DATAEE_ReadBy
      +                          te(0xF003));
 15068  08CC  3000               	movlw	0
 15069  08CD  00A0               	movwf	DATAEE_WriteByte@bAdd
 15070  08CE  30F0               	movlw	240
 15071  08CF  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 15072  08D0  3003               	movlw	3
 15073  08D1  00F2               	movwf	DATAEE_ReadByte@bAdd
 15074  08D2  30F0               	movlw	240
 15075  08D3  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 15076  08D4  3193  23D3  3188   	fcall	_DATAEE_ReadByte
 15077  08D7  0020               	movlb	0	; select bank0
 15078  08D8  00A4               	movwf	??_write_tala
 15079  08D9  3000               	movlw	0
 15080  08DA  00F2               	movwf	DATAEE_ReadByte@bAdd
 15081  08DB  30F0               	movlw	240
 15082  08DC  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 15083  08DD  3193  23D3  3188   	fcall	_DATAEE_ReadByte
 15084  08E0  0020               	movlb	0	; select bank0
 15085  08E1  00A5               	movwf	??_write_tala+1
 15086  08E2  0824               	movf	??_write_tala,w
 15087  08E3  0225               	subwf	??_write_tala+1,w
 15088  08E4  0727               	addwf	write_tala@x,w
 15089  08E5  00A6               	movwf	??_write_tala+2
 15090  08E6  0826               	movf	??_write_tala+2,w
 15091  08E7  00A2               	movwf	DATAEE_WriteByte@bData
 15092  08E8  3197  2709  3188   	fcall	_DATAEE_WriteByte
 15093                           
 15094                           ;eeprom.c: 146:     DATAEE_WriteByte(0xF003, x);
 15095  08EB  3003               	movlw	3
 15096  08EC  0020               	movlb	0	; select bank0
 15097  08ED  00A0               	movwf	DATAEE_WriteByte@bAdd
 15098  08EE  30F0               	movlw	240
 15099  08EF  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 15100  08F0  0827               	movf	write_tala@x,w
 15101  08F1  00A4               	movwf	??_write_tala
 15102  08F2  0824               	movf	??_write_tala,w
 15103  08F3  00A2               	movwf	DATAEE_WriteByte@bData
 15104  08F4  3197  2709  3188   	fcall	_DATAEE_WriteByte
 15105  08F7                     l1462:	
 15106  08F7  0008               	return
 15107  08F8                     __end_of_write_tala:	
 15108                           
 15109                           	psect	text22
 15110  095F                     __ptext22:	
 15111 ;; *************** function _modify_pmon *****************
 15112 ;; Defined at:
 15113 ;;		line 123 in file "communications.c"
 15114 ;; Parameters:    Size  Location     Type
 15115 ;;  data            1    wreg     PTR unsigned char 
 15116 ;;		 -> NULL(0), read_msgs@aux(8), 
 15117 ;; Auto vars:     Size  Location     Type
 15118 ;;  data            1    9[BANK0 ] PTR unsigned char 
 15119 ;;		 -> NULL(0), read_msgs@aux(8), 
 15120 ;; Return value:  Size  Location     Type
 15121 ;;                  1    wreg      void 
 15122 ;; Registers used:
 15123 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15124 ;; Tracked objects:
 15125 ;;		On entry : 0/0
 15126 ;;		On exit  : 0/0
 15127 ;;		Unchanged: 0/0
 15128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15130 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15132 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15133 ;;Total ram usage:        2 bytes
 15134 ;; Hardware stack levels used:    1
 15135 ;; Hardware stack levels required when called:    9
 15136 ;; This function calls:
 15137 ;;		_send_confirmation
 15138 ;;		_strlen
 15139 ;;		_write_pmon
 15140 ;; This function is called by:
 15141 ;;		_interpret_message
 15142 ;; This function uses a non-reentrant model
 15143 ;;
 15144                           
 15145                           
 15146                           ;psect for function _modify_pmon
 15147  095F                     _modify_pmon:	
 15148                           
 15149                           ;incstack = 0
 15150                           ; Regs used in _modify_pmon: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15151                           ;modify_pmon@data stored from wreg
 15152  095F  0020               	movlb	0	; select bank0
 15153  0960  00A9               	movwf	modify_pmon@data
 15154  0961                     l6287:	
 15155                           
 15156                           ;communications.c: 124:     if(!data || strlen(data) != 1 || data[0] > 99) {
 15157  0961  0829               	movf	modify_pmon@data,w
 15158  0962  1903               	btfsc	3,2
 15159  0963  2965               	goto	u5141
 15160  0964  2966               	goto	u5140
 15161  0965                     u5141:	
 15162  0965  297A               	goto	l6293
 15163  0966                     u5140:	
 15164  0966                     l6289:	
 15165  0966  0829               	movf	modify_pmon@data,w
 15166  0967  3195  2545  3189   	fcall	_strlen
 15167  096A  0372               	decf	?_strlen,w
 15168  096B  0473               	iorwf	?_strlen+1,w
 15169  096C  1D03               	btfss	3,2
 15170  096D  296F               	goto	u5151
 15171  096E  2970               	goto	u5150
 15172  096F                     u5151:	
 15173  096F  297A               	goto	l6293
 15174  0970                     u5150:	
 15175  0970                     l6291:	
 15176  0970  0020               	movlb	0	; select bank0
 15177  0971  0829               	movf	modify_pmon@data,w
 15178  0972  0086               	movwf	6
 15179  0973  0187               	clrf	7
 15180  0974  3064               	movlw	100
 15181  0975  0201               	subwf	1,w
 15182  0976  1C03               	skipc
 15183  0977  2979               	goto	u5161
 15184  0978  297A               	goto	u5160
 15185  0979                     u5161:	
 15186  0979  2984               	goto	l6297
 15187  097A                     u5160:	
 15188  097A                     l6293:	
 15189                           
 15190                           ;communications.c: 125:         send_confirmation(0XC4, 0xFF);
 15191  097A  30FF               	movlw	255
 15192  097B  0020               	movlb	0	; select bank0
 15193  097C  00A8               	movwf	??_modify_pmon
 15194  097D  0828               	movf	??_modify_pmon,w
 15195  097E  00F8               	movwf	send_confirmation@error
 15196  097F  30C4               	movlw	196
 15197  0980  3195  2518  3189   	fcall	_send_confirmation
 15198  0983  2994               	goto	l1641
 15199  0984                     l6297:	
 15200                           
 15201                           ;communications.c: 128:     pmon = data[0];
 15202  0984  0829               	movf	modify_pmon@data,w
 15203  0985  0086               	movwf	6
 15204  0986  0187               	clrf	7
 15205  0987  0801               	movf	1,w
 15206  0988  00A8               	movwf	??_modify_pmon
 15207  0989  0828               	movf	??_modify_pmon,w
 15208  098A  00ED               	movwf	_pmon
 15209  098B                     l6299:	
 15210                           
 15211                           ;communications.c: 129:     write_pmon(pmon);
 15212  098B  086D               	movf	_pmon,w
 15213  098C  3188  209C  3189   	fcall	_write_pmon
 15214  098F                     l6301:	
 15215                           
 15216                           ;communications.c: 130:     send_confirmation(0XC4, 0);
 15217  098F  01F8               	clrf	send_confirmation@error
 15218  0990  30C4               	movlw	196
 15219  0991  3195  2518  3189   	fcall	_send_confirmation
 15220  0994                     l1641:	
 15221  0994  0008               	return
 15222  0995                     __end_of_modify_pmon:	
 15223                           
 15224                           	psect	text23
 15225  089C                     __ptext23:	
 15226 ;; *************** function _write_pmon *****************
 15227 ;; Defined at:
 15228 ;;		line 135 in file "eeprom.c"
 15229 ;; Parameters:    Size  Location     Type
 15230 ;;  x               1    wreg     unsigned char 
 15231 ;; Auto vars:     Size  Location     Type
 15232 ;;  x               1    7[BANK0 ] unsigned char 
 15233 ;; Return value:  Size  Location     Type
 15234 ;;                  1    wreg      void 
 15235 ;; Registers used:
 15236 ;;		wreg, status,2, status,0, pclath, cstack
 15237 ;; Tracked objects:
 15238 ;;		On entry : 0/0
 15239 ;;		On exit  : 0/0
 15240 ;;		Unchanged: 0/0
 15241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15243 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15244 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15245 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15246 ;;Total ram usage:        4 bytes
 15247 ;; Hardware stack levels used:    1
 15248 ;; Hardware stack levels required when called:    7
 15249 ;; This function calls:
 15250 ;;		_DATAEE_ReadByte
 15251 ;;		_DATAEE_WriteByte
 15252 ;; This function is called by:
 15253 ;;		_modify_pmon
 15254 ;; This function uses a non-reentrant model
 15255 ;;
 15256                           
 15257                           
 15258                           ;psect for function _write_pmon
 15259  089C                     _write_pmon:	
 15260                           
 15261                           ;incstack = 0
 15262                           ; Regs used in _write_pmon: [wreg+status,2+status,0+pclath+cstack]
 15263                           ;write_pmon@x stored from wreg
 15264  089C  0020               	movlb	0	; select bank0
 15265  089D  00A7               	movwf	write_pmon@x
 15266  089E                     l6077:	
 15267                           
 15268                           ;eeprom.c: 137:     DATAEE_WriteByte(0xF000, DATAEE_ReadByte(0xF000) + x - DATAEE_ReadBy
      +                          te(0xF002));
 15269  089E  3000               	movlw	0
 15270  089F  00A0               	movwf	DATAEE_WriteByte@bAdd
 15271  08A0  30F0               	movlw	240
 15272  08A1  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 15273  08A2  3002               	movlw	2
 15274  08A3  00F2               	movwf	DATAEE_ReadByte@bAdd
 15275  08A4  30F0               	movlw	240
 15276  08A5  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 15277  08A6  3193  23D3  3188   	fcall	_DATAEE_ReadByte
 15278  08A9  0020               	movlb	0	; select bank0
 15279  08AA  00A4               	movwf	??_write_pmon
 15280  08AB  3000               	movlw	0
 15281  08AC  00F2               	movwf	DATAEE_ReadByte@bAdd
 15282  08AD  30F0               	movlw	240
 15283  08AE  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 15284  08AF  3193  23D3  3188   	fcall	_DATAEE_ReadByte
 15285  08B2  0020               	movlb	0	; select bank0
 15286  08B3  00A5               	movwf	??_write_pmon+1
 15287  08B4  0824               	movf	??_write_pmon,w
 15288  08B5  0225               	subwf	??_write_pmon+1,w
 15289  08B6  0727               	addwf	write_pmon@x,w
 15290  08B7  00A6               	movwf	??_write_pmon+2
 15291  08B8  0826               	movf	??_write_pmon+2,w
 15292  08B9  00A2               	movwf	DATAEE_WriteByte@bData
 15293  08BA  3197  2709  3188   	fcall	_DATAEE_WriteByte
 15294                           
 15295                           ;eeprom.c: 139:     DATAEE_WriteByte(0xF002, x);
 15296  08BD  3002               	movlw	2
 15297  08BE  0020               	movlb	0	; select bank0
 15298  08BF  00A0               	movwf	DATAEE_WriteByte@bAdd
 15299  08C0  30F0               	movlw	240
 15300  08C1  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 15301  08C2  0827               	movf	write_pmon@x,w
 15302  08C3  00A4               	movwf	??_write_pmon
 15303  08C4  0824               	movf	??_write_pmon,w
 15304  08C5  00A2               	movwf	DATAEE_WriteByte@bData
 15305  08C6  3197  2709  3188   	fcall	_DATAEE_WriteByte
 15306  08C9                     l1459:	
 15307  08C9  0008               	return
 15308  08CA                     __end_of_write_pmon:	
 15309                           
 15310                           	psect	text24
 15311  0ABC                     __ptext24:	
 15312 ;; *************** function _define_alarm *****************
 15313 ;; Defined at:
 15314 ;;		line 148 in file "communications.c"
 15315 ;; Parameters:    Size  Location     Type
 15316 ;;  data            1    wreg     PTR unsigned char 
 15317 ;;		 -> NULL(0), read_msgs@aux(8), 
 15318 ;; Auto vars:     Size  Location     Type
 15319 ;;  data            1    8[BANK0 ] PTR unsigned char 
 15320 ;;		 -> NULL(0), read_msgs@aux(8), 
 15321 ;; Return value:  Size  Location     Type
 15322 ;;                  1    wreg      void 
 15323 ;; Registers used:
 15324 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15325 ;; Tracked objects:
 15326 ;;		On entry : 0/0
 15327 ;;		On exit  : 0/0
 15328 ;;		Unchanged: 0/0
 15329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15332 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15333 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15334 ;;Total ram usage:        2 bytes
 15335 ;; Hardware stack levels used:    1
 15336 ;; Hardware stack levels required when called:    9
 15337 ;; This function calls:
 15338 ;;		_send_confirmation
 15339 ;;		_strlen
 15340 ;; This function is called by:
 15341 ;;		_interpret_message
 15342 ;; This function uses a non-reentrant model
 15343 ;;
 15344                           
 15345                           
 15346                           ;psect for function _define_alarm
 15347  0ABC                     _define_alarm:	
 15348                           
 15349                           ;incstack = 0
 15350                           ; Regs used in _define_alarm: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15351                           ;define_alarm@data stored from wreg
 15352  0ABC  0020               	movlb	0	; select bank0
 15353  0ABD  00A8               	movwf	define_alarm@data
 15354  0ABE                     l6333:	
 15355                           
 15356                           ;communications.c: 149:     if(!data || strlen(data) != 2 || data[0] > 50 || data[1] > 3
      +                          ) {
 15357  0ABE  0828               	movf	define_alarm@data,w
 15358  0ABF  1903               	btfsc	3,2
 15359  0AC0  2AC2               	goto	u5211
 15360  0AC1  2AC3               	goto	u5210
 15361  0AC2                     u5211:	
 15362  0AC2  2AE1               	goto	l6341
 15363  0AC3                     u5210:	
 15364  0AC3                     l6335:	
 15365  0AC3  0828               	movf	define_alarm@data,w
 15366  0AC4  3195  2545  318A   	fcall	_strlen
 15367  0AC7  3002               	movlw	2
 15368  0AC8  0672               	xorwf	?_strlen,w
 15369  0AC9  0473               	iorwf	?_strlen+1,w
 15370  0ACA  1D03               	btfss	3,2
 15371  0ACB  2ACD               	goto	u5221
 15372  0ACC  2ACE               	goto	u5220
 15373  0ACD                     u5221:	
 15374  0ACD  2AE1               	goto	l6341
 15375  0ACE                     u5220:	
 15376  0ACE                     l6337:	
 15377  0ACE  0020               	movlb	0	; select bank0
 15378  0ACF  0828               	movf	define_alarm@data,w
 15379  0AD0  0086               	movwf	6
 15380  0AD1  0187               	clrf	7
 15381  0AD2  3033               	movlw	51
 15382  0AD3  0201               	subwf	1,w
 15383  0AD4  1803               	skipnc
 15384  0AD5  2AD7               	goto	u5231
 15385  0AD6  2AD8               	goto	u5230
 15386  0AD7                     u5231:	
 15387  0AD7  2AE1               	goto	l6341
 15388  0AD8                     u5230:	
 15389  0AD8                     l6339:	
 15390  0AD8  0A28               	incf	define_alarm@data,w
 15391  0AD9  0086               	movwf	6
 15392  0ADA  0187               	clrf	7
 15393  0ADB  3004               	movlw	4
 15394  0ADC  0201               	subwf	1,w
 15395  0ADD  1C03               	skipc
 15396  0ADE  2AE0               	goto	u5241
 15397  0ADF  2AE1               	goto	u5240
 15398  0AE0                     u5241:	
 15399  0AE0  2AEB               	goto	l6345
 15400  0AE1                     u5240:	
 15401  0AE1                     l6341:	
 15402                           
 15403                           ;communications.c: 150:         send_confirmation(0XC7, 0xFF);
 15404  0AE1  30FF               	movlw	255
 15405  0AE2  0020               	movlb	0	; select bank0
 15406  0AE3  00A7               	movwf	??_define_alarm
 15407  0AE4  0827               	movf	??_define_alarm,w
 15408  0AE5  00F8               	movwf	send_confirmation@error
 15409  0AE6  30C7               	movlw	199
 15410  0AE7  3195  2518  318A   	fcall	_send_confirmation
 15411  0AEA  2AFD               	goto	l1658
 15412  0AEB                     l6345:	
 15413                           
 15414                           ;communications.c: 153:     alat = data[0]; alal = data[1];
 15415  0AEB  0828               	movf	define_alarm@data,w
 15416  0AEC  0086               	movwf	6
 15417  0AED  0187               	clrf	7
 15418  0AEE  0801               	movf	1,w
 15419  0AEF  00A7               	movwf	??_define_alarm
 15420  0AF0  0827               	movf	??_define_alarm,w
 15421  0AF1  00EC               	movwf	_alat
 15422  0AF2  0828               	movf	define_alarm@data,w
 15423  0AF3  0086               	movwf	6
 15424  0AF4  0187               	clrf	7
 15425  0AF5  3F41               	moviw [1]fsr1
 15426  0AF6  0021               	movlb	1	; select bank1
 15427  0AF7  00D6               	movwf	_alal^(0+128)
 15428  0AF8                     l6347:	
 15429                           
 15430                           ;communications.c: 154:     send_confirmation(0XC7, 0);
 15431  0AF8  01F8               	clrf	send_confirmation@error
 15432  0AF9  30C7               	movlw	199
 15433  0AFA  3195  2518  318A   	fcall	_send_confirmation
 15434  0AFD                     l1658:	
 15435  0AFD  0008               	return
 15436  0AFE                     __end_of_define_alarm:	
 15437                           
 15438                           	psect	text25
 15439  1518                     __ptext25:	
 15440 ;; *************** function _send_confirmation *****************
 15441 ;; Defined at:
 15442 ;;		line 223 in file "communications.c"
 15443 ;; Parameters:    Size  Location     Type
 15444 ;;  cmd             1    wreg     unsigned char 
 15445 ;;  error           1    8[COMMON] unsigned char 
 15446 ;; Auto vars:     Size  Location     Type
 15447 ;;  cmd             1    3[BANK0 ] unsigned char 
 15448 ;;  msg             3    4[BANK0 ] unsigned char [3]
 15449 ;; Return value:  Size  Location     Type
 15450 ;;                  1    wreg      void 
 15451 ;; Registers used:
 15452 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15453 ;; Tracked objects:
 15454 ;;		On entry : 0/0
 15455 ;;		On exit  : 0/0
 15456 ;;		Unchanged: 0/0
 15457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15458 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15459 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15460 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15461 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15462 ;;Total ram usage:        6 bytes
 15463 ;; Hardware stack levels used:    1
 15464 ;; Hardware stack levels required when called:    8
 15465 ;; This function calls:
 15466 ;;		_send_msg
 15467 ;; This function is called by:
 15468 ;;		_interpret_message
 15469 ;;		_set_clock
 15470 ;;		_modify_pmon
 15471 ;;		_modify_time_alarm
 15472 ;;		_define_alarm
 15473 ;;		_switch_alarm
 15474 ;;		_transfer_n_registers
 15475 ;;		_transfer_registers_i
 15476 ;; This function uses a non-reentrant model
 15477 ;;
 15478                           
 15479                           
 15480                           ;psect for function _send_confirmation
 15481  1518                     _send_confirmation:	
 15482                           
 15483                           ;incstack = 0
 15484                           ; Regs used in _send_confirmation: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15485                           ;send_confirmation@cmd stored from wreg
 15486  1518  0020               	movlb	0	; select bank0
 15487  1519  00A3               	movwf	send_confirmation@cmd
 15488  151A                     l6081:	
 15489                           
 15490                           ;communications.c: 224:     char msg[] = {cmd, error, '\0'};
 15491  151A  3000               	movlw	0
 15492  151B  00A4               	movwf	send_confirmation@msg
 15493  151C  3000               	movlw	0
 15494  151D  00A5               	movwf	send_confirmation@msg+1
 15495  151E  3000               	movlw	0
 15496  151F  00A6               	movwf	send_confirmation@msg+2
 15497  1520  0823               	movf	send_confirmation@cmd,w
 15498  1521  00F9               	movwf	??_send_confirmation
 15499  1522  0879               	movf	??_send_confirmation,w
 15500  1523  00A4               	movwf	send_confirmation@msg
 15501  1524  0878               	movf	send_confirmation@error,w
 15502  1525  00F9               	movwf	??_send_confirmation
 15503  1526  0879               	movf	??_send_confirmation,w
 15504  1527  00A5               	movwf	send_confirmation@msg+1
 15505  1528                     l6083:	
 15506  1528  01A6               	clrf	send_confirmation@msg+2
 15507  1529                     l6085:	
 15508                           
 15509                           ;communications.c: 225:     send_msg(msg);
 15510  1529  3024               	movlw	(low (send_confirmation@msg| 0))& (0+255)
 15511  152A  3188  206E  3195   	fcall	_send_msg
 15512  152D                     l1726:	
 15513  152D  0008               	return
 15514  152E                     __end_of_send_confirmation:	
 15515                           
 15516                           	psect	text26
 15517  13A9                     __ptext26:	
 15518 ;; *************** function _EUSART_is_rx_ready *****************
 15519 ;; Defined at:
 15520 ;;		line 137 in file "mcc_generated_files/eusart.c"
 15521 ;; Parameters:    Size  Location     Type
 15522 ;;		None
 15523 ;; Auto vars:     Size  Location     Type
 15524 ;;		None
 15525 ;; Return value:  Size  Location     Type
 15526 ;;                  1    wreg      _Bool 
 15527 ;; Registers used:
 15528 ;;		wreg, status,2, status,0
 15529 ;; Tracked objects:
 15530 ;;		On entry : 0/0
 15531 ;;		On exit  : 0/0
 15532 ;;		Unchanged: 0/0
 15533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15538 ;;Total ram usage:        0 bytes
 15539 ;; Hardware stack levels used:    1
 15540 ;; Hardware stack levels required when called:    6
 15541 ;; This function calls:
 15542 ;;		Nothing
 15543 ;; This function is called by:
 15544 ;;		_read_msgs
 15545 ;; This function uses a non-reentrant model
 15546 ;;
 15547                           
 15548                           
 15549                           ;psect for function _EUSART_is_rx_ready
 15550  13A9                     _EUSART_is_rx_ready:	
 15551  13A9                     l6601:	
 15552                           ;incstack = 0
 15553                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
 15554                           
 15555                           
 15556                           ;mcc_generated_files/eusart.c: 139:     return (eusartRxCount ? 1 : 0);
 15557  13A9  0021               	movlb	1	; select bank1
 15558  13AA  085C               	movf	_eusartRxCount^(0+128),w	;volatile
 15559  13AB  1D03               	btfss	3,2
 15560  13AC  2BAE               	goto	u5421
 15561  13AD  2BB0               	goto	u5420
 15562  13AE                     u5421:	
 15563  13AE  3001               	movlw	1
 15564  13AF  2BB1               	goto	u5430
 15565  13B0                     u5420:	
 15566  13B0  3000               	movlw	0
 15567  13B1                     u5430:	
 15568  13B1                     l792:	
 15569  13B1  0008               	return
 15570  13B2                     __end_of_EUSART_is_rx_ready:	
 15571                           
 15572                           	psect	text27
 15573  17A5                     __ptext27:	
 15574 ;; *************** function _EUSART_Read *****************
 15575 ;; Defined at:
 15576 ;;		line 151 in file "mcc_generated_files/eusart.c"
 15577 ;; Parameters:    Size  Location     Type
 15578 ;;		None
 15579 ;; Auto vars:     Size  Location     Type
 15580 ;;  readValue       1    3[COMMON] unsigned char 
 15581 ;; Return value:  Size  Location     Type
 15582 ;;                  1    wreg      unsigned char 
 15583 ;; Registers used:
 15584 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15585 ;; Tracked objects:
 15586 ;;		On entry : 0/0
 15587 ;;		On exit  : 0/0
 15588 ;;		Unchanged: 0/0
 15589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15592 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15594 ;;Total ram usage:        2 bytes
 15595 ;; Hardware stack levels used:    1
 15596 ;; Hardware stack levels required when called:    6
 15597 ;; This function calls:
 15598 ;;		Nothing
 15599 ;; This function is called by:
 15600 ;;		_read_msgs
 15601 ;;		_getch
 15602 ;; This function uses a non-reentrant model
 15603 ;;
 15604                           
 15605                           
 15606                           ;psect for function _EUSART_Read
 15607  17A5                     _EUSART_Read:	
 15608  17A5                     l6605:	
 15609                           ;incstack = 0
 15610                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 15611                           
 15612  17A5                     l6607:	
 15613                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 15614                           
 15615                           
 15616                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 15617  17A5  0021               	movlb	1	; select bank1
 15618  17A6  085C               	movf	_eusartRxCount^(0+128),w	;volatile
 15619  17A7  1903               	btfsc	3,2
 15620  17A8  2FAA               	goto	u5441
 15621  17A9  2FAB               	goto	u5440
 15622  17AA                     u5441:	
 15623  17AA  2FA5               	goto	l6607
 15624  17AB                     u5440:	
 15625  17AB                     l6609:	
 15626                           
 15627                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
 15628  17AB  0020               	movlb	0	; select bank0
 15629  17AC  086F               	movf	_eusartRxTail,w	;volatile
 15630  17AD  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 15631  17AE  0086               	movwf	6
 15632  17AF  0187               	clrf	7
 15633  17B0  0801               	movf	1,w
 15634  17B1  00F2               	movwf	??_EUSART_Read
 15635  17B2  0872               	movf	??_EUSART_Read,w
 15636  17B3  0021               	movlb	1	; select bank1
 15637  17B4  00DB               	movwf	_eusartRxLastError^(0+128)	;volatile
 15638                           
 15639                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
 15640  17B5  0020               	movlb	0	; select bank0
 15641  17B6  086F               	movf	_eusartRxTail,w
 15642  17B7  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
 15643  17B8  0086               	movwf	6
 15644  17B9  0187               	clrf	7
 15645  17BA  0801               	movf	1,w
 15646  17BB  00F2               	movwf	??_EUSART_Read
 15647  17BC  0872               	movf	??_EUSART_Read,w
 15648  17BD  00F3               	movwf	EUSART_Read@readValue
 15649  17BE                     l6611:	
 15650  17BE  3001               	movlw	1
 15651  17BF  00F2               	movwf	??_EUSART_Read
 15652  17C0  0872               	movf	??_EUSART_Read,w
 15653  17C1  07EF               	addwf	_eusartRxTail,f	;volatile
 15654  17C2                     l6613:	
 15655                           
 15656                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
 15657  17C2  3008               	movlw	8
 15658  17C3  026F               	subwf	_eusartRxTail,w	;volatile
 15659  17C4  1C03               	skipc
 15660  17C5  2FC7               	goto	u5451
 15661  17C6  2FC8               	goto	u5450
 15662  17C7                     u5451:	
 15663  17C7  2FC9               	goto	l6617
 15664  17C8                     u5450:	
 15665  17C8                     l6615:	
 15666                           
 15667                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
 15668  17C8  01EF               	clrf	_eusartRxTail	;volatile
 15669  17C9                     l6617:	
 15670                           
 15671                           ;mcc_generated_files/eusart.c: 166:     PIE3bits.RCIE = 0;
 15672  17C9  002E               	movlb	14	; select bank14
 15673  17CA  1299               	bcf	25,5	;volatile
 15674  17CB                     l6619:	
 15675                           
 15676                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
 15677  17CB  3001               	movlw	1
 15678  17CC  0021               	movlb	1	; select bank1
 15679  17CD  02DC               	subwf	_eusartRxCount^(0+128),f	;volatile
 15680  17CE                     l6621:	
 15681                           
 15682                           ;mcc_generated_files/eusart.c: 168:     PIE3bits.RCIE = 1;
 15683  17CE  002E               	movlb	14	; select bank14
 15684  17CF  1699               	bsf	25,5	;volatile
 15685  17D0                     l6623:	
 15686                           
 15687                           ;mcc_generated_files/eusart.c: 170:     return readValue;
 15688  17D0  0873               	movf	EUSART_Read@readValue,w
 15689  17D1                     l805:	
 15690  17D1  0008               	return
 15691  17D2                     __end_of_EUSART_Read:	
 15692                           
 15693                           	psect	text28
 15694  0DDE                     __ptext28:	
 15695 ;; *************** function _notification_memory *****************
 15696 ;; Defined at:
 15697 ;;		line 217 in file "communications.c"
 15698 ;; Parameters:    Size  Location     Type
 15699 ;;		None
 15700 ;; Auto vars:     Size  Location     Type
 15701 ;;  msg             6    3[BANK0 ] unsigned char [6]
 15702 ;;  wi              1   14[BANK0 ] unsigned char 
 15703 ;;  N               1   13[BANK0 ] unsigned char 
 15704 ;;  ri              1   10[BANK0 ] unsigned char 
 15705 ;;  nr              1    9[BANK0 ] unsigned char 
 15706 ;; Return value:  Size  Location     Type
 15707 ;;                  1    wreg      void 
 15708 ;; Registers used:
 15709 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15710 ;; Tracked objects:
 15711 ;;		On entry : 0/0
 15712 ;;		On exit  : 0/0
 15713 ;;		Unchanged: 0/0
 15714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15716 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15718 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15719 ;;Total ram usage:       14 bytes
 15720 ;; Hardware stack levels used:    1
 15721 ;; Hardware stack levels required when called:    8
 15722 ;; This function calls:
 15723 ;;		_read_iwrt
 15724 ;;		_read_nreg
 15725 ;;		_ring_buffer_laped
 15726 ;;		_send_msg
 15727 ;; This function is called by:
 15728 ;;		_main
 15729 ;; This function uses a non-reentrant model
 15730 ;;
 15731                           
 15732                           
 15733                           ;psect for function _notification_memory
 15734  0DDE                     _notification_memory:	
 15735  0DDE                     l6985:	
 15736                           ;incstack = 0
 15737                           ; Regs used in _notification_memory: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15738                           
 15739                           
 15740                           ;communications.c: 218:     uint8_t N = read_nreg(), wi = read_iwrt(), nr = ring_buffer_
      +                          laped() ? N : wi, ri = iread;
 15741  0DDE  3193  2380  318D   	fcall	_read_nreg
 15742  0DE1  00F8               	movwf	??_notification_memory
 15743  0DE2  0878               	movf	??_notification_memory,w
 15744  0DE3  0020               	movlb	0	; select bank0
 15745  0DE4  00AD               	movwf	notification_memory@N
 15746  0DE5  3193  2398  318D   	fcall	_read_iwrt
 15747  0DE8  00F8               	movwf	??_notification_memory
 15748  0DE9  0878               	movf	??_notification_memory,w
 15749  0DEA  0020               	movlb	0	; select bank0
 15750  0DEB  00AE               	movwf	notification_memory@wi
 15751  0DEC  3194  245C  318D   	fcall	_ring_buffer_laped
 15752  0DEF  3A00               	xorlw	0
 15753  0DF0  1D03               	skipz
 15754  0DF1  2DF3               	goto	u6061
 15755  0DF2  2DF4               	goto	u6060
 15756  0DF3                     u6061:	
 15757  0DF3  2DFD               	goto	l6989
 15758  0DF4                     u6060:	
 15759  0DF4                     l6987:	
 15760  0DF4  0020               	movlb	0	; select bank0
 15761  0DF5  082E               	movf	notification_memory@wi,w
 15762  0DF6  00F8               	movwf	??_notification_memory
 15763  0DF7  01F9               	clrf	??_notification_memory+1
 15764  0DF8  0878               	movf	??_notification_memory,w
 15765  0DF9  00AB               	movwf	_notification_memory$2857
 15766  0DFA  0879               	movf	??_notification_memory+1,w
 15767  0DFB  00AC               	movwf	_notification_memory$2857+1
 15768  0DFC  2E05               	goto	l1718
 15769  0DFD                     l6989:	
 15770  0DFD  0020               	movlb	0	; select bank0
 15771  0DFE  082D               	movf	notification_memory@N,w
 15772  0DFF  00F8               	movwf	??_notification_memory
 15773  0E00  01F9               	clrf	??_notification_memory+1
 15774  0E01  0878               	movf	??_notification_memory,w
 15775  0E02  00AB               	movwf	_notification_memory$2857
 15776  0E03  0879               	movf	??_notification_memory+1,w
 15777  0E04  00AC               	movwf	_notification_memory$2857+1
 15778  0E05                     l1718:	
 15779  0E05  082B               	movf	_notification_memory$2857,w
 15780  0E06  00F8               	movwf	??_notification_memory
 15781  0E07  0878               	movf	??_notification_memory,w
 15782  0E08  00A9               	movwf	notification_memory@nr
 15783  0E09  087A               	movf	_iread,w	;volatile
 15784  0E0A  00F8               	movwf	??_notification_memory
 15785  0E0B  0878               	movf	??_notification_memory,w
 15786  0E0C  00AA               	movwf	notification_memory@ri
 15787  0E0D                     l6991:	
 15788                           
 15789                           ;communications.c: 219:     char msg[] = {0XCC, N, nr, ri, wi, '\0'};
 15790  0E0D  3023               	movlw	low notification_memory@msg
 15791  0E0E  0086               	movwf	6
 15792  0E0F  3000               	movlw	high notification_memory@msg
 15793  0E10  0087               	movwf	7
 15794  0E11  3006               	movlw	6
 15795  0E12  00F8               	movwf	??_notification_memory
 15796  0E13  3000               	movlw	0
 15797  0E14                     u6070:	
 15798  0E14  001E               	movwi fsr1++
 15799  0E15  0BF8               	decfsz	??_notification_memory,f
 15800  0E16  2E14               	goto	u6070
 15801  0E17                     l6993:	
 15802  0E17  30CC               	movlw	204
 15803  0E18  00F8               	movwf	??_notification_memory
 15804  0E19  0878               	movf	??_notification_memory,w
 15805  0E1A  00A3               	movwf	notification_memory@msg
 15806  0E1B                     l6995:	
 15807  0E1B  082D               	movf	notification_memory@N,w
 15808  0E1C  00F8               	movwf	??_notification_memory
 15809  0E1D  0878               	movf	??_notification_memory,w
 15810  0E1E  00A4               	movwf	notification_memory@msg+1
 15811  0E1F                     l6997:	
 15812  0E1F  0829               	movf	notification_memory@nr,w
 15813  0E20  00F8               	movwf	??_notification_memory
 15814  0E21  0878               	movf	??_notification_memory,w
 15815  0E22  00A5               	movwf	notification_memory@msg+2
 15816  0E23                     l6999:	
 15817  0E23  082A               	movf	notification_memory@ri,w
 15818  0E24  00F8               	movwf	??_notification_memory
 15819  0E25  0878               	movf	??_notification_memory,w
 15820  0E26  00A6               	movwf	notification_memory@msg+3
 15821  0E27                     l7001:	
 15822  0E27  082E               	movf	notification_memory@wi,w
 15823  0E28  00F8               	movwf	??_notification_memory
 15824  0E29  0878               	movf	??_notification_memory,w
 15825  0E2A  00A7               	movwf	notification_memory@msg+4
 15826  0E2B                     l7003:	
 15827  0E2B  01A8               	clrf	notification_memory@msg+5
 15828  0E2C                     l7005:	
 15829                           
 15830                           ;communications.c: 220:     send_msg(msg);
 15831  0E2C  3023               	movlw	(low (notification_memory@msg| 0))& (0+255)
 15832  0E2D  3188  206E  318D   	fcall	_send_msg
 15833  0E30                     l1721:	
 15834  0E30  0008               	return
 15835  0E31                     __end_of_notification_memory:	
 15836                           
 15837                           	psect	text29
 15838  086E                     __ptext29:	
 15839 ;; *************** function _send_msg *****************
 15840 ;; Defined at:
 15841 ;;		line 228 in file "communications.c"
 15842 ;; Parameters:    Size  Location     Type
 15843 ;;  msg             1    wreg     PTR unsigned char 
 15844 ;;		 -> send_confirmation@msg(3), notification_memory@msg(6), registers_info@msg(6), read_alarms@msg(5), 
 15845 ;;		 -> read_param@msg(4), read_temp_lum@msg(4), read_clock@msg(5), 
 15846 ;; Auto vars:     Size  Location     Type
 15847 ;;  msg             1    2[BANK0 ] PTR unsigned char 
 15848 ;;		 -> send_confirmation@msg(3), notification_memory@msg(6), registers_info@msg(6), read_alarms@msg(5), 
 15849 ;;		 -> read_param@msg(4), read_temp_lum@msg(4), read_clock@msg(5), 
 15850 ;;  i               2    0[BANK0 ] int 
 15851 ;; Return value:  Size  Location     Type
 15852 ;;                  1    wreg      void 
 15853 ;; Registers used:
 15854 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15855 ;; Tracked objects:
 15856 ;;		On entry : 0/0
 15857 ;;		On exit  : 0/0
 15858 ;;		Unchanged: 0/0
 15859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15861 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15862 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15863 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15864 ;;Total ram usage:        4 bytes
 15865 ;; Hardware stack levels used:    1
 15866 ;; Hardware stack levels required when called:    7
 15867 ;; This function calls:
 15868 ;;		_EUSART_Write
 15869 ;;		_strlen
 15870 ;; This function is called by:
 15871 ;;		_read_clock
 15872 ;;		_read_temp_lum
 15873 ;;		_read_param
 15874 ;;		_read_alarms
 15875 ;;		_registers_info
 15876 ;;		_notification_memory
 15877 ;;		_send_confirmation
 15878 ;; This function uses a non-reentrant model
 15879 ;;
 15880                           
 15881                           
 15882                           ;psect for function _send_msg
 15883  086E                     _send_msg:	
 15884                           
 15885                           ;incstack = 0
 15886                           ; Regs used in _send_msg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15887                           ;send_msg@msg stored from wreg
 15888  086E  0020               	movlb	0	; select bank0
 15889  086F  00A2               	movwf	send_msg@msg
 15890  0870                     l5985:	
 15891                           
 15892                           ;communications.c: 229:     EUSART_Write(0xFD);
 15893  0870  30FD               	movlw	253
 15894  0871  3197  277B  3188   	fcall	_EUSART_Write
 15895  0874                     l5987:	
 15896                           
 15897                           ;communications.c: 230:     for(int i = 0; i < strlen(msg); ++i) EUSART_Write(msg[i]);
 15898  0874  0020               	movlb	0	; select bank0
 15899  0875  01A0               	clrf	send_msg@i
 15900  0876  01A1               	clrf	send_msg@i+1
 15901  0877  2887               	goto	l5993
 15902  0878                     l5989:	
 15903  0878  0820               	movf	send_msg@i,w
 15904  0879  0722               	addwf	send_msg@msg,w
 15905  087A  00F7               	movwf	??_send_msg
 15906  087B  0877               	movf	??_send_msg,w
 15907  087C  0086               	movwf	6
 15908  087D  0187               	clrf	7
 15909  087E  0801               	movf	1,w
 15910  087F  3197  277B  3188   	fcall	_EUSART_Write
 15911  0882                     l5991:	
 15912  0882  3001               	movlw	1
 15913  0883  0020               	movlb	0	; select bank0
 15914  0884  07A0               	addwf	send_msg@i,f
 15915  0885  3000               	movlw	0
 15916  0886  3DA1               	addwfc	send_msg@i+1,f
 15917  0887                     l5993:	
 15918  0887  0822               	movf	send_msg@msg,w
 15919  0888  3195  2545  3188   	fcall	_strlen
 15920  088B  0873               	movf	?_strlen+1,w
 15921  088C  0020               	movlb	0	; select bank0
 15922  088D  0221               	subwf	send_msg@i+1,w
 15923  088E  1D03               	skipz
 15924  088F  2892               	goto	u4655
 15925  0890  0872               	movf	?_strlen,w
 15926  0891  0220               	subwf	send_msg@i,w
 15927  0892                     u4655:	
 15928  0892  1C03               	skipc
 15929  0893  2895               	goto	u4651
 15930  0894  2896               	goto	u4650
 15931  0895                     u4651:	
 15932  0895  2878               	goto	l5989
 15933  0896                     u4650:	
 15934  0896                     l5995:	
 15935                           
 15936                           ;communications.c: 232:     EUSART_Write(0xFE);
 15937  0896  30FE               	movlw	254
 15938  0897  3197  277B  3188   	fcall	_EUSART_Write
 15939  089A                     l5997:	
 15940                           
 15941                           ;communications.c: 233:     __nop();
 15942  089A  0000               	nop
 15943  089B                     l1732:	
 15944  089B  0008               	return
 15945  089C                     __end_of_send_msg:	
 15946                           
 15947                           	psect	text30
 15948  1545                     __ptext30:	
 15949 ;; *************** function _strlen *****************
 15950 ;; Defined at:
 15951 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 15952 ;; Parameters:    Size  Location     Type
 15953 ;;  s               1    wreg     PTR const unsigned char 
 15954 ;;		 -> send_confirmation@msg(3), notification_memory@msg(6), registers_info@msg(6), read_alarms@msg(5), 
 15955 ;;		 -> read_param@msg(4), read_temp_lum@msg(4), read_clock@msg(5), NULL(0), 
 15956 ;;		 -> read_msgs@aux(8), 
 15957 ;; Auto vars:     Size  Location     Type
 15958 ;;  s               1    6[COMMON] PTR const unsigned char 
 15959 ;;		 -> send_confirmation@msg(3), notification_memory@msg(6), registers_info@msg(6), read_alarms@msg(5), 
 15960 ;;		 -> read_param@msg(4), read_temp_lum@msg(4), read_clock@msg(5), NULL(0), 
 15961 ;;		 -> read_msgs@aux(8), 
 15962 ;;  a               1    5[COMMON] PTR const unsigned char 
 15963 ;;		 -> send_confirmation@msg(3), notification_memory@msg(6), registers_info@msg(6), read_alarms@msg(5), 
 15964 ;;		 -> read_param@msg(4), read_temp_lum@msg(4), read_clock@msg(5), NULL(0), 
 15965 ;;		 -> read_msgs@aux(8), 
 15966 ;; Return value:  Size  Location     Type
 15967 ;;                  2    2[COMMON] unsigned int 
 15968 ;; Registers used:
 15969 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15970 ;; Tracked objects:
 15971 ;;		On entry : 0/0
 15972 ;;		On exit  : 0/0
 15973 ;;		Unchanged: 0/0
 15974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15976 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15977 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15978 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15979 ;;Total ram usage:        5 bytes
 15980 ;; Hardware stack levels used:    1
 15981 ;; Hardware stack levels required when called:    6
 15982 ;; This function calls:
 15983 ;;		Nothing
 15984 ;; This function is called by:
 15985 ;;		_interpret_message
 15986 ;;		_set_clock
 15987 ;;		_modify_pmon
 15988 ;;		_modify_time_alarm
 15989 ;;		_define_alarm
 15990 ;;		_switch_alarm
 15991 ;;		_transfer_n_registers
 15992 ;;		_transfer_registers_i
 15993 ;;		_send_msg
 15994 ;; This function uses a non-reentrant model
 15995 ;;
 15996                           
 15997                           
 15998                           ;psect for function _strlen
 15999  1545                     _strlen:	
 16000                           
 16001                           ;incstack = 0
 16002                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 16003                           ;strlen@s stored from wreg
 16004  1545  00F6               	movwf	strlen@s
 16005  1546                     l5935:	
 16006  1546  0876               	movf	strlen@s,w
 16007  1547  00F4               	movwf	??_strlen
 16008  1548  0874               	movf	??_strlen,w
 16009  1549  00F5               	movwf	strlen@a
 16010  154A  2D4F               	goto	l5939
 16011  154B                     l5937:	
 16012  154B  3001               	movlw	1
 16013  154C  00F4               	movwf	??_strlen
 16014  154D  0874               	movf	??_strlen,w
 16015  154E  07F6               	addwf	strlen@s,f
 16016  154F                     l5939:	
 16017  154F  0876               	movf	strlen@s,w
 16018  1550  0086               	movwf	6
 16019  1551  0187               	clrf	7
 16020  1552  0801               	movf	1,w
 16021  1553  1D03               	btfss	3,2
 16022  1554  2D56               	goto	u4551
 16023  1555  2D57               	goto	u4550
 16024  1556                     u4551:	
 16025  1556  2D4B               	goto	l5937
 16026  1557                     u4550:	
 16027  1557                     l5941:	
 16028  1557  0875               	movf	strlen@a,w
 16029  1558  0276               	subwf	strlen@s,w
 16030  1559  00F2               	movwf	?_strlen
 16031  155A  01F3               	clrf	?_strlen+1
 16032  155B  1BF2               	btfsc	?_strlen,7
 16033  155C  03F3               	decf	?_strlen+1,f
 16034  155D                     l2349:	
 16035  155D  0008               	return
 16036  155E                     __end_of_strlen:	
 16037                           
 16038                           	psect	text31
 16039  177B                     __ptext31:	
 16040 ;; *************** function _EUSART_Write *****************
 16041 ;; Defined at:
 16042 ;;		line 173 in file "mcc_generated_files/eusart.c"
 16043 ;; Parameters:    Size  Location     Type
 16044 ;;  txData          1    wreg     unsigned char 
 16045 ;; Auto vars:     Size  Location     Type
 16046 ;;  txData          1    3[COMMON] unsigned char 
 16047 ;; Return value:  Size  Location     Type
 16048 ;;                  1    wreg      void 
 16049 ;; Registers used:
 16050 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16051 ;; Tracked objects:
 16052 ;;		On entry : 0/0
 16053 ;;		On exit  : 0/0
 16054 ;;		Unchanged: 0/0
 16055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16058 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16059 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16060 ;;Total ram usage:        2 bytes
 16061 ;; Hardware stack levels used:    1
 16062 ;; Hardware stack levels required when called:    6
 16063 ;; This function calls:
 16064 ;;		Nothing
 16065 ;; This function is called by:
 16066 ;;		_putch
 16067 ;;		_send_msg
 16068 ;; This function uses a non-reentrant model
 16069 ;;
 16070                           
 16071                           
 16072                           ;psect for function _EUSART_Write
 16073  177B                     _EUSART_Write:	
 16074                           
 16075                           ;incstack = 0
 16076                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 16077                           ;EUSART_Write@txData stored from wreg
 16078  177B  00F3               	movwf	EUSART_Write@txData
 16079  177C                     l5877:	
 16080  177C                     l5879:	
 16081                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
 16082                           
 16083                           
 16084                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
 16085  177C  0021               	movlb	1	; select bank1
 16086  177D  086F               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
 16087  177E  1903               	btfsc	3,2
 16088  177F  2F81               	goto	u4471
 16089  1780  2F82               	goto	u4470
 16090  1781                     u4471:	
 16091  1781  2F7C               	goto	l5879
 16092  1782                     u4470:	
 16093  1782                     l810:	
 16094                           
 16095                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE3bits.TXIE)
 16096  1782  002E               	movlb	14	; select bank14
 16097  1783  1A19               	btfsc	25,4	;volatile
 16098  1784  2F86               	goto	u4481
 16099  1785  2F87               	goto	u4480
 16100  1786                     u4481:	
 16101  1786  2F8B               	goto	l811
 16102  1787                     u4480:	
 16103  1787                     l5881:	
 16104                           
 16105                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TX1
      +                          REG = txData;
 16106  1787  0873               	movf	EUSART_Write@txData,w
 16107  1788  0022               	movlb	2	; select bank2
 16108  1789  009A               	movwf	26	;volatile
 16109                           
 16110                           ;mcc_generated_files/eusart.c: 182:     }
 16111  178A  2FA2               	goto	l5893
 16112  178B                     l811:	
 16113                           ;mcc_generated_files/eusart.c: 183:     else
 16114                           
 16115                           
 16116                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          3bits.TXIE = 0;
 16117  178B  1219               	bcf	25,4	;volatile
 16118  178C                     l5883:	
 16119                           
 16120                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
 16121  178C  0873               	movf	EUSART_Write@txData,w
 16122  178D  00F2               	movwf	??_EUSART_Write
 16123  178E  0021               	movlb	1	; select bank1
 16124  178F  085E               	movf	_eusartTxHead^(0+128),w
 16125  1790  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
 16126  1791  0086               	movwf	6
 16127  1792  0187               	clrf	7
 16128  1793  0872               	movf	??_EUSART_Write,w
 16129  1794  0081               	movwf	1
 16130  1795                     l5885:	
 16131  1795  3001               	movlw	1
 16132  1796  00F2               	movwf	??_EUSART_Write
 16133  1797  0872               	movf	??_EUSART_Write,w
 16134  1798  07DE               	addwf	_eusartTxHead^(0+128),f	;volatile
 16135  1799                     l5887:	
 16136                           
 16137                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 16138  1799  3008               	movlw	8
 16139  179A  025E               	subwf	_eusartTxHead^(0+128),w	;volatile
 16140  179B  1C03               	skipc
 16141  179C  2F9E               	goto	u4491
 16142  179D  2F9F               	goto	u4490
 16143  179E                     u4491:	
 16144  179E  2FA0               	goto	l5891
 16145  179F                     u4490:	
 16146  179F                     l5889:	
 16147                           
 16148                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
 16149  179F  01DE               	clrf	_eusartTxHead^(0+128)	;volatile
 16150  17A0                     l5891:	
 16151                           
 16152                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
 16153  17A0  3001               	movlw	1
 16154  17A1  02EF               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 16155  17A2                     l5893:	
 16156                           
 16157                           ;mcc_generated_files/eusart.c: 193:     PIE3bits.TXIE = 1;
 16158  17A2  002E               	movlb	14	; select bank14
 16159  17A3  1619               	bsf	25,4	;volatile
 16160  17A4                     l814:	
 16161  17A4  0008               	return
 16162  17A5                     __end_of_EUSART_Write:	
 16163                           
 16164                           	psect	text32
 16165  145C                     __ptext32:	
 16166 ;; *************** function _ring_buffer_laped *****************
 16167 ;; Defined at:
 16168 ;;		line 110 in file "eeprom.c"
 16169 ;; Parameters:    Size  Location     Type
 16170 ;;		None
 16171 ;; Auto vars:     Size  Location     Type
 16172 ;;		None
 16173 ;; Return value:  Size  Location     Type
 16174 ;;                  1    wreg      _Bool 
 16175 ;; Registers used:
 16176 ;;		wreg, status,2, pclath, cstack
 16177 ;; Tracked objects:
 16178 ;;		On entry : 0/0
 16179 ;;		On exit  : 0/0
 16180 ;;		Unchanged: 0/0
 16181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16186 ;;Total ram usage:        0 bytes
 16187 ;; Hardware stack levels used:    1
 16188 ;; Hardware stack levels required when called:    7
 16189 ;; This function calls:
 16190 ;;		_DATAEE_ReadByte
 16191 ;; This function is called by:
 16192 ;;		_registers_info
 16193 ;;		_transfer_n_registers
 16194 ;;		_transfer_registers_i
 16195 ;;		_transfer_registers
 16196 ;;		_notification_memory
 16197 ;; This function uses a non-reentrant model
 16198 ;;
 16199                           
 16200                           
 16201                           ;psect for function _ring_buffer_laped
 16202  145C                     _ring_buffer_laped:	
 16203  145C                     l5977:	
 16204                           ;incstack = 0
 16205                           ; Regs used in _ring_buffer_laped: [wreg+status,2+pclath+cstack]
 16206                           
 16207  145C  3009               	movlw	9
 16208  145D  00F2               	movwf	DATAEE_ReadByte@bAdd
 16209  145E  30F0               	movlw	240
 16210  145F  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16211  1460  3193  23D3  3194   	fcall	_DATAEE_ReadByte
 16212  1463  3A55               	xorlw	85
 16213  1464  1903               	skipnz
 16214  1465  2C67               	goto	u4631
 16215  1466  2C69               	goto	u4630
 16216  1467                     u4631:	
 16217  1467  3001               	movlw	1
 16218  1468  2C6A               	goto	u4640
 16219  1469                     u4630:	
 16220  1469  3000               	movlw	0
 16221  146A                     u4640:	
 16222  146A                     l1418:	
 16223  146A  0008               	return
 16224  146B                     __end_of_ring_buffer_laped:	
 16225                           
 16226                           	psect	text33
 16227  1398                     __ptext33:	
 16228 ;; *************** function _read_iwrt *****************
 16229 ;; Defined at:
 16230 ;;		line 126 in file "eeprom.c"
 16231 ;; Parameters:    Size  Location     Type
 16232 ;;		None
 16233 ;; Auto vars:     Size  Location     Type
 16234 ;;		None
 16235 ;; Return value:  Size  Location     Type
 16236 ;;                  1    wreg      unsigned char 
 16237 ;; Registers used:
 16238 ;;		wreg, status,2, pclath, cstack
 16239 ;; Tracked objects:
 16240 ;;		On entry : 0/0
 16241 ;;		On exit  : 0/0
 16242 ;;		Unchanged: 0/0
 16243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16248 ;;Total ram usage:        0 bytes
 16249 ;; Hardware stack levels used:    1
 16250 ;; Hardware stack levels required when called:    7
 16251 ;; This function calls:
 16252 ;;		_DATAEE_ReadByte
 16253 ;; This function is called by:
 16254 ;;		_not_transferred
 16255 ;;		_registers_info
 16256 ;;		_transfer_n_registers
 16257 ;;		_transfer_registers_i
 16258 ;;		_transfer_registers
 16259 ;;		_notification_memory
 16260 ;; This function uses a non-reentrant model
 16261 ;;
 16262                           
 16263                           
 16264                           ;psect for function _read_iwrt
 16265  1398                     _read_iwrt:	
 16266  1398                     l5981:	
 16267                           ;incstack = 0
 16268                           ; Regs used in _read_iwrt: [wreg+status,2+pclath+cstack]
 16269                           
 16270  1398  300A               	movlw	10
 16271  1399  00F2               	movwf	DATAEE_ReadByte@bAdd
 16272  139A  30F0               	movlw	240
 16273  139B  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16274  139C  3193  23D3  3193   	fcall	_DATAEE_ReadByte
 16275  139F                     l1453:	
 16276  139F  0008               	return
 16277  13A0                     __end_of_read_iwrt:	
 16278                           
 16279                           	psect	text34
 16280  0D3B                     __ptext34:	
 16281 ;; *************** function _load_eeprom *****************
 16282 ;; Defined at:
 16283 ;;		line 100 in file "utils.c"
 16284 ;; Parameters:    Size  Location     Type
 16285 ;;		None
 16286 ;; Auto vars:     Size  Location     Type
 16287 ;;		None
 16288 ;; Return value:  Size  Location     Type
 16289 ;;                  1    wreg      void 
 16290 ;; Registers used:
 16291 ;;		wreg, status,2, status,0, pclath, cstack
 16292 ;; Tracked objects:
 16293 ;;		On entry : 0/0
 16294 ;;		On exit  : 0/0
 16295 ;;		Unchanged: 0/0
 16296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16299 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16300 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16301 ;;Total ram usage:        1 bytes
 16302 ;; Hardware stack levels used:    1
 16303 ;; Hardware stack levels required when called:    9
 16304 ;; This function calls:
 16305 ;;		_check_corruption
 16306 ;;		_default_setup
 16307 ;;		_read_alaf
 16308 ;;		_read_alal
 16309 ;;		_read_alat
 16310 ;;		_read_clkh
 16311 ;;		_read_clkm
 16312 ;;		_read_nreg
 16313 ;;		_read_pmon
 16314 ;;		_read_tala
 16315 ;;		_used
 16316 ;; This function is called by:
 16317 ;;		_main
 16318 ;; This function uses a non-reentrant model
 16319 ;;
 16320                           
 16321                           
 16322                           ;psect for function _load_eeprom
 16323  0D3B                     _load_eeprom:	
 16324  0D3B                     l6883:	
 16325                           ;incstack = 0
 16326                           ; Regs used in _load_eeprom: [wreg+status,2+status,0+pclath+cstack]
 16327                           
 16328                           
 16329                           ;utils.c: 101:     if(used() && check_corruption()){
 16330  0D3B  3195  2592  318D   	fcall	_used
 16331  0D3E  3A00               	xorlw	0
 16332  0D3F  1903               	skipnz
 16333  0D40  2D42               	goto	u5721
 16334  0D41  2D43               	goto	u5720
 16335  0D42                     u5721:	
 16336  0D42  2D87               	goto	l6889
 16337  0D43                     u5720:	
 16338  0D43                     l6885:	
 16339  0D43  3194  24D7  318D   	fcall	_check_corruption
 16340  0D46  3A00               	xorlw	0
 16341  0D47  1903               	skipnz
 16342  0D48  2D4A               	goto	u5731
 16343  0D49  2D4B               	goto	u5730
 16344  0D4A                     u5731:	
 16345  0D4A  2D87               	goto	l6889
 16346  0D4B                     u5730:	
 16347  0D4B                     l6887:	
 16348                           
 16349                           ;utils.c: 102:         pmon = read_pmon();
 16350  0D4B  3193  2388  318D   	fcall	_read_pmon
 16351  0D4E  0020               	movlb	0	; select bank0
 16352  0D4F  00B3               	movwf	??_load_eeprom
 16353  0D50  0833               	movf	??_load_eeprom,w
 16354  0D51  00ED               	movwf	_pmon
 16355                           
 16356                           ;utils.c: 103:         nreg = read_nreg();
 16357  0D52  3193  2380  318D   	fcall	_read_nreg
 16358  0D55  0020               	movlb	0	; select bank0
 16359  0D56  00B3               	movwf	??_load_eeprom
 16360  0D57  0833               	movf	??_load_eeprom,w
 16361  0D58  0021               	movlb	1	; select bank1
 16362  0D59  00CB               	movwf	_nreg^(0+128)
 16363                           
 16364                           ;utils.c: 104:         tala = read_tala();
 16365  0D5A  3193  2390  318D   	fcall	_read_tala
 16366  0D5D  0020               	movlb	0	; select bank0
 16367  0D5E  00B3               	movwf	??_load_eeprom
 16368  0D5F  0833               	movf	??_load_eeprom,w
 16369  0D60  0021               	movlb	1	; select bank1
 16370  0D61  00D7               	movwf	_tala^(0+128)
 16371                           
 16372                           ;utils.c: 105:         alat = read_alat();
 16373  0D62  3193  2368  318D   	fcall	_read_alat
 16374  0D65  0020               	movlb	0	; select bank0
 16375  0D66  00B3               	movwf	??_load_eeprom
 16376  0D67  0833               	movf	??_load_eeprom,w
 16377  0D68  00EC               	movwf	_alat
 16378                           
 16379                           ;utils.c: 106:         alal = read_alal();
 16380  0D69  3193  2360  318D   	fcall	_read_alal
 16381  0D6C  0020               	movlb	0	; select bank0
 16382  0D6D  00B3               	movwf	??_load_eeprom
 16383  0D6E  0833               	movf	??_load_eeprom,w
 16384  0D6F  0021               	movlb	1	; select bank1
 16385  0D70  00D6               	movwf	_alal^(0+128)
 16386                           
 16387                           ;utils.c: 107:         alaf = read_alaf();
 16388  0D71  3193  2358  318D   	fcall	_read_alaf
 16389  0D74  0020               	movlb	0	; select bank0
 16390  0D75  00B3               	movwf	??_load_eeprom
 16391  0D76  0833               	movf	??_load_eeprom,w
 16392  0D77  00EB               	movwf	_alaf
 16393                           
 16394                           ;utils.c: 108:         clkh = read_clkh();
 16395  0D78  3193  2370  318D   	fcall	_read_clkh
 16396  0D7B  0020               	movlb	0	; select bank0
 16397  0D7C  00B3               	movwf	??_load_eeprom
 16398  0D7D  0833               	movf	??_load_eeprom,w
 16399  0D7E  00EA               	movwf	_clkh	;volatile
 16400                           
 16401                           ;utils.c: 109:         clkm = read_clkm();
 16402  0D7F  3193  2378  318D   	fcall	_read_clkm
 16403  0D82  0020               	movlb	0	; select bank0
 16404  0D83  00B3               	movwf	??_load_eeprom
 16405  0D84  0833               	movf	??_load_eeprom,w
 16406  0D85  00E9               	movwf	_clkm	;volatile
 16407                           
 16408                           ;utils.c: 110:     } else
 16409  0D86  2D8A               	goto	l1374
 16410  0D87                     l6889:	
 16411                           
 16412                           ;utils.c: 111:         default_setup();
 16413  0D87  318A  2205  318D   	fcall	_default_setup
 16414  0D8A                     l1374:	
 16415  0D8A  0008               	return
 16416  0D8B                     __end_of_load_eeprom:	
 16417                           
 16418                           	psect	text35
 16419  1592                     __ptext35:	
 16420 ;; *************** function _used *****************
 16421 ;; Defined at:
 16422 ;;		line 112 in file "eeprom.c"
 16423 ;; Parameters:    Size  Location     Type
 16424 ;;		None
 16425 ;; Auto vars:     Size  Location     Type
 16426 ;;  val             1    6[COMMON] unsigned char 
 16427 ;; Return value:  Size  Location     Type
 16428 ;;                  1    wreg      _Bool 
 16429 ;; Registers used:
 16430 ;;		wreg, status,2, status,0, pclath, cstack
 16431 ;; Tracked objects:
 16432 ;;		On entry : 0/0
 16433 ;;		On exit  : 0/0
 16434 ;;		Unchanged: 0/0
 16435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16437 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16438 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16439 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16440 ;;Total ram usage:        3 bytes
 16441 ;; Hardware stack levels used:    1
 16442 ;; Hardware stack levels required when called:    7
 16443 ;; This function calls:
 16444 ;;		_DATAEE_ReadByte
 16445 ;; This function is called by:
 16446 ;;		_load_eeprom
 16447 ;; This function uses a non-reentrant model
 16448 ;;
 16449                           
 16450                           
 16451                           ;psect for function _used
 16452  1592                     _used:	
 16453  1592                     l6705:	
 16454                           ;incstack = 0
 16455                           ; Regs used in _used: [wreg+status,2+status,0+pclath+cstack]
 16456                           
 16457                           
 16458                           ;eeprom.c: 113:     uint8_t val = DATAEE_ReadByte(0xF009);
 16459  1592  3009               	movlw	9
 16460  1593  00F2               	movwf	DATAEE_ReadByte@bAdd
 16461  1594  30F0               	movlw	240
 16462  1595  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16463  1596  3193  23D3  3195   	fcall	_DATAEE_ReadByte
 16464  1599  00F4               	movwf	??_used
 16465  159A  0874               	movf	??_used,w
 16466  159B  00F6               	movwf	used@val
 16467  159C                     l6707:	
 16468                           
 16469                           ;eeprom.c: 114:     return (0xAA == val || 0x55 == val);
 16470  159C  01F5               	clrf	_used$2620
 16471  159D  0AF5               	incf	_used$2620,f
 16472  159E                     l6709:	
 16473  159E  30AA               	movlw	170
 16474  159F  0676               	xorwf	used@val,w
 16475  15A0  1903               	btfsc	3,2
 16476  15A1  2DA3               	goto	u5581
 16477  15A2  2DA4               	goto	u5580
 16478  15A3                     u5581:	
 16479  15A3  2DAB               	goto	l6715
 16480  15A4                     u5580:	
 16481  15A4                     l6711:	
 16482  15A4  3055               	movlw	85
 16483  15A5  0676               	xorwf	used@val,w
 16484  15A6  1903               	btfsc	3,2
 16485  15A7  2DA9               	goto	u5591
 16486  15A8  2DAA               	goto	u5590
 16487  15A9                     u5591:	
 16488  15A9  2DAB               	goto	l6715
 16489  15AA                     u5590:	
 16490  15AA                     l6713:	
 16491  15AA  01F5               	clrf	_used$2620
 16492  15AB                     l6715:	
 16493  15AB  0875               	movf	_used$2620,w
 16494  15AC                     l1423:	
 16495  15AC  0008               	return
 16496  15AD                     __end_of_used:	
 16497                           
 16498                           	psect	text36
 16499  1390                     __ptext36:	
 16500 ;; *************** function _read_tala *****************
 16501 ;; Defined at:
 16502 ;;		line 120 in file "eeprom.c"
 16503 ;; Parameters:    Size  Location     Type
 16504 ;;		None
 16505 ;; Auto vars:     Size  Location     Type
 16506 ;;		None
 16507 ;; Return value:  Size  Location     Type
 16508 ;;                  1    wreg      unsigned char 
 16509 ;; Registers used:
 16510 ;;		wreg, status,2, pclath, cstack
 16511 ;; Tracked objects:
 16512 ;;		On entry : 0/0
 16513 ;;		On exit  : 0/0
 16514 ;;		Unchanged: 0/0
 16515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16520 ;;Total ram usage:        0 bytes
 16521 ;; Hardware stack levels used:    1
 16522 ;; Hardware stack levels required when called:    7
 16523 ;; This function calls:
 16524 ;;		_DATAEE_ReadByte
 16525 ;; This function is called by:
 16526 ;;		_load_eeprom
 16527 ;; This function uses a non-reentrant model
 16528 ;;
 16529                           
 16530                           
 16531                           ;psect for function _read_tala
 16532  1390                     _read_tala:	
 16533  1390                     l6729:	
 16534                           ;incstack = 0
 16535                           ; Regs used in _read_tala: [wreg+status,2+pclath+cstack]
 16536                           
 16537  1390  3003               	movlw	3
 16538  1391  00F2               	movwf	DATAEE_ReadByte@bAdd
 16539  1392  30F0               	movlw	240
 16540  1393  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16541  1394  3193  23D3  3193   	fcall	_DATAEE_ReadByte
 16542  1397                     l1435:	
 16543  1397  0008               	return
 16544  1398                     __end_of_read_tala:	
 16545                           
 16546                           	psect	text37
 16547  1388                     __ptext37:	
 16548 ;; *************** function _read_pmon *****************
 16549 ;; Defined at:
 16550 ;;		line 119 in file "eeprom.c"
 16551 ;; Parameters:    Size  Location     Type
 16552 ;;		None
 16553 ;; Auto vars:     Size  Location     Type
 16554 ;;		None
 16555 ;; Return value:  Size  Location     Type
 16556 ;;                  1    wreg      unsigned char 
 16557 ;; Registers used:
 16558 ;;		wreg, status,2, pclath, cstack
 16559 ;; Tracked objects:
 16560 ;;		On entry : 0/0
 16561 ;;		On exit  : 0/0
 16562 ;;		Unchanged: 0/0
 16563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16568 ;;Total ram usage:        0 bytes
 16569 ;; Hardware stack levels used:    1
 16570 ;; Hardware stack levels required when called:    7
 16571 ;; This function calls:
 16572 ;;		_DATAEE_ReadByte
 16573 ;; This function is called by:
 16574 ;;		_load_eeprom
 16575 ;; This function uses a non-reentrant model
 16576 ;;
 16577                           
 16578                           
 16579                           ;psect for function _read_pmon
 16580  1388                     _read_pmon:	
 16581  1388                     l6725:	
 16582                           ;incstack = 0
 16583                           ; Regs used in _read_pmon: [wreg+status,2+pclath+cstack]
 16584                           
 16585  1388  3002               	movlw	2
 16586  1389  00F2               	movwf	DATAEE_ReadByte@bAdd
 16587  138A  30F0               	movlw	240
 16588  138B  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16589  138C  3193  23D3  3193   	fcall	_DATAEE_ReadByte
 16590  138F                     l1432:	
 16591  138F  0008               	return
 16592  1390                     __end_of_read_pmon:	
 16593                           
 16594                           	psect	text38
 16595  1380                     __ptext38:	
 16596 ;; *************** function _read_nreg *****************
 16597 ;; Defined at:
 16598 ;;		line 118 in file "eeprom.c"
 16599 ;; Parameters:    Size  Location     Type
 16600 ;;		None
 16601 ;; Auto vars:     Size  Location     Type
 16602 ;;		None
 16603 ;; Return value:  Size  Location     Type
 16604 ;;                  1    wreg      unsigned char 
 16605 ;; Registers used:
 16606 ;;		wreg, status,2, pclath, cstack
 16607 ;; Tracked objects:
 16608 ;;		On entry : 0/0
 16609 ;;		On exit  : 0/0
 16610 ;;		Unchanged: 0/0
 16611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16616 ;;Total ram usage:        0 bytes
 16617 ;; Hardware stack levels used:    1
 16618 ;; Hardware stack levels required when called:    7
 16619 ;; This function calls:
 16620 ;;		_DATAEE_ReadByte
 16621 ;; This function is called by:
 16622 ;;		_load_eeprom
 16623 ;;		_ring_buffer_write
 16624 ;;		_not_transferred
 16625 ;;		_registers_info
 16626 ;;		_transfer_n_registers
 16627 ;;		_transfer_registers_i
 16628 ;;		_transfer_registers
 16629 ;;		_notification_memory
 16630 ;; This function uses a non-reentrant model
 16631 ;;
 16632                           
 16633                           
 16634                           ;psect for function _read_nreg
 16635  1380                     _read_nreg:	
 16636  1380                     l5971:	
 16637                           ;incstack = 0
 16638                           ; Regs used in _read_nreg: [wreg+status,2+pclath+cstack]
 16639                           
 16640  1380  3001               	movlw	1
 16641  1381  00F2               	movwf	DATAEE_ReadByte@bAdd
 16642  1382  30F0               	movlw	240
 16643  1383  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16644  1384  3193  23D3  3193   	fcall	_DATAEE_ReadByte
 16645  1387                     l1429:	
 16646  1387  0008               	return
 16647  1388                     __end_of_read_nreg:	
 16648                           
 16649                           	psect	text39
 16650  1378                     __ptext39:	
 16651 ;; *************** function _read_clkm *****************
 16652 ;; Defined at:
 16653 ;;		line 125 in file "eeprom.c"
 16654 ;; Parameters:    Size  Location     Type
 16655 ;;		None
 16656 ;; Auto vars:     Size  Location     Type
 16657 ;;		None
 16658 ;; Return value:  Size  Location     Type
 16659 ;;                  1    wreg      unsigned char 
 16660 ;; Registers used:
 16661 ;;		wreg, status,2, pclath, cstack
 16662 ;; Tracked objects:
 16663 ;;		On entry : 0/0
 16664 ;;		On exit  : 0/0
 16665 ;;		Unchanged: 0/0
 16666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16671 ;;Total ram usage:        0 bytes
 16672 ;; Hardware stack levels used:    1
 16673 ;; Hardware stack levels required when called:    7
 16674 ;; This function calls:
 16675 ;;		_DATAEE_ReadByte
 16676 ;; This function is called by:
 16677 ;;		_load_eeprom
 16678 ;; This function uses a non-reentrant model
 16679 ;;
 16680                           
 16681                           
 16682                           ;psect for function _read_clkm
 16683  1378                     _read_clkm:	
 16684  1378                     l6749:	
 16685                           ;incstack = 0
 16686                           ; Regs used in _read_clkm: [wreg+status,2+pclath+cstack]
 16687                           
 16688  1378  3008               	movlw	8
 16689  1379  00F2               	movwf	DATAEE_ReadByte@bAdd
 16690  137A  30F0               	movlw	240
 16691  137B  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16692  137C  3193  23D3  3193   	fcall	_DATAEE_ReadByte
 16693  137F                     l1450:	
 16694  137F  0008               	return
 16695  1380                     __end_of_read_clkm:	
 16696                           
 16697                           	psect	text40
 16698  1370                     __ptext40:	
 16699 ;; *************** function _read_clkh *****************
 16700 ;; Defined at:
 16701 ;;		line 124 in file "eeprom.c"
 16702 ;; Parameters:    Size  Location     Type
 16703 ;;		None
 16704 ;; Auto vars:     Size  Location     Type
 16705 ;;		None
 16706 ;; Return value:  Size  Location     Type
 16707 ;;                  1    wreg      unsigned char 
 16708 ;; Registers used:
 16709 ;;		wreg, status,2, pclath, cstack
 16710 ;; Tracked objects:
 16711 ;;		On entry : 0/0
 16712 ;;		On exit  : 0/0
 16713 ;;		Unchanged: 0/0
 16714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16719 ;;Total ram usage:        0 bytes
 16720 ;; Hardware stack levels used:    1
 16721 ;; Hardware stack levels required when called:    7
 16722 ;; This function calls:
 16723 ;;		_DATAEE_ReadByte
 16724 ;; This function is called by:
 16725 ;;		_load_eeprom
 16726 ;; This function uses a non-reentrant model
 16727 ;;
 16728                           
 16729                           
 16730                           ;psect for function _read_clkh
 16731  1370                     _read_clkh:	
 16732  1370                     l6745:	
 16733                           ;incstack = 0
 16734                           ; Regs used in _read_clkh: [wreg+status,2+pclath+cstack]
 16735                           
 16736  1370  3007               	movlw	7
 16737  1371  00F2               	movwf	DATAEE_ReadByte@bAdd
 16738  1372  30F0               	movlw	240
 16739  1373  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16740  1374  3193  23D3  3193   	fcall	_DATAEE_ReadByte
 16741  1377                     l1447:	
 16742  1377  0008               	return
 16743  1378                     __end_of_read_clkh:	
 16744                           
 16745                           	psect	text41
 16746  1368                     __ptext41:	
 16747 ;; *************** function _read_alat *****************
 16748 ;; Defined at:
 16749 ;;		line 121 in file "eeprom.c"
 16750 ;; Parameters:    Size  Location     Type
 16751 ;;		None
 16752 ;; Auto vars:     Size  Location     Type
 16753 ;;		None
 16754 ;; Return value:  Size  Location     Type
 16755 ;;                  1    wreg      unsigned char 
 16756 ;; Registers used:
 16757 ;;		wreg, status,2, pclath, cstack
 16758 ;; Tracked objects:
 16759 ;;		On entry : 0/0
 16760 ;;		On exit  : 0/0
 16761 ;;		Unchanged: 0/0
 16762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16767 ;;Total ram usage:        0 bytes
 16768 ;; Hardware stack levels used:    1
 16769 ;; Hardware stack levels required when called:    7
 16770 ;; This function calls:
 16771 ;;		_DATAEE_ReadByte
 16772 ;; This function is called by:
 16773 ;;		_load_eeprom
 16774 ;; This function uses a non-reentrant model
 16775 ;;
 16776                           
 16777                           
 16778                           ;psect for function _read_alat
 16779  1368                     _read_alat:	
 16780  1368                     l6733:	
 16781                           ;incstack = 0
 16782                           ; Regs used in _read_alat: [wreg+status,2+pclath+cstack]
 16783                           
 16784  1368  3004               	movlw	4
 16785  1369  00F2               	movwf	DATAEE_ReadByte@bAdd
 16786  136A  30F0               	movlw	240
 16787  136B  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16788  136C  3193  23D3  3193   	fcall	_DATAEE_ReadByte
 16789  136F                     l1438:	
 16790  136F  0008               	return
 16791  1370                     __end_of_read_alat:	
 16792                           
 16793                           	psect	text42
 16794  1360                     __ptext42:	
 16795 ;; *************** function _read_alal *****************
 16796 ;; Defined at:
 16797 ;;		line 122 in file "eeprom.c"
 16798 ;; Parameters:    Size  Location     Type
 16799 ;;		None
 16800 ;; Auto vars:     Size  Location     Type
 16801 ;;		None
 16802 ;; Return value:  Size  Location     Type
 16803 ;;                  1    wreg      unsigned char 
 16804 ;; Registers used:
 16805 ;;		wreg, status,2, pclath, cstack
 16806 ;; Tracked objects:
 16807 ;;		On entry : 0/0
 16808 ;;		On exit  : 0/0
 16809 ;;		Unchanged: 0/0
 16810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16815 ;;Total ram usage:        0 bytes
 16816 ;; Hardware stack levels used:    1
 16817 ;; Hardware stack levels required when called:    7
 16818 ;; This function calls:
 16819 ;;		_DATAEE_ReadByte
 16820 ;; This function is called by:
 16821 ;;		_load_eeprom
 16822 ;; This function uses a non-reentrant model
 16823 ;;
 16824                           
 16825                           
 16826                           ;psect for function _read_alal
 16827  1360                     _read_alal:	
 16828  1360                     l6737:	
 16829                           ;incstack = 0
 16830                           ; Regs used in _read_alal: [wreg+status,2+pclath+cstack]
 16831                           
 16832  1360  3005               	movlw	5
 16833  1361  00F2               	movwf	DATAEE_ReadByte@bAdd
 16834  1362  30F0               	movlw	240
 16835  1363  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16836  1364  3193  23D3  3193   	fcall	_DATAEE_ReadByte
 16837  1367                     l1441:	
 16838  1367  0008               	return
 16839  1368                     __end_of_read_alal:	
 16840                           
 16841                           	psect	text43
 16842  1358                     __ptext43:	
 16843 ;; *************** function _read_alaf *****************
 16844 ;; Defined at:
 16845 ;;		line 123 in file "eeprom.c"
 16846 ;; Parameters:    Size  Location     Type
 16847 ;;		None
 16848 ;; Auto vars:     Size  Location     Type
 16849 ;;		None
 16850 ;; Return value:  Size  Location     Type
 16851 ;;                  1    wreg      unsigned char 
 16852 ;; Registers used:
 16853 ;;		wreg, status,2, pclath, cstack
 16854 ;; Tracked objects:
 16855 ;;		On entry : 0/0
 16856 ;;		On exit  : 0/0
 16857 ;;		Unchanged: 0/0
 16858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16863 ;;Total ram usage:        0 bytes
 16864 ;; Hardware stack levels used:    1
 16865 ;; Hardware stack levels required when called:    7
 16866 ;; This function calls:
 16867 ;;		_DATAEE_ReadByte
 16868 ;; This function is called by:
 16869 ;;		_load_eeprom
 16870 ;; This function uses a non-reentrant model
 16871 ;;
 16872                           
 16873                           
 16874                           ;psect for function _read_alaf
 16875  1358                     _read_alaf:	
 16876  1358                     l6741:	
 16877                           ;incstack = 0
 16878                           ; Regs used in _read_alaf: [wreg+status,2+pclath+cstack]
 16879                           
 16880  1358  3006               	movlw	6
 16881  1359  00F2               	movwf	DATAEE_ReadByte@bAdd
 16882  135A  30F0               	movlw	240
 16883  135B  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 16884  135C  3193  23D3  3193   	fcall	_DATAEE_ReadByte
 16885  135F                     l1444:	
 16886  135F  0008               	return
 16887  1360                     __end_of_read_alaf:	
 16888                           
 16889                           	psect	text44
 16890  0A05                     __ptext44:	
 16891 ;; *************** function _default_setup *****************
 16892 ;; Defined at:
 16893 ;;		line 114 in file "utils.c"
 16894 ;; Parameters:    Size  Location     Type
 16895 ;;		None
 16896 ;; Auto vars:     Size  Location     Type
 16897 ;;		None
 16898 ;; Return value:  Size  Location     Type
 16899 ;;                  1    wreg      void 
 16900 ;; Registers used:
 16901 ;;		wreg, status,2, status,0, pclath, cstack
 16902 ;; Tracked objects:
 16903 ;;		On entry : 0/0
 16904 ;;		On exit  : 0/0
 16905 ;;		Unchanged: 0/0
 16906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16909 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16910 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16911 ;;Total ram usage:        5 bytes
 16912 ;; Hardware stack levels used:    1
 16913 ;; Hardware stack levels required when called:    8
 16914 ;; This function calls:
 16915 ;;		_eeprom_setup
 16916 ;; This function is called by:
 16917 ;;		_load_eeprom
 16918 ;; This function uses a non-reentrant model
 16919 ;;
 16920                           
 16921                           
 16922                           ;psect for function _default_setup
 16923  0A05                     _default_setup:	
 16924  0A05                     l6753:	
 16925                           ;incstack = 0
 16926                           ; Regs used in _default_setup: [wreg+status,2+status,0+pclath+cstack]
 16927                           
 16928                           
 16929                           ;utils.c: 115:     pmon = 5;
 16930  0A05  3005               	movlw	5
 16931  0A06  0020               	movlb	0	; select bank0
 16932  0A07  00AE               	movwf	??_default_setup
 16933  0A08  082E               	movf	??_default_setup,w
 16934  0A09  00ED               	movwf	_pmon
 16935                           
 16936                           ;utils.c: 116:     nreg = 33;
 16937  0A0A  3021               	movlw	33
 16938  0A0B  00AE               	movwf	??_default_setup
 16939  0A0C  082E               	movf	??_default_setup,w
 16940  0A0D  0021               	movlb	1	; select bank1
 16941  0A0E  00CB               	movwf	_nreg^(0+128)
 16942                           
 16943                           ;utils.c: 117:     tala = 3;
 16944  0A0F  3003               	movlw	3
 16945  0A10  0020               	movlb	0	; select bank0
 16946  0A11  00AE               	movwf	??_default_setup
 16947  0A12  082E               	movf	??_default_setup,w
 16948  0A13  0021               	movlb	1	; select bank1
 16949  0A14  00D7               	movwf	_tala^(0+128)
 16950                           
 16951                           ;utils.c: 118:     alat = 25;
 16952  0A15  3019               	movlw	25
 16953  0A16  0020               	movlb	0	; select bank0
 16954  0A17  00AE               	movwf	??_default_setup
 16955  0A18  082E               	movf	??_default_setup,w
 16956  0A19  00EC               	movwf	_alat
 16957                           
 16958                           ;utils.c: 119:     alal = 2;
 16959  0A1A  3002               	movlw	2
 16960  0A1B  00AE               	movwf	??_default_setup
 16961  0A1C  082E               	movf	??_default_setup,w
 16962  0A1D  0021               	movlb	1	; select bank1
 16963  0A1E  00D6               	movwf	_alal^(0+128)
 16964  0A1F                     l6755:	
 16965                           
 16966                           ;utils.c: 120:     alaf = 0;
 16967  0A1F  0020               	movlb	0	; select bank0
 16968  0A20  01EB               	clrf	_alaf
 16969  0A21                     l6757:	
 16970                           
 16971                           ;utils.c: 121:     clkh = 0;
 16972  0A21  01EA               	clrf	_clkh	;volatile
 16973  0A22                     l6759:	
 16974                           
 16975                           ;utils.c: 122:     clkm = 0;
 16976  0A22  01E9               	clrf	_clkm	;volatile
 16977  0A23                     l6761:	
 16978                           
 16979                           ;utils.c: 123:     eeprom_setup(1, 33, 5, 3,
 16980  0A23  3021               	movlw	33
 16981  0A24  00AE               	movwf	??_default_setup
 16982  0A25  082E               	movf	??_default_setup,w
 16983  0A26  00A4               	movwf	eeprom_setup@nreg
 16984  0A27  3005               	movlw	5
 16985  0A28  00AF               	movwf	??_default_setup+1
 16986  0A29  082F               	movf	??_default_setup+1,w
 16987  0A2A  00A5               	movwf	eeprom_setup@pmon
 16988  0A2B  3003               	movlw	3
 16989  0A2C  00B0               	movwf	??_default_setup+2
 16990  0A2D  0830               	movf	??_default_setup+2,w
 16991  0A2E  00A6               	movwf	eeprom_setup@tala
 16992  0A2F  3019               	movlw	25
 16993  0A30  00B1               	movwf	??_default_setup+3
 16994  0A31  0831               	movf	??_default_setup+3,w
 16995  0A32  00A7               	movwf	eeprom_setup@alat
 16996  0A33  3002               	movlw	2
 16997  0A34  00B2               	movwf	??_default_setup+4
 16998  0A35  0832               	movf	??_default_setup+4,w
 16999  0A36  00A8               	movwf	eeprom_setup@alal
 17000  0A37  01A9               	clrf	eeprom_setup@alaf
 17001  0A38  01AA               	clrf	eeprom_setup@clkh
 17002  0A39  01AB               	clrf	eeprom_setup@clkm
 17003  0A3A  3001               	movlw	1
 17004  0A3B  3186  2648  318A   	fcall	_eeprom_setup
 17005  0A3E                     l1377:	
 17006  0A3E  0008               	return
 17007  0A3F                     __end_of_default_setup:	
 17008                           
 17009                           	psect	text45
 17010  0648                     __ptext45:	
 17011 ;; *************** function _eeprom_setup *****************
 17012 ;; Defined at:
 17013 ;;		line 52 in file "eeprom.c"
 17014 ;; Parameters:    Size  Location     Type
 17015 ;;  reset_buffer    1    wreg     _Bool 
 17016 ;;  nreg            1    4[BANK0 ] unsigned char 
 17017 ;;  pmon            1    5[BANK0 ] unsigned char 
 17018 ;;  tala            1    6[BANK0 ] unsigned char 
 17019 ;;  alat            1    7[BANK0 ] unsigned char 
 17020 ;;  alal            1    8[BANK0 ] unsigned char 
 17021 ;;  alaf            1    9[BANK0 ] unsigned char 
 17022 ;;  clkh            1   10[BANK0 ] unsigned char 
 17023 ;;  clkm            1   11[BANK0 ] unsigned char 
 17024 ;; Auto vars:     Size  Location     Type
 17025 ;;  reset_buffer    1   13[BANK0 ] _Bool 
 17026 ;; Return value:  Size  Location     Type
 17027 ;;                  1    wreg      void 
 17028 ;; Registers used:
 17029 ;;		wreg, status,2, status,0, pclath, cstack
 17030 ;; Tracked objects:
 17031 ;;		On entry : 0/0
 17032 ;;		On exit  : 0/0
 17033 ;;		Unchanged: 0/0
 17034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17035 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17036 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17037 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17038 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17039 ;;Total ram usage:       10 bytes
 17040 ;; Hardware stack levels used:    1
 17041 ;; Hardware stack levels required when called:    7
 17042 ;; This function calls:
 17043 ;;		_DATAEE_WriteByte
 17044 ;; This function is called by:
 17045 ;;		_default_setup
 17046 ;; This function uses a non-reentrant model
 17047 ;;
 17048                           
 17049                           
 17050                           ;psect for function _eeprom_setup
 17051  0648                     _eeprom_setup:	
 17052                           
 17053                           ;incstack = 0
 17054                           ; Regs used in _eeprom_setup: [wreg+status,2+status,0+pclath+cstack]
 17055                           ;eeprom_setup@reset_buffer stored from wreg
 17056  0648  0020               	movlb	0	; select bank0
 17057  0649  00AD               	movwf	eeprom_setup@reset_buffer
 17058  064A                     l6223:	
 17059                           
 17060                           ;eeprom.c: 52: void eeprom_setup(_Bool reset_buffer, uint8_t nreg, uint8_t pmon, uint8_t
      +                           tala,;eeprom.c: 53:         uint8_t alat, uint8_t alal, uint8_t alaf, uint8_t clkh, uin
      +                          t8_t clkm){;eeprom.c: 55:     if (reset_buffer)
 17061  064A  082D               	movf	eeprom_setup@reset_buffer,w
 17062  064B  1903               	btfsc	3,2
 17063  064C  2E4E               	goto	u5011
 17064  064D  2E4F               	goto	u5010
 17065  064E                     u5011:	
 17066  064E  2E57               	goto	l1406
 17067  064F                     u5010:	
 17068  064F                     l6225:	
 17069                           
 17070                           ;eeprom.c: 56:         DATAEE_WriteByte(0xF00A, 0);
 17071  064F  300A               	movlw	10
 17072  0650  00A0               	movwf	DATAEE_WriteByte@bAdd
 17073  0651  30F0               	movlw	240
 17074  0652  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17075  0653  01A2               	clrf	DATAEE_WriteByte@bData
 17076  0654  3197  2709  3186   	fcall	_DATAEE_WriteByte
 17077  0657                     l1406:	
 17078                           
 17079                           ;eeprom.c: 58:     DATAEE_WriteByte(0xF001, nreg);
 17080  0657  3001               	movlw	1
 17081  0658  0020               	movlb	0	; select bank0
 17082  0659  00A0               	movwf	DATAEE_WriteByte@bAdd
 17083  065A  30F0               	movlw	240
 17084  065B  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17085  065C  0824               	movf	eeprom_setup@nreg,w
 17086  065D  00AC               	movwf	??_eeprom_setup
 17087  065E  082C               	movf	??_eeprom_setup,w
 17088  065F  00A2               	movwf	DATAEE_WriteByte@bData
 17089  0660  3197  2709  3186   	fcall	_DATAEE_WriteByte
 17090                           
 17091                           ;eeprom.c: 59:     DATAEE_WriteByte(0xF002, pmon);
 17092  0663  3002               	movlw	2
 17093  0664  0020               	movlb	0	; select bank0
 17094  0665  00A0               	movwf	DATAEE_WriteByte@bAdd
 17095  0666  30F0               	movlw	240
 17096  0667  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17097  0668  0825               	movf	eeprom_setup@pmon,w
 17098  0669  00AC               	movwf	??_eeprom_setup
 17099  066A  082C               	movf	??_eeprom_setup,w
 17100  066B  00A2               	movwf	DATAEE_WriteByte@bData
 17101  066C  3197  2709  3186   	fcall	_DATAEE_WriteByte
 17102                           
 17103                           ;eeprom.c: 60:     DATAEE_WriteByte(0xF003, tala);
 17104  066F  3003               	movlw	3
 17105  0670  0020               	movlb	0	; select bank0
 17106  0671  00A0               	movwf	DATAEE_WriteByte@bAdd
 17107  0672  30F0               	movlw	240
 17108  0673  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17109  0674  0826               	movf	eeprom_setup@tala,w
 17110  0675  00AC               	movwf	??_eeprom_setup
 17111  0676  082C               	movf	??_eeprom_setup,w
 17112  0677  00A2               	movwf	DATAEE_WriteByte@bData
 17113  0678  3197  2709  3186   	fcall	_DATAEE_WriteByte
 17114                           
 17115                           ;eeprom.c: 61:     DATAEE_WriteByte(0xF004, alat);
 17116  067B  3004               	movlw	4
 17117  067C  0020               	movlb	0	; select bank0
 17118  067D  00A0               	movwf	DATAEE_WriteByte@bAdd
 17119  067E  30F0               	movlw	240
 17120  067F  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17121  0680  0827               	movf	eeprom_setup@alat,w
 17122  0681  00AC               	movwf	??_eeprom_setup
 17123  0682  082C               	movf	??_eeprom_setup,w
 17124  0683  00A2               	movwf	DATAEE_WriteByte@bData
 17125  0684  3197  2709  3186   	fcall	_DATAEE_WriteByte
 17126                           
 17127                           ;eeprom.c: 62:     DATAEE_WriteByte(0xF005, alal);
 17128  0687  3005               	movlw	5
 17129  0688  0020               	movlb	0	; select bank0
 17130  0689  00A0               	movwf	DATAEE_WriteByte@bAdd
 17131  068A  30F0               	movlw	240
 17132  068B  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17133  068C  0828               	movf	eeprom_setup@alal,w
 17134  068D  00AC               	movwf	??_eeprom_setup
 17135  068E  082C               	movf	??_eeprom_setup,w
 17136  068F  00A2               	movwf	DATAEE_WriteByte@bData
 17137  0690  3197  2709  3186   	fcall	_DATAEE_WriteByte
 17138                           
 17139                           ;eeprom.c: 63:     DATAEE_WriteByte(0xF006, alaf);
 17140  0693  3006               	movlw	6
 17141  0694  0020               	movlb	0	; select bank0
 17142  0695  00A0               	movwf	DATAEE_WriteByte@bAdd
 17143  0696  30F0               	movlw	240
 17144  0697  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17145  0698  0829               	movf	eeprom_setup@alaf,w
 17146  0699  00AC               	movwf	??_eeprom_setup
 17147  069A  082C               	movf	??_eeprom_setup,w
 17148  069B  00A2               	movwf	DATAEE_WriteByte@bData
 17149  069C  3197  2709  3186   	fcall	_DATAEE_WriteByte
 17150                           
 17151                           ;eeprom.c: 64:     DATAEE_WriteByte(0xF007, clkh);
 17152  069F  3007               	movlw	7
 17153  06A0  0020               	movlb	0	; select bank0
 17154  06A1  00A0               	movwf	DATAEE_WriteByte@bAdd
 17155  06A2  30F0               	movlw	240
 17156  06A3  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17157  06A4  082A               	movf	eeprom_setup@clkh,w
 17158  06A5  00AC               	movwf	??_eeprom_setup
 17159  06A6  082C               	movf	??_eeprom_setup,w
 17160  06A7  00A2               	movwf	DATAEE_WriteByte@bData
 17161  06A8  3197  2709  3186   	fcall	_DATAEE_WriteByte
 17162                           
 17163                           ;eeprom.c: 65:     DATAEE_WriteByte(0xF008, clkm);
 17164  06AB  3008               	movlw	8
 17165  06AC  0020               	movlb	0	; select bank0
 17166  06AD  00A0               	movwf	DATAEE_WriteByte@bAdd
 17167  06AE  30F0               	movlw	240
 17168  06AF  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17169  06B0  082B               	movf	eeprom_setup@clkm,w
 17170  06B1  00AC               	movwf	??_eeprom_setup
 17171  06B2  082C               	movf	??_eeprom_setup,w
 17172  06B3  00A2               	movwf	DATAEE_WriteByte@bData
 17173  06B4  3197  2709  3186   	fcall	_DATAEE_WriteByte
 17174                           
 17175                           ;eeprom.c: 66:     DATAEE_WriteByte(0xF009, 0xAA);
 17176  06B7  3009               	movlw	9
 17177  06B8  0020               	movlb	0	; select bank0
 17178  06B9  00A0               	movwf	DATAEE_WriteByte@bAdd
 17179  06BA  30F0               	movlw	240
 17180  06BB  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17181  06BC  30AA               	movlw	170
 17182  06BD  00AC               	movwf	??_eeprom_setup
 17183  06BE  082C               	movf	??_eeprom_setup,w
 17184  06BF  00A2               	movwf	DATAEE_WriteByte@bData
 17185  06C0  3197  2709  3186   	fcall	_DATAEE_WriteByte
 17186                           
 17187                           ;eeprom.c: 69:     DATAEE_WriteByte(0xF000, nreg+pmon+tala+alat+alal+alaf+clkh+clkm);
 17188  06C3  3000               	movlw	0
 17189  06C4  0020               	movlb	0	; select bank0
 17190  06C5  00A0               	movwf	DATAEE_WriteByte@bAdd
 17191  06C6  30F0               	movlw	240
 17192  06C7  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 17193  06C8  0824               	movf	eeprom_setup@nreg,w
 17194  06C9  0725               	addwf	eeprom_setup@pmon,w
 17195  06CA  0726               	addwf	eeprom_setup@tala,w
 17196  06CB  0727               	addwf	eeprom_setup@alat,w
 17197  06CC  0728               	addwf	eeprom_setup@alal,w
 17198  06CD  0729               	addwf	eeprom_setup@alaf,w
 17199  06CE  072A               	addwf	eeprom_setup@clkh,w
 17200  06CF  072B               	addwf	eeprom_setup@clkm,w
 17201  06D0  00AC               	movwf	??_eeprom_setup
 17202  06D1  082C               	movf	??_eeprom_setup,w
 17203  06D2  00A2               	movwf	DATAEE_WriteByte@bData
 17204  06D3  3197  2709  3186   	fcall	_DATAEE_WriteByte
 17205  06D6                     l1407:	
 17206  06D6  0008               	return
 17207  06D7                     __end_of_eeprom_setup:	
 17208                           
 17209                           	psect	text46
 17210  14D7                     __ptext46:	
 17211 ;; *************** function _check_corruption *****************
 17212 ;; Defined at:
 17213 ;;		line 40 in file "eeprom.c"
 17214 ;; Parameters:    Size  Location     Type
 17215 ;;		None
 17216 ;; Auto vars:     Size  Location     Type
 17217 ;;  check           1    6[COMMON] unsigned char 
 17218 ;; Return value:  Size  Location     Type
 17219 ;;                  1    wreg      _Bool 
 17220 ;; Registers used:
 17221 ;;		wreg, status,2, status,0, pclath, cstack
 17222 ;; Tracked objects:
 17223 ;;		On entry : 0/0
 17224 ;;		On exit  : 0/0
 17225 ;;		Unchanged: 0/0
 17226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17229 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17230 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17231 ;;Total ram usage:        2 bytes
 17232 ;; Hardware stack levels used:    1
 17233 ;; Hardware stack levels required when called:    8
 17234 ;; This function calls:
 17235 ;;		_DATAEE_ReadByte
 17236 ;;		_get_check_up_value
 17237 ;; This function is called by:
 17238 ;;		_load_eeprom
 17239 ;; This function uses a non-reentrant model
 17240 ;;
 17241                           
 17242                           
 17243                           ;psect for function _check_corruption
 17244  14D7                     _check_corruption:	
 17245  14D7                     l6719:	
 17246                           ;incstack = 0
 17247                           ; Regs used in _check_corruption: [wreg+status,2+status,0+pclath+cstack]
 17248                           
 17249                           
 17250                           ;eeprom.c: 44:     uint8_t check = DATAEE_ReadByte(0xF000);
 17251  14D7  3000               	movlw	0
 17252  14D8  00F2               	movwf	DATAEE_ReadByte@bAdd
 17253  14D9  30F0               	movlw	240
 17254  14DA  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17255  14DB  3193  23D3  3194   	fcall	_DATAEE_ReadByte
 17256  14DE  00F5               	movwf	??_check_corruption
 17257  14DF  0875               	movf	??_check_corruption,w
 17258  14E0  00F6               	movwf	check_corruption@check
 17259  14E1                     l6721:	
 17260                           
 17261                           ;eeprom.c: 46:     return get_check_up_value() == check;
 17262  14E1  318E  26E0  3194   	fcall	_get_check_up_value
 17263  14E4  0676               	xorwf	check_corruption@check,w
 17264  14E5  1903               	skipnz
 17265  14E6  2CE8               	goto	u5601
 17266  14E7  2CEA               	goto	u5600
 17267  14E8                     u5601:	
 17268  14E8  3001               	movlw	1
 17269  14E9  2CEB               	goto	u5610
 17270  14EA                     u5600:	
 17271  14EA  3000               	movlw	0
 17272  14EB                     u5610:	
 17273  14EB                     l1403:	
 17274  14EB  0008               	return
 17275  14EC                     __end_of_check_corruption:	
 17276                           
 17277                           	psect	text47
 17278  0EE0                     __ptext47:	
 17279 ;; *************** function _get_check_up_value *****************
 17280 ;; Defined at:
 17281 ;;		line 8 in file "eeprom.c"
 17282 ;; Parameters:    Size  Location     Type
 17283 ;;		None
 17284 ;; Auto vars:     Size  Location     Type
 17285 ;;  check           1    4[COMMON] unsigned char 
 17286 ;; Return value:  Size  Location     Type
 17287 ;;                  1    wreg      unsigned char 
 17288 ;; Registers used:
 17289 ;;		wreg, status,2, status,0, pclath, cstack
 17290 ;; Tracked objects:
 17291 ;;		On entry : 0/0
 17292 ;;		On exit  : 0/0
 17293 ;;		Unchanged: 0/0
 17294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17296 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17297 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17298 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17299 ;;Total ram usage:       10 bytes
 17300 ;; Hardware stack levels used:    1
 17301 ;; Hardware stack levels required when called:    7
 17302 ;; This function calls:
 17303 ;;		_DATAEE_ReadByte
 17304 ;; This function is called by:
 17305 ;;		_check_corruption
 17306 ;;		_set_check_up_value
 17307 ;; This function uses a non-reentrant model
 17308 ;;
 17309                           
 17310                           
 17311                           ;psect for function _get_check_up_value
 17312  0EE0                     _get_check_up_value:	
 17313  0EE0                     l6227:	
 17314                           ;incstack = 0
 17315                           ; Regs used in _get_check_up_value: [wreg+status,2+status,0+pclath+cstack]
 17316                           
 17317                           
 17318                           ;eeprom.c: 12:     uint8_t check;;eeprom.c: 14:     check = DATAEE_ReadByte(0xF001) + DA
      +                          TAEE_ReadByte(0xF002) + DATAEE_ReadByte(0xF003) +
 17319  0EE0  300A               	movlw	10
 17320  0EE1  00F2               	movwf	DATAEE_ReadByte@bAdd
 17321  0EE2  30F0               	movlw	240
 17322  0EE3  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17323  0EE4  3193  23D3  318E   	fcall	_DATAEE_ReadByte
 17324  0EE7  0020               	movlb	0	; select bank0
 17325  0EE8  00A0               	movwf	??_get_check_up_value
 17326  0EE9  3008               	movlw	8
 17327  0EEA  00F2               	movwf	DATAEE_ReadByte@bAdd
 17328  0EEB  30F0               	movlw	240
 17329  0EEC  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17330  0EED  3193  23D3  318E   	fcall	_DATAEE_ReadByte
 17331  0EF0  0020               	movlb	0	; select bank0
 17332  0EF1  00A1               	movwf	??_get_check_up_value+1
 17333  0EF2  3007               	movlw	7
 17334  0EF3  00F2               	movwf	DATAEE_ReadByte@bAdd
 17335  0EF4  30F0               	movlw	240
 17336  0EF5  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17337  0EF6  3193  23D3  318E   	fcall	_DATAEE_ReadByte
 17338  0EF9  0020               	movlb	0	; select bank0
 17339  0EFA  00A2               	movwf	??_get_check_up_value+2
 17340  0EFB  3006               	movlw	6
 17341  0EFC  00F2               	movwf	DATAEE_ReadByte@bAdd
 17342  0EFD  30F0               	movlw	240
 17343  0EFE  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17344  0EFF  3193  23D3  318E   	fcall	_DATAEE_ReadByte
 17345  0F02  0020               	movlb	0	; select bank0
 17346  0F03  00A3               	movwf	??_get_check_up_value+3
 17347  0F04  3005               	movlw	5
 17348  0F05  00F2               	movwf	DATAEE_ReadByte@bAdd
 17349  0F06  30F0               	movlw	240
 17350  0F07  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17351  0F08  3193  23D3  318E   	fcall	_DATAEE_ReadByte
 17352  0F0B  0020               	movlb	0	; select bank0
 17353  0F0C  00A4               	movwf	??_get_check_up_value+4
 17354  0F0D  3004               	movlw	4
 17355  0F0E  00F2               	movwf	DATAEE_ReadByte@bAdd
 17356  0F0F  30F0               	movlw	240
 17357  0F10  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17358  0F11  3193  23D3  318E   	fcall	_DATAEE_ReadByte
 17359  0F14  0020               	movlb	0	; select bank0
 17360  0F15  00A5               	movwf	??_get_check_up_value+5
 17361  0F16  3003               	movlw	3
 17362  0F17  00F2               	movwf	DATAEE_ReadByte@bAdd
 17363  0F18  30F0               	movlw	240
 17364  0F19  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17365  0F1A  3193  23D3  318E   	fcall	_DATAEE_ReadByte
 17366  0F1D  0020               	movlb	0	; select bank0
 17367  0F1E  00A6               	movwf	??_get_check_up_value+6
 17368  0F1F  3002               	movlw	2
 17369  0F20  00F2               	movwf	DATAEE_ReadByte@bAdd
 17370  0F21  30F0               	movlw	240
 17371  0F22  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17372  0F23  3193  23D3  318E   	fcall	_DATAEE_ReadByte
 17373  0F26  0020               	movlb	0	; select bank0
 17374  0F27  00A7               	movwf	??_get_check_up_value+7
 17375  0F28  3001               	movlw	1
 17376  0F29  00F2               	movwf	DATAEE_ReadByte@bAdd
 17377  0F2A  30F0               	movlw	240
 17378  0F2B  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 17379  0F2C  3193  23D3  318E   	fcall	_DATAEE_ReadByte
 17380  0F2F  0020               	movlb	0	; select bank0
 17381  0F30  0727               	addwf	??_get_check_up_value+7,w
 17382  0F31  0726               	addwf	??_get_check_up_value+6,w
 17383  0F32  0725               	addwf	??_get_check_up_value+5,w
 17384  0F33  0724               	addwf	??_get_check_up_value+4,w
 17385  0F34  0723               	addwf	??_get_check_up_value+3,w
 17386  0F35  0722               	addwf	??_get_check_up_value+2,w
 17387  0F36  0721               	addwf	??_get_check_up_value+1,w
 17388  0F37  0720               	addwf	??_get_check_up_value,w
 17389  0F38  00A8               	movwf	??_get_check_up_value+8
 17390  0F39  0828               	movf	??_get_check_up_value+8,w
 17391  0F3A  00F4               	movwf	get_check_up_value@check
 17392  0F3B                     l6229:	
 17393                           
 17394                           ;eeprom.c: 23:     return check;
 17395  0F3B  0874               	movf	get_check_up_value@check,w
 17396  0F3C                     l1397:	
 17397  0F3C  0008               	return
 17398  0F3D                     __end_of_get_check_up_value:	
 17399                           
 17400                           	psect	text48
 17401  13DF                     __ptext48:	
 17402 ;; *************** function _i2c1_driver_open *****************
 17403 ;; Defined at:
 17404 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
 17405 ;; Parameters:    Size  Location     Type
 17406 ;;		None
 17407 ;; Auto vars:     Size  Location     Type
 17408 ;;		None
 17409 ;; Return value:  Size  Location     Type
 17410 ;;		None               void
 17411 ;; Registers used:
 17412 ;;		wreg, status,2
 17413 ;; Tracked objects:
 17414 ;;		On entry : 0/0
 17415 ;;		On exit  : 0/0
 17416 ;;		Unchanged: 0/0
 17417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17422 ;;Total ram usage:        0 bytes
 17423 ;; Hardware stack levels used:    1
 17424 ;; Hardware stack levels required when called:    6
 17425 ;; This function calls:
 17426 ;;		Nothing
 17427 ;; This function is called by:
 17428 ;;		_main
 17429 ;; This function uses a non-reentrant model
 17430 ;;
 17431                           
 17432                           
 17433                           ;psect for function _i2c1_driver_open
 17434  13DF                     _i2c1_driver_open:	
 17435  13DF                     l6859:	
 17436                           ;incstack = 0
 17437                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 17438                           
 17439  13DF  0023               	movlb	3	; select bank3
 17440  13E0  1A90               	btfsc	16,5	;volatile
 17441  13E1  2BE3               	goto	u5711
 17442  13E2  2BE4               	goto	u5710
 17443  13E3                     u5711:	
 17444  13E3  2BEA               	goto	l499
 17445  13E4                     u5710:	
 17446  13E4                     l6861:	
 17447  13E4  018F               	clrf	15	;volatile
 17448  13E5                     l6863:	
 17449  13E5  3028               	movlw	40
 17450  13E6  0090               	movwf	16	;volatile
 17451  13E7                     l6865:	
 17452  13E7  0191               	clrf	17	;volatile
 17453  13E8  3003               	movlw	3
 17454  13E9  008D               	movwf	13	;volatile
 17455  13EA                     l499:	
 17456  13EA  0008               	return
 17457  13EB                     __end_of_i2c1_driver_open:	
 17458                           
 17459                           	psect	text49
 17460  1350                     __ptext49:	
 17461 ;; *************** function _clear_alarm *****************
 17462 ;; Defined at:
 17463 ;;		line 75 in file "main.c"
 17464 ;; Parameters:    Size  Location     Type
 17465 ;;		None
 17466 ;; Auto vars:     Size  Location     Type
 17467 ;;		None
 17468 ;; Return value:  Size  Location     Type
 17469 ;;                  1    wreg      void 
 17470 ;; Registers used:
 17471 ;;		wreg, status,2, status,0, pclath, cstack
 17472 ;; Tracked objects:
 17473 ;;		On entry : 0/0
 17474 ;;		On exit  : 0/0
 17475 ;;		Unchanged: 0/0
 17476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17481 ;;Total ram usage:        0 bytes
 17482 ;; Hardware stack levels used:    1
 17483 ;; Hardware stack levels required when called:    7
 17484 ;; This function calls:
 17485 ;;		_PWM_Output_D4_Disable
 17486 ;; This function is called by:
 17487 ;;		_main
 17488 ;; This function uses a non-reentrant model
 17489 ;;
 17490                           
 17491                           
 17492                           ;psect for function _clear_alarm
 17493  1350                     _clear_alarm:	
 17494  1350                     l6873:	
 17495                           ;incstack = 0
 17496                           ; Regs used in _clear_alarm: [wreg+status,2+status,0+pclath+cstack]
 17497                           
 17498                           
 17499                           ;main.c: 76:     PWM_Output_D4_Disable();
 17500  1350  3194  244D  3193   	fcall	_PWM_Output_D4_Disable
 17501  1353                     l6875:	
 17502  1353  0020               	movlb	0	; select bank0
 17503  1354  1316               	bcf	22,6	;volatile
 17504  1355                     l6877:	
 17505                           
 17506                           ;main.c: 78:     alarm = 0;
 17507  1355  0021               	movlb	1	; select bank1
 17508  1356  01D0               	clrf	_alarm^(0+128)
 17509  1357                     l981:	
 17510  1357  0008               	return
 17511  1358                     __end_of_clear_alarm:	
 17512                           
 17513                           	psect	text50
 17514  144D                     __ptext50:	
 17515 ;; *************** function _PWM_Output_D4_Disable *****************
 17516 ;; Defined at:
 17517 ;;		line 61 in file "utils.c"
 17518 ;; Parameters:    Size  Location     Type
 17519 ;;		None
 17520 ;; Auto vars:     Size  Location     Type
 17521 ;;		None
 17522 ;; Return value:  Size  Location     Type
 17523 ;;                  1    wreg      void 
 17524 ;; Registers used:
 17525 ;;		wreg, status,2
 17526 ;; Tracked objects:
 17527 ;;		On entry : 0/0
 17528 ;;		On exit  : 0/0
 17529 ;;		Unchanged: 0/0
 17530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17535 ;;Total ram usage:        0 bytes
 17536 ;; Hardware stack levels used:    1
 17537 ;; Hardware stack levels required when called:    6
 17538 ;; This function calls:
 17539 ;;		Nothing
 17540 ;; This function is called by:
 17541 ;;		_clear_alarm
 17542 ;;		_main
 17543 ;; This function uses a non-reentrant model
 17544 ;;
 17545                           
 17546                           
 17547                           ;psect for function _PWM_Output_D4_Disable
 17548  144D                     _PWM_Output_D4_Disable:	
 17549  144D                     l6627:	
 17550                           ;incstack = 0
 17551                           ; Regs used in _PWM_Output_D4_Disable: [wreg+status,2]
 17552                           
 17553                           
 17554                           ;utils.c: 62:     PPSLOCK = 0x55;
 17555  144D  3055               	movlw	85
 17556  144E  003D               	movlb	29	; select bank29
 17557  144F  008F               	movwf	15	;volsfr
 17558                           
 17559                           ;utils.c: 63:     PPSLOCK = 0xAA;
 17560  1450  30AA               	movlw	170
 17561  1451  008F               	movwf	15	;volsfr
 17562  1452                     l6629:	
 17563                           
 17564                           ;utils.c: 64:     PPSLOCKbits.PPSLOCKED = 0x00;
 17565  1452  100F               	bcf	15,0	;volsfr
 17566  1453                     l6631:	
 17567                           
 17568                           ;utils.c: 66:     RA6PPS = 0x00;
 17569  1453  003E               	movlb	30	; select bank30
 17570  1454  0196               	clrf	22	;volatile
 17571  1455                     l6633:	
 17572                           
 17573                           ;utils.c: 67:     PPSLOCK = 0x55;
 17574  1455  3055               	movlw	85
 17575  1456  003D               	movlb	29	; select bank29
 17576  1457  008F               	movwf	15	;volsfr
 17577  1458                     l6635:	
 17578                           
 17579                           ;utils.c: 68:     PPSLOCK = 0xAA;
 17580  1458  30AA               	movlw	170
 17581  1459  008F               	movwf	15	;volsfr
 17582  145A                     l6637:	
 17583                           
 17584                           ;utils.c: 69:     PPSLOCKbits.PPSLOCKED = 0x01;
 17585  145A  140F               	bsf	15,0	;volsfr
 17586  145B                     l1352:	
 17587  145B  0008               	return
 17588  145C                     __end_of_PWM_Output_D4_Disable:	
 17589                           
 17590                           	psect	text51
 17591  15AD                     __ptext51:	
 17592 ;; *************** function _SYSTEM_Initialize *****************
 17593 ;; Defined at:
 17594 ;;		line 50 in file "mcc_generated_files/mcc.c"
 17595 ;; Parameters:    Size  Location     Type
 17596 ;;		None
 17597 ;; Auto vars:     Size  Location     Type
 17598 ;;		None
 17599 ;; Return value:  Size  Location     Type
 17600 ;;                  1    wreg      void 
 17601 ;; Registers used:
 17602 ;;		wreg, status,2, status,0, pclath, cstack
 17603 ;; Tracked objects:
 17604 ;;		On entry : 0/0
 17605 ;;		On exit  : 0/0
 17606 ;;		Unchanged: 0/0
 17607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17612 ;;Total ram usage:        0 bytes
 17613 ;; Hardware stack levels used:    1
 17614 ;; Hardware stack levels required when called:    8
 17615 ;; This function calls:
 17616 ;;		_ADCC_Initialize
 17617 ;;		_EUSART_Initialize
 17618 ;;		_EXT_INT_Initialize
 17619 ;;		_OSCILLATOR_Initialize
 17620 ;;		_PIN_MANAGER_Initialize
 17621 ;;		_PMD_Initialize
 17622 ;;		_PWM6_Initialize
 17623 ;;		_TMR1_Initialize
 17624 ;;		_TMR2_Initialize
 17625 ;; This function is called by:
 17626 ;;		_main
 17627 ;; This function uses a non-reentrant model
 17628 ;;
 17629                           
 17630                           
 17631                           ;psect for function _SYSTEM_Initialize
 17632  15AD                     _SYSTEM_Initialize:	
 17633  15AD                     l6841:	
 17634                           ;incstack = 0
 17635                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17636                           
 17637                           
 17638                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 17639  15AD  3193  2348  3195   	fcall	_PMD_Initialize
 17640  15B0                     l6843:	
 17641                           
 17642                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 17643  15B0  318C  24F0  3195   	fcall	_PIN_MANAGER_Initialize
 17644  15B3                     l6845:	
 17645                           
 17646                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 17647  15B3  3193  23A0  3195   	fcall	_OSCILLATOR_Initialize
 17648  15B6                     l6847:	
 17649                           
 17650                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 17651  15B6  3194  2405  3195   	fcall	_PWM6_Initialize
 17652  15B9                     l6849:	
 17653                           
 17654                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 17655  15B9  3195  2502  3195   	fcall	_ADCC_Initialize
 17656  15BC                     l6851:	
 17657                           
 17658                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 17659  15BC  3194  2412  3195   	fcall	_TMR2_Initialize
 17660  15BF                     l6853:	
 17661                           
 17662                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 17663  15BF  3193  23F8  3195   	fcall	_EXT_INT_Initialize
 17664  15C2                     l6855:	
 17665                           
 17666                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
 17667  15C2  3195  25E6  3195   	fcall	_TMR1_Initialize
 17668  15C5                     l6857:	
 17669                           
 17670                           ;mcc_generated_files/mcc.c: 60:     EUSART_Initialize();
 17671  15C5  318A  227B  3195   	fcall	_EUSART_Initialize
 17672  15C8                     l182:	
 17673  15C8  0008               	return
 17674  15C9                     __end_of_SYSTEM_Initialize:	
 17675                           
 17676                           	psect	text52
 17677  1412                     __ptext52:	
 17678 ;; *************** function _TMR2_Initialize *****************
 17679 ;; Defined at:
 17680 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 17681 ;; Parameters:    Size  Location     Type
 17682 ;;		None
 17683 ;; Auto vars:     Size  Location     Type
 17684 ;;		None
 17685 ;; Return value:  Size  Location     Type
 17686 ;;                  1    wreg      void 
 17687 ;; Registers used:
 17688 ;;		wreg, status,2
 17689 ;; Tracked objects:
 17690 ;;		On entry : 0/0
 17691 ;;		On exit  : 0/0
 17692 ;;		Unchanged: 0/0
 17693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17698 ;;Total ram usage:        0 bytes
 17699 ;; Hardware stack levels used:    1
 17700 ;; Hardware stack levels required when called:    6
 17701 ;; This function calls:
 17702 ;;		Nothing
 17703 ;; This function is called by:
 17704 ;;		_SYSTEM_Initialize
 17705 ;; This function uses a non-reentrant model
 17706 ;;
 17707                           
 17708                           
 17709                           ;psect for function _TMR2_Initialize
 17710  1412                     _TMR2_Initialize:	
 17711  1412                     l6541:	
 17712                           ;incstack = 0
 17713                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 17714                           
 17715                           
 17716                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 17717  1412  3001               	movlw	1
 17718  1413  0025               	movlb	5	; select bank5
 17719  1414  0090               	movwf	16	;volatile
 17720  1415                     l6543:	
 17721                           
 17722                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 17723  1415  018F               	clrf	15	;volatile
 17724  1416                     l6545:	
 17725                           
 17726                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 17727  1416  0191               	clrf	17	;volatile
 17728                           
 17729                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 17730  1417  30FF               	movlw	255
 17731  1418  008D               	movwf	13	;volatile
 17732  1419                     l6547:	
 17733                           
 17734                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 17735  1419  018C               	clrf	12	;volatile
 17736  141A                     l6549:	
 17737                           
 17738                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 17739  141A  002E               	movlb	14	; select bank14
 17740  141B  1090               	bcf	16,1	;volatile
 17741  141C                     l6551:	
 17742                           
 17743                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
 17744  141C  3080               	movlw	128
 17745  141D  0025               	movlb	5	; select bank5
 17746  141E  008E               	movwf	14	;volatile
 17747  141F                     l671:	
 17748  141F  0008               	return
 17749  1420                     __end_of_TMR2_Initialize:	
 17750                           
 17751                           	psect	text53
 17752  15E6                     __ptext53:	
 17753 ;; *************** function _TMR1_Initialize *****************
 17754 ;; Defined at:
 17755 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 17756 ;; Parameters:    Size  Location     Type
 17757 ;;		None
 17758 ;; Auto vars:     Size  Location     Type
 17759 ;;		None
 17760 ;; Return value:  Size  Location     Type
 17761 ;;                  1    wreg      void 
 17762 ;; Registers used:
 17763 ;;		wreg, status,2, status,0, pclath, cstack
 17764 ;; Tracked objects:
 17765 ;;		On entry : 0/0
 17766 ;;		On exit  : 0/0
 17767 ;;		Unchanged: 0/0
 17768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17773 ;;Total ram usage:        0 bytes
 17774 ;; Hardware stack levels used:    1
 17775 ;; Hardware stack levels required when called:    7
 17776 ;; This function calls:
 17777 ;;		_TMR1_SetInterruptHandler
 17778 ;; This function is called by:
 17779 ;;		_SYSTEM_Initialize
 17780 ;; This function uses a non-reentrant model
 17781 ;;
 17782                           
 17783                           
 17784                           ;psect for function _TMR1_Initialize
 17785  15E6                     _TMR1_Initialize:	
 17786  15E6                     l6441:	
 17787                           ;incstack = 0
 17788                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17789                           
 17790                           
 17791                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 17792  15E6  0024               	movlb	4	; select bank4
 17793  15E7  018F               	clrf	15	;volatile
 17794                           
 17795                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 17796  15E8  0190               	clrf	16	;volatile
 17797  15E9                     l6443:	
 17798                           
 17799                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 17800  15E9  3004               	movlw	4
 17801  15EA  0091               	movwf	17	;volatile
 17802  15EB                     l6445:	
 17803                           
 17804                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x86;
 17805  15EB  3086               	movlw	134
 17806  15EC  008D               	movwf	13	;volatile
 17807  15ED                     l6447:	
 17808                           
 17809                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xE8;
 17810  15ED  30E8               	movlw	232
 17811  15EE  008C               	movwf	12	;volatile
 17812  15EF                     l6449:	
 17813                           
 17814                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 17815  15EF  080D               	movf	13,w	;volatile
 17816  15F0  0021               	movlb	1	; select bank1
 17817  15F1  00EE               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 17818  15F2  0024               	movlb	4	; select bank4
 17819  15F3  080C               	movf	12,w	;volatile
 17820  15F4  0021               	movlb	1	; select bank1
 17821  15F5  00ED               	movwf	_timer1ReloadVal^(0+128)	;volatile
 17822  15F6                     l6451:	
 17823                           
 17824                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 17825  15F6  002E               	movlb	14	; select bank14
 17826  15F7  1010               	bcf	16,0	;volatile
 17827  15F8                     l6453:	
 17828                           
 17829                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 17830  15F8  141A               	bsf	26,0	;volatile
 17831  15F9                     l6455:	
 17832                           
 17833                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 17834  15F9  3002               	movlw	low _TMR1_DefaultInterruptHandler
 17835  15FA  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 17836  15FB  3000               	movlw	high _TMR1_DefaultInterruptHandler
 17837  15FC  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 17838  15FD  3193  230A  3195   	fcall	_TMR1_SetInterruptHandler
 17839  1600                     l6457:	
 17840                           
 17841                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x05;
 17842  1600  3005               	movlw	5
 17843  1601  0024               	movlb	4	; select bank4
 17844  1602  008E               	movwf	14	;volatile
 17845  1603                     l31:	
 17846  1603  0008               	return
 17847  1604                     __end_of_TMR1_Initialize:	
 17848                           
 17849                           	psect	text54
 17850  1405                     __ptext54:	
 17851 ;; *************** function _PWM6_Initialize *****************
 17852 ;; Defined at:
 17853 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 17854 ;; Parameters:    Size  Location     Type
 17855 ;;		None
 17856 ;; Auto vars:     Size  Location     Type
 17857 ;;		None
 17858 ;; Return value:  Size  Location     Type
 17859 ;;                  1    wreg      void 
 17860 ;; Registers used:
 17861 ;;		wreg, status,2, status,0
 17862 ;; Tracked objects:
 17863 ;;		On entry : 0/0
 17864 ;;		On exit  : 0/0
 17865 ;;		Unchanged: 0/0
 17866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17871 ;;Total ram usage:        0 bytes
 17872 ;; Hardware stack levels used:    1
 17873 ;; Hardware stack levels required when called:    6
 17874 ;; This function calls:
 17875 ;;		Nothing
 17876 ;; This function is called by:
 17877 ;;		_SYSTEM_Initialize
 17878 ;; This function uses a non-reentrant model
 17879 ;;
 17880                           
 17881                           
 17882                           ;psect for function _PWM6_Initialize
 17883  1405                     _PWM6_Initialize:	
 17884  1405                     l6531:	
 17885                           ;incstack = 0
 17886                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 17887                           
 17888                           
 17889                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 17890  1405  3080               	movlw	128
 17891  1406  0027               	movlb	7	; select bank7
 17892  1407  008E               	movwf	14	;volatile
 17893                           
 17894                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0xFF;
 17895  1408  30FF               	movlw	255
 17896  1409  008D               	movwf	13	;volatile
 17897                           
 17898                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
 17899  140A  30C0               	movlw	192
 17900  140B  008C               	movwf	12	;volatile
 17901  140C                     l6533:	
 17902                           
 17903                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 17904  140C  0024               	movlb	4	; select bank4
 17905  140D  081F               	movf	31,w	;volatile
 17906  140E  39F3               	andlw	-13
 17907  140F  3804               	iorlw	4
 17908  1410  009F               	movwf	31	;volatile
 17909  1411                     l641:	
 17910  1411  0008               	return
 17911  1412                     __end_of_PWM6_Initialize:	
 17912                           
 17913                           	psect	text55
 17914  1348                     __ptext55:	
 17915 ;; *************** function _PMD_Initialize *****************
 17916 ;; Defined at:
 17917 ;;		line 77 in file "mcc_generated_files/mcc.c"
 17918 ;; Parameters:    Size  Location     Type
 17919 ;;		None
 17920 ;; Auto vars:     Size  Location     Type
 17921 ;;		None
 17922 ;; Return value:  Size  Location     Type
 17923 ;;                  1    wreg      void 
 17924 ;; Registers used:
 17925 ;;		status,2
 17926 ;; Tracked objects:
 17927 ;;		On entry : 0/0
 17928 ;;		On exit  : 0/0
 17929 ;;		Unchanged: 0/0
 17930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17935 ;;Total ram usage:        0 bytes
 17936 ;; Hardware stack levels used:    1
 17937 ;; Hardware stack levels required when called:    6
 17938 ;; This function calls:
 17939 ;;		Nothing
 17940 ;; This function is called by:
 17941 ;;		_SYSTEM_Initialize
 17942 ;; This function uses a non-reentrant model
 17943 ;;
 17944                           
 17945                           
 17946                           ;psect for function _PMD_Initialize
 17947  1348                     _PMD_Initialize:	
 17948  1348                     l6465:	
 17949                           ;incstack = 0
 17950                           ; Regs used in _PMD_Initialize: [status,2]
 17951                           
 17952                           
 17953                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 17954  1348  002F               	movlb	15	; select bank15
 17955  1349  0196               	clrf	22	;volatile
 17956                           
 17957                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 17958  134A  0197               	clrf	23	;volatile
 17959                           
 17960                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 17961  134B  0198               	clrf	24	;volatile
 17962                           
 17963                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 17964  134C  0199               	clrf	25	;volatile
 17965                           
 17966                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 17967  134D  019A               	clrf	26	;volatile
 17968                           
 17969                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 17970  134E  019B               	clrf	27	;volatile
 17971  134F                     l188:	
 17972  134F  0008               	return
 17973  1350                     __end_of_PMD_Initialize:	
 17974                           
 17975                           	psect	text56
 17976  0CF0                     __ptext56:	
 17977 ;; *************** function _PIN_MANAGER_Initialize *****************
 17978 ;; Defined at:
 17979 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 17980 ;; Parameters:    Size  Location     Type
 17981 ;;		None
 17982 ;; Auto vars:     Size  Location     Type
 17983 ;;		None
 17984 ;; Return value:  Size  Location     Type
 17985 ;;                  1    wreg      void 
 17986 ;; Registers used:
 17987 ;;		wreg, status,2
 17988 ;; Tracked objects:
 17989 ;;		On entry : 0/0
 17990 ;;		On exit  : 0/0
 17991 ;;		Unchanged: 0/0
 17992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17997 ;;Total ram usage:        0 bytes
 17998 ;; Hardware stack levels used:    1
 17999 ;; Hardware stack levels required when called:    6
 18000 ;; This function calls:
 18001 ;;		Nothing
 18002 ;; This function is called by:
 18003 ;;		_SYSTEM_Initialize
 18004 ;; This function uses a non-reentrant model
 18005 ;;
 18006                           
 18007                           
 18008                           ;psect for function _PIN_MANAGER_Initialize
 18009  0CF0                     _PIN_MANAGER_Initialize:	
 18010  0CF0                     l6467:	
 18011                           ;incstack = 0
 18012                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 18013                           
 18014                           
 18015                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 18016  0CF0  0020               	movlb	0	; select bank0
 18017  0CF1  019A               	clrf	26	;volatile
 18018                           
 18019                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 18020  0CF2  0199               	clrf	25	;volatile
 18021                           
 18022                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 18023  0CF3  0196               	clrf	22	;volatile
 18024                           
 18025                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 18026  0CF4  0197               	clrf	23	;volatile
 18027                           
 18028                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 18029  0CF5  0198               	clrf	24	;volatile
 18030  0CF6                     l6469:	
 18031                           
 18032                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 18033  0CF6  3007               	movlw	7
 18034  0CF7  0095               	movwf	21	;volatile
 18035  0CF8                     l6471:	
 18036                           
 18037                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 18038  0CF8  300F               	movlw	15
 18039  0CF9  0091               	movwf	17	;volatile
 18040  0CFA                     l6473:	
 18041                           
 18042                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 18043  0CFA  30FF               	movlw	255
 18044  0CFB  0092               	movwf	18	;volatile
 18045  0CFC                     l6475:	
 18046                           
 18047                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
 18048  0CFC  30BF               	movlw	191
 18049  0CFD  0093               	movwf	19	;volatile
 18050  0CFE                     l6477:	
 18051                           
 18052                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 18053  0CFE  30FF               	movlw	255
 18054  0CFF  0094               	movwf	20	;volatile
 18055  0D00                     l6479:	
 18056                           
 18057                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 18058  0D00  30FF               	movlw	255
 18059  0D01  003E               	movlb	30	; select bank30
 18060  0D02  00D9               	movwf	89	;volatile
 18061  0D03                     l6481:	
 18062                           
 18063                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x47;
 18064  0D03  3047               	movlw	71
 18065  0D04  00CE               	movwf	78	;volatile
 18066  0D05                     l6483:	
 18067                           
 18068                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 18069  0D05  30EF               	movlw	239
 18070  0D06  00C3               	movwf	67	;volatile
 18071  0D07                     l6485:	
 18072                           
 18073                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 18074  0D07  3007               	movlw	7
 18075  0D08  00E4               	movwf	100	;volatile
 18076  0D09                     l6487:	
 18077                           
 18078                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x0F;
 18079  0D09  300F               	movlw	15
 18080  0D0A  00B8               	movwf	56	;volatile
 18081                           
 18082                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 18083  0D0B  01DA               	clrf	90	;volatile
 18084                           
 18085                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 18086  0D0C  01E5               	clrf	101	;volatile
 18087                           
 18088                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 18089  0D0D  01C4               	clrf	68	;volatile
 18090                           
 18091                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 18092  0D0E  01B9               	clrf	57	;volatile
 18093                           
 18094                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 18095  0D0F  01CF               	clrf	79	;volatile
 18096                           
 18097                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 18098  0D10  01E6               	clrf	102	;volatile
 18099                           
 18100                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 18101  0D11  01BA               	clrf	58	;volatile
 18102                           
 18103                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 18104  0D12  01C5               	clrf	69	;volatile
 18105                           
 18106                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 18107  0D13  01D0               	clrf	80	;volatile
 18108                           
 18109                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 18110  0D14  01DB               	clrf	91	;volatile
 18111  0D15                     l6489:	
 18112                           
 18113                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 18114  0D15  30FF               	movlw	255
 18115  0D16  00BB               	movwf	59	;volatile
 18116  0D17                     l6491:	
 18117                           
 18118                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 18119  0D17  30FF               	movlw	255
 18120  0D18  00C6               	movwf	70	;volatile
 18121  0D19                     l6493:	
 18122                           
 18123                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 18124  0D19  30FF               	movlw	255
 18125  0D1A  00D1               	movwf	81	;volatile
 18126  0D1B                     l6495:	
 18127                           
 18128                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 18129  0D1B  30FF               	movlw	255
 18130  0D1C  00DC               	movwf	92	;volatile
 18131  0D1D                     l6497:	
 18132                           
 18133                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 18134  0D1D  3007               	movlw	7
 18135  0D1E  00E7               	movwf	103	;volatile
 18136  0D1F                     l6499:	
 18137                           
 18138                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 18139  0D1F  30FF               	movlw	255
 18140  0D20  00BC               	movwf	60	;volatile
 18141  0D21                     l6501:	
 18142                           
 18143                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 18144  0D21  30FF               	movlw	255
 18145  0D22  00C7               	movwf	71	;volatile
 18146  0D23                     l6503:	
 18147                           
 18148                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 18149  0D23  30FF               	movlw	255
 18150  0D24  00D2               	movwf	82	;volatile
 18151  0D25                     l6505:	
 18152                           
 18153                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 18154  0D25  30FF               	movlw	255
 18155  0D26  00DD               	movwf	93	;volatile
 18156  0D27                     l6507:	
 18157                           
 18158                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 18159  0D27  3007               	movlw	7
 18160  0D28  00E8               	movwf	104	;volatile
 18161  0D29                     l6509:	
 18162                           
 18163                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 18164  0D29  300C               	movlw	12
 18165  0D2A  003D               	movlb	29	; select bank29
 18166  0D2B  0090               	movwf	16	;volatile
 18167  0D2C                     l6511:	
 18168                           
 18169                           ;mcc_generated_files/pin_manager.c: 128:     RXPPS = 0x17;
 18170  0D2C  3017               	movlw	23
 18171  0D2D  00CB               	movwf	75	;volatile
 18172  0D2E                     l6513:	
 18173                           
 18174                           ;mcc_generated_files/pin_manager.c: 129:     SSP1CLKPPS = 0x13;
 18175  0D2E  3013               	movlw	19
 18176  0D2F  00C5               	movwf	69	;volatile
 18177  0D30                     l6515:	
 18178                           
 18179                           ;mcc_generated_files/pin_manager.c: 130:     RC3PPS = 0x14;
 18180  0D30  3014               	movlw	20
 18181  0D31  003E               	movlb	30	; select bank30
 18182  0D32  00A3               	movwf	35	;volatile
 18183  0D33                     l6517:	
 18184                           
 18185                           ;mcc_generated_files/pin_manager.c: 131:     RC4PPS = 0x15;
 18186  0D33  3015               	movlw	21
 18187  0D34  00A4               	movwf	36	;volatile
 18188  0D35                     l6519:	
 18189                           
 18190                           ;mcc_generated_files/pin_manager.c: 132:     RC6PPS = 0x10;
 18191  0D35  3010               	movlw	16
 18192  0D36  00A6               	movwf	38	;volatile
 18193  0D37                     l6521:	
 18194                           
 18195                           ;mcc_generated_files/pin_manager.c: 133:     SSP1DATPPS = 0x14;
 18196  0D37  3014               	movlw	20
 18197  0D38  003D               	movlb	29	; select bank29
 18198  0D39  00C6               	movwf	70	;volatile
 18199  0D3A                     l275:	
 18200  0D3A  0008               	return
 18201  0D3B                     __end_of_PIN_MANAGER_Initialize:	
 18202                           
 18203                           	psect	text57
 18204  13A0                     __ptext57:	
 18205 ;; *************** function _OSCILLATOR_Initialize *****************
 18206 ;; Defined at:
 18207 ;;		line 63 in file "mcc_generated_files/mcc.c"
 18208 ;; Parameters:    Size  Location     Type
 18209 ;;		None
 18210 ;; Auto vars:     Size  Location     Type
 18211 ;;		None
 18212 ;; Return value:  Size  Location     Type
 18213 ;;                  1    wreg      void 
 18214 ;; Registers used:
 18215 ;;		wreg, status,2
 18216 ;; Tracked objects:
 18217 ;;		On entry : 0/0
 18218 ;;		On exit  : 0/0
 18219 ;;		Unchanged: 0/0
 18220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18225 ;;Total ram usage:        0 bytes
 18226 ;; Hardware stack levels used:    1
 18227 ;; Hardware stack levels required when called:    6
 18228 ;; This function calls:
 18229 ;;		Nothing
 18230 ;; This function is called by:
 18231 ;;		_SYSTEM_Initialize
 18232 ;; This function uses a non-reentrant model
 18233 ;;
 18234                           
 18235                           
 18236                           ;psect for function _OSCILLATOR_Initialize
 18237  13A0                     _OSCILLATOR_Initialize:	
 18238  13A0                     l6523:	
 18239                           ;incstack = 0
 18240                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 18241                           
 18242                           
 18243                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 18244  13A0  3062               	movlw	98
 18245  13A1  0031               	movlb	17	; select bank17
 18246  13A2  008D               	movwf	13	;volatile
 18247  13A3                     l6525:	
 18248                           
 18249                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 18250  13A3  018F               	clrf	15	;volatile
 18251  13A4                     l6527:	
 18252                           
 18253                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 18254  13A4  0191               	clrf	17	;volatile
 18255                           
 18256                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 18257  13A5  3002               	movlw	2
 18258  13A6  0093               	movwf	19	;volatile
 18259  13A7                     l6529:	
 18260                           
 18261                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 18262  13A7  0192               	clrf	18	;volatile
 18263  13A8                     l185:	
 18264  13A8  0008               	return
 18265  13A9                     __end_of_OSCILLATOR_Initialize:	
 18266                           
 18267                           	psect	text58
 18268  13F8                     __ptext58:	
 18269 ;; *************** function _EXT_INT_Initialize *****************
 18270 ;; Defined at:
 18271 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 18272 ;; Parameters:    Size  Location     Type
 18273 ;;		None
 18274 ;; Auto vars:     Size  Location     Type
 18275 ;;		None
 18276 ;; Return value:  Size  Location     Type
 18277 ;;                  1    wreg      void 
 18278 ;; Registers used:
 18279 ;;		wreg, status,2, status,0, pclath, cstack
 18280 ;; Tracked objects:
 18281 ;;		On entry : 0/0
 18282 ;;		On exit  : 0/0
 18283 ;;		Unchanged: 0/0
 18284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18289 ;;Total ram usage:        0 bytes
 18290 ;; Hardware stack levels used:    1
 18291 ;; Hardware stack levels required when called:    7
 18292 ;; This function calls:
 18293 ;;		_INT_SetInterruptHandler
 18294 ;; This function is called by:
 18295 ;;		_SYSTEM_Initialize
 18296 ;; This function uses a non-reentrant model
 18297 ;;
 18298                           
 18299                           
 18300                           ;psect for function _EXT_INT_Initialize
 18301  13F8                     _EXT_INT_Initialize:	
 18302  13F8                     l6459:	
 18303                           ;incstack = 0
 18304                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18305                           
 18306                           
 18307                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 18308  13F8  002E               	movlb	14	; select bank14
 18309  13F9  100C               	bcf	12,0	;volatile
 18310                           
 18311                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 18312  13FA  140B               	bsf	11,0	;volatile
 18313  13FB                     l6461:	
 18314                           
 18315                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 18316  13FB  30EF               	movlw	low _INT_DefaultInterruptHandler
 18317  13FC  00F2               	movwf	INT_SetInterruptHandler@InterruptHandler
 18318  13FD  3012               	movlw	high _INT_DefaultInterruptHandler
 18319  13FE  00F3               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 18320  13FF  3193  232E  3193   	fcall	_INT_SetInterruptHandler
 18321  1402                     l6463:	
 18322                           
 18323                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 18324  1402  002E               	movlb	14	; select bank14
 18325  1403  1416               	bsf	22,0	;volatile
 18326  1404                     l90:	
 18327  1404  0008               	return
 18328  1405                     __end_of_EXT_INT_Initialize:	
 18329                           
 18330                           	psect	text59
 18331  132E                     __ptext59:	
 18332 ;; *************** function _INT_SetInterruptHandler *****************
 18333 ;; Defined at:
 18334 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 18335 ;; Parameters:    Size  Location     Type
 18336 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
 18337 ;;		 -> Switch1(1), INT_DefaultInterruptHandler(1), 
 18338 ;; Auto vars:     Size  Location     Type
 18339 ;;		None
 18340 ;; Return value:  Size  Location     Type
 18341 ;;                  1    wreg      void 
 18342 ;; Registers used:
 18343 ;;		wreg
 18344 ;; Tracked objects:
 18345 ;;		On entry : 0/0
 18346 ;;		On exit  : 0/0
 18347 ;;		Unchanged: 0/0
 18348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18352 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18353 ;;Total ram usage:        2 bytes
 18354 ;; Hardware stack levels used:    1
 18355 ;; Hardware stack levels required when called:    6
 18356 ;; This function calls:
 18357 ;;		Nothing
 18358 ;; This function is called by:
 18359 ;;		_EXT_INT_Initialize
 18360 ;;		_main
 18361 ;; This function uses a non-reentrant model
 18362 ;;
 18363                           
 18364                           
 18365                           ;psect for function _INT_SetInterruptHandler
 18366  132E                     _INT_SetInterruptHandler:	
 18367  132E                     l6187:	
 18368                           ;incstack = 0
 18369                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 18370                           
 18371                           
 18372                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 18373  132E  0873               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 18374  132F  0021               	movlb	1	; select bank1
 18375  1330  00EA               	movwf	(_INT_InterruptHandler+1)^(0+128)
 18376  1331  0872               	movf	INT_SetInterruptHandler@InterruptHandler,w
 18377  1332  00E9               	movwf	_INT_InterruptHandler^(0+128)
 18378  1333                     l84:	
 18379  1333  0008               	return
 18380  1334                     __end_of_INT_SetInterruptHandler:	
 18381                           
 18382                           	psect	text60
 18383  0A7B                     __ptext60:	
 18384 ;; *************** function _EUSART_Initialize *****************
 18385 ;; Defined at:
 18386 ;;		line 88 in file "mcc_generated_files/eusart.c"
 18387 ;; Parameters:    Size  Location     Type
 18388 ;;		None
 18389 ;; Auto vars:     Size  Location     Type
 18390 ;;		None
 18391 ;; Return value:  Size  Location     Type
 18392 ;;                  1    wreg      void 
 18393 ;; Registers used:
 18394 ;;		wreg, status,2, status,0, pclath, cstack
 18395 ;; Tracked objects:
 18396 ;;		On entry : 0/0
 18397 ;;		On exit  : 0/0
 18398 ;;		Unchanged: 0/0
 18399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18402 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18404 ;;Total ram usage:        1 bytes
 18405 ;; Hardware stack levels used:    1
 18406 ;; Hardware stack levels required when called:    7
 18407 ;; This function calls:
 18408 ;;		_EUSART_SetErrorHandler
 18409 ;;		_EUSART_SetFramingErrorHandler
 18410 ;;		_EUSART_SetOverrunErrorHandler
 18411 ;;		_EUSART_SetRxInterruptHandler
 18412 ;;		_EUSART_SetTxInterruptHandler
 18413 ;; This function is called by:
 18414 ;;		_SYSTEM_Initialize
 18415 ;; This function uses a non-reentrant model
 18416 ;;
 18417                           
 18418                           
 18419                           ;psect for function _EUSART_Initialize
 18420  0A7B                     _EUSART_Initialize:	
 18421  0A7B                     l6553:	
 18422                           ;incstack = 0
 18423                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18424                           
 18425                           
 18426                           ;mcc_generated_files/eusart.c: 91:     PIE3bits.RCIE = 0;
 18427  0A7B  002E               	movlb	14	; select bank14
 18428  0A7C  1299               	bcf	25,5	;volatile
 18429  0A7D                     l6555:	
 18430                           
 18431                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 18432  0A7D  30CC               	movlw	low _EUSART_Receive_ISR
 18433  0A7E  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 18434  0A7F  3009               	movlw	high _EUSART_Receive_ISR
 18435  0A80  00F3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 18436  0A81  3193  2322  318A   	fcall	_EUSART_SetRxInterruptHandler
 18437  0A84                     l6557:	
 18438                           
 18439                           ;mcc_generated_files/eusart.c: 93:     PIE3bits.TXIE = 0;
 18440  0A84  002E               	movlb	14	; select bank14
 18441  0A85  1219               	bcf	25,4	;volatile
 18442                           
 18443                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
 18444  0A86  30A1               	movlw	low _EUSART_Transmit_ISR
 18445  0A87  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 18446  0A88  3016               	movlw	high _EUSART_Transmit_ISR
 18447  0A89  00F3               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 18448  0A8A  3193  2328  318A   	fcall	_EUSART_SetTxInterruptHandler
 18449  0A8D                     l6559:	
 18450                           
 18451                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x08;
 18452  0A8D  3008               	movlw	8
 18453  0A8E  0022               	movlb	2	; select bank2
 18454  0A8F  009F               	movwf	31	;volatile
 18455  0A90                     l6561:	
 18456                           
 18457                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x90;
 18458  0A90  3090               	movlw	144
 18459  0A91  009D               	movwf	29	;volatile
 18460  0A92                     l6563:	
 18461                           
 18462                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
 18463  0A92  3024               	movlw	36
 18464  0A93  009E               	movwf	30	;volatile
 18465  0A94                     l6565:	
 18466                           
 18467                           ;mcc_generated_files/eusart.c: 107:     SP1BRGL = 0x19;
 18468  0A94  3019               	movlw	25
 18469  0A95  009B               	movwf	27	;volatile
 18470  0A96                     l6567:	
 18471                           
 18472                           ;mcc_generated_files/eusart.c: 110:     SP1BRGH = 0x00;
 18473  0A96  019C               	clrf	28	;volatile
 18474  0A97                     l6569:	
 18475                           
 18476                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
 18477  0A97  3003               	movlw	low _EUSART_DefaultFramingErrorHandler
 18478  0A98  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 18479  0A99  3000               	movlw	high _EUSART_DefaultFramingErrorHandler
 18480  0A9A  00F3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 18481  0A9B  3193  2316  318A   	fcall	_EUSART_SetFramingErrorHandler
 18482  0A9E                     l6571:	
 18483                           
 18484                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
 18485  0A9E  30FA               	movlw	low _EUSART_DefaultOverrunErrorHandler
 18486  0A9F  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 18487  0AA0  3012               	movlw	high _EUSART_DefaultOverrunErrorHandler
 18488  0AA1  00F3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 18489  0AA2  3193  231C  318A   	fcall	_EUSART_SetOverrunErrorHandler
 18490  0AA5                     l6573:	
 18491                           
 18492                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
 18493  0AA5  30F6               	movlw	low _EUSART_DefaultErrorHandler
 18494  0AA6  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler
 18495  0AA7  3012               	movlw	high _EUSART_DefaultErrorHandler
 18496  0AA8  00F3               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 18497  0AA9  3193  2310  318A   	fcall	_EUSART_SetErrorHandler
 18498                           
 18499                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
 18500  0AAC  0021               	movlb	1	; select bank1
 18501  0AAD  01DB               	clrf	_eusartRxLastError^(0+128)	;volatile
 18502                           
 18503                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
 18504  0AAE  01DE               	clrf	_eusartTxHead^(0+128)	;volatile
 18505                           
 18506                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
 18507  0AAF  01DD               	clrf	_eusartTxTail^(0+128)	;volatile
 18508  0AB0                     l6575:	
 18509                           
 18510                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
 18511  0AB0  3008               	movlw	8
 18512  0AB1  00F4               	movwf	??_EUSART_Initialize
 18513  0AB2  0874               	movf	??_EUSART_Initialize,w
 18514  0AB3  00EF               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
 18515  0AB4                     l6577:	
 18516                           
 18517                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
 18518  0AB4  01FB               	clrf	_eusartRxHead	;volatile
 18519  0AB5                     l6579:	
 18520                           
 18521                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
 18522  0AB5  0020               	movlb	0	; select bank0
 18523  0AB6  01EF               	clrf	_eusartRxTail	;volatile
 18524  0AB7                     l6581:	
 18525                           
 18526                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
 18527  0AB7  0021               	movlb	1	; select bank1
 18528  0AB8  01DC               	clrf	_eusartRxCount^(0+128)	;volatile
 18529  0AB9                     l6583:	
 18530                           
 18531                           ;mcc_generated_files/eusart.c: 129:     PIE3bits.RCIE = 1;
 18532  0AB9  002E               	movlb	14	; select bank14
 18533  0ABA  1699               	bsf	25,5	;volatile
 18534  0ABB                     l786:	
 18535  0ABB  0008               	return
 18536  0ABC                     __end_of_EUSART_Initialize:	
 18537                           
 18538                           	psect	text61
 18539  1328                     __ptext61:	
 18540 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 18541 ;; Defined at:
 18542 ;;		line 285 in file "mcc_generated_files/eusart.c"
 18543 ;; Parameters:    Size  Location     Type
 18544 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
 18545 ;;		 -> EUSART_Transmit_ISR(1), 
 18546 ;; Auto vars:     Size  Location     Type
 18547 ;;		None
 18548 ;; Return value:  Size  Location     Type
 18549 ;;                  1    wreg      void 
 18550 ;; Registers used:
 18551 ;;		wreg
 18552 ;; Tracked objects:
 18553 ;;		On entry : 0/0
 18554 ;;		On exit  : 0/0
 18555 ;;		Unchanged: 0/0
 18556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18560 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18561 ;;Total ram usage:        2 bytes
 18562 ;; Hardware stack levels used:    1
 18563 ;; Hardware stack levels required when called:    6
 18564 ;; This function calls:
 18565 ;;		Nothing
 18566 ;; This function is called by:
 18567 ;;		_EUSART_Initialize
 18568 ;; This function uses a non-reentrant model
 18569 ;;
 18570                           
 18571                           
 18572                           ;psect for function _EUSART_SetTxInterruptHandler
 18573  1328                     _EUSART_SetTxInterruptHandler:	
 18574  1328                     l6191:	
 18575                           ;incstack = 0
 18576                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 18577                           
 18578                           
 18579                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
 18580  1328  0873               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 18581  1329  0021               	movlb	1	; select bank1
 18582  132A  00E8               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
 18583  132B  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 18584  132C  00E7               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
 18585  132D                     l858:	
 18586  132D  0008               	return
 18587  132E                     __end_of_EUSART_SetTxInterruptHandler:	
 18588                           
 18589                           	psect	text62
 18590  1322                     __ptext62:	
 18591 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 18592 ;; Defined at:
 18593 ;;		line 289 in file "mcc_generated_files/eusart.c"
 18594 ;; Parameters:    Size  Location     Type
 18595 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
 18596 ;;		 -> countMsg(1), EUSART_Receive_ISR(1), 
 18597 ;; Auto vars:     Size  Location     Type
 18598 ;;		None
 18599 ;; Return value:  Size  Location     Type
 18600 ;;                  1    wreg      void 
 18601 ;; Registers used:
 18602 ;;		wreg
 18603 ;; Tracked objects:
 18604 ;;		On entry : 0/0
 18605 ;;		On exit  : 0/0
 18606 ;;		Unchanged: 0/0
 18607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18611 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18612 ;;Total ram usage:        2 bytes
 18613 ;; Hardware stack levels used:    1
 18614 ;; Hardware stack levels required when called:    6
 18615 ;; This function calls:
 18616 ;;		Nothing
 18617 ;; This function is called by:
 18618 ;;		_EUSART_Initialize
 18619 ;;		_main
 18620 ;; This function uses a non-reentrant model
 18621 ;;
 18622                           
 18623                           
 18624                           ;psect for function _EUSART_SetRxInterruptHandler
 18625  1322                     _EUSART_SetRxInterruptHandler:	
 18626  1322                     l6189:	
 18627                           ;incstack = 0
 18628                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 18629                           
 18630                           
 18631                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
 18632  1322  0873               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 18633  1323  0021               	movlb	1	; select bank1
 18634  1324  00E6               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
 18635  1325  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 18636  1326  00E5               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
 18637  1327                     l861:	
 18638  1327  0008               	return
 18639  1328                     __end_of_EUSART_SetRxInterruptHandler:	
 18640                           
 18641                           	psect	text63
 18642  131C                     __ptext63:	
 18643 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 18644 ;; Defined at:
 18645 ;;		line 277 in file "mcc_generated_files/eusart.c"
 18646 ;; Parameters:    Size  Location     Type
 18647 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
 18648 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 18649 ;; Auto vars:     Size  Location     Type
 18650 ;;		None
 18651 ;; Return value:  Size  Location     Type
 18652 ;;                  1    wreg      void 
 18653 ;; Registers used:
 18654 ;;		wreg
 18655 ;; Tracked objects:
 18656 ;;		On entry : 0/0
 18657 ;;		On exit  : 0/0
 18658 ;;		Unchanged: 0/0
 18659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18663 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18664 ;;Total ram usage:        2 bytes
 18665 ;; Hardware stack levels used:    1
 18666 ;; Hardware stack levels required when called:    6
 18667 ;; This function calls:
 18668 ;;		Nothing
 18669 ;; This function is called by:
 18670 ;;		_EUSART_Initialize
 18671 ;; This function uses a non-reentrant model
 18672 ;;
 18673                           
 18674                           
 18675                           ;psect for function _EUSART_SetOverrunErrorHandler
 18676  131C                     _EUSART_SetOverrunErrorHandler:	
 18677  131C                     l6195:	
 18678                           ;incstack = 0
 18679                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 18680                           
 18681                           
 18682                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
 18683  131C  0873               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 18684  131D  0021               	movlb	1	; select bank1
 18685  131E  00E2               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
 18686  131F  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 18687  1320  00E1               	movwf	_EUSART_OverrunErrorHandler^(0+128)
 18688  1321                     l852:	
 18689  1321  0008               	return
 18690  1322                     __end_of_EUSART_SetOverrunErrorHandler:	
 18691                           
 18692                           	psect	text64
 18693  1316                     __ptext64:	
 18694 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 18695 ;; Defined at:
 18696 ;;		line 273 in file "mcc_generated_files/eusart.c"
 18697 ;; Parameters:    Size  Location     Type
 18698 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
 18699 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 18700 ;; Auto vars:     Size  Location     Type
 18701 ;;		None
 18702 ;; Return value:  Size  Location     Type
 18703 ;;                  1    wreg      void 
 18704 ;; Registers used:
 18705 ;;		wreg
 18706 ;; Tracked objects:
 18707 ;;		On entry : 0/0
 18708 ;;		On exit  : 0/0
 18709 ;;		Unchanged: 0/0
 18710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18715 ;;Total ram usage:        2 bytes
 18716 ;; Hardware stack levels used:    1
 18717 ;; Hardware stack levels required when called:    6
 18718 ;; This function calls:
 18719 ;;		Nothing
 18720 ;; This function is called by:
 18721 ;;		_EUSART_Initialize
 18722 ;; This function uses a non-reentrant model
 18723 ;;
 18724                           
 18725                           
 18726                           ;psect for function _EUSART_SetFramingErrorHandler
 18727  1316                     _EUSART_SetFramingErrorHandler:	
 18728  1316                     l6193:	
 18729                           ;incstack = 0
 18730                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 18731                           
 18732                           
 18733                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
 18734  1316  0873               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 18735  1317  0021               	movlb	1	; select bank1
 18736  1318  00E4               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
 18737  1319  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 18738  131A  00E3               	movwf	_EUSART_FramingErrorHandler^(0+128)
 18739  131B                     l849:	
 18740  131B  0008               	return
 18741  131C                     __end_of_EUSART_SetFramingErrorHandler:	
 18742                           
 18743                           	psect	text65
 18744  1310                     __ptext65:	
 18745 ;; *************** function _EUSART_SetErrorHandler *****************
 18746 ;; Defined at:
 18747 ;;		line 281 in file "mcc_generated_files/eusart.c"
 18748 ;; Parameters:    Size  Location     Type
 18749 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
 18750 ;;		 -> EUSART_DefaultErrorHandler(1), 
 18751 ;; Auto vars:     Size  Location     Type
 18752 ;;		None
 18753 ;; Return value:  Size  Location     Type
 18754 ;;                  1    wreg      void 
 18755 ;; Registers used:
 18756 ;;		wreg
 18757 ;; Tracked objects:
 18758 ;;		On entry : 0/0
 18759 ;;		On exit  : 0/0
 18760 ;;		Unchanged: 0/0
 18761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18766 ;;Total ram usage:        2 bytes
 18767 ;; Hardware stack levels used:    1
 18768 ;; Hardware stack levels required when called:    6
 18769 ;; This function calls:
 18770 ;;		Nothing
 18771 ;; This function is called by:
 18772 ;;		_EUSART_Initialize
 18773 ;; This function uses a non-reentrant model
 18774 ;;
 18775                           
 18776                           
 18777                           ;psect for function _EUSART_SetErrorHandler
 18778  1310                     _EUSART_SetErrorHandler:	
 18779  1310                     l6197:	
 18780                           ;incstack = 0
 18781                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 18782                           
 18783                           
 18784                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
 18785  1310  0873               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 18786  1311  0021               	movlb	1	; select bank1
 18787  1312  00E0               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
 18788  1313  0872               	movf	EUSART_SetErrorHandler@interruptHandler,w
 18789  1314  00DF               	movwf	_EUSART_ErrorHandler^(0+128)
 18790  1315                     l855:	
 18791  1315  0008               	return
 18792  1316                     __end_of_EUSART_SetErrorHandler:	
 18793                           
 18794                           	psect	text66
 18795  1502                     __ptext66:	
 18796 ;; *************** function _ADCC_Initialize *****************
 18797 ;; Defined at:
 18798 ;;		line 63 in file "mcc_generated_files/adcc.c"
 18799 ;; Parameters:    Size  Location     Type
 18800 ;;		None
 18801 ;; Auto vars:     Size  Location     Type
 18802 ;;		None
 18803 ;; Return value:  Size  Location     Type
 18804 ;;                  1    wreg      void 
 18805 ;; Registers used:
 18806 ;;		wreg, status,2
 18807 ;; Tracked objects:
 18808 ;;		On entry : 0/0
 18809 ;;		On exit  : 0/0
 18810 ;;		Unchanged: 0/0
 18811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18816 ;;Total ram usage:        0 bytes
 18817 ;; Hardware stack levels used:    1
 18818 ;; Hardware stack levels required when called:    6
 18819 ;; This function calls:
 18820 ;;		Nothing
 18821 ;; This function is called by:
 18822 ;;		_SYSTEM_Initialize
 18823 ;; This function uses a non-reentrant model
 18824 ;;
 18825                           
 18826                           
 18827                           ;psect for function _ADCC_Initialize
 18828  1502                     _ADCC_Initialize:	
 18829  1502                     l6535:	
 18830                           ;incstack = 0
 18831                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 18832                           
 18833                           
 18834                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 18835  1502  0022               	movlb	2	; select bank2
 18836  1503  018E               	clrf	14	;volatile
 18837                           
 18838                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 18839  1504  018F               	clrf	15	;volatile
 18840                           
 18841                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 18842  1505  0190               	clrf	16	;volatile
 18843                           
 18844                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 18845  1506  0191               	clrf	17	;volatile
 18846                           
 18847                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 18848  1507  0192               	clrf	18	;volatile
 18849                           
 18850                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 18851  1508  0193               	clrf	19	;volatile
 18852                           
 18853                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 18854  1509  018D               	clrf	13	;volatile
 18855                           
 18856                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 18857  150A  0021               	movlb	1	; select bank1
 18858  150B  019E               	clrf	30	;volatile
 18859                           
 18860                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 18861  150C  019B               	clrf	27	;volatile
 18862                           
 18863                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 18864  150D  0194               	clrf	20	;volatile
 18865                           
 18866                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 18867  150E  0195               	clrf	21	;volatile
 18868                           
 18869                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 18870  150F  0196               	clrf	22	;volatile
 18871                           
 18872                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 18873  1510  0197               	clrf	23	;volatile
 18874                           
 18875                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 18876  1511  019A               	clrf	26	;volatile
 18877                           
 18878                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 18879  1512  0199               	clrf	25	;volatile
 18880                           
 18881                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 18882  1513  0198               	clrf	24	;volatile
 18883  1514                     l6537:	
 18884                           
 18885                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x80;
 18886  1514  3080               	movlw	128
 18887  1515  0093               	movwf	19	;volatile
 18888  1516                     l6539:	
 18889                           
 18890                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 18891  1516  019D               	clrf	29	;volatile
 18892  1517                     l357:	
 18893  1517  0008               	return
 18894  1518                     __end_of_ADCC_Initialize:	
 18895                           
 18896                           	psect	text67
 18897  031F                     __ptext67:	
 18898 ;; *************** function _ReadTemp *****************
 18899 ;; Defined at:
 18900 ;;		line 15 in file "utils.c"
 18901 ;; Parameters:    Size  Location     Type
 18902 ;;		None
 18903 ;; Auto vars:     Size  Location     Type
 18904 ;;  value           1    5[COMMON] unsigned char 
 18905 ;; Return value:  Size  Location     Type
 18906 ;;                  1    wreg      unsigned char 
 18907 ;; Registers used:
 18908 ;;		wreg, status,2, status,0, pclath, cstack
 18909 ;; Tracked objects:
 18910 ;;		On entry : 0/0
 18911 ;;		On exit  : 0/0
 18912 ;;		Unchanged: 0/0
 18913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18917 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18918 ;;Total ram usage:        2 bytes
 18919 ;; Hardware stack levels used:    1
 18920 ;; Hardware stack levels required when called:    7
 18921 ;; This function calls:
 18922 ;;		_ReadI2C
 18923 ;;		_WriteI2C
 18924 ;; This function is called by:
 18925 ;;		_main
 18926 ;; This function uses a non-reentrant model
 18927 ;;
 18928                           
 18929                           
 18930                           ;psect for function _ReadTemp
 18931  031F                     _ReadTemp:	
 18932  031F                     l1272:	
 18933                           ;incstack = 0
 18934                           ; Regs used in _ReadTemp: [wreg+status,2+status,0+pclath+cstack]
 18935                           ;utils.c: 16:  unsigned char value;;utils.c: 18:     do{
 18936                           
 18937  031F                     l6895:	
 18938                           ;utils.c: 19:         while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 18939                           
 18940  031F  0023               	movlb	3	; select bank3
 18941  0320  0C0F               	rrf	15,w	;volatile
 18942  0321  0C89               	rrf	9,f
 18943  0322  3901               	andlw	1
 18944  0323  00F4               	movwf	??_ReadTemp
 18945  0324  0811               	movf	17,w	;volatile
 18946  0325  391F               	andlw	31
 18947  0326  0474               	iorwf	??_ReadTemp,w
 18948  0327  1D03               	btfss	3,2
 18949  0328  2B2A               	goto	u5751
 18950  0329  2B2B               	goto	u5750
 18951  032A                     u5751:	
 18952  032A  2B1F               	goto	l6895
 18953  032B                     u5750:	
 18954  032B                     l1275:	
 18955                           
 18956                           ;utils.c: 20:         SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN)
 18957  032B  1411               	bsf	17,0	;volatile
 18958  032C                     l1276:	
 18959                           ;utils.c: 21:                 ; while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 18960                           
 18961                           
 18962                           ;utils.c: 20:         SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN)
 18963  032C  1811               	btfsc	17,0	;volatile
 18964  032D  2B2F               	goto	u5761
 18965  032E  2B30               	goto	u5760
 18966  032F                     u5761:	
 18967  032F  2B2C               	goto	l1276
 18968  0330                     u5760:	
 18969  0330                     l6897:	
 18970  0330  0C0F               	rrf	15,w	;volatile
 18971  0331  0C89               	rrf	9,f
 18972  0332  3901               	andlw	1
 18973  0333  00F4               	movwf	??_ReadTemp
 18974  0334  0811               	movf	17,w	;volatile
 18975  0335  391F               	andlw	31
 18976  0336  0474               	iorwf	??_ReadTemp,w
 18977  0337  1D03               	btfss	3,2
 18978  0338  2B3A               	goto	u5771
 18979  0339  2B3B               	goto	u5770
 18980  033A                     u5771:	
 18981  033A  2B30               	goto	l6897
 18982  033B                     u5770:	
 18983  033B                     l6899:	
 18984                           
 18985                           ;utils.c: 23:         WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_
      +                          W));
 18986  033B  309A               	movlw	154
 18987  033C  318C  24A5  3183   	fcall	_WriteI2C
 18988  033F                     l6901:	
 18989  033F  0023               	movlb	3	; select bank3
 18990  0340  0C0F               	rrf	15,w	;volatile
 18991  0341  0C89               	rrf	9,f
 18992  0342  3901               	andlw	1
 18993  0343  00F4               	movwf	??_ReadTemp
 18994  0344  0811               	movf	17,w	;volatile
 18995  0345  391F               	andlw	31
 18996  0346  0474               	iorwf	??_ReadTemp,w
 18997  0347  1D03               	btfss	3,2
 18998  0348  2B4A               	goto	u5781
 18999  0349  2B4B               	goto	u5780
 19000  034A                     u5781:	
 19001  034A  2B3F               	goto	l6901
 19002  034B                     u5780:	
 19003  034B                     l6903:	
 19004                           
 19005                           ;utils.c: 24:         WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19006  034B  3001               	movlw	1
 19007  034C  318C  24A5  3183   	fcall	_WriteI2C
 19008  034F                     l6905:	
 19009  034F  0023               	movlb	3	; select bank3
 19010  0350  0C0F               	rrf	15,w	;volatile
 19011  0351  0C89               	rrf	9,f
 19012  0352  3901               	andlw	1
 19013  0353  00F4               	movwf	??_ReadTemp
 19014  0354  0811               	movf	17,w	;volatile
 19015  0355  391F               	andlw	31
 19016  0356  0474               	iorwf	??_ReadTemp,w
 19017  0357  1D03               	btfss	3,2
 19018  0358  2B5A               	goto	u5791
 19019  0359  2B5B               	goto	u5790
 19020  035A                     u5791:	
 19021  035A  2B4F               	goto	l6905
 19022  035B                     u5790:	
 19023  035B                     l1287:	
 19024                           
 19025                           ;utils.c: 25:         SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN)
 19026  035B  1491               	bsf	17,1	;volatile
 19027  035C                     l1288:	
 19028                           ;utils.c: 26:                 ; while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19029                           
 19030                           
 19031                           ;utils.c: 25:         SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN)
 19032  035C  1891               	btfsc	17,1	;volatile
 19033  035D  2B5F               	goto	u5801
 19034  035E  2B60               	goto	u5800
 19035  035F                     u5801:	
 19036  035F  2B5C               	goto	l1288
 19037  0360                     u5800:	
 19038  0360                     l6907:	
 19039  0360  0C0F               	rrf	15,w	;volatile
 19040  0361  0C89               	rrf	9,f
 19041  0362  3901               	andlw	1
 19042  0363  00F4               	movwf	??_ReadTemp
 19043  0364  0811               	movf	17,w	;volatile
 19044  0365  391F               	andlw	31
 19045  0366  0474               	iorwf	??_ReadTemp,w
 19046  0367  1D03               	btfss	3,2
 19047  0368  2B6A               	goto	u5811
 19048  0369  2B6B               	goto	u5810
 19049  036A                     u5811:	
 19050  036A  2B60               	goto	l6907
 19051  036B                     u5810:	
 19052  036B                     l6909:	
 19053                           
 19054                           ;utils.c: 27:         WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_
      +                          W));
 19055  036B  309B               	movlw	155
 19056  036C  318C  24A5  3183   	fcall	_WriteI2C
 19057  036F                     l6911:	
 19058  036F  0023               	movlb	3	; select bank3
 19059  0370  0C0F               	rrf	15,w	;volatile
 19060  0371  0C89               	rrf	9,f
 19061  0372  3901               	andlw	1
 19062  0373  00F4               	movwf	??_ReadTemp
 19063  0374  0811               	movf	17,w	;volatile
 19064  0375  391F               	andlw	31
 19065  0376  0474               	iorwf	??_ReadTemp,w
 19066  0377  1D03               	btfss	3,2
 19067  0378  2B7A               	goto	u5821
 19068  0379  2B7B               	goto	u5820
 19069  037A                     u5821:	
 19070  037A  2B6F               	goto	l6911
 19071  037B                     u5820:	
 19072  037B                     l6913:	
 19073                           
 19074                           ;utils.c: 28:         value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19075  037B  3195  2578  3183   	fcall	_ReadI2C
 19076  037E  00F4               	movwf	??_ReadTemp
 19077  037F  0874               	movf	??_ReadTemp,w
 19078  0380  00F5               	movwf	ReadTemp@value
 19079  0381                     l6915:	
 19080  0381  0023               	movlb	3	; select bank3
 19081  0382  0C0F               	rrf	15,w	;volatile
 19082  0383  0C89               	rrf	9,f
 19083  0384  3901               	andlw	1
 19084  0385  00F4               	movwf	??_ReadTemp
 19085  0386  0811               	movf	17,w	;volatile
 19086  0387  391F               	andlw	31
 19087  0388  0474               	iorwf	??_ReadTemp,w
 19088  0389  1D03               	btfss	3,2
 19089  038A  2B8C               	goto	u5831
 19090  038B  2B8D               	goto	u5830
 19091  038C                     u5831:	
 19092  038C  2B81               	goto	l6915
 19093  038D                     u5830:	
 19094  038D                     l1299:	
 19095                           
 19096                           ;utils.c: 29:         SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN
      +                          )
 19097  038D  1691               	bsf	17,5	;volatile
 19098  038E  1611               	bsf	17,4	;volatile
 19099  038F                     l1300:	
 19100                           ;utils.c: 30:                 ; while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19101                           
 19102                           
 19103                           ;utils.c: 29:         SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN
      +                          )
 19104  038F  1A11               	btfsc	17,4	;volatile
 19105  0390  2B92               	goto	u5841
 19106  0391  2B93               	goto	u5840
 19107  0392                     u5841:	
 19108  0392  2B8F               	goto	l1300
 19109  0393                     u5840:	
 19110  0393                     l6917:	
 19111  0393  0C0F               	rrf	15,w	;volatile
 19112  0394  0C89               	rrf	9,f
 19113  0395  3901               	andlw	1
 19114  0396  00F4               	movwf	??_ReadTemp
 19115  0397  0811               	movf	17,w	;volatile
 19116  0398  391F               	andlw	31
 19117  0399  0474               	iorwf	??_ReadTemp,w
 19118  039A  1D03               	btfss	3,2
 19119  039B  2B9D               	goto	u5851
 19120  039C  2B9E               	goto	u5850
 19121  039D                     u5851:	
 19122  039D  2B93               	goto	l6917
 19123  039E                     u5850:	
 19124  039E                     l1305:	
 19125                           
 19126                           ;utils.c: 31:         SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 19127  039E  1511               	bsf	17,2	;volatile
 19128  039F                     l1306:	
 19129  039F  1911               	btfsc	17,2	;volatile
 19130  03A0  2BA2               	goto	u5861
 19131  03A1  2BA3               	goto	u5860
 19132  03A2                     u5861:	
 19133  03A2  2B9F               	goto	l1306
 19134  03A3                     u5860:	
 19135  03A3                     l1308:	
 19136                           
 19137                           ;utils.c: 32:     } while (!(value & 0x40));
 19138  03A3  1F75               	btfss	ReadTemp@value,6
 19139  03A4  2BA6               	goto	u5871
 19140  03A5  2BA7               	goto	u5870
 19141  03A6                     u5871:	
 19142  03A6  2B1F               	goto	l1272
 19143  03A7                     u5870:	
 19144  03A7                     l6919:	
 19145  03A7  0C0F               	rrf	15,w	;volatile
 19146  03A8  0C89               	rrf	9,f
 19147  03A9  3901               	andlw	1
 19148  03AA  00F4               	movwf	??_ReadTemp
 19149  03AB  0811               	movf	17,w	;volatile
 19150  03AC  391F               	andlw	31
 19151  03AD  0474               	iorwf	??_ReadTemp,w
 19152  03AE  1D03               	btfss	3,2
 19153  03AF  2BB1               	goto	u5881
 19154  03B0  2BB2               	goto	u5880
 19155  03B1                     u5881:	
 19156  03B1  2BA7               	goto	l6919
 19157  03B2                     u5880:	
 19158  03B2                     l1312:	
 19159                           
 19160                           ;utils.c: 35:  SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN)
 19161  03B2  1411               	bsf	17,0	;volatile
 19162  03B3                     l1313:	
 19163                           ;utils.c: 36:             ; while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19164                           
 19165                           
 19166                           ;utils.c: 35:  SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN)
 19167  03B3  1811               	btfsc	17,0	;volatile
 19168  03B4  2BB6               	goto	u5891
 19169  03B5  2BB7               	goto	u5890
 19170  03B6                     u5891:	
 19171  03B6  2BB3               	goto	l1313
 19172  03B7                     u5890:	
 19173  03B7                     l6921:	
 19174  03B7  0C0F               	rrf	15,w	;volatile
 19175  03B8  0C89               	rrf	9,f
 19176  03B9  3901               	andlw	1
 19177  03BA  00F4               	movwf	??_ReadTemp
 19178  03BB  0811               	movf	17,w	;volatile
 19179  03BC  391F               	andlw	31
 19180  03BD  0474               	iorwf	??_ReadTemp,w
 19181  03BE  1D03               	btfss	3,2
 19182  03BF  2BC1               	goto	u5901
 19183  03C0  2BC2               	goto	u5900
 19184  03C1                     u5901:	
 19185  03C1  2BB7               	goto	l6921
 19186  03C2                     u5900:	
 19187  03C2                     l6923:	
 19188                           
 19189                           ;utils.c: 37:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19190  03C2  309A               	movlw	154
 19191  03C3  318C  24A5  3183   	fcall	_WriteI2C
 19192  03C6                     l6925:	
 19193  03C6  0023               	movlb	3	; select bank3
 19194  03C7  0C0F               	rrf	15,w	;volatile
 19195  03C8  0C89               	rrf	9,f
 19196  03C9  3901               	andlw	1
 19197  03CA  00F4               	movwf	??_ReadTemp
 19198  03CB  0811               	movf	17,w	;volatile
 19199  03CC  391F               	andlw	31
 19200  03CD  0474               	iorwf	??_ReadTemp,w
 19201  03CE  1D03               	btfss	3,2
 19202  03CF  2BD1               	goto	u5911
 19203  03D0  2BD2               	goto	u5910
 19204  03D1                     u5911:	
 19205  03D1  2BC6               	goto	l6925
 19206  03D2                     u5910:	
 19207  03D2                     l6927:	
 19208                           
 19209                           ;utils.c: 38:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19210  03D2  3000               	movlw	0
 19211  03D3  318C  24A5  3183   	fcall	_WriteI2C
 19212  03D6                     l6929:	
 19213  03D6  0023               	movlb	3	; select bank3
 19214  03D7  0C0F               	rrf	15,w	;volatile
 19215  03D8  0C89               	rrf	9,f
 19216  03D9  3901               	andlw	1
 19217  03DA  00F4               	movwf	??_ReadTemp
 19218  03DB  0811               	movf	17,w	;volatile
 19219  03DC  391F               	andlw	31
 19220  03DD  0474               	iorwf	??_ReadTemp,w
 19221  03DE  1D03               	btfss	3,2
 19222  03DF  2BE1               	goto	u5921
 19223  03E0  2BE2               	goto	u5920
 19224  03E1                     u5921:	
 19225  03E1  2BD6               	goto	l6929
 19226  03E2                     u5920:	
 19227  03E2                     l1324:	
 19228                           
 19229                           ;utils.c: 39:  SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN)
 19230  03E2  1491               	bsf	17,1	;volatile
 19231  03E3                     l1325:	
 19232                           ;utils.c: 40:             ; while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19233                           
 19234                           
 19235                           ;utils.c: 39:  SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN)
 19236  03E3  1891               	btfsc	17,1	;volatile
 19237  03E4  2BE6               	goto	u5931
 19238  03E5  2BE7               	goto	u5930
 19239  03E6                     u5931:	
 19240  03E6  2BE3               	goto	l1325
 19241  03E7                     u5930:	
 19242  03E7                     l6931:	
 19243  03E7  0C0F               	rrf	15,w	;volatile
 19244  03E8  0C89               	rrf	9,f
 19245  03E9  3901               	andlw	1
 19246  03EA  00F4               	movwf	??_ReadTemp
 19247  03EB  0811               	movf	17,w	;volatile
 19248  03EC  391F               	andlw	31
 19249  03ED  0474               	iorwf	??_ReadTemp,w
 19250  03EE  1D03               	btfss	3,2
 19251  03EF  2BF1               	goto	u5941
 19252  03F0  2BF2               	goto	u5940
 19253  03F1                     u5941:	
 19254  03F1  2BE7               	goto	l6931
 19255  03F2                     u5940:	
 19256  03F2                     l6933:	
 19257                           
 19258                           ;utils.c: 41:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19259  03F2  309B               	movlw	155
 19260  03F3  318C  24A5  3183   	fcall	_WriteI2C
 19261  03F6                     l6935:	
 19262  03F6  0023               	movlb	3	; select bank3
 19263  03F7  0C0F               	rrf	15,w	;volatile
 19264  03F8  0C89               	rrf	9,f
 19265  03F9  3901               	andlw	1
 19266  03FA  00F4               	movwf	??_ReadTemp
 19267  03FB  0811               	movf	17,w	;volatile
 19268  03FC  391F               	andlw	31
 19269  03FD  0474               	iorwf	??_ReadTemp,w
 19270  03FE  1D03               	btfss	3,2
 19271  03FF  2C01               	goto	u5951
 19272  0400  2C02               	goto	u5950
 19273  0401                     u5951:	
 19274  0401  2BF6               	goto	l6935
 19275  0402                     u5950:	
 19276  0402                     l6937:	
 19277                           
 19278                           ;utils.c: 42:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19279  0402  3195  2578  3183   	fcall	_ReadI2C
 19280  0405  00F4               	movwf	??_ReadTemp
 19281  0406  0874               	movf	??_ReadTemp,w
 19282  0407  00F5               	movwf	ReadTemp@value
 19283  0408                     l6939:	
 19284  0408  0023               	movlb	3	; select bank3
 19285  0409  0C0F               	rrf	15,w	;volatile
 19286  040A  0C89               	rrf	9,f
 19287  040B  3901               	andlw	1
 19288  040C  00F4               	movwf	??_ReadTemp
 19289  040D  0811               	movf	17,w	;volatile
 19290  040E  391F               	andlw	31
 19291  040F  0474               	iorwf	??_ReadTemp,w
 19292  0410  1D03               	btfss	3,2
 19293  0411  2C13               	goto	u5961
 19294  0412  2C14               	goto	u5960
 19295  0413                     u5961:	
 19296  0413  2C08               	goto	l6939
 19297  0414                     u5960:	
 19298  0414                     l1336:	
 19299                           
 19300                           ;utils.c: 43:  SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN)
 19301  0414  1691               	bsf	17,5	;volatile
 19302  0415  1611               	bsf	17,4	;volatile
 19303  0416                     l1337:	
 19304                           ;utils.c: 44:             ; while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19305                           
 19306                           
 19307                           ;utils.c: 43:  SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN)
 19308  0416  1A11               	btfsc	17,4	;volatile
 19309  0417  2C19               	goto	u5971
 19310  0418  2C1A               	goto	u5970
 19311  0419                     u5971:	
 19312  0419  2C16               	goto	l1337
 19313  041A                     u5970:	
 19314  041A                     l6941:	
 19315  041A  0C0F               	rrf	15,w	;volatile
 19316  041B  0C89               	rrf	9,f
 19317  041C  3901               	andlw	1
 19318  041D  00F4               	movwf	??_ReadTemp
 19319  041E  0811               	movf	17,w	;volatile
 19320  041F  391F               	andlw	31
 19321  0420  0474               	iorwf	??_ReadTemp,w
 19322  0421  1D03               	btfss	3,2
 19323  0422  2C24               	goto	u5981
 19324  0423  2C25               	goto	u5980
 19325  0424                     u5981:	
 19326  0424  2C1A               	goto	l6941
 19327  0425                     u5980:	
 19328  0425                     l1342:	
 19329                           
 19330                           ;utils.c: 45:  SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 19331  0425  1511               	bsf	17,2	;volatile
 19332  0426                     l1343:	
 19333  0426  1911               	btfsc	17,2	;volatile
 19334  0427  2C29               	goto	u5991
 19335  0428  2C2A               	goto	u5990
 19336  0429                     u5991:	
 19337  0429  2C26               	goto	l1343
 19338  042A                     u5990:	
 19339  042A                     l6943:	
 19340                           
 19341                           ;utils.c: 47:  return value;
 19342  042A  0875               	movf	ReadTemp@value,w
 19343  042B                     l1346:	
 19344  042B  0008               	return
 19345  042C                     __end_of_ReadTemp:	
 19346                           
 19347                           	psect	text68
 19348  0CA5                     __ptext68:	
 19349 ;; *************** function _WriteI2C *****************
 19350 ;; Defined at:
 19351 ;;		line 47 in file "I2C/i2c.c"
 19352 ;; Parameters:    Size  Location     Type
 19353 ;;  data_out        1    wreg     unsigned char 
 19354 ;; Auto vars:     Size  Location     Type
 19355 ;;  data_out        1    3[COMMON] unsigned char 
 19356 ;; Return value:  Size  Location     Type
 19357 ;;                  1    wreg      char 
 19358 ;; Registers used:
 19359 ;;		wreg, status,2, status,0
 19360 ;; Tracked objects:
 19361 ;;		On entry : 0/0
 19362 ;;		On exit  : 0/0
 19363 ;;		Unchanged: 0/0
 19364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19367 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19368 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19369 ;;Total ram usage:        2 bytes
 19370 ;; Hardware stack levels used:    1
 19371 ;; Hardware stack levels required when called:    6
 19372 ;; This function calls:
 19373 ;;		Nothing
 19374 ;; This function is called by:
 19375 ;;		_ReadTemp
 19376 ;; This function uses a non-reentrant model
 19377 ;;
 19378                           
 19379                           
 19380                           ;psect for function _WriteI2C
 19381  0CA5                     _WriteI2C:	
 19382                           
 19383                           ;incstack = 0
 19384                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 19385                           ;WriteI2C@data_out stored from wreg
 19386  0CA5  00F3               	movwf	WriteI2C@data_out
 19387  0CA6                     l6653:	
 19388                           
 19389                           ;I2C/i2c.c: 47: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 48: {;I2C/i2c.
      +                          c: 49:   SSP1BUF = data_out;
 19390  0CA6  0873               	movf	WriteI2C@data_out,w
 19391  0CA7  0023               	movlb	3	; select bank3
 19392  0CA8  008C               	movwf	12	;volatile
 19393  0CA9                     l6655:	
 19394                           
 19395                           ;I2C/i2c.c: 50:   if ( SSP1CON1bits.WCOL )
 19396  0CA9  1F90               	btfss	16,7	;volatile
 19397  0CAA  2CAC               	goto	u5491
 19398  0CAB  2CAD               	goto	u5490
 19399  0CAC                     u5491:	
 19400  0CAC  2CAE               	goto	l6661
 19401  0CAD                     u5490:	
 19402  0CAD  2CEF               	goto	l1050
 19403  0CAE                     l6661:	
 19404                           
 19405                           ;I2C/i2c.c: 53:   {;I2C/i2c.c: 54:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 19406  0CAE  300F               	movlw	15
 19407  0CAF  0510               	andwf	16,w	;volatile
 19408  0CB0  00F2               	movwf	??_WriteI2C
 19409  0CB1  3008               	movlw	8
 19410  0CB2  0672               	xorwf	??_WriteI2C,w
 19411  0CB3  1903               	btfsc	3,2
 19412  0CB4  2CB6               	goto	u5501
 19413  0CB5  2CB7               	goto	u5500
 19414  0CB6                     u5501:	
 19415  0CB6  2CCD               	goto	l6673
 19416  0CB7                     u5500:	
 19417  0CB7                     l6663:	
 19418  0CB7  300F               	movlw	15
 19419  0CB8  0510               	andwf	16,w	;volatile
 19420  0CB9  00F2               	movwf	??_WriteI2C
 19421  0CBA  300B               	movlw	11
 19422  0CBB  0672               	xorwf	??_WriteI2C,w
 19423  0CBC  1903               	btfsc	3,2
 19424  0CBD  2CBF               	goto	u5511
 19425  0CBE  2CC0               	goto	u5510
 19426  0CBF                     u5511:	
 19427  0CBF  2CCD               	goto	l6673
 19428  0CC0                     u5510:	
 19429  0CC0                     l6665:	
 19430                           
 19431                           ;I2C/i2c.c: 55:  {;I2C/i2c.c: 56:        SSP1CON1bits.CKP = 1;
 19432  0CC0  1610               	bsf	16,4	;volatile
 19433  0CC1                     l1053:	
 19434                           ;I2C/i2c.c: 57:        while ( !PIR3bits.SSP1IF );
 19435                           
 19436  0CC1  002E               	movlb	14	; select bank14
 19437  0CC2  1C0F               	btfss	15,0	;volatile
 19438  0CC3  2CC5               	goto	u5521
 19439  0CC4  2CC6               	goto	u5520
 19440  0CC5                     u5521:	
 19441  0CC5  2CC1               	goto	l1053
 19442  0CC6                     u5520:	
 19443  0CC6                     l1055:	
 19444                           
 19445                           ;I2C/i2c.c: 59:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 19446  0CC6  0023               	movlb	3	; select bank3
 19447  0CC7  190F               	btfsc	15,2	;volatile
 19448  0CC8  2CCA               	goto	u5531
 19449  0CC9  2CCB               	goto	u5530
 19450  0CCA                     u5531:	
 19451  0CCA  2CEF               	goto	l1050
 19452  0CCB                     u5530:	
 19453  0CCB                     l6667:	
 19454  0CCB  080F               	movf	15,w	;volatile
 19455  0CCC  2CEF               	goto	l1050
 19456  0CCD                     l6673:	
 19457  0CCD  300F               	movlw	15
 19458  0CCE  0510               	andwf	16,w	;volatile
 19459  0CCF  00F2               	movwf	??_WriteI2C
 19460  0CD0  3008               	movlw	8
 19461  0CD1  0672               	xorwf	??_WriteI2C,w
 19462  0CD2  1903               	btfsc	3,2
 19463  0CD3  2CD5               	goto	u5541
 19464  0CD4  2CD6               	goto	u5540
 19465  0CD5                     u5541:	
 19466  0CD5  2CDF               	goto	l1062
 19467  0CD6                     u5540:	
 19468  0CD6                     l6675:	
 19469  0CD6  300F               	movlw	15
 19470  0CD7  0510               	andwf	16,w	;volatile
 19471  0CD8  00F2               	movwf	??_WriteI2C
 19472  0CD9  300B               	movlw	11
 19473  0CDA  0672               	xorwf	??_WriteI2C,w
 19474  0CDB  1D03               	btfss	3,2
 19475  0CDC  2CDE               	goto	u5551
 19476  0CDD  2CDF               	goto	u5550
 19477  0CDE                     u5551:	
 19478  0CDE  2CEF               	goto	l1050
 19479  0CDF                     u5550:	
 19480  0CDF                     l1062:	
 19481  0CDF  180F               	btfsc	15,0	;volatile
 19482  0CE0  2CE2               	goto	u5561
 19483  0CE1  2CE3               	goto	u5560
 19484  0CE2                     u5561:	
 19485  0CE2  2CDF               	goto	l1062
 19486  0CE3                     u5560:	
 19487  0CE3                     l6677:	
 19488  0CE3  0C0F               	rrf	15,w	;volatile
 19489  0CE4  0C89               	rrf	9,f
 19490  0CE5  3901               	andlw	1
 19491  0CE6  00F2               	movwf	??_WriteI2C
 19492  0CE7  0811               	movf	17,w	;volatile
 19493  0CE8  391F               	andlw	31
 19494  0CE9  0472               	iorwf	??_WriteI2C,w
 19495  0CEA  1D03               	btfss	3,2
 19496  0CEB  2CED               	goto	u5571
 19497  0CEC  2CEE               	goto	u5570
 19498  0CED                     u5571:	
 19499  0CED  2CE3               	goto	l6677
 19500  0CEE                     u5570:	
 19501  0CEE                     l1067:	
 19502                           
 19503                           ;I2C/i2c.c: 72:      if ( SSP1CON2bits.ACKSTAT )
 19504  0CEE  0811               	movf	17,w	;volatile
 19505  0CEF                     l1050:	
 19506  0CEF  0008               	return
 19507  0CF0                     __end_of_WriteI2C:	
 19508                           
 19509                           	psect	text69
 19510  1578                     __ptext69:	
 19511 ;; *************** function _ReadI2C *****************
 19512 ;; Defined at:
 19513 ;;		line 32 in file "I2C/i2c.c"
 19514 ;; Parameters:    Size  Location     Type
 19515 ;;		None
 19516 ;; Auto vars:     Size  Location     Type
 19517 ;;		None
 19518 ;; Return value:  Size  Location     Type
 19519 ;;                  1    wreg      unsigned char 
 19520 ;; Registers used:
 19521 ;;		wreg, status,2, status,0
 19522 ;; Tracked objects:
 19523 ;;		On entry : 0/0
 19524 ;;		On exit  : 0/0
 19525 ;;		Unchanged: 0/0
 19526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19529 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19530 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19531 ;;Total ram usage:        1 bytes
 19532 ;; Hardware stack levels used:    1
 19533 ;; Hardware stack levels required when called:    6
 19534 ;; This function calls:
 19535 ;;		Nothing
 19536 ;; This function is called by:
 19537 ;;		_ReadTemp
 19538 ;; This function uses a non-reentrant model
 19539 ;;
 19540                           
 19541                           
 19542                           ;psect for function _ReadI2C
 19543  1578                     _ReadI2C:	
 19544  1578                     l6645:	
 19545                           ;incstack = 0
 19546                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 19547                           
 19548                           
 19549                           ;I2C/i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 19550  1578  300F               	movlw	15
 19551  1579  0023               	movlb	3	; select bank3
 19552  157A  0510               	andwf	16,w	;volatile
 19553  157B  00F2               	movwf	??_ReadI2C
 19554  157C  3008               	movlw	8
 19555  157D  0672               	xorwf	??_ReadI2C,w
 19556  157E  1903               	btfsc	3,2
 19557  157F  2D81               	goto	u5461
 19558  1580  2D82               	goto	u5460
 19559  1581                     u5461:	
 19560  1581  2D8B               	goto	l1042
 19561  1582                     u5460:	
 19562  1582                     l6647:	
 19563  1582  300F               	movlw	15
 19564  1583  0510               	andwf	16,w	;volatile
 19565  1584  00F2               	movwf	??_ReadI2C
 19566  1585  300B               	movlw	11
 19567  1586  0672               	xorwf	??_ReadI2C,w
 19568  1587  1D03               	btfss	3,2
 19569  1588  2D8A               	goto	u5471
 19570  1589  2D8B               	goto	u5470
 19571  158A                     u5471:	
 19572  158A  2D8C               	goto	l1043
 19573  158B                     u5470:	
 19574  158B                     l1042:	
 19575                           
 19576                           ;I2C/i2c.c: 35:   SSP1CON2bits.RCEN = 1;
 19577  158B  1591               	bsf	17,3	;volatile
 19578  158C                     l1043:	
 19579  158C  1C0F               	btfss	15,0	;volatile
 19580  158D  2D8F               	goto	u5481
 19581  158E  2D90               	goto	u5480
 19582  158F                     u5481:	
 19583  158F  2D8C               	goto	l1043
 19584  1590                     u5480:	
 19585  1590                     l6649:	
 19586                           
 19587                           ;I2C/i2c.c: 37:   return ( SSP1BUF );
 19588  1590  080C               	movf	12,w	;volatile
 19589  1591                     l1046:	
 19590  1591  0008               	return
 19591  1592                     __end_of_ReadI2C:	
 19592                           
 19593                           	psect	text70
 19594  143E                     __ptext70:	
 19595 ;; *************** function _ReadIllum *****************
 19596 ;; Defined at:
 19597 ;;		line 11 in file "utils.c"
 19598 ;; Parameters:    Size  Location     Type
 19599 ;;		None
 19600 ;; Auto vars:     Size  Location     Type
 19601 ;;		None
 19602 ;; Return value:  Size  Location     Type
 19603 ;;                  1    wreg      unsigned char 
 19604 ;; Registers used:
 19605 ;;		wreg, status,2, status,0, pclath, cstack
 19606 ;; Tracked objects:
 19607 ;;		On entry : 0/0
 19608 ;;		On exit  : 0/0
 19609 ;;		Unchanged: 0/0
 19610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19613 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19614 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19615 ;;Total ram usage:        2 bytes
 19616 ;; Hardware stack levels used:    1
 19617 ;; Hardware stack levels required when called:    7
 19618 ;; This function calls:
 19619 ;;		_ADCC_GetSingleConversion
 19620 ;; This function is called by:
 19621 ;;		_main
 19622 ;; This function uses a non-reentrant model
 19623 ;;
 19624                           
 19625                           
 19626                           ;psect for function _ReadIllum
 19627  143E                     _ReadIllum:	
 19628  143E                     l6891:	
 19629                           ;incstack = 0
 19630                           ; Regs used in _ReadIllum: [wreg+status,2+status,0+pclath+cstack]
 19631                           
 19632                           
 19633                           ;utils.c: 12:     return ADCC_GetSingleConversion(ILLUM)>> 14;
 19634  143E  3000               	movlw	0
 19635  143F  3188  2000  3194   	fcall	_ADCC_GetSingleConversion
 19636  1442  0872               	movf	?_ADCC_GetSingleConversion,w
 19637  1443  00F6               	movwf	??_ReadIllum
 19638  1444  0873               	movf	?_ADCC_GetSingleConversion+1,w
 19639  1445  00F7               	movwf	??_ReadIllum+1
 19640  1446  300E               	movlw	14
 19641  1447                     u5745:	
 19642  1447  36F7               	lsrf	??_ReadIllum+1,f
 19643  1448  0CF6               	rrf	??_ReadIllum,f
 19644  1449  0B89               	decfsz	9,f
 19645  144A  2C47               	goto	u5745
 19646  144B  0876               	movf	??_ReadIllum,w
 19647  144C                     l1269:	
 19648  144C  0008               	return
 19649  144D                     __end_of_ReadIllum:	
 19650                           
 19651                           	psect	text71
 19652  0800                     __ptext71:	
 19653 ;; *************** function _ADCC_GetSingleConversion *****************
 19654 ;; Defined at:
 19655 ;;		line 130 in file "mcc_generated_files/adcc.c"
 19656 ;; Parameters:    Size  Location     Type
 19657 ;;  channel         1    wreg     enum E12246
 19658 ;; Auto vars:     Size  Location     Type
 19659 ;;  channel         1    5[COMMON] enum E12246
 19660 ;; Return value:  Size  Location     Type
 19661 ;;                  2    2[COMMON] unsigned short 
 19662 ;; Registers used:
 19663 ;;		wreg
 19664 ;; Tracked objects:
 19665 ;;		On entry : 0/0
 19666 ;;		On exit  : 0/0
 19667 ;;		Unchanged: 0/0
 19668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19669 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19670 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19672 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19673 ;;Total ram usage:        4 bytes
 19674 ;; Hardware stack levels used:    1
 19675 ;; Hardware stack levels required when called:    6
 19676 ;; This function calls:
 19677 ;;		Nothing
 19678 ;; This function is called by:
 19679 ;;		_ReadIllum
 19680 ;; This function uses a non-reentrant model
 19681 ;;
 19682                           
 19683                           
 19684                           ;psect for function _ADCC_GetSingleConversion
 19685  0800                     _ADCC_GetSingleConversion:	
 19686                           
 19687                           ;incstack = 0
 19688                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 19689                           ;ADCC_GetSingleConversion@channel stored from wreg
 19690  0800  00F5               	movwf	ADCC_GetSingleConversion@channel
 19691  0801                     l6585:	
 19692                           
 19693                           ;mcc_generated_files/adcc.c: 130: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 131: {;mcc_generated_files/adcc.c: 133:     ADPCH = 
      +                          channel;
 19694  0801  0875               	movf	ADCC_GetSingleConversion@channel,w
 19695  0802  0021               	movlb	1	; select bank1
 19696  0803  009E               	movwf	30	;volatile
 19697  0804                     l6587:	
 19698                           
 19699                           ;mcc_generated_files/adcc.c: 136:     ADCON0bits.ADON = 1;
 19700  0804  1793               	bsf	19,7	;volatile
 19701  0805                     l6589:	
 19702                           
 19703                           ;mcc_generated_files/adcc.c: 139:     ADCON0bits.ADCONT = 0;
 19704  0805  1313               	bcf	19,6	;volatile
 19705  0806                     l6591:	
 19706                           
 19707                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADGO = 1;
 19708  0806  1413               	bsf	19,0	;volatile
 19709  0807                     l6593:	
 19710                           
 19711                           ;mcc_generated_files/adcc.c: 145:     __nop();
 19712  0807  0000               	nop
 19713  0808                     l369:	
 19714                           ;mcc_generated_files/adcc.c: 149:     {;mcc_generated_files/adcc.c: 150:     }
 19715                           
 19716                           
 19717                           ;mcc_generated_files/adcc.c: 148:     while (ADCON0bits.ADGO)
 19718  0808  0021               	movlb	1	; select bank1
 19719  0809  1813               	btfsc	19,0	;volatile
 19720  080A  280C               	goto	u5401
 19721  080B  280D               	goto	u5400
 19722  080C                     u5401:	
 19723  080C  2808               	goto	l369
 19724  080D                     u5400:	
 19725  080D                     l6595:	
 19726                           
 19727                           ;mcc_generated_files/adcc.c: 154:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 19728  080D  080D               	movf	13,w	;volatile
 19729  080E  00F3               	movwf	?_ADCC_GetSingleConversion+1
 19730  080F  080C               	movf	12,w	;volatile
 19731  0810  00F2               	movwf	?_ADCC_GetSingleConversion
 19732  0811                     l372:	
 19733  0811  0008               	return
 19734  0812                     __end_of_ADCC_GetSingleConversion:	
 19735                           
 19736                           	psect	text72
 19737  0AFE                     __ptext72:	
 19738 ;; *************** function _Menus *****************
 19739 ;; Defined at:
 19740 ;;		line 91 in file "menus.c"
 19741 ;; Parameters:    Size  Location     Type
 19742 ;;		None
 19743 ;; Auto vars:     Size  Location     Type
 19744 ;;		None
 19745 ;; Return value:  Size  Location     Type
 19746 ;;                  1    wreg      void 
 19747 ;; Registers used:
 19748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19749 ;; Tracked objects:
 19750 ;;		On entry : 0/0
 19751 ;;		On exit  : 0/0
 19752 ;;		Unchanged: 0/0
 19753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19756 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19757 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19758 ;;Total ram usage:        1 bytes
 19759 ;; Hardware stack levels used:    1
 19760 ;; Hardware stack levels required when called:   11
 19761 ;; This function calls:
 19762 ;;		_Menu
 19763 ;;		_ShowOnLEDs
 19764 ;;		_TMR1_SetInterruptHandler
 19765 ;;		_checkButtonS1
 19766 ;;		_checkButtonS2
 19767 ;; This function is called by:
 19768 ;;		_main
 19769 ;; This function uses a non-reentrant model
 19770 ;;
 19771                           
 19772                           
 19773                           ;psect for function _Menus
 19774  0AFE                     _Menus:	
 19775  0AFE                     l7031:	
 19776                           ;incstack = 0
 19777                           ; Regs used in _Menus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19778                           
 19779                           
 19780                           ;menus.c: 92:     mode = 0;
 19781  0AFE  0020               	movlb	0	; select bank0
 19782  0AFF  01EE               	clrf	_mode	;volatile
 19783  0B00                     l7033:	
 19784                           
 19785                           ;menus.c: 93:     ShowOnLEDs(0);
 19786  0B00  3000               	movlw	0
 19787  0B01  3193  23C7  318A   	fcall	_ShowOnLEDs
 19788  0B04                     l7035:	
 19789                           
 19790                           ;menus.c: 94:     (INTCONbits.PEIE = 0);
 19791  0B04  130B               	bcf	11,6	;volatile
 19792  0B05                     l7037:	
 19793                           
 19794                           ;menus.c: 95:     TMR1_SetInterruptHandler(Blink);
 19795  0B05  3013               	movlw	low _Blink
 19796  0B06  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 19797  0B07  300C               	movlw	high _Blink
 19798  0B08  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 19799  0B09  3193  230A  318A   	fcall	_TMR1_SetInterruptHandler
 19800  0B0C                     l7039:	
 19801                           
 19802                           ;menus.c: 96:     (INTCONbits.PEIE = 1);
 19803  0B0C  170B               	bsf	11,6	;volatile
 19804                           
 19805                           ;menus.c: 97:     while(mode < 4){
 19806  0B0D  2B39               	goto	l7061
 19807  0B0E                     l7041:	
 19808                           
 19809                           ;menus.c: 98:         checkButtonS1();
 19810  0B0E  3196  2661  318A   	fcall	_checkButtonS1
 19811                           
 19812                           ;menus.c: 99:         checkButtonS2();
 19813  0B11  3196  2681  318A   	fcall	_checkButtonS2
 19814  0B14                     l7043:	
 19815                           
 19816                           ;menus.c: 100:         if (s1flag){
 19817  0B14  0021               	movlb	1	; select bank1
 19818  0B15  084C               	movf	_s1flag^(0+128),w
 19819  0B16  1903               	btfsc	3,2
 19820  0B17  2B19               	goto	u6121
 19821  0B18  2B1A               	goto	u6120
 19822  0B19                     u6121:	
 19823  0B19  2B25               	goto	l7051
 19824  0B1A                     u6120:	
 19825  0B1A                     l7045:	
 19826                           
 19827                           ;menus.c: 101:             s1flag = 0;
 19828  0B1A  01CC               	clrf	_s1flag^(0+128)
 19829  0B1B                     l7047:	
 19830                           
 19831                           ;menus.c: 102:             mode++;
 19832  0B1B  3001               	movlw	1
 19833  0B1C  0020               	movlb	0	; select bank0
 19834  0B1D  00B6               	movwf	??_Menus
 19835  0B1E  0836               	movf	??_Menus,w
 19836  0B1F  07EE               	addwf	_mode,f	;volatile
 19837  0B20                     l7049:	
 19838                           
 19839                           ;menus.c: 103:             ShowOnLEDs(0);
 19840  0B20  3000               	movlw	0
 19841  0B21  3193  23C7  318A   	fcall	_ShowOnLEDs
 19842                           
 19843                           ;menus.c: 104:         } else if (s2flag) {
 19844  0B24  2B39               	goto	l7061
 19845  0B25                     l7051:	
 19846  0B25  084D               	movf	_s2flag^(0+128),w
 19847  0B26  1903               	btfsc	3,2
 19848  0B27  2B29               	goto	u6131
 19849  0B28  2B2A               	goto	u6130
 19850  0B29                     u6131:	
 19851  0B29  2B39               	goto	l7061
 19852  0B2A                     u6130:	
 19853  0B2A                     l7053:	
 19854                           
 19855                           ;menus.c: 105:             s2flag = 0;
 19856  0B2A  01CD               	clrf	_s2flag^(0+128)
 19857  0B2B                     l7055:	
 19858                           
 19859                           ;menus.c: 106:             ShowOnLEDs(0);
 19860  0B2B  3000               	movlw	0
 19861  0B2C  3193  23C7  318A   	fcall	_ShowOnLEDs
 19862  0B2F                     l7057:	
 19863                           
 19864                           ;menus.c: 107:             Menu(mode++);
 19865  0B2F  0020               	movlb	0	; select bank0
 19866  0B30  086E               	movf	_mode,w	;volatile
 19867  0B31  3189  212A  318A   	fcall	_Menu
 19868  0B34                     l7059:	
 19869  0B34  3001               	movlw	1
 19870  0B35  0020               	movlb	0	; select bank0
 19871  0B36  00B6               	movwf	??_Menus
 19872  0B37  0836               	movf	??_Menus,w
 19873  0B38  07EE               	addwf	_mode,f	;volatile
 19874  0B39                     l7061:	
 19875                           
 19876                           ;menus.c: 97:     while(mode < 4){
 19877  0B39  3004               	movlw	4
 19878  0B3A  0020               	movlb	0	; select bank0
 19879  0B3B  026E               	subwf	_mode,w	;volatile
 19880  0B3C  1C03               	skipc
 19881  0B3D  2B3F               	goto	u6141
 19882  0B3E  2B40               	goto	u6140
 19883  0B3F                     u6141:	
 19884  0B3F  2B0E               	goto	l7041
 19885  0B40                     u6140:	
 19886  0B40                     l1169:	
 19887  0B40  0008               	return
 19888  0B41                     __end_of_Menus:	
 19889                           
 19890                           	psect	text73
 19891  130A                     __ptext73:	
 19892 ;; *************** function _TMR1_SetInterruptHandler *****************
 19893 ;; Defined at:
 19894 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 19895 ;; Parameters:    Size  Location     Type
 19896 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
 19897 ;;		 -> Blink(1), Timer(1), TMR1_DefaultInterruptHandler(1), 
 19898 ;; Auto vars:     Size  Location     Type
 19899 ;;		None
 19900 ;; Return value:  Size  Location     Type
 19901 ;;                  1    wreg      void 
 19902 ;; Registers used:
 19903 ;;		wreg
 19904 ;; Tracked objects:
 19905 ;;		On entry : 0/0
 19906 ;;		On exit  : 0/0
 19907 ;;		Unchanged: 0/0
 19908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19909 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19912 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19913 ;;Total ram usage:        2 bytes
 19914 ;; Hardware stack levels used:    1
 19915 ;; Hardware stack levels required when called:    6
 19916 ;; This function calls:
 19917 ;;		Nothing
 19918 ;; This function is called by:
 19919 ;;		_TMR1_Initialize
 19920 ;;		_main
 19921 ;;		_Menus
 19922 ;; This function uses a non-reentrant model
 19923 ;;
 19924                           
 19925                           
 19926                           ;psect for function _TMR1_SetInterruptHandler
 19927  130A                     _TMR1_SetInterruptHandler:	
 19928  130A                     l6181:	
 19929                           ;incstack = 0
 19930                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 19931                           
 19932                           
 19933                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 19934  130A  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 19935  130B  0021               	movlb	1	; select bank1
 19936  130C  00EC               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 19937  130D  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 19938  130E  00EB               	movwf	_TMR1_InterruptHandler^(0+128)
 19939  130F                     l61:	
 19940  130F  0008               	return
 19941  1310                     __end_of_TMR1_SetInterruptHandler:	
 19942                           
 19943                           	psect	text74
 19944  092A                     __ptext74:	
 19945 ;; *************** function _Menu *****************
 19946 ;; Defined at:
 19947 ;;		line 6 in file "menus.c"
 19948 ;; Parameters:    Size  Location     Type
 19949 ;;  mode            1    wreg     unsigned char 
 19950 ;; Auto vars:     Size  Location     Type
 19951 ;;  mode            1   21[BANK0 ] unsigned char 
 19952 ;; Return value:  Size  Location     Type
 19953 ;;                  1    wreg      void 
 19954 ;; Registers used:
 19955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19956 ;; Tracked objects:
 19957 ;;		On entry : 0/0
 19958 ;;		On exit  : 0/0
 19959 ;;		Unchanged: 0/0
 19960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19962 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19963 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19964 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19965 ;;Total ram usage:        3 bytes
 19966 ;; Hardware stack levels used:    1
 19967 ;; Hardware stack levels required when called:   10
 19968 ;; This function calls:
 19969 ;;		_ShowOnLEDs
 19970 ;;		_TMR1_StartTimer
 19971 ;;		_TMR1_StopTimer
 19972 ;;		_submenu_alarm
 19973 ;;		_submenu_clock
 19974 ;;		_submenu_illum
 19975 ;;		_submenu_temp
 19976 ;; This function is called by:
 19977 ;;		_Menus
 19978 ;; This function uses a non-reentrant model
 19979 ;;
 19980                           
 19981                           
 19982                           ;psect for function _Menu
 19983  092A                     _Menu:	
 19984                           
 19985                           ;incstack = 0
 19986                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19987                           ;Menu@mode stored from wreg
 19988  092A  0020               	movlb	0	; select bank0
 19989  092B  00B5               	movwf	Menu@mode
 19990  092C                     l6683:	
 19991                           
 19992                           ;menus.c: 7:     TMR1_StopTimer();
 19993  092C  3192  22F3  3189   	fcall	_TMR1_StopTimer
 19994                           
 19995                           ;menus.c: 8:  switch(mode){
 19996  092F  2940               	goto	l6695
 19997  0930                     l6685:	
 19998                           
 19999                           ;menus.c: 10:    submenu_clock();
 20000  0930  3184  24F7  3189   	fcall	_submenu_clock
 20001                           
 20002                           ;menus.c: 11:    break;
 20003  0933  2957               	goto	l6697
 20004  0934                     l6687:	
 20005                           
 20006                           ;menus.c: 13:    submenu_alarm();
 20007  0934  3194  247B  3189   	fcall	_submenu_alarm
 20008                           
 20009                           ;menus.c: 14:    break;
 20010  0937  2957               	goto	l6697
 20011  0938                     l6689:	
 20012                           
 20013                           ;menus.c: 16:    submenu_temp();
 20014  0938  318E  2684  3189   	fcall	_submenu_temp
 20015                           
 20016                           ;menus.c: 17:    break;
 20017  093B  2957               	goto	l6697
 20018  093C                     l6691:	
 20019                           
 20020                           ;menus.c: 19:    submenu_illum();
 20021  093C  3194  24AE  3189   	fcall	_submenu_illum
 20022                           
 20023                           ;menus.c: 20:    break;
 20024  093F  2957               	goto	l6697
 20025  0940                     l6695:	
 20026  0940  0020               	movlb	0	; select bank0
 20027  0941  0835               	movf	Menu@mode,w
 20028  0942  00B3               	movwf	??_Menu
 20029  0943  01B4               	clrf	??_Menu+1
 20030                           
 20031                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20032                           ; Switch size 1, requested type "simple"
 20033                           ; Number of cases is 1, Range of values is 0 to 0
 20034                           ; switch strategies available:
 20035                           ; Name         Instructions Cycles
 20036                           ; simple_byte            4     3 (average)
 20037                           ; direct_byte            8     6 (fixed)
 20038                           ; jumptable            260     6 (fixed)
 20039                           ;	Chosen strategy is simple_byte
 20040  0944  0834               	movf	??_Menu+1,w
 20041  0945  3A00               	xorlw	0	; case 0
 20042  0946  1903               	skipnz
 20043  0947  2949               	goto	l7251
 20044  0948  2957               	goto	l6697
 20045  0949                     l7251:	
 20046                           
 20047                           ; Switch size 1, requested type "simple"
 20048                           ; Number of cases is 4, Range of values is 0 to 3
 20049                           ; switch strategies available:
 20050                           ; Name         Instructions Cycles
 20051                           ; simple_byte           13     7 (average)
 20052                           ; direct_byte           14     6 (fixed)
 20053                           ; jumptable            260     6 (fixed)
 20054                           ;	Chosen strategy is simple_byte
 20055  0949  0833               	movf	??_Menu,w
 20056  094A  3A00               	xorlw	0	; case 0
 20057  094B  1903               	skipnz
 20058  094C  2930               	goto	l6685
 20059  094D  3A01               	xorlw	1	; case 1
 20060  094E  1903               	skipnz
 20061  094F  2934               	goto	l6687
 20062  0950  3A03               	xorlw	3	; case 2
 20063  0951  1903               	skipnz
 20064  0952  2938               	goto	l6689
 20065  0953  3A01               	xorlw	1	; case 3
 20066  0954  1903               	skipnz
 20067  0955  293C               	goto	l6691
 20068  0956  2957               	goto	l6697
 20069  0957                     l6697:	
 20070                           
 20071                           ;menus.c: 22:     TMR1_StartTimer();
 20072  0957  3192  22F0  3189   	fcall	_TMR1_StartTimer
 20073  095A                     l6699:	
 20074                           
 20075                           ;menus.c: 23:     ShowOnLEDs(0);
 20076  095A  3000               	movlw	0
 20077  095B  3193  23C7  3189   	fcall	_ShowOnLEDs
 20078  095E                     l1133:	
 20079  095E  0008               	return
 20080  095F                     __end_of_Menu:	
 20081                           
 20082                           	psect	text75
 20083  0E84                     __ptext75:	
 20084 ;; *************** function _submenu_temp *****************
 20085 ;; Defined at:
 20086 ;;		line 73 in file "menus.c"
 20087 ;; Parameters:    Size  Location     Type
 20088 ;;		None
 20089 ;; Auto vars:     Size  Location     Type
 20090 ;;  temperature_    1   12[BANK0 ] unsigned char 
 20091 ;;  temperature_    1   11[BANK0 ] unsigned char 
 20092 ;; Return value:  Size  Location     Type
 20093 ;;                  1    wreg      void 
 20094 ;; Registers used:
 20095 ;;		wreg, status,2, status,0, pclath, cstack
 20096 ;; Tracked objects:
 20097 ;;		On entry : 0/0
 20098 ;;		On exit  : 0/0
 20099 ;;		Unchanged: 0/0
 20100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20102 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20103 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20104 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20105 ;;Total ram usage:        5 bytes
 20106 ;; Hardware stack levels used:    1
 20107 ;; Hardware stack levels required when called:    8
 20108 ;; This function calls:
 20109 ;;		_Update
 20110 ;;		___awdiv
 20111 ;;		___awmod
 20112 ;;		___bmul
 20113 ;;		_write_alat
 20114 ;; This function is called by:
 20115 ;;		_Menu
 20116 ;; This function uses a non-reentrant model
 20117 ;;
 20118                           
 20119                           
 20120                           ;psect for function _submenu_temp
 20121  0E84                     _submenu_temp:	
 20122  0E84                     l6213:	
 20123                           ;incstack = 0
 20124                           ; Regs used in _submenu_temp: [wreg+status,2+status,0+pclath+cstack]
 20125                           
 20126                           
 20127                           ;menus.c: 74:  uint8_t temperature_tens = alat/10;
 20128  0E84  300A               	movlw	10
 20129  0E85  00F4               	movwf	___awdiv@divisor
 20130  0E86  3000               	movlw	0
 20131  0E87  00F5               	movwf	___awdiv@divisor+1
 20132  0E88  0020               	movlb	0	; select bank0
 20133  0E89  086C               	movf	_alat,w
 20134  0E8A  00A8               	movwf	??_submenu_temp
 20135  0E8B  01A9               	clrf	??_submenu_temp+1
 20136  0E8C  0828               	movf	??_submenu_temp,w
 20137  0E8D  00F6               	movwf	___awdiv@dividend
 20138  0E8E  0829               	movf	??_submenu_temp+1,w
 20139  0E8F  00F7               	movwf	___awdiv@dividend+1
 20140  0E90  318F  273D  318E   	fcall	___awdiv
 20141  0E93  0874               	movf	?___awdiv,w
 20142  0E94  0020               	movlb	0	; select bank0
 20143  0E95  00AA               	movwf	??_submenu_temp+2
 20144  0E96  082A               	movf	??_submenu_temp+2,w
 20145  0E97  00AC               	movwf	submenu_temp@temperature_tens
 20146                           
 20147                           ;menus.c: 75:  uint8_t temperature_units = alat % 10;
 20148  0E98  300A               	movlw	10
 20149  0E99  00F2               	movwf	___awmod@divisor
 20150  0E9A  3000               	movlw	0
 20151  0E9B  00F3               	movwf	___awmod@divisor+1
 20152  0E9C  086C               	movf	_alat,w
 20153  0E9D  00A8               	movwf	??_submenu_temp
 20154  0E9E  01A9               	clrf	??_submenu_temp+1
 20155  0E9F  0828               	movf	??_submenu_temp,w
 20156  0EA0  00F4               	movwf	___awmod@dividend
 20157  0EA1  0829               	movf	??_submenu_temp+1,w
 20158  0EA2  00F5               	movwf	___awmod@dividend+1
 20159  0EA3  318D  258B  318E   	fcall	___awmod
 20160  0EA6  0872               	movf	?___awmod,w
 20161  0EA7  0020               	movlb	0	; select bank0
 20162  0EA8  00AA               	movwf	??_submenu_temp+2
 20163  0EA9  082A               	movf	??_submenu_temp+2,w
 20164  0EAA  00AB               	movwf	submenu_temp@temperature_units
 20165                           
 20166                           ;menus.c: 76:  temperature_tens = Update(temperature_tens, (uint8_t) 5);
 20167  0EAB  3005               	movlw	5
 20168  0EAC  00A8               	movwf	??_submenu_temp
 20169  0EAD  0828               	movf	??_submenu_temp,w
 20170  0EAE  00F4               	movwf	Update@thr
 20171  0EAF  082C               	movf	submenu_temp@temperature_tens,w
 20172  0EB0  3197  2751  318E   	fcall	_Update
 20173  0EB3  0020               	movlb	0	; select bank0
 20174  0EB4  00A9               	movwf	??_submenu_temp+1
 20175  0EB5  0829               	movf	??_submenu_temp+1,w
 20176  0EB6  00AC               	movwf	submenu_temp@temperature_tens
 20177  0EB7                     l6215:	
 20178                           
 20179                           ;menus.c: 77:  if (temperature_tens == 5) alat = 50;
 20180  0EB7  3005               	movlw	5
 20181  0EB8  062C               	xorwf	submenu_temp@temperature_tens,w
 20182  0EB9  1D03               	btfss	3,2
 20183  0EBA  2EBC               	goto	u5001
 20184  0EBB  2EBD               	goto	u5000
 20185  0EBC                     u5001:	
 20186  0EBC  2EC2               	goto	l6219
 20187  0EBD                     u5000:	
 20188  0EBD                     l6217:	
 20189  0EBD  3032               	movlw	50
 20190  0EBE  00A8               	movwf	??_submenu_temp
 20191  0EBF  0828               	movf	??_submenu_temp,w
 20192  0EC0  00EC               	movwf	_alat
 20193  0EC1  2EDB               	goto	l1156
 20194  0EC2                     l6219:	
 20195                           
 20196                           ;menus.c: 79:   temperature_units = Update(temperature_units, (uint8_t) 9);
 20197  0EC2  3009               	movlw	9
 20198  0EC3  00A8               	movwf	??_submenu_temp
 20199  0EC4  0828               	movf	??_submenu_temp,w
 20200  0EC5  00F4               	movwf	Update@thr
 20201  0EC6  082B               	movf	submenu_temp@temperature_units,w
 20202  0EC7  3197  2751  318E   	fcall	_Update
 20203  0ECA  0020               	movlb	0	; select bank0
 20204  0ECB  00A9               	movwf	??_submenu_temp+1
 20205  0ECC  0829               	movf	??_submenu_temp+1,w
 20206  0ECD  00AB               	movwf	submenu_temp@temperature_units
 20207                           
 20208                           ;menus.c: 80:   alat = temperature_tens*10 + temperature_units;
 20209  0ECE  300A               	movlw	10
 20210  0ECF  00A8               	movwf	??_submenu_temp
 20211  0ED0  0828               	movf	??_submenu_temp,w
 20212  0ED1  00F2               	movwf	___bmul@multiplicand
 20213  0ED2  082C               	movf	submenu_temp@temperature_tens,w
 20214  0ED3  3194  24C2  318E   	fcall	___bmul
 20215  0ED6  0020               	movlb	0	; select bank0
 20216  0ED7  072B               	addwf	submenu_temp@temperature_units,w
 20217  0ED8  00A9               	movwf	??_submenu_temp+1
 20218  0ED9  0829               	movf	??_submenu_temp+1,w
 20219  0EDA  00EC               	movwf	_alat
 20220  0EDB                     l1156:	
 20221                           ;menus.c: 81:  }
 20222                           
 20223                           
 20224                           ;menus.c: 82:     write_alat(alat);
 20225  0EDB  086C               	movf	_alat,w
 20226  0EDC  3188  2040  318E   	fcall	_write_alat
 20227  0EDF                     l1157:	
 20228  0EDF  0008               	return
 20229  0EE0                     __end_of_submenu_temp:	
 20230                           
 20231                           	psect	text76
 20232  0840                     __ptext76:	
 20233 ;; *************** function _write_alat *****************
 20234 ;; Defined at:
 20235 ;;		line 149 in file "eeprom.c"
 20236 ;; Parameters:    Size  Location     Type
 20237 ;;  x               1    wreg     unsigned char 
 20238 ;; Auto vars:     Size  Location     Type
 20239 ;;  x               1    7[BANK0 ] unsigned char 
 20240 ;; Return value:  Size  Location     Type
 20241 ;;                  1    wreg      void 
 20242 ;; Registers used:
 20243 ;;		wreg, status,2, status,0, pclath, cstack
 20244 ;; Tracked objects:
 20245 ;;		On entry : 0/0
 20246 ;;		On exit  : 0/0
 20247 ;;		Unchanged: 0/0
 20248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20250 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20251 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20252 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20253 ;;Total ram usage:        4 bytes
 20254 ;; Hardware stack levels used:    1
 20255 ;; Hardware stack levels required when called:    7
 20256 ;; This function calls:
 20257 ;;		_DATAEE_ReadByte
 20258 ;;		_DATAEE_WriteByte
 20259 ;; This function is called by:
 20260 ;;		_submenu_temp
 20261 ;; This function uses a non-reentrant model
 20262 ;;
 20263                           
 20264                           
 20265                           ;psect for function _write_alat
 20266  0840                     _write_alat:	
 20267                           
 20268                           ;incstack = 0
 20269                           ; Regs used in _write_alat: [wreg+status,2+status,0+pclath+cstack]
 20270                           ;write_alat@x stored from wreg
 20271  0840  0020               	movlb	0	; select bank0
 20272  0841  00A7               	movwf	write_alat@x
 20273  0842                     l6073:	
 20274                           
 20275                           ;eeprom.c: 151:     DATAEE_WriteByte(0xF000, DATAEE_ReadByte(0xF000) + x - DATAEE_ReadBy
      +                          te(0xF004));
 20276  0842  3000               	movlw	0
 20277  0843  00A0               	movwf	DATAEE_WriteByte@bAdd
 20278  0844  30F0               	movlw	240
 20279  0845  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 20280  0846  3004               	movlw	4
 20281  0847  00F2               	movwf	DATAEE_ReadByte@bAdd
 20282  0848  30F0               	movlw	240
 20283  0849  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 20284  084A  3193  23D3  3188   	fcall	_DATAEE_ReadByte
 20285  084D  0020               	movlb	0	; select bank0
 20286  084E  00A4               	movwf	??_write_alat
 20287  084F  3000               	movlw	0
 20288  0850  00F2               	movwf	DATAEE_ReadByte@bAdd
 20289  0851  30F0               	movlw	240
 20290  0852  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 20291  0853  3193  23D3  3188   	fcall	_DATAEE_ReadByte
 20292  0856  0020               	movlb	0	; select bank0
 20293  0857  00A5               	movwf	??_write_alat+1
 20294  0858  0824               	movf	??_write_alat,w
 20295  0859  0225               	subwf	??_write_alat+1,w
 20296  085A  0727               	addwf	write_alat@x,w
 20297  085B  00A6               	movwf	??_write_alat+2
 20298  085C  0826               	movf	??_write_alat+2,w
 20299  085D  00A2               	movwf	DATAEE_WriteByte@bData
 20300  085E  3197  2709  3188   	fcall	_DATAEE_WriteByte
 20301                           
 20302                           ;eeprom.c: 153:     DATAEE_WriteByte(0xF004, x);
 20303  0861  3004               	movlw	4
 20304  0862  0020               	movlb	0	; select bank0
 20305  0863  00A0               	movwf	DATAEE_WriteByte@bAdd
 20306  0864  30F0               	movlw	240
 20307  0865  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 20308  0866  0827               	movf	write_alat@x,w
 20309  0867  00A4               	movwf	??_write_alat
 20310  0868  0824               	movf	??_write_alat,w
 20311  0869  00A2               	movwf	DATAEE_WriteByte@bData
 20312  086A  3197  2709  3188   	fcall	_DATAEE_WriteByte
 20313  086D                     l1465:	
 20314  086D  0008               	return
 20315  086E                     __end_of_write_alat:	
 20316                           
 20317                           	psect	text77
 20318  14AE                     __ptext77:	
 20319 ;; *************** function _submenu_illum *****************
 20320 ;; Defined at:
 20321 ;;		line 85 in file "menus.c"
 20322 ;; Parameters:    Size  Location     Type
 20323 ;;		None
 20324 ;; Auto vars:     Size  Location     Type
 20325 ;;		None
 20326 ;; Return value:  Size  Location     Type
 20327 ;;                  1    wreg      void 
 20328 ;; Registers used:
 20329 ;;		wreg, status,2, status,0, pclath, cstack
 20330 ;; Tracked objects:
 20331 ;;		On entry : 0/0
 20332 ;;		On exit  : 0/0
 20333 ;;		Unchanged: 0/0
 20334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20337 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20338 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20339 ;;Total ram usage:        2 bytes
 20340 ;; Hardware stack levels used:    1
 20341 ;; Hardware stack levels required when called:    8
 20342 ;; This function calls:
 20343 ;;		_Update
 20344 ;;		_write_alal
 20345 ;; This function is called by:
 20346 ;;		_Menu
 20347 ;; This function uses a non-reentrant model
 20348 ;;
 20349                           
 20350                           
 20351                           ;psect for function _submenu_illum
 20352  14AE                     _submenu_illum:	
 20353  14AE                     l6221:	
 20354                           ;incstack = 0
 20355                           ; Regs used in _submenu_illum: [wreg+status,2+status,0+pclath+cstack]
 20356                           
 20357                           
 20358                           ;menus.c: 86:  alal = Update(alal, (uint8_t) 3);
 20359  14AE  3003               	movlw	3
 20360  14AF  0020               	movlb	0	; select bank0
 20361  14B0  00A8               	movwf	??_submenu_illum
 20362  14B1  0828               	movf	??_submenu_illum,w
 20363  14B2  00F4               	movwf	Update@thr
 20364  14B3  0021               	movlb	1	; select bank1
 20365  14B4  0856               	movf	_alal^(0+128),w
 20366  14B5  3197  2751  3194   	fcall	_Update
 20367  14B8  0020               	movlb	0	; select bank0
 20368  14B9  00A9               	movwf	??_submenu_illum+1
 20369  14BA  0829               	movf	??_submenu_illum+1,w
 20370  14BB  0021               	movlb	1	; select bank1
 20371  14BC  00D6               	movwf	_alal^(0+128)
 20372                           
 20373                           ;menus.c: 87:     write_alal(alal);
 20374  14BD  0856               	movf	_alal^(0+128),w
 20375  14BE  3188  2012  3194   	fcall	_write_alal
 20376  14C1                     l1160:	
 20377  14C1  0008               	return
 20378  14C2                     __end_of_submenu_illum:	
 20379                           
 20380                           	psect	text78
 20381  0812                     __ptext78:	
 20382 ;; *************** function _write_alal *****************
 20383 ;; Defined at:
 20384 ;;		line 156 in file "eeprom.c"
 20385 ;; Parameters:    Size  Location     Type
 20386 ;;  x               1    wreg     unsigned char 
 20387 ;; Auto vars:     Size  Location     Type
 20388 ;;  x               1    7[BANK0 ] unsigned char 
 20389 ;; Return value:  Size  Location     Type
 20390 ;;                  1    wreg      void 
 20391 ;; Registers used:
 20392 ;;		wreg, status,2, status,0, pclath, cstack
 20393 ;; Tracked objects:
 20394 ;;		On entry : 0/0
 20395 ;;		On exit  : 0/0
 20396 ;;		Unchanged: 0/0
 20397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20399 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20400 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20401 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20402 ;;Total ram usage:        4 bytes
 20403 ;; Hardware stack levels used:    1
 20404 ;; Hardware stack levels required when called:    7
 20405 ;; This function calls:
 20406 ;;		_DATAEE_ReadByte
 20407 ;;		_DATAEE_WriteByte
 20408 ;; This function is called by:
 20409 ;;		_submenu_illum
 20410 ;; This function uses a non-reentrant model
 20411 ;;
 20412                           
 20413                           
 20414                           ;psect for function _write_alal
 20415  0812                     _write_alal:	
 20416                           
 20417                           ;incstack = 0
 20418                           ; Regs used in _write_alal: [wreg+status,2+status,0+pclath+cstack]
 20419                           ;write_alal@x stored from wreg
 20420  0812  0020               	movlb	0	; select bank0
 20421  0813  00A7               	movwf	write_alal@x
 20422  0814                     l6075:	
 20423                           
 20424                           ;eeprom.c: 158:     DATAEE_WriteByte(0xF000, DATAEE_ReadByte(0xF000) + x - DATAEE_ReadBy
      +                          te(0xF005));
 20425  0814  3000               	movlw	0
 20426  0815  00A0               	movwf	DATAEE_WriteByte@bAdd
 20427  0816  30F0               	movlw	240
 20428  0817  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 20429  0818  3005               	movlw	5
 20430  0819  00F2               	movwf	DATAEE_ReadByte@bAdd
 20431  081A  30F0               	movlw	240
 20432  081B  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 20433  081C  3193  23D3  3188   	fcall	_DATAEE_ReadByte
 20434  081F  0020               	movlb	0	; select bank0
 20435  0820  00A4               	movwf	??_write_alal
 20436  0821  3000               	movlw	0
 20437  0822  00F2               	movwf	DATAEE_ReadByte@bAdd
 20438  0823  30F0               	movlw	240
 20439  0824  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 20440  0825  3193  23D3  3188   	fcall	_DATAEE_ReadByte
 20441  0828  0020               	movlb	0	; select bank0
 20442  0829  00A5               	movwf	??_write_alal+1
 20443  082A  0824               	movf	??_write_alal,w
 20444  082B  0225               	subwf	??_write_alal+1,w
 20445  082C  0727               	addwf	write_alal@x,w
 20446  082D  00A6               	movwf	??_write_alal+2
 20447  082E  0826               	movf	??_write_alal+2,w
 20448  082F  00A2               	movwf	DATAEE_WriteByte@bData
 20449  0830  3197  2709  3188   	fcall	_DATAEE_WriteByte
 20450                           
 20451                           ;eeprom.c: 160:     DATAEE_WriteByte(0xF005, x);
 20452  0833  3005               	movlw	5
 20453  0834  0020               	movlb	0	; select bank0
 20454  0835  00A0               	movwf	DATAEE_WriteByte@bAdd
 20455  0836  30F0               	movlw	240
 20456  0837  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 20457  0838  0827               	movf	write_alal@x,w
 20458  0839  00A4               	movwf	??_write_alal
 20459  083A  0824               	movf	??_write_alal,w
 20460  083B  00A2               	movwf	DATAEE_WriteByte@bData
 20461  083C  3197  2709  3188   	fcall	_DATAEE_WriteByte
 20462  083F                     l1468:	
 20463  083F  0008               	return
 20464  0840                     __end_of_write_alal:	
 20465                           
 20466                           	psect	text79
 20467  04F7                     __ptext79:	
 20468 ;; *************** function _submenu_clock *****************
 20469 ;; Defined at:
 20470 ;;		line 46 in file "menus.c"
 20471 ;; Parameters:    Size  Location     Type
 20472 ;;		None
 20473 ;; Auto vars:     Size  Location     Type
 20474 ;;  hours_units     1   18[BANK0 ] unsigned char 
 20475 ;;  hours_tens      1   17[BANK0 ] unsigned char 
 20476 ;;  minutes_unit    1   16[BANK0 ] unsigned char 
 20477 ;;  minutes_tens    1   15[BANK0 ] unsigned char 
 20478 ;; Return value:  Size  Location     Type
 20479 ;;                  1    wreg      void 
 20480 ;; Registers used:
 20481 ;;		wreg, status,2, status,0, pclath, cstack
 20482 ;; Tracked objects:
 20483 ;;		On entry : 0/0
 20484 ;;		On exit  : 0/0
 20485 ;;		Unchanged: 0/0
 20486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20488 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20489 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20490 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20491 ;;Total ram usage:        7 bytes
 20492 ;; Hardware stack levels used:    1
 20493 ;; Hardware stack levels required when called:    9
 20494 ;; This function calls:
 20495 ;;		_Update
 20496 ;;		___awdiv
 20497 ;;		___awmod
 20498 ;;		___bmul
 20499 ;;		_update_clk
 20500 ;; This function is called by:
 20501 ;;		_Menu
 20502 ;; This function uses a non-reentrant model
 20503 ;;
 20504                           
 20505                           
 20506                           ;psect for function _submenu_clock
 20507  04F7                     _submenu_clock:	
 20508  04F7                     l6199:	
 20509                           ;incstack = 0
 20510                           ; Regs used in _submenu_clock: [wreg+status,2+status,0+pclath+cstack]
 20511                           
 20512                           
 20513                           ;menus.c: 47:  uint8_t hours_tens = clkh/10;
 20514  04F7  300A               	movlw	10
 20515  04F8  00F4               	movwf	___awdiv@divisor
 20516  04F9  3000               	movlw	0
 20517  04FA  00F5               	movwf	___awdiv@divisor+1
 20518  04FB  0020               	movlb	0	; select bank0
 20519  04FC  086A               	movf	_clkh,w	;volatile
 20520  04FD  00AC               	movwf	??_submenu_clock
 20521  04FE  01AD               	clrf	??_submenu_clock+1
 20522  04FF  082C               	movf	??_submenu_clock,w
 20523  0500  00F6               	movwf	___awdiv@dividend
 20524  0501  082D               	movf	??_submenu_clock+1,w
 20525  0502  00F7               	movwf	___awdiv@dividend+1
 20526  0503  318F  273D  3184   	fcall	___awdiv
 20527  0506  0874               	movf	?___awdiv,w
 20528  0507  0020               	movlb	0	; select bank0
 20529  0508  00AE               	movwf	??_submenu_clock+2
 20530  0509  082E               	movf	??_submenu_clock+2,w
 20531  050A  00B1               	movwf	submenu_clock@hours_tens
 20532                           
 20533                           ;menus.c: 48:  uint8_t hours_units = clkh%10;
 20534  050B  300A               	movlw	10
 20535  050C  00F2               	movwf	___awmod@divisor
 20536  050D  3000               	movlw	0
 20537  050E  00F3               	movwf	___awmod@divisor+1
 20538  050F  086A               	movf	_clkh,w	;volatile
 20539  0510  00AC               	movwf	??_submenu_clock
 20540  0511  01AD               	clrf	??_submenu_clock+1
 20541  0512  082C               	movf	??_submenu_clock,w
 20542  0513  00F4               	movwf	___awmod@dividend
 20543  0514  082D               	movf	??_submenu_clock+1,w
 20544  0515  00F5               	movwf	___awmod@dividend+1
 20545  0516  318D  258B  3184   	fcall	___awmod
 20546  0519  0872               	movf	?___awmod,w
 20547  051A  0020               	movlb	0	; select bank0
 20548  051B  00AE               	movwf	??_submenu_clock+2
 20549  051C  082E               	movf	??_submenu_clock+2,w
 20550  051D  00B2               	movwf	submenu_clock@hours_units
 20551                           
 20552                           ;menus.c: 49:  hours_tens = Update(hours_tens, (uint8_t) 2);
 20553  051E  3002               	movlw	2
 20554  051F  00AC               	movwf	??_submenu_clock
 20555  0520  082C               	movf	??_submenu_clock,w
 20556  0521  00F4               	movwf	Update@thr
 20557  0522  0831               	movf	submenu_clock@hours_tens,w
 20558  0523  3197  2751  3184   	fcall	_Update
 20559  0526  0020               	movlb	0	; select bank0
 20560  0527  00AD               	movwf	??_submenu_clock+1
 20561  0528  082D               	movf	??_submenu_clock+1,w
 20562  0529  00B1               	movwf	submenu_clock@hours_tens
 20563  052A                     l6201:	
 20564                           
 20565                           ;menus.c: 50:  if(hours_tens == 2){
 20566  052A  3002               	movlw	2
 20567  052B  0631               	xorwf	submenu_clock@hours_tens,w
 20568  052C  1D03               	btfss	3,2
 20569  052D  2D2F               	goto	u4981
 20570  052E  2D30               	goto	u4980
 20571  052F                     u4981:	
 20572  052F  2D44               	goto	l6209
 20573  0530                     u4980:	
 20574  0530                     l6203:	
 20575                           
 20576                           ;menus.c: 51:   if(hours_units>3) hours_units = 0;
 20577  0530  3004               	movlw	4
 20578  0531  0232               	subwf	submenu_clock@hours_units,w
 20579  0532  1C03               	skipc
 20580  0533  2D35               	goto	u4991
 20581  0534  2D36               	goto	u4990
 20582  0535                     u4991:	
 20583  0535  2D37               	goto	l6207
 20584  0536                     u4990:	
 20585  0536                     l6205:	
 20586  0536  01B2               	clrf	submenu_clock@hours_units
 20587  0537                     l6207:	
 20588                           
 20589                           ;menus.c: 52:   hours_units = Update(hours_units, (uint8_t) 3);
 20590  0537  3003               	movlw	3
 20591  0538  00AC               	movwf	??_submenu_clock
 20592  0539  082C               	movf	??_submenu_clock,w
 20593  053A  00F4               	movwf	Update@thr
 20594  053B  0832               	movf	submenu_clock@hours_units,w
 20595  053C  3197  2751  3184   	fcall	_Update
 20596  053F  0020               	movlb	0	; select bank0
 20597  0540  00AD               	movwf	??_submenu_clock+1
 20598  0541  082D               	movf	??_submenu_clock+1,w
 20599  0542  00B2               	movwf	submenu_clock@hours_units
 20600                           
 20601                           ;menus.c: 53:  } else
 20602  0543  2D50               	goto	l1148
 20603  0544                     l6209:	
 20604                           
 20605                           ;menus.c: 54:   hours_units = Update(hours_units, (uint8_t) 9);
 20606  0544  3009               	movlw	9
 20607  0545  00AC               	movwf	??_submenu_clock
 20608  0546  082C               	movf	??_submenu_clock,w
 20609  0547  00F4               	movwf	Update@thr
 20610  0548  0832               	movf	submenu_clock@hours_units,w
 20611  0549  3197  2751  3184   	fcall	_Update
 20612  054C  0020               	movlb	0	; select bank0
 20613  054D  00AD               	movwf	??_submenu_clock+1
 20614  054E  082D               	movf	??_submenu_clock+1,w
 20615  054F  00B2               	movwf	submenu_clock@hours_units
 20616  0550                     l1148:	
 20617                           
 20618                           ;menus.c: 56:  uint8_t minutes_tens = clkm/10;
 20619  0550  300A               	movlw	10
 20620  0551  00F4               	movwf	___awdiv@divisor
 20621  0552  3000               	movlw	0
 20622  0553  00F5               	movwf	___awdiv@divisor+1
 20623  0554  0869               	movf	_clkm,w	;volatile
 20624  0555  00AC               	movwf	??_submenu_clock
 20625  0556  01AD               	clrf	??_submenu_clock+1
 20626  0557  082C               	movf	??_submenu_clock,w
 20627  0558  00F6               	movwf	___awdiv@dividend
 20628  0559  082D               	movf	??_submenu_clock+1,w
 20629  055A  00F7               	movwf	___awdiv@dividend+1
 20630  055B  318F  273D  3184   	fcall	___awdiv
 20631  055E  0874               	movf	?___awdiv,w
 20632  055F  0020               	movlb	0	; select bank0
 20633  0560  00AE               	movwf	??_submenu_clock+2
 20634  0561  082E               	movf	??_submenu_clock+2,w
 20635  0562  00AF               	movwf	submenu_clock@minutes_tens
 20636                           
 20637                           ;menus.c: 57:  uint8_t minutes_units = clkm%10;
 20638  0563  300A               	movlw	10
 20639  0564  00F2               	movwf	___awmod@divisor
 20640  0565  3000               	movlw	0
 20641  0566  00F3               	movwf	___awmod@divisor+1
 20642  0567  0869               	movf	_clkm,w	;volatile
 20643  0568  00AC               	movwf	??_submenu_clock
 20644  0569  01AD               	clrf	??_submenu_clock+1
 20645  056A  082C               	movf	??_submenu_clock,w
 20646  056B  00F4               	movwf	___awmod@dividend
 20647  056C  082D               	movf	??_submenu_clock+1,w
 20648  056D  00F5               	movwf	___awmod@dividend+1
 20649  056E  318D  258B  3184   	fcall	___awmod
 20650  0571  0872               	movf	?___awmod,w
 20651  0572  0020               	movlb	0	; select bank0
 20652  0573  00AE               	movwf	??_submenu_clock+2
 20653  0574  082E               	movf	??_submenu_clock+2,w
 20654  0575  00B0               	movwf	submenu_clock@minutes_units
 20655                           
 20656                           ;menus.c: 58:  minutes_tens = Update(minutes_tens, (uint8_t) 5);
 20657  0576  3005               	movlw	5
 20658  0577  00AC               	movwf	??_submenu_clock
 20659  0578  082C               	movf	??_submenu_clock,w
 20660  0579  00F4               	movwf	Update@thr
 20661  057A  082F               	movf	submenu_clock@minutes_tens,w
 20662  057B  3197  2751  3184   	fcall	_Update
 20663  057E  0020               	movlb	0	; select bank0
 20664  057F  00AD               	movwf	??_submenu_clock+1
 20665  0580  082D               	movf	??_submenu_clock+1,w
 20666  0581  00AF               	movwf	submenu_clock@minutes_tens
 20667                           
 20668                           ;menus.c: 59:  minutes_units = Update(minutes_units, (uint8_t) 9);
 20669  0582  3009               	movlw	9
 20670  0583  00AC               	movwf	??_submenu_clock
 20671  0584  082C               	movf	??_submenu_clock,w
 20672  0585  00F4               	movwf	Update@thr
 20673  0586  0830               	movf	submenu_clock@minutes_units,w
 20674  0587  3197  2751  3184   	fcall	_Update
 20675  058A  0020               	movlb	0	; select bank0
 20676  058B  00AD               	movwf	??_submenu_clock+1
 20677  058C  082D               	movf	??_submenu_clock+1,w
 20678  058D  00B0               	movwf	submenu_clock@minutes_units
 20679                           
 20680                           ;menus.c: 61:  clkh = 10*hours_tens + hours_units;
 20681  058E  300A               	movlw	10
 20682  058F  00AC               	movwf	??_submenu_clock
 20683  0590  082C               	movf	??_submenu_clock,w
 20684  0591  00F2               	movwf	___bmul@multiplicand
 20685  0592  0831               	movf	submenu_clock@hours_tens,w
 20686  0593  3194  24C2  3184   	fcall	___bmul
 20687  0596  0020               	movlb	0	; select bank0
 20688  0597  0732               	addwf	submenu_clock@hours_units,w
 20689  0598  00AD               	movwf	??_submenu_clock+1
 20690  0599  082D               	movf	??_submenu_clock+1,w
 20691  059A  00EA               	movwf	_clkh	;volatile
 20692                           
 20693                           ;menus.c: 62:  clkm = 10*minutes_tens + minutes_units;
 20694  059B  300A               	movlw	10
 20695  059C  00AC               	movwf	??_submenu_clock
 20696  059D  082C               	movf	??_submenu_clock,w
 20697  059E  00F2               	movwf	___bmul@multiplicand
 20698  059F  082F               	movf	submenu_clock@minutes_tens,w
 20699  05A0  3194  24C2  3184   	fcall	___bmul
 20700  05A3  0020               	movlb	0	; select bank0
 20701  05A4  0730               	addwf	submenu_clock@minutes_units,w
 20702  05A5  00AD               	movwf	??_submenu_clock+1
 20703  05A6  082D               	movf	??_submenu_clock+1,w
 20704  05A7  00E9               	movwf	_clkm	;volatile
 20705                           
 20706                           ;menus.c: 63:     update_clk();
 20707  05A8  3193  23B2  3184   	fcall	_update_clk
 20708  05AB                     l1149:	
 20709  05AB  0008               	return
 20710  05AC                     __end_of_submenu_clock:	
 20711                           
 20712                           	psect	text80
 20713  13B2                     __ptext80:	
 20714 ;; *************** function _update_clk *****************
 20715 ;; Defined at:
 20716 ;;		line 127 in file "utils.c"
 20717 ;; Parameters:    Size  Location     Type
 20718 ;;		None
 20719 ;; Auto vars:     Size  Location     Type
 20720 ;;		None
 20721 ;; Return value:  Size  Location     Type
 20722 ;;                  1    wreg      void 
 20723 ;; Registers used:
 20724 ;;		wreg, status,2, status,0, pclath, cstack
 20725 ;; Tracked objects:
 20726 ;;		On entry : 0/0
 20727 ;;		On exit  : 0/0
 20728 ;;		Unchanged: 0/0
 20729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20732 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20733 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20734 ;;Total ram usage:        1 bytes
 20735 ;; Hardware stack levels used:    1
 20736 ;; Hardware stack levels required when called:    8
 20737 ;; This function calls:
 20738 ;;		_eeprom_clk_update
 20739 ;; This function is called by:
 20740 ;;		_main
 20741 ;;		_submenu_clock
 20742 ;;		_set_clock
 20743 ;; This function uses a non-reentrant model
 20744 ;;
 20745                           
 20746                           
 20747                           ;psect for function _update_clk
 20748  13B2                     _update_clk:	
 20749  13B2                     l6049:	
 20750                           ;incstack = 0
 20751                           ; Regs used in _update_clk: [wreg+status,2+status,0+pclath+cstack]
 20752                           
 20753                           
 20754                           ;utils.c: 128:     eeprom_clk_update(clkh, clkm);
 20755  13B2  0020               	movlb	0	; select bank0
 20756  13B3  0869               	movf	_clkm,w	;volatile
 20757  13B4  00AB               	movwf	??_update_clk
 20758  13B5  082B               	movf	??_update_clk,w
 20759  13B6  00A4               	movwf	eeprom_clk_update@clkm
 20760  13B7  086A               	movf	_clkh,w	;volatile
 20761  13B8  318B  23CC  3193   	fcall	_eeprom_clk_update
 20762  13BB                     l1380:	
 20763  13BB  0008               	return
 20764  13BC                     __end_of_update_clk:	
 20765                           
 20766                           	psect	text81
 20767  0BCC                     __ptext81:	
 20768 ;; *************** function _eeprom_clk_update *****************
 20769 ;; Defined at:
 20770 ;;		line 73 in file "eeprom.c"
 20771 ;; Parameters:    Size  Location     Type
 20772 ;;  clkh            1    wreg     unsigned char 
 20773 ;;  clkm            1    4[BANK0 ] unsigned char 
 20774 ;; Auto vars:     Size  Location     Type
 20775 ;;  clkh            1   10[BANK0 ] unsigned char 
 20776 ;; Return value:  Size  Location     Type
 20777 ;;                  1    wreg      void 
 20778 ;; Registers used:
 20779 ;;		wreg, status,2, status,0, pclath, cstack
 20780 ;; Tracked objects:
 20781 ;;		On entry : 0/0
 20782 ;;		On exit  : 0/0
 20783 ;;		Unchanged: 0/0
 20784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20785 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20786 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20787 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20788 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20789 ;;Total ram usage:        7 bytes
 20790 ;; Hardware stack levels used:    1
 20791 ;; Hardware stack levels required when called:    7
 20792 ;; This function calls:
 20793 ;;		_DATAEE_ReadByte
 20794 ;;		_DATAEE_WriteByte
 20795 ;; This function is called by:
 20796 ;;		_update_clk
 20797 ;; This function uses a non-reentrant model
 20798 ;;
 20799                           
 20800                           
 20801                           ;psect for function _eeprom_clk_update
 20802  0BCC                     _eeprom_clk_update:	
 20803                           
 20804                           ;incstack = 0
 20805                           ; Regs used in _eeprom_clk_update: [wreg+status,2+status,0+pclath+cstack]
 20806                           ;eeprom_clk_update@clkh stored from wreg
 20807  0BCC  0020               	movlb	0	; select bank0
 20808  0BCD  00AA               	movwf	eeprom_clk_update@clkh
 20809  0BCE                     l5975:	
 20810                           
 20811                           ;eeprom.c: 75:     DATAEE_WriteByte(0xF000, DATAEE_ReadByte(0xF000) + clkh + clkm - DATA
      +                          EE_ReadByte(0xF007) - DATAEE_ReadByte(0xF008));
 20812  0BCE  3000               	movlw	0
 20813  0BCF  00A0               	movwf	DATAEE_WriteByte@bAdd
 20814  0BD0  30F0               	movlw	240
 20815  0BD1  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 20816  0BD2  3008               	movlw	8
 20817  0BD3  00F2               	movwf	DATAEE_ReadByte@bAdd
 20818  0BD4  30F0               	movlw	240
 20819  0BD5  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 20820  0BD6  3193  23D3  318B   	fcall	_DATAEE_ReadByte
 20821  0BD9  0020               	movlb	0	; select bank0
 20822  0BDA  00A5               	movwf	??_eeprom_clk_update
 20823  0BDB  3007               	movlw	7
 20824  0BDC  00F2               	movwf	DATAEE_ReadByte@bAdd
 20825  0BDD  30F0               	movlw	240
 20826  0BDE  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 20827  0BDF  3193  23D3  318B   	fcall	_DATAEE_ReadByte
 20828  0BE2  0020               	movlb	0	; select bank0
 20829  0BE3  00A6               	movwf	??_eeprom_clk_update+1
 20830  0BE4  3000               	movlw	0
 20831  0BE5  00F2               	movwf	DATAEE_ReadByte@bAdd
 20832  0BE6  30F0               	movlw	240
 20833  0BE7  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 20834  0BE8  3193  23D3  318B   	fcall	_DATAEE_ReadByte
 20835  0BEB  0020               	movlb	0	; select bank0
 20836  0BEC  00A7               	movwf	??_eeprom_clk_update+2
 20837  0BED  0826               	movf	??_eeprom_clk_update+1,w
 20838  0BEE  0227               	subwf	??_eeprom_clk_update+2,w
 20839  0BEF  00A8               	movwf	??_eeprom_clk_update+3
 20840  0BF0  0825               	movf	??_eeprom_clk_update,w
 20841  0BF1  0228               	subwf	??_eeprom_clk_update+3,w
 20842  0BF2  072A               	addwf	eeprom_clk_update@clkh,w
 20843  0BF3  0724               	addwf	eeprom_clk_update@clkm,w
 20844  0BF4  00A9               	movwf	??_eeprom_clk_update+4
 20845  0BF5  0829               	movf	??_eeprom_clk_update+4,w
 20846  0BF6  00A2               	movwf	DATAEE_WriteByte@bData
 20847  0BF7  3197  2709  318B   	fcall	_DATAEE_WriteByte
 20848                           
 20849                           ;eeprom.c: 77:     DATAEE_WriteByte(0xF007, clkh);
 20850  0BFA  3007               	movlw	7
 20851  0BFB  0020               	movlb	0	; select bank0
 20852  0BFC  00A0               	movwf	DATAEE_WriteByte@bAdd
 20853  0BFD  30F0               	movlw	240
 20854  0BFE  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 20855  0BFF  082A               	movf	eeprom_clk_update@clkh,w
 20856  0C00  00A5               	movwf	??_eeprom_clk_update
 20857  0C01  0825               	movf	??_eeprom_clk_update,w
 20858  0C02  00A2               	movwf	DATAEE_WriteByte@bData
 20859  0C03  3197  2709  318B   	fcall	_DATAEE_WriteByte
 20860                           
 20861                           ;eeprom.c: 78:     DATAEE_WriteByte(0xF008, clkm);
 20862  0C06  3008               	movlw	8
 20863  0C07  0020               	movlb	0	; select bank0
 20864  0C08  00A0               	movwf	DATAEE_WriteByte@bAdd
 20865  0C09  30F0               	movlw	240
 20866  0C0A  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 20867  0C0B  0824               	movf	eeprom_clk_update@clkm,w
 20868  0C0C  00A5               	movwf	??_eeprom_clk_update
 20869  0C0D  0825               	movf	??_eeprom_clk_update,w
 20870  0C0E  00A2               	movwf	DATAEE_WriteByte@bData
 20871  0C0F  3197  2709  318B   	fcall	_DATAEE_WriteByte
 20872  0C12                     l1410:	
 20873  0C12  0008               	return
 20874  0C13                     __end_of_eeprom_clk_update:	
 20875                           
 20876                           	psect	text82
 20877  14C2                     __ptext82:	
 20878 ;; *************** function ___bmul *****************
 20879 ;; Defined at:
 20880 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8.c"
 20881 ;; Parameters:    Size  Location     Type
 20882 ;;  multiplier      1    wreg     unsigned char 
 20883 ;;  multiplicand    1    2[COMMON] unsigned char 
 20884 ;; Auto vars:     Size  Location     Type
 20885 ;;  multiplier      1    5[COMMON] unsigned char 
 20886 ;;  product         1    4[COMMON] unsigned char 
 20887 ;; Return value:  Size  Location     Type
 20888 ;;                  1    wreg      unsigned char 
 20889 ;; Registers used:
 20890 ;;		wreg, status,2, status,0
 20891 ;; Tracked objects:
 20892 ;;		On entry : 0/0
 20893 ;;		On exit  : 0/0
 20894 ;;		Unchanged: 0/0
 20895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20896 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20897 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20898 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20899 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20900 ;;Total ram usage:        4 bytes
 20901 ;; Hardware stack levels used:    1
 20902 ;; Hardware stack levels required when called:    6
 20903 ;; This function calls:
 20904 ;;		Nothing
 20905 ;; This function is called by:
 20906 ;;		_submenu_clock
 20907 ;;		_submenu_temp
 20908 ;; This function uses a non-reentrant model
 20909 ;;
 20910                           
 20911                           
 20912                           ;psect for function ___bmul
 20913  14C2                     ___bmul:	
 20914                           
 20915                           ;incstack = 0
 20916                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 20917                           ;___bmul@multiplier stored from wreg
 20918  14C2  00F5               	movwf	___bmul@multiplier
 20919  14C3                     l6123:	
 20920  14C3  01F4               	clrf	___bmul@product
 20921  14C4                     l6125:	
 20922  14C4  1C75               	btfss	___bmul@multiplier,0
 20923  14C5  2CC7               	goto	u4861
 20924  14C6  2CC8               	goto	u4860
 20925  14C7                     u4861:	
 20926  14C7  2CCC               	goto	l6129
 20927  14C8                     u4860:	
 20928  14C8                     l6127:	
 20929  14C8  0872               	movf	___bmul@multiplicand,w
 20930  14C9  00F3               	movwf	??___bmul
 20931  14CA  0873               	movf	??___bmul,w
 20932  14CB  07F4               	addwf	___bmul@product,f
 20933  14CC                     l6129:	
 20934  14CC  1003               	clrc
 20935  14CD  0DF2               	rlf	___bmul@multiplicand,f
 20936  14CE                     l6131:	
 20937  14CE  1003               	clrc
 20938  14CF  0CF5               	rrf	___bmul@multiplier,f
 20939  14D0  0875               	movf	___bmul@multiplier,w
 20940  14D1  1D03               	btfss	3,2
 20941  14D2  2CD4               	goto	u4871
 20942  14D3  2CD5               	goto	u4870
 20943  14D4                     u4871:	
 20944  14D4  2CC4               	goto	l6125
 20945  14D5                     u4870:	
 20946  14D5                     l6133:	
 20947  14D5  0874               	movf	___bmul@product,w
 20948  14D6                     l1919:	
 20949  14D6  0008               	return
 20950  14D7                     __end_of___bmul:	
 20951                           
 20952                           	psect	text83
 20953  0D8B                     __ptext83:	
 20954 ;; *************** function ___awmod *****************
 20955 ;; Defined at:
 20956 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 20957 ;; Parameters:    Size  Location     Type
 20958 ;;  divisor         2    2[COMMON] int 
 20959 ;;  dividend        2    4[COMMON] int 
 20960 ;; Auto vars:     Size  Location     Type
 20961 ;;  sign            1    8[COMMON] unsigned char 
 20962 ;;  counter         1    7[COMMON] unsigned char 
 20963 ;; Return value:  Size  Location     Type
 20964 ;;                  2    2[COMMON] int 
 20965 ;; Registers used:
 20966 ;;		wreg, status,2, status,0
 20967 ;; Tracked objects:
 20968 ;;		On entry : 0/0
 20969 ;;		On exit  : 0/0
 20970 ;;		Unchanged: 0/0
 20971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20972 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20973 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20974 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20975 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20976 ;;Total ram usage:        7 bytes
 20977 ;; Hardware stack levels used:    1
 20978 ;; Hardware stack levels required when called:    6
 20979 ;; This function calls:
 20980 ;;		Nothing
 20981 ;; This function is called by:
 20982 ;;		_submenu_clock
 20983 ;;		_submenu_temp
 20984 ;;		_transfer_registers_i
 20985 ;;		_transfer_registers
 20986 ;; This function uses a non-reentrant model
 20987 ;;
 20988                           
 20989                           
 20990                           ;psect for function ___awmod
 20991  0D8B                     ___awmod:	
 20992  0D8B                     l6011:	
 20993                           ;incstack = 0
 20994                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 20995                           
 20996  0D8B  01F8               	clrf	___awmod@sign
 20997  0D8C                     l6013:	
 20998  0D8C  1FF5               	btfss	___awmod@dividend+1,7
 20999  0D8D  2D8F               	goto	u4671
 21000  0D8E  2D90               	goto	u4670
 21001  0D8F                     u4671:	
 21002  0D8F  2D97               	goto	l6019
 21003  0D90                     u4670:	
 21004  0D90                     l6015:	
 21005  0D90  09F4               	comf	___awmod@dividend,f
 21006  0D91  09F5               	comf	___awmod@dividend+1,f
 21007  0D92  0AF4               	incf	___awmod@dividend,f
 21008  0D93  1903               	skipnz
 21009  0D94  0AF5               	incf	___awmod@dividend+1,f
 21010  0D95                     l6017:	
 21011  0D95  01F8               	clrf	___awmod@sign
 21012  0D96  0AF8               	incf	___awmod@sign,f
 21013  0D97                     l6019:	
 21014  0D97  1FF3               	btfss	___awmod@divisor+1,7
 21015  0D98  2D9A               	goto	u4681
 21016  0D99  2D9B               	goto	u4680
 21017  0D9A                     u4681:	
 21018  0D9A  2DA0               	goto	l6023
 21019  0D9B                     u4680:	
 21020  0D9B                     l6021:	
 21021  0D9B  09F2               	comf	___awmod@divisor,f
 21022  0D9C  09F3               	comf	___awmod@divisor+1,f
 21023  0D9D  0AF2               	incf	___awmod@divisor,f
 21024  0D9E  1903               	skipnz
 21025  0D9F  0AF3               	incf	___awmod@divisor+1,f
 21026  0DA0                     l6023:	
 21027  0DA0  0872               	movf	___awmod@divisor,w
 21028  0DA1  0473               	iorwf	___awmod@divisor+1,w
 21029  0DA2  1903               	btfsc	3,2
 21030  0DA3  2DA5               	goto	u4691
 21031  0DA4  2DA6               	goto	u4690
 21032  0DA5                     u4691:	
 21033  0DA5  2DCF               	goto	l6041
 21034  0DA6                     u4690:	
 21035  0DA6                     l6025:	
 21036  0DA6  01F7               	clrf	___awmod@counter
 21037  0DA7  0AF7               	incf	___awmod@counter,f
 21038  0DA8  2DB2               	goto	l6031
 21039  0DA9                     l6027:	
 21040  0DA9  3001               	movlw	1
 21041  0DAA                     u4705:	
 21042  0DAA  35F2               	lslf	___awmod@divisor,f
 21043  0DAB  0DF3               	rlf	___awmod@divisor+1,f
 21044  0DAC  0B89               	decfsz	9,f
 21045  0DAD  2DAA               	goto	u4705
 21046  0DAE                     l6029:	
 21047  0DAE  3001               	movlw	1
 21048  0DAF  00F6               	movwf	??___awmod
 21049  0DB0  0876               	movf	??___awmod,w
 21050  0DB1  07F7               	addwf	___awmod@counter,f
 21051  0DB2                     l6031:	
 21052  0DB2  1FF3               	btfss	___awmod@divisor+1,7
 21053  0DB3  2DB5               	goto	u4711
 21054  0DB4  2DB6               	goto	u4710
 21055  0DB5                     u4711:	
 21056  0DB5  2DA9               	goto	l6027
 21057  0DB6                     u4710:	
 21058  0DB6                     l6033:	
 21059  0DB6  0873               	movf	___awmod@divisor+1,w
 21060  0DB7  0275               	subwf	___awmod@dividend+1,w
 21061  0DB8  1D03               	skipz
 21062  0DB9  2DBC               	goto	u4725
 21063  0DBA  0872               	movf	___awmod@divisor,w
 21064  0DBB  0274               	subwf	___awmod@dividend,w
 21065  0DBC                     u4725:	
 21066  0DBC  1C03               	skipc
 21067  0DBD  2DBF               	goto	u4721
 21068  0DBE  2DC0               	goto	u4720
 21069  0DBF                     u4721:	
 21070  0DBF  2DC4               	goto	l6037
 21071  0DC0                     u4720:	
 21072  0DC0                     l6035:	
 21073  0DC0  0872               	movf	___awmod@divisor,w
 21074  0DC1  02F4               	subwf	___awmod@dividend,f
 21075  0DC2  0873               	movf	___awmod@divisor+1,w
 21076  0DC3  3BF5               	subwfb	___awmod@dividend+1,f
 21077  0DC4                     l6037:	
 21078  0DC4  3001               	movlw	1
 21079  0DC5                     u4735:	
 21080  0DC5  36F3               	lsrf	___awmod@divisor+1,f
 21081  0DC6  0CF2               	rrf	___awmod@divisor,f
 21082  0DC7  0B89               	decfsz	9,f
 21083  0DC8  2DC5               	goto	u4735
 21084  0DC9                     l6039:	
 21085  0DC9  3001               	movlw	1
 21086  0DCA  02F7               	subwf	___awmod@counter,f
 21087  0DCB  1D03               	btfss	3,2
 21088  0DCC  2DCE               	goto	u4741
 21089  0DCD  2DCF               	goto	u4740
 21090  0DCE                     u4741:	
 21091  0DCE  2DB6               	goto	l6033
 21092  0DCF                     u4740:	
 21093  0DCF                     l6041:	
 21094  0DCF  0878               	movf	___awmod@sign,w
 21095  0DD0  1903               	btfsc	3,2
 21096  0DD1  2DD3               	goto	u4751
 21097  0DD2  2DD4               	goto	u4750
 21098  0DD3                     u4751:	
 21099  0DD3  2DD9               	goto	l6045
 21100  0DD4                     u4750:	
 21101  0DD4                     l6043:	
 21102  0DD4  09F4               	comf	___awmod@dividend,f
 21103  0DD5  09F5               	comf	___awmod@dividend+1,f
 21104  0DD6  0AF4               	incf	___awmod@dividend,f
 21105  0DD7  1903               	skipnz
 21106  0DD8  0AF5               	incf	___awmod@dividend+1,f
 21107  0DD9                     l6045:	
 21108  0DD9  0875               	movf	___awmod@dividend+1,w
 21109  0DDA  00F3               	movwf	?___awmod+1
 21110  0DDB  0874               	movf	___awmod@dividend,w
 21111  0DDC  00F2               	movwf	?___awmod
 21112  0DDD                     l2059:	
 21113  0DDD  0008               	return
 21114  0DDE                     __end_of___awmod:	
 21115                           
 21116                           	psect	text84
 21117  0F3D                     __ptext84:	
 21118 ;; *************** function ___awdiv *****************
 21119 ;; Defined at:
 21120 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 21121 ;; Parameters:    Size  Location     Type
 21122 ;;  divisor         2    4[COMMON] int 
 21123 ;;  dividend        2    6[COMMON] int 
 21124 ;; Auto vars:     Size  Location     Type
 21125 ;;  quotient        2    2[BANK0 ] int 
 21126 ;;  sign            1    1[BANK0 ] unsigned char 
 21127 ;;  counter         1    0[BANK0 ] unsigned char 
 21128 ;; Return value:  Size  Location     Type
 21129 ;;                  2    4[COMMON] int 
 21130 ;; Registers used:
 21131 ;;		wreg, status,2, status,0
 21132 ;; Tracked objects:
 21133 ;;		On entry : 0/0
 21134 ;;		On exit  : 0/0
 21135 ;;		Unchanged: 0/0
 21136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21137 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21138 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21139 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21140 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21141 ;;Total ram usage:        9 bytes
 21142 ;; Hardware stack levels used:    1
 21143 ;; Hardware stack levels required when called:    6
 21144 ;; This function calls:
 21145 ;;		Nothing
 21146 ;; This function is called by:
 21147 ;;		_submenu_clock
 21148 ;;		_submenu_temp
 21149 ;;		_ring_buffer_write
 21150 ;; This function uses a non-reentrant model
 21151 ;;
 21152                           
 21153                           
 21154                           ;psect for function ___awdiv
 21155  0F3D                     ___awdiv:	
 21156  0F3D                     l6137:	
 21157                           ;incstack = 0
 21158                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 21159                           
 21160  0F3D  0020               	movlb	0	; select bank0
 21161  0F3E  01A1               	clrf	___awdiv@sign
 21162  0F3F                     l6139:	
 21163  0F3F  1FF5               	btfss	___awdiv@divisor+1,7
 21164  0F40  2F42               	goto	u4881
 21165  0F41  2F43               	goto	u4880
 21166  0F42                     u4881:	
 21167  0F42  2F4A               	goto	l6145
 21168  0F43                     u4880:	
 21169  0F43                     l6141:	
 21170  0F43  09F4               	comf	___awdiv@divisor,f
 21171  0F44  09F5               	comf	___awdiv@divisor+1,f
 21172  0F45  0AF4               	incf	___awdiv@divisor,f
 21173  0F46  1903               	skipnz
 21174  0F47  0AF5               	incf	___awdiv@divisor+1,f
 21175  0F48                     l6143:	
 21176  0F48  01A1               	clrf	___awdiv@sign
 21177  0F49  0AA1               	incf	___awdiv@sign,f
 21178  0F4A                     l6145:	
 21179  0F4A  1FF7               	btfss	___awdiv@dividend+1,7
 21180  0F4B  2F4D               	goto	u4891
 21181  0F4C  2F4E               	goto	u4890
 21182  0F4D                     u4891:	
 21183  0F4D  2F57               	goto	l6151
 21184  0F4E                     u4890:	
 21185  0F4E                     l6147:	
 21186  0F4E  09F6               	comf	___awdiv@dividend,f
 21187  0F4F  09F7               	comf	___awdiv@dividend+1,f
 21188  0F50  0AF6               	incf	___awdiv@dividend,f
 21189  0F51  1903               	skipnz
 21190  0F52  0AF7               	incf	___awdiv@dividend+1,f
 21191  0F53                     l6149:	
 21192  0F53  3001               	movlw	1
 21193  0F54  00F8               	movwf	??___awdiv
 21194  0F55  0878               	movf	??___awdiv,w
 21195  0F56  06A1               	xorwf	___awdiv@sign,f
 21196  0F57                     l6151:	
 21197  0F57  01A2               	clrf	___awdiv@quotient
 21198  0F58  01A3               	clrf	___awdiv@quotient+1
 21199  0F59                     l6153:	
 21200  0F59  0874               	movf	___awdiv@divisor,w
 21201  0F5A  0475               	iorwf	___awdiv@divisor+1,w
 21202  0F5B  1903               	btfsc	3,2
 21203  0F5C  2F5E               	goto	u4901
 21204  0F5D  2F5F               	goto	u4900
 21205  0F5E                     u4901:	
 21206  0F5E  2F8E               	goto	l6173
 21207  0F5F                     u4900:	
 21208  0F5F                     l6155:	
 21209  0F5F  01A0               	clrf	___awdiv@counter
 21210  0F60  0AA0               	incf	___awdiv@counter,f
 21211  0F61  2F6B               	goto	l6161
 21212  0F62                     l6157:	
 21213  0F62  3001               	movlw	1
 21214  0F63                     u4915:	
 21215  0F63  35F4               	lslf	___awdiv@divisor,f
 21216  0F64  0DF5               	rlf	___awdiv@divisor+1,f
 21217  0F65  0B89               	decfsz	9,f
 21218  0F66  2F63               	goto	u4915
 21219  0F67                     l6159:	
 21220  0F67  3001               	movlw	1
 21221  0F68  00F8               	movwf	??___awdiv
 21222  0F69  0878               	movf	??___awdiv,w
 21223  0F6A  07A0               	addwf	___awdiv@counter,f
 21224  0F6B                     l6161:	
 21225  0F6B  1FF5               	btfss	___awdiv@divisor+1,7
 21226  0F6C  2F6E               	goto	u4921
 21227  0F6D  2F6F               	goto	u4920
 21228  0F6E                     u4921:	
 21229  0F6E  2F62               	goto	l6157
 21230  0F6F                     u4920:	
 21231  0F6F                     l6163:	
 21232  0F6F  3001               	movlw	1
 21233  0F70                     u4935:	
 21234  0F70  35A2               	lslf	___awdiv@quotient,f
 21235  0F71  0DA3               	rlf	___awdiv@quotient+1,f
 21236  0F72  0B89               	decfsz	9,f
 21237  0F73  2F70               	goto	u4935
 21238  0F74  0875               	movf	___awdiv@divisor+1,w
 21239  0F75  0277               	subwf	___awdiv@dividend+1,w
 21240  0F76  1D03               	skipz
 21241  0F77  2F7A               	goto	u4945
 21242  0F78  0874               	movf	___awdiv@divisor,w
 21243  0F79  0276               	subwf	___awdiv@dividend,w
 21244  0F7A                     u4945:	
 21245  0F7A  1C03               	skipc
 21246  0F7B  2F7D               	goto	u4941
 21247  0F7C  2F7E               	goto	u4940
 21248  0F7D                     u4941:	
 21249  0F7D  2F83               	goto	l6169
 21250  0F7E                     u4940:	
 21251  0F7E                     l6165:	
 21252  0F7E  0874               	movf	___awdiv@divisor,w
 21253  0F7F  02F6               	subwf	___awdiv@dividend,f
 21254  0F80  0875               	movf	___awdiv@divisor+1,w
 21255  0F81  3BF7               	subwfb	___awdiv@dividend+1,f
 21256  0F82                     l6167:	
 21257  0F82  1422               	bsf	___awdiv@quotient,0
 21258  0F83                     l6169:	
 21259  0F83  3001               	movlw	1
 21260  0F84                     u4955:	
 21261  0F84  36F5               	lsrf	___awdiv@divisor+1,f
 21262  0F85  0CF4               	rrf	___awdiv@divisor,f
 21263  0F86  0B89               	decfsz	9,f
 21264  0F87  2F84               	goto	u4955
 21265  0F88                     l6171:	
 21266  0F88  3001               	movlw	1
 21267  0F89  02A0               	subwf	___awdiv@counter,f
 21268  0F8A  1D03               	btfss	3,2
 21269  0F8B  2F8D               	goto	u4961
 21270  0F8C  2F8E               	goto	u4960
 21271  0F8D                     u4961:	
 21272  0F8D  2F6F               	goto	l6163
 21273  0F8E                     u4960:	
 21274  0F8E                     l6173:	
 21275  0F8E  0821               	movf	___awdiv@sign,w
 21276  0F8F  1903               	btfsc	3,2
 21277  0F90  2F92               	goto	u4971
 21278  0F91  2F93               	goto	u4970
 21279  0F92                     u4971:	
 21280  0F92  2F98               	goto	l6177
 21281  0F93                     u4970:	
 21282  0F93                     l6175:	
 21283  0F93  09A2               	comf	___awdiv@quotient,f
 21284  0F94  09A3               	comf	___awdiv@quotient+1,f
 21285  0F95  0AA2               	incf	___awdiv@quotient,f
 21286  0F96  1903               	skipnz
 21287  0F97  0AA3               	incf	___awdiv@quotient+1,f
 21288  0F98                     l6177:	
 21289  0F98  0823               	movf	___awdiv@quotient+1,w
 21290  0F99  00F5               	movwf	?___awdiv+1
 21291  0F9A  0822               	movf	___awdiv@quotient,w
 21292  0F9B  00F4               	movwf	?___awdiv
 21293  0F9C                     l2046:	
 21294  0F9C  0008               	return
 21295  0F9D                     __end_of___awdiv:	
 21296                           
 21297                           	psect	text85
 21298  147B                     __ptext85:	
 21299 ;; *************** function _submenu_alarm *****************
 21300 ;; Defined at:
 21301 ;;		line 68 in file "menus.c"
 21302 ;; Parameters:    Size  Location     Type
 21303 ;;		None
 21304 ;; Auto vars:     Size  Location     Type
 21305 ;;		None
 21306 ;; Return value:  Size  Location     Type
 21307 ;;                  1    wreg      void 
 21308 ;; Registers used:
 21309 ;;		wreg, status,2, status,0, pclath, cstack
 21310 ;; Tracked objects:
 21311 ;;		On entry : 0/0
 21312 ;;		On exit  : 0/0
 21313 ;;		Unchanged: 0/0
 21314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21317 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21318 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21319 ;;Total ram usage:        1 bytes
 21320 ;; Hardware stack levels used:    1
 21321 ;; Hardware stack levels required when called:    8
 21322 ;; This function calls:
 21323 ;;		_Update
 21324 ;;		_write_alaf
 21325 ;; This function is called by:
 21326 ;;		_Menu
 21327 ;; This function uses a non-reentrant model
 21328 ;;
 21329                           
 21330                           
 21331                           ;psect for function _submenu_alarm
 21332  147B                     _submenu_alarm:	
 21333  147B                     l6211:	
 21334                           ;incstack = 0
 21335                           ; Regs used in _submenu_alarm: [wreg+status,2+status,0+pclath+cstack]
 21336                           
 21337                           
 21338                           ;menus.c: 69:  alaf = Update(alaf, (uint8_t) 1);
 21339  147B  01F4               	clrf	Update@thr
 21340  147C  0AF4               	incf	Update@thr,f
 21341  147D  0020               	movlb	0	; select bank0
 21342  147E  086B               	movf	_alaf,w
 21343  147F  3197  2751  3194   	fcall	_Update
 21344  1482  0020               	movlb	0	; select bank0
 21345  1483  00A8               	movwf	??_submenu_alarm
 21346  1484  0828               	movf	??_submenu_alarm,w
 21347  1485  00EB               	movwf	_alaf
 21348                           
 21349                           ;menus.c: 70:     write_alaf(alaf);
 21350  1486  086B               	movf	_alaf,w
 21351  1487  3197  27D2  3194   	fcall	_write_alaf
 21352  148A                     l1152:	
 21353  148A  0008               	return
 21354  148B                     __end_of_submenu_alarm:	
 21355                           
 21356                           	psect	text86
 21357  17D2                     __ptext86:	
 21358 ;; *************** function _write_alaf *****************
 21359 ;; Defined at:
 21360 ;;		line 163 in file "eeprom.c"
 21361 ;; Parameters:    Size  Location     Type
 21362 ;;  x               1    wreg     unsigned char 
 21363 ;; Auto vars:     Size  Location     Type
 21364 ;;  x               1    7[BANK0 ] unsigned char 
 21365 ;; Return value:  Size  Location     Type
 21366 ;;                  1    wreg      void 
 21367 ;; Registers used:
 21368 ;;		wreg, status,2, status,0, pclath, cstack
 21369 ;; Tracked objects:
 21370 ;;		On entry : 0/0
 21371 ;;		On exit  : 0/0
 21372 ;;		Unchanged: 0/0
 21373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21376 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21377 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21378 ;;Total ram usage:        4 bytes
 21379 ;; Hardware stack levels used:    1
 21380 ;; Hardware stack levels required when called:    7
 21381 ;; This function calls:
 21382 ;;		_DATAEE_ReadByte
 21383 ;;		_DATAEE_WriteByte
 21384 ;; This function is called by:
 21385 ;;		_submenu_alarm
 21386 ;;		_switch_alarm
 21387 ;; This function uses a non-reentrant model
 21388 ;;
 21389                           
 21390                           
 21391                           ;psect for function _write_alaf
 21392  17D2                     _write_alaf:	
 21393                           
 21394                           ;incstack = 0
 21395                           ; Regs used in _write_alaf: [wreg+status,2+status,0+pclath+cstack]
 21396                           ;write_alaf@x stored from wreg
 21397  17D2  0020               	movlb	0	; select bank0
 21398  17D3  00A7               	movwf	write_alaf@x
 21399  17D4                     l6071:	
 21400                           
 21401                           ;eeprom.c: 165:     DATAEE_WriteByte(0xF000, DATAEE_ReadByte(0xF000) + x - DATAEE_ReadBy
      +                          te(0xF006));
 21402  17D4  3000               	movlw	0
 21403  17D5  00A0               	movwf	DATAEE_WriteByte@bAdd
 21404  17D6  30F0               	movlw	240
 21405  17D7  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 21406  17D8  3006               	movlw	6
 21407  17D9  00F2               	movwf	DATAEE_ReadByte@bAdd
 21408  17DA  30F0               	movlw	240
 21409  17DB  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 21410  17DC  3193  23D3  3197   	fcall	_DATAEE_ReadByte
 21411  17DF  0020               	movlb	0	; select bank0
 21412  17E0  00A4               	movwf	??_write_alaf
 21413  17E1  3000               	movlw	0
 21414  17E2  00F2               	movwf	DATAEE_ReadByte@bAdd
 21415  17E3  30F0               	movlw	240
 21416  17E4  00F3               	movwf	DATAEE_ReadByte@bAdd+1
 21417  17E5  3193  23D3  3197   	fcall	_DATAEE_ReadByte
 21418  17E8  0020               	movlb	0	; select bank0
 21419  17E9  00A5               	movwf	??_write_alaf+1
 21420  17EA  0824               	movf	??_write_alaf,w
 21421  17EB  0225               	subwf	??_write_alaf+1,w
 21422  17EC  0727               	addwf	write_alaf@x,w
 21423  17ED  00A6               	movwf	??_write_alaf+2
 21424  17EE  0826               	movf	??_write_alaf+2,w
 21425  17EF  00A2               	movwf	DATAEE_WriteByte@bData
 21426  17F0  3197  2709  3197   	fcall	_DATAEE_WriteByte
 21427                           
 21428                           ;eeprom.c: 167:     DATAEE_WriteByte(0xF006, x);
 21429  17F3  3006               	movlw	6
 21430  17F4  0020               	movlb	0	; select bank0
 21431  17F5  00A0               	movwf	DATAEE_WriteByte@bAdd
 21432  17F6  30F0               	movlw	240
 21433  17F7  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 21434  17F8  0827               	movf	write_alaf@x,w
 21435  17F9  00A4               	movwf	??_write_alaf
 21436  17FA  0824               	movf	??_write_alaf,w
 21437  17FB  00A2               	movwf	DATAEE_WriteByte@bData
 21438  17FC  3197  2709  3197   	fcall	_DATAEE_WriteByte
 21439  17FF                     l1471:	
 21440  17FF  0008               	return
 21441  1800                     __end_of_write_alaf:	
 21442                           
 21443                           	psect	text87
 21444  1709                     __ptext87:	
 21445 ;; *************** function _DATAEE_WriteByte *****************
 21446 ;; Defined at:
 21447 ;;		line 180 in file "mcc_generated_files/memory.c"
 21448 ;; Parameters:    Size  Location     Type
 21449 ;;  bAdd            2    0[BANK0 ] unsigned short 
 21450 ;;  bData           1    2[BANK0 ] unsigned char 
 21451 ;; Auto vars:     Size  Location     Type
 21452 ;;  GIEBitValue     1    3[BANK0 ] unsigned char 
 21453 ;; Return value:  Size  Location     Type
 21454 ;;                  1    wreg      void 
 21455 ;; Registers used:
 21456 ;;		wreg, status,2, status,0
 21457 ;; Tracked objects:
 21458 ;;		On entry : 0/0
 21459 ;;		On exit  : 0/0
 21460 ;;		Unchanged: 0/0
 21461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21462 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21465 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21466 ;;Total ram usage:        4 bytes
 21467 ;; Hardware stack levels used:    1
 21468 ;; Hardware stack levels required when called:    6
 21469 ;; This function calls:
 21470 ;;		Nothing
 21471 ;; This function is called by:
 21472 ;;		_eeprom_setup
 21473 ;;		_eeprom_clk_update
 21474 ;;		_ring_buffer_write
 21475 ;;		_write_pmon
 21476 ;;		_write_tala
 21477 ;;		_write_alat
 21478 ;;		_write_alal
 21479 ;;		_write_alaf
 21480 ;;		_set_check_up_value
 21481 ;;		_write_nreg
 21482 ;; This function uses a non-reentrant model
 21483 ;;
 21484                           
 21485                           
 21486                           ;psect for function _DATAEE_WriteByte
 21487  1709                     _DATAEE_WriteByte:	
 21488  1709                     l5909:	
 21489                           ;incstack = 0
 21490                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 21491                           
 21492                           
 21493                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 21494  1709  3000               	movlw	0
 21495  170A  1B8B               	btfsc	11,7	;volatile
 21496  170B  3001               	movlw	1
 21497  170C  0020               	movlb	0	; select bank0
 21498  170D  00A3               	movwf	DATAEE_WriteByte@GIEBitValue
 21499                           
 21500                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 21501  170E  0821               	movf	DATAEE_WriteByte@bAdd+1,w
 21502  170F  0030               	movlb	16	; select bank16
 21503  1710  009B               	movwf	27	;volatile
 21504  1711                     l5911:	
 21505                           
 21506                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 21507  1711  0020               	movlb	0	; select bank0
 21508  1712  0820               	movf	DATAEE_WriteByte@bAdd,w
 21509  1713  0030               	movlb	16	; select bank16
 21510  1714  009A               	movwf	26	;volatile
 21511  1715                     l5913:	
 21512                           
 21513                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 21514  1715  0020               	movlb	0	; select bank0
 21515  1716  0822               	movf	DATAEE_WriteByte@bData,w
 21516  1717  0030               	movlb	16	; select bank16
 21517  1718  009C               	movwf	28	;volatile
 21518  1719                     l5915:	
 21519                           
 21520                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 21521  1719  171E               	bsf	30,6	;volsfr
 21522  171A                     l5917:	
 21523                           
 21524                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 21525  171A  151E               	bsf	30,2	;volsfr
 21526  171B                     l5919:	
 21527                           
 21528                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 21529  171B  138B               	bcf	11,7	;volatile
 21530  171C                     l5921:	
 21531                           
 21532                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 21533  171C  3055               	movlw	85
 21534  171D  009F               	movwf	31	;volsfr
 21535  171E                     l5923:	
 21536                           
 21537                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 21538  171E  30AA               	movlw	170
 21539  171F  009F               	movwf	31	;volsfr
 21540  1720                     l5925:	
 21541                           
 21542                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 21543  1720  149E               	bsf	30,1	;volsfr
 21544  1721                     l624:	
 21545                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 21546                           
 21547                           
 21548                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 21549  1721  189E               	btfsc	30,1	;volsfr
 21550  1722  2F24               	goto	u4541
 21551  1723  2F25               	goto	u4540
 21552  1724                     u4541:	
 21553  1724  2F21               	goto	l624
 21554  1725                     u4540:	
 21555  1725                     l626:	
 21556                           
 21557                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 21558  1725  111E               	bcf	30,2	;volsfr
 21559  1726                     l5927:	
 21560                           
 21561                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 21562  1726  0020               	movlb	0	; select bank0
 21563  1727  0C23               	rrf	DATAEE_WriteByte@GIEBitValue,w
 21564  1728  1C03               	skipc
 21565  1729  138B               	bcf	11,7	;volatile
 21566  172A  1803               	skipnc
 21567  172B  178B               	bsf	11,7	;volatile
 21568  172C                     l627:	
 21569  172C  0008               	return
 21570  172D                     __end_of_DATAEE_WriteByte:	
 21571                           
 21572                           	psect	text88
 21573  13D3                     __ptext88:	
 21574 ;; *************** function _DATAEE_ReadByte *****************
 21575 ;; Defined at:
 21576 ;;		line 202 in file "mcc_generated_files/memory.c"
 21577 ;; Parameters:    Size  Location     Type
 21578 ;;  bAdd            2    2[COMMON] unsigned short 
 21579 ;; Auto vars:     Size  Location     Type
 21580 ;;		None
 21581 ;; Return value:  Size  Location     Type
 21582 ;;                  1    wreg      unsigned char 
 21583 ;; Registers used:
 21584 ;;		wreg, status,2
 21585 ;; Tracked objects:
 21586 ;;		On entry : 0/0
 21587 ;;		On exit  : 0/0
 21588 ;;		Unchanged: 0/0
 21589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21594 ;;Total ram usage:        2 bytes
 21595 ;; Hardware stack levels used:    1
 21596 ;; Hardware stack levels required when called:    6
 21597 ;; This function calls:
 21598 ;;		Nothing
 21599 ;; This function is called by:
 21600 ;;		_get_check_up_value
 21601 ;;		_check_corruption
 21602 ;;		_eeprom_clk_update
 21603 ;;		_ring_buffer_write
 21604 ;;		_ring_buffer_laped
 21605 ;;		_used
 21606 ;;		_read_buffer
 21607 ;;		_read_nreg
 21608 ;;		_read_pmon
 21609 ;;		_read_tala
 21610 ;;		_read_alat
 21611 ;;		_read_alal
 21612 ;;		_read_alaf
 21613 ;;		_read_clkh
 21614 ;;		_read_clkm
 21615 ;;		_read_iwrt
 21616 ;;		_write_pmon
 21617 ;;		_write_tala
 21618 ;;		_write_alat
 21619 ;;		_write_alal
 21620 ;;		_write_alaf
 21621 ;;		_write_nreg
 21622 ;; This function uses a non-reentrant model
 21623 ;;
 21624                           
 21625                           
 21626                           ;psect for function _DATAEE_ReadByte
 21627  13D3                     _DATAEE_ReadByte:	
 21628  13D3                     l5861:	
 21629                           ;incstack = 0
 21630                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 21631                           
 21632                           
 21633                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 21634  13D3  0873               	movf	DATAEE_ReadByte@bAdd+1,w
 21635  13D4  0030               	movlb	16	; select bank16
 21636  13D5  009B               	movwf	27	;volatile
 21637  13D6                     l5863:	
 21638                           
 21639                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 21640  13D6  0872               	movf	DATAEE_ReadByte@bAdd,w
 21641  13D7  009A               	movwf	26	;volatile
 21642  13D8                     l5865:	
 21643                           
 21644                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 21645  13D8  171E               	bsf	30,6	;volsfr
 21646  13D9                     l5867:	
 21647                           
 21648                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 21649  13D9  141E               	bsf	30,0	;volsfr
 21650  13DA                     l5869:	
 21651                           
 21652                           ;mcc_generated_files/memory.c: 208:     __nop();
 21653  13DA  0000               	nop
 21654  13DB                     l5871:	
 21655                           
 21656                           ;mcc_generated_files/memory.c: 209:     __nop();
 21657  13DB  0000               	nop
 21658  13DC                     l5873:	
 21659                           
 21660                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 21661  13DC  0030               	movlb	16	; select bank16
 21662  13DD  081C               	movf	28,w	;volatile
 21663  13DE                     l630:	
 21664  13DE  0008               	return
 21665  13DF                     __end_of_DATAEE_ReadByte:	
 21666                           
 21667                           	psect	text89
 21668  1751                     __ptext89:	
 21669 ;; *************** function _Update *****************
 21670 ;; Defined at:
 21671 ;;		line 27 in file "menus.c"
 21672 ;; Parameters:    Size  Location     Type
 21673 ;;  var             1    wreg     unsigned char 
 21674 ;;  thr             1    4[COMMON] unsigned char 
 21675 ;; Auto vars:     Size  Location     Type
 21676 ;;  var             1    6[COMMON] unsigned char 
 21677 ;; Return value:  Size  Location     Type
 21678 ;;                  1    wreg      unsigned char 
 21679 ;; Registers used:
 21680 ;;		wreg, status,2, status,0, pclath, cstack
 21681 ;; Tracked objects:
 21682 ;;		On entry : 0/0
 21683 ;;		On exit  : 0/0
 21684 ;;		Unchanged: 0/0
 21685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21686 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21688 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21689 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21690 ;;Total ram usage:        3 bytes
 21691 ;; Hardware stack levels used:    1
 21692 ;; Hardware stack levels required when called:    7
 21693 ;; This function calls:
 21694 ;;		_ShowOnLEDs
 21695 ;;		_checkButtonS1
 21696 ;;		_checkButtonS2
 21697 ;; This function is called by:
 21698 ;;		_submenu_clock
 21699 ;;		_submenu_alarm
 21700 ;;		_submenu_temp
 21701 ;;		_submenu_illum
 21702 ;; This function uses a non-reentrant model
 21703 ;;
 21704                           
 21705                           
 21706                           ;psect for function _Update
 21707  1751                     _Update:	
 21708                           
 21709                           ;incstack = 0
 21710                           ; Regs used in _Update: [wreg+status,2+status,0+pclath+cstack]
 21711                           ;Update@var stored from wreg
 21712  1751  00F6               	movwf	Update@var
 21713  1752                     l6051:	
 21714                           
 21715                           ;menus.c: 28:  ShowOnLEDs(var);
 21716  1752  0876               	movf	Update@var,w
 21717  1753  3193  23C7  3197   	fcall	_ShowOnLEDs
 21718  1756                     l1136:	
 21719                           ;menus.c: 29:  while(1){
 21720                           
 21721                           
 21722                           ;menus.c: 30:         checkButtonS1();
 21723  1756  3196  2661  3197   	fcall	_checkButtonS1
 21724                           
 21725                           ;menus.c: 31:         checkButtonS2();
 21726  1759  3196  2681  3197   	fcall	_checkButtonS2
 21727  175C                     l6053:	
 21728                           
 21729                           ;menus.c: 32:   if (s2flag){
 21730  175C  0021               	movlb	1	; select bank1
 21731  175D  084D               	movf	_s2flag^(0+128),w
 21732  175E  1903               	btfsc	3,2
 21733  175F  2F61               	goto	u4761
 21734  1760  2F62               	goto	u4760
 21735  1761                     u4761:	
 21736  1761  2F73               	goto	l6063
 21737  1762                     u4760:	
 21738  1762                     l6055:	
 21739                           
 21740                           ;menus.c: 33:    s2flag = 0;
 21741  1762  01CD               	clrf	_s2flag^(0+128)
 21742  1763                     l6057:	
 21743                           
 21744                           ;menus.c: 34:    if (++var > thr)
 21745  1763  3001               	movlw	1
 21746  1764  00F5               	movwf	??_Update
 21747  1765  0875               	movf	??_Update,w
 21748  1766  07F6               	addwf	Update@var,f
 21749  1767  0876               	movf	Update@var,w
 21750  1768  0274               	subwf	Update@thr,w
 21751  1769  1803               	skipnc
 21752  176A  2F6C               	goto	u4771
 21753  176B  2F6D               	goto	u4770
 21754  176C                     u4771:	
 21755  176C  2F6E               	goto	l6061
 21756  176D                     u4770:	
 21757  176D                     l6059:	
 21758                           
 21759                           ;menus.c: 35:     var=0;
 21760  176D  01F6               	clrf	Update@var
 21761  176E                     l6061:	
 21762                           
 21763                           ;menus.c: 36:             ShowOnLEDs(var);
 21764  176E  0876               	movf	Update@var,w
 21765  176F  3193  23C7  3197   	fcall	_ShowOnLEDs
 21766                           
 21767                           ;menus.c: 37:   }
 21768  1772  2F56               	goto	l1136
 21769  1773                     l6063:	
 21770  1773  084C               	movf	_s1flag^(0+128),w
 21771  1774  1903               	btfsc	3,2
 21772  1775  2F77               	goto	u4781
 21773  1776  2F78               	goto	u4780
 21774  1777                     u4781:	
 21775  1777  2F56               	goto	l1136
 21776  1778                     u4780:	
 21777  1778                     l6065:	
 21778                           
 21779                           ;menus.c: 39:    s1flag = 0;
 21780  1778  01CC               	clrf	_s1flag^(0+128)
 21781  1779                     l6067:	
 21782                           
 21783                           ;menus.c: 40:    return var;
 21784  1779  0876               	movf	Update@var,w
 21785  177A                     l1141:	
 21786  177A  0008               	return
 21787  177B                     __end_of_Update:	
 21788                           
 21789                           	psect	text90
 21790  1681                     __ptext90:	
 21791 ;; *************** function _checkButtonS2 *****************
 21792 ;; Defined at:
 21793 ;;		line 88 in file "utils.c"
 21794 ;; Parameters:    Size  Location     Type
 21795 ;;		None
 21796 ;; Auto vars:     Size  Location     Type
 21797 ;;		None
 21798 ;; Return value:  Size  Location     Type
 21799 ;;                  1    wreg      void 
 21800 ;; Registers used:
 21801 ;;		wreg, status,2, status,0
 21802 ;; Tracked objects:
 21803 ;;		On entry : 0/0
 21804 ;;		On exit  : 0/0
 21805 ;;		Unchanged: 0/0
 21806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21809 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21811 ;;Total ram usage:        1 bytes
 21812 ;; Hardware stack levels used:    1
 21813 ;; Hardware stack levels required when called:    6
 21814 ;; This function calls:
 21815 ;;		Nothing
 21816 ;; This function is called by:
 21817 ;;		_Update
 21818 ;;		_Menus
 21819 ;; This function uses a non-reentrant model
 21820 ;;
 21821                           
 21822                           
 21823                           ;psect for function _checkButtonS2
 21824  1681                     _checkButtonS2:	
 21825  1681                     l5959:	
 21826                           ;incstack = 0
 21827                           ; Regs used in _checkButtonS2: [wreg+status,2+status,0]
 21828                           
 21829                           
 21830                           ;utils.c: 89:     if (btn2State == 0) {
 21831  1681  0021               	movlb	1	; select bank1
 21832  1682  0849               	movf	_btn2State^(0+128),w
 21833  1683  1D03               	btfss	3,2
 21834  1684  2E86               	goto	u4601
 21835  1685  2E87               	goto	u4600
 21836  1686                     u4601:	
 21837  1686  2E97               	goto	l1365
 21838  1687                     u4600:	
 21839  1687                     l5961:	
 21840                           
 21841                           ;utils.c: 90:         if (PORTCbits.RC5 == 0) {
 21842  1687  0020               	movlb	0	; select bank0
 21843  1688  1A8E               	btfsc	14,5	;volatile
 21844  1689  2E8B               	goto	u4611
 21845  168A  2E8C               	goto	u4610
 21846  168B                     u4611:	
 21847  168B  2EA0               	goto	l1369
 21848  168C                     u4610:	
 21849  168C                     l5963:	
 21850                           
 21851                           ;utils.c: 91:             _delay((unsigned long)((300)*(1000000/4000.0)));
 21852  168C  3062               	movlw	98
 21853  168D  00F2               	movwf	??_checkButtonS2
 21854  168E  3066               	movlw	102
 21855  168F                     u6297:	
 21856  168F  0B89               	decfsz	9,f
 21857  1690  2E8F               	goto	u6297
 21858  1691  0BF2               	decfsz	??_checkButtonS2,f
 21859  1692  2E8F               	goto	u6297
 21860  1693                     l5965:	
 21861                           
 21862                           ;utils.c: 92:             btn2State = 1;
 21863  1693  0021               	movlb	1	; select bank1
 21864  1694  01C9               	clrf	_btn2State^(0+128)
 21865  1695  0AC9               	incf	_btn2State^(0+128),f
 21866  1696  2EA0               	goto	l1369
 21867  1697                     l1365:	
 21868  1697  0020               	movlb	0	; select bank0
 21869  1698  1E8E               	btfss	14,5	;volatile
 21870  1699  2E9B               	goto	u4621
 21871  169A  2E9C               	goto	u4620
 21872  169B                     u4621:	
 21873  169B  2EA0               	goto	l1369
 21874  169C                     u4620:	
 21875  169C                     l5967:	
 21876                           
 21877                           ;utils.c: 95:         btn2State = 0;
 21878  169C  0021               	movlb	1	; select bank1
 21879  169D  01C9               	clrf	_btn2State^(0+128)
 21880  169E                     l5969:	
 21881                           
 21882                           ;utils.c: 96:         s2flag = 1;
 21883  169E  01CD               	clrf	_s2flag^(0+128)
 21884  169F  0ACD               	incf	_s2flag^(0+128),f
 21885  16A0                     l1369:	
 21886  16A0  0008               	return
 21887  16A1                     __end_of_checkButtonS2:	
 21888                           
 21889                           	psect	text91
 21890  1661                     __ptext91:	
 21891 ;; *************** function _checkButtonS1 *****************
 21892 ;; Defined at:
 21893 ;;		line 76 in file "utils.c"
 21894 ;; Parameters:    Size  Location     Type
 21895 ;;		None
 21896 ;; Auto vars:     Size  Location     Type
 21897 ;;		None
 21898 ;; Return value:  Size  Location     Type
 21899 ;;                  1    wreg      void 
 21900 ;; Registers used:
 21901 ;;		wreg, status,2, status,0
 21902 ;; Tracked objects:
 21903 ;;		On entry : 0/0
 21904 ;;		On exit  : 0/0
 21905 ;;		Unchanged: 0/0
 21906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21909 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21910 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21911 ;;Total ram usage:        1 bytes
 21912 ;; Hardware stack levels used:    1
 21913 ;; Hardware stack levels required when called:    6
 21914 ;; This function calls:
 21915 ;;		Nothing
 21916 ;; This function is called by:
 21917 ;;		_Update
 21918 ;;		_Menus
 21919 ;; This function uses a non-reentrant model
 21920 ;;
 21921                           
 21922                           
 21923                           ;psect for function _checkButtonS1
 21924  1661                     _checkButtonS1:	
 21925  1661                     l5947:	
 21926                           ;incstack = 0
 21927                           ; Regs used in _checkButtonS1: [wreg+status,2+status,0]
 21928                           
 21929                           
 21930                           ;utils.c: 77:     if (btn1State == 0) {
 21931  1661  0021               	movlb	1	; select bank1
 21932  1662  084A               	movf	_btn1State^(0+128),w
 21933  1663  1D03               	btfss	3,2
 21934  1664  2E66               	goto	u4571
 21935  1665  2E67               	goto	u4570
 21936  1666                     u4571:	
 21937  1666  2E77               	goto	l1358
 21938  1667                     u4570:	
 21939  1667                     l5949:	
 21940                           
 21941                           ;utils.c: 78:         if (PORTBbits.RB4 == 0) {
 21942  1667  0020               	movlb	0	; select bank0
 21943  1668  1A0D               	btfsc	13,4	;volatile
 21944  1669  2E6B               	goto	u4581
 21945  166A  2E6C               	goto	u4580
 21946  166B                     u4581:	
 21947  166B  2E80               	goto	l1362
 21948  166C                     u4580:	
 21949  166C                     l5951:	
 21950                           
 21951                           ;utils.c: 79:             _delay((unsigned long)((300)*(1000000/4000.0)));
 21952  166C  3062               	movlw	98
 21953  166D  00F2               	movwf	??_checkButtonS1
 21954  166E  3066               	movlw	102
 21955  166F                     u6307:	
 21956  166F  0B89               	decfsz	9,f
 21957  1670  2E6F               	goto	u6307
 21958  1671  0BF2               	decfsz	??_checkButtonS1,f
 21959  1672  2E6F               	goto	u6307
 21960  1673                     l5953:	
 21961                           
 21962                           ;utils.c: 80:             btn1State = 1;
 21963  1673  0021               	movlb	1	; select bank1
 21964  1674  01CA               	clrf	_btn1State^(0+128)
 21965  1675  0ACA               	incf	_btn1State^(0+128),f
 21966  1676  2E80               	goto	l1362
 21967  1677                     l1358:	
 21968  1677  0020               	movlb	0	; select bank0
 21969  1678  1E0D               	btfss	13,4	;volatile
 21970  1679  2E7B               	goto	u4591
 21971  167A  2E7C               	goto	u4590
 21972  167B                     u4591:	
 21973  167B  2E80               	goto	l1362
 21974  167C                     u4590:	
 21975  167C                     l5955:	
 21976                           
 21977                           ;utils.c: 83:         btn1State = 0;
 21978  167C  0021               	movlb	1	; select bank1
 21979  167D  01CA               	clrf	_btn1State^(0+128)
 21980  167E                     l5957:	
 21981                           
 21982                           ;utils.c: 84:         s1flag = 1;
 21983  167E  01CC               	clrf	_s1flag^(0+128)
 21984  167F  0ACC               	incf	_s1flag^(0+128),f
 21985  1680                     l1362:	
 21986  1680  0008               	return
 21987  1681                     __end_of_checkButtonS1:	
 21988                           
 21989                           	psect	text92
 21990  13C7                     __ptext92:	
 21991 ;; *************** function _ShowOnLEDs *****************
 21992 ;; Defined at:
 21993 ;;		line 72 in file "utils.c"
 21994 ;; Parameters:    Size  Location     Type
 21995 ;;  num             1    wreg     unsigned char 
 21996 ;; Auto vars:     Size  Location     Type
 21997 ;;  num             1    3[COMMON] unsigned char 
 21998 ;; Return value:  Size  Location     Type
 21999 ;;                  1    wreg      void 
 22000 ;; Registers used:
 22001 ;;		wreg, status,2, status,0
 22002 ;; Tracked objects:
 22003 ;;		On entry : 0/0
 22004 ;;		On exit  : 0/0
 22005 ;;		Unchanged: 0/0
 22006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22009 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22011 ;;Total ram usage:        2 bytes
 22012 ;; Hardware stack levels used:    1
 22013 ;; Hardware stack levels required when called:    6
 22014 ;; This function calls:
 22015 ;;		Nothing
 22016 ;; This function is called by:
 22017 ;;		_Menu
 22018 ;;		_Update
 22019 ;;		_Menus
 22020 ;; This function uses a non-reentrant model
 22021 ;;
 22022                           
 22023                           
 22024                           ;psect for function _ShowOnLEDs
 22025  13C7                     _ShowOnLEDs:	
 22026                           
 22027                           ;incstack = 0
 22028                           ; Regs used in _ShowOnLEDs: [wreg+status,2+status,0]
 22029                           ;ShowOnLEDs@num stored from wreg
 22030  13C7  00F3               	movwf	ShowOnLEDs@num
 22031  13C8                     l5945:	
 22032                           
 22033                           ;utils.c: 73:     LATA = num << 4;
 22034  13C8  0873               	movf	ShowOnLEDs@num,w
 22035  13C9  00F2               	movwf	??_ShowOnLEDs
 22036  13CA  3003               	movlw	3
 22037  13CB                     u4565:	
 22038  13CB  35F2               	lslf	??_ShowOnLEDs,f
 22039  13CC  3EFF               	addlw	-1
 22040  13CD  1D03               	skipz
 22041  13CE  2BCB               	goto	u4565
 22042  13CF  3572               	lslf	??_ShowOnLEDs,w
 22043  13D0  0020               	movlb	0	; select bank0
 22044  13D1  0096               	movwf	22	;volatile
 22045  13D2                     l1355:	
 22046  13D2  0008               	return
 22047  13D3                     __end_of_ShowOnLEDs:	
 22048                           
 22049                           	psect	text93
 22050  12F3                     __ptext93:	
 22051 ;; *************** function _TMR1_StopTimer *****************
 22052 ;; Defined at:
 22053 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 22054 ;; Parameters:    Size  Location     Type
 22055 ;;		None
 22056 ;; Auto vars:     Size  Location     Type
 22057 ;;		None
 22058 ;; Return value:  Size  Location     Type
 22059 ;;                  1    wreg      void 
 22060 ;; Registers used:
 22061 ;;		None
 22062 ;; Tracked objects:
 22063 ;;		On entry : 0/0
 22064 ;;		On exit  : 0/0
 22065 ;;		Unchanged: 0/0
 22066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22071 ;;Total ram usage:        0 bytes
 22072 ;; Hardware stack levels used:    1
 22073 ;; Hardware stack levels required when called:    6
 22074 ;; This function calls:
 22075 ;;		Nothing
 22076 ;; This function is called by:
 22077 ;;		_Menu
 22078 ;; This function uses a non-reentrant model
 22079 ;;
 22080                           
 22081                           
 22082                           ;psect for function _TMR1_StopTimer
 22083  12F3                     _TMR1_StopTimer:	
 22084  12F3                     l6185:	
 22085                           ;incstack = 0
 22086                           ; Regs used in _TMR1_StopTimer: []
 22087                           
 22088                           
 22089                           ;mcc_generated_files/tmr1.c: 108:     T1CONbits.TMR1ON = 0;
 22090  12F3  0024               	movlb	4	; select bank4
 22091  12F4  100E               	bcf	14,0	;volatile
 22092  12F5                     l37:	
 22093  12F5  0008               	return
 22094  12F6                     __end_of_TMR1_StopTimer:	
 22095                           
 22096                           	psect	text94
 22097  12F0                     __ptext94:	
 22098 ;; *************** function _TMR1_StartTimer *****************
 22099 ;; Defined at:
 22100 ;;		line 99 in file "mcc_generated_files/tmr1.c"
 22101 ;; Parameters:    Size  Location     Type
 22102 ;;		None
 22103 ;; Auto vars:     Size  Location     Type
 22104 ;;		None
 22105 ;; Return value:  Size  Location     Type
 22106 ;;                  1    wreg      void 
 22107 ;; Registers used:
 22108 ;;		None
 22109 ;; Tracked objects:
 22110 ;;		On entry : 0/0
 22111 ;;		On exit  : 0/0
 22112 ;;		Unchanged: 0/0
 22113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22118 ;;Total ram usage:        0 bytes
 22119 ;; Hardware stack levels used:    1
 22120 ;; Hardware stack levels required when called:    6
 22121 ;; This function calls:
 22122 ;;		Nothing
 22123 ;; This function is called by:
 22124 ;;		_Menu
 22125 ;; This function uses a non-reentrant model
 22126 ;;
 22127                           
 22128                           
 22129                           ;psect for function _TMR1_StartTimer
 22130  12F0                     _TMR1_StartTimer:	
 22131  12F0                     l6183:	
 22132                           ;incstack = 0
 22133                           ; Regs used in _TMR1_StartTimer: []
 22134                           
 22135                           
 22136                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 1;
 22137  12F0  0024               	movlb	4	; select bank4
 22138  12F1  140E               	bsf	14,0	;volatile
 22139  12F2                     l34:	
 22140  12F2  0008               	return
 22141  12F3                     __end_of_TMR1_StartTimer:	
 22142                           
 22143                           	psect	text95
 22144  0B41                     __ptext95:	
 22145 ;; *************** function _Alarm *****************
 22146 ;; Defined at:
 22147 ;;		line 88 in file "main.c"
 22148 ;; Parameters:    Size  Location     Type
 22149 ;;  h               1    wreg     unsigned char 
 22150 ;;  m               1    0[BANK0 ] unsigned char 
 22151 ;;  s               1    1[BANK0 ] unsigned char 
 22152 ;; Auto vars:     Size  Location     Type
 22153 ;;  h               1   12[BANK0 ] unsigned char 
 22154 ;; Return value:  Size  Location     Type
 22155 ;;                  1    wreg      void 
 22156 ;; Registers used:
 22157 ;;		wreg, status,2, status,0, pclath, cstack
 22158 ;; Tracked objects:
 22159 ;;		On entry : 0/0
 22160 ;;		On exit  : 0/0
 22161 ;;		Unchanged: 0/0
 22162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22163 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22164 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22165 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22166 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22167 ;;Total ram usage:       13 bytes
 22168 ;; Hardware stack levels used:    1
 22169 ;; Hardware stack levels required when called:    7
 22170 ;; This function calls:
 22171 ;;		_PWM6_LoadDutyValue
 22172 ;;		_PWM_Output_D4_Enable
 22173 ;;		___wmul
 22174 ;; This function is called by:
 22175 ;;		_main
 22176 ;; This function uses a non-reentrant model
 22177 ;;
 22178                           
 22179                           
 22180                           ;psect for function _Alarm
 22181  0B41                     _Alarm:	
 22182                           
 22183                           ;incstack = 0
 22184                           ; Regs used in _Alarm: [wreg+status,2+status,0+pclath+cstack]
 22185                           ;Alarm@h stored from wreg
 22186  0B41  0020               	movlb	0	; select bank0
 22187  0B42  00AC               	movwf	Alarm@h
 22188  0B43                     l6879:	
 22189                           
 22190                           ;main.c: 89:     alarm = 1;
 22191  0B43  0021               	movlb	1	; select bank1
 22192  0B44  01D0               	clrf	_alarm^(0+128)
 22193  0B45  0AD0               	incf	_alarm^(0+128),f
 22194  0B46                     l6881:	
 22195                           
 22196                           ;main.c: 90:     PWM_Output_D4_Enable();
 22197  0B46  3194  246B  318B   	fcall	_PWM_Output_D4_Enable
 22198                           
 22199                           ;main.c: 91:     PWM6_LoadDutyValue(250);
 22200  0B49  30FA               	movlw	250
 22201  0B4A  00F2               	movwf	PWM6_LoadDutyValue@dutyValue
 22202  0B4B  3000               	movlw	0
 22203  0B4C  00F3               	movwf	PWM6_LoadDutyValue@dutyValue+1
 22204  0B4D  3194  24EC  318B   	fcall	_PWM6_LoadDutyValue
 22205                           
 22206                           ;main.c: 92:     initial_time = h * 3600 + m * 60 + s;
 22207  0B50  0020               	movlb	0	; select bank0
 22208  0B51  0821               	movf	Alarm@s,w
 22209  0B52  00A2               	movwf	??_Alarm
 22210  0B53  01A3               	clrf	??_Alarm+1
 22211  0B54  082C               	movf	Alarm@h,w
 22212  0B55  00A4               	movwf	??_Alarm+2
 22213  0B56  01A5               	clrf	??_Alarm+3
 22214  0B57  0824               	movf	??_Alarm+2,w
 22215  0B58  00F4               	movwf	___wmul@multiplier
 22216  0B59  0825               	movf	??_Alarm+3,w
 22217  0B5A  00F5               	movwf	___wmul@multiplier+1
 22218  0B5B  3010               	movlw	16
 22219  0B5C  00F6               	movwf	___wmul@multiplicand
 22220  0B5D  300E               	movlw	14
 22221  0B5E  00F7               	movwf	___wmul@multiplicand+1
 22222  0B5F  3196  2604  318B   	fcall	___wmul
 22223  0B62  0874               	movf	?___wmul,w
 22224  0B63  0020               	movlb	0	; select bank0
 22225  0B64  00A6               	movwf	??_Alarm+4
 22226  0B65  0875               	movf	?___wmul+1,w
 22227  0B66  00A7               	movwf	??_Alarm+5
 22228  0B67  0820               	movf	Alarm@m,w
 22229  0B68  00A8               	movwf	??_Alarm+6
 22230  0B69  01A9               	clrf	??_Alarm+7
 22231  0B6A  0828               	movf	??_Alarm+6,w
 22232  0B6B  00F4               	movwf	___wmul@multiplier
 22233  0B6C  0829               	movf	??_Alarm+7,w
 22234  0B6D  00F5               	movwf	___wmul@multiplier+1
 22235  0B6E  303C               	movlw	60
 22236  0B6F  00F6               	movwf	___wmul@multiplicand
 22237  0B70  3000               	movlw	0
 22238  0B71  00F7               	movwf	___wmul@multiplicand+1
 22239  0B72  3196  2604  318B   	fcall	___wmul
 22240  0B75  0874               	movf	?___wmul,w
 22241  0B76  0020               	movlb	0	; select bank0
 22242  0B77  0726               	addwf	??_Alarm+4,w
 22243  0B78  00AA               	movwf	??_Alarm+8
 22244  0B79  0875               	movf	?___wmul+1,w
 22245  0B7A  3D27               	addwfc	??_Alarm+5,w
 22246  0B7B  00AB               	movwf	??_Alarm+9
 22247  0B7C  0822               	movf	??_Alarm,w
 22248  0B7D  072A               	addwf	??_Alarm+8,w
 22249  0B7E  0021               	movlb	1	; select bank1
 22250  0B7F  00C3               	movwf	_initial_time^(0+128)
 22251  0B80  0020               	movlb	0	; select bank0
 22252  0B81  0823               	movf	??_Alarm+1,w
 22253  0B82  3D2B               	addwfc	??_Alarm+9,w
 22254  0B83  0021               	movlb	1	; select bank1
 22255  0B84  00C4               	movwf	(_initial_time+1)^(0+128)
 22256  0B85                     l989:	
 22257  0B85  0008               	return
 22258  0B86                     __end_of_Alarm:	
 22259                           
 22260                           	psect	text96
 22261  1604                     __ptext96:	
 22262 ;; *************** function ___wmul *****************
 22263 ;; Defined at:
 22264 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 22265 ;; Parameters:    Size  Location     Type
 22266 ;;  multiplier      2    4[COMMON] unsigned int 
 22267 ;;  multiplicand    2    6[COMMON] unsigned int 
 22268 ;; Auto vars:     Size  Location     Type
 22269 ;;  product         2    8[COMMON] unsigned int 
 22270 ;; Return value:  Size  Location     Type
 22271 ;;                  2    4[COMMON] unsigned int 
 22272 ;; Registers used:
 22273 ;;		wreg, status,2, status,0
 22274 ;; Tracked objects:
 22275 ;;		On entry : 0/0
 22276 ;;		On exit  : 0/0
 22277 ;;		Unchanged: 0/0
 22278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22279 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22280 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22282 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22283 ;;Total ram usage:        6 bytes
 22284 ;; Hardware stack levels used:    1
 22285 ;; Hardware stack levels required when called:    6
 22286 ;; This function calls:
 22287 ;;		Nothing
 22288 ;; This function is called by:
 22289 ;;		_Alarm
 22290 ;;		_main
 22291 ;;		_ring_buffer_write
 22292 ;;		_read_buffer
 22293 ;; This function uses a non-reentrant model
 22294 ;;
 22295                           
 22296                           
 22297                           ;psect for function ___wmul
 22298  1604                     ___wmul:	
 22299  1604                     l5895:	
 22300                           ;incstack = 0
 22301                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 22302                           
 22303  1604  01F8               	clrf	___wmul@product
 22304  1605  01F9               	clrf	___wmul@product+1
 22305  1606                     l5897:	
 22306  1606  1C74               	btfss	___wmul@multiplier,0
 22307  1607  2E09               	goto	u4501
 22308  1608  2E0A               	goto	u4500
 22309  1609                     u4501:	
 22310  1609  2E0E               	goto	l1893
 22311  160A                     u4500:	
 22312  160A                     l5899:	
 22313  160A  0876               	movf	___wmul@multiplicand,w
 22314  160B  07F8               	addwf	___wmul@product,f
 22315  160C  0877               	movf	___wmul@multiplicand+1,w
 22316  160D  3DF9               	addwfc	___wmul@product+1,f
 22317  160E                     l1893:	
 22318  160E  3001               	movlw	1
 22319  160F                     u4515:	
 22320  160F  35F6               	lslf	___wmul@multiplicand,f
 22321  1610  0DF7               	rlf	___wmul@multiplicand+1,f
 22322  1611  0B89               	decfsz	9,f
 22323  1612  2E0F               	goto	u4515
 22324  1613                     l5901:	
 22325  1613  3001               	movlw	1
 22326  1614                     u4525:	
 22327  1614  36F5               	lsrf	___wmul@multiplier+1,f
 22328  1615  0CF4               	rrf	___wmul@multiplier,f
 22329  1616  0B89               	decfsz	9,f
 22330  1617  2E14               	goto	u4525
 22331  1618                     l5903:	
 22332  1618  0874               	movf	___wmul@multiplier,w
 22333  1619  0475               	iorwf	___wmul@multiplier+1,w
 22334  161A  1D03               	btfss	3,2
 22335  161B  2E1D               	goto	u4531
 22336  161C  2E1E               	goto	u4530
 22337  161D                     u4531:	
 22338  161D  2E06               	goto	l5897
 22339  161E                     u4530:	
 22340  161E                     l5905:	
 22341  161E  0879               	movf	___wmul@product+1,w
 22342  161F  00F5               	movwf	?___wmul+1
 22343  1620  0878               	movf	___wmul@product,w
 22344  1621  00F4               	movwf	?___wmul
 22345  1622                     l1895:	
 22346  1622  0008               	return
 22347  1623                     __end_of___wmul:	
 22348                           
 22349                           	psect	text97
 22350  146B                     __ptext97:	
 22351 ;; *************** function _PWM_Output_D4_Enable *****************
 22352 ;; Defined at:
 22353 ;;		line 50 in file "utils.c"
 22354 ;; Parameters:    Size  Location     Type
 22355 ;;		None
 22356 ;; Auto vars:     Size  Location     Type
 22357 ;;		None
 22358 ;; Return value:  Size  Location     Type
 22359 ;;                  1    wreg      void 
 22360 ;; Registers used:
 22361 ;;		wreg
 22362 ;; Tracked objects:
 22363 ;;		On entry : 0/0
 22364 ;;		On exit  : 0/0
 22365 ;;		Unchanged: 0/0
 22366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22371 ;;Total ram usage:        0 bytes
 22372 ;; Hardware stack levels used:    1
 22373 ;; Hardware stack levels required when called:    6
 22374 ;; This function calls:
 22375 ;;		Nothing
 22376 ;; This function is called by:
 22377 ;;		_Alarm
 22378 ;; This function uses a non-reentrant model
 22379 ;;
 22380                           
 22381                           
 22382                           ;psect for function _PWM_Output_D4_Enable
 22383  146B                     _PWM_Output_D4_Enable:	
 22384  146B                     l6639:	
 22385                           ;incstack = 0
 22386                           ; Regs used in _PWM_Output_D4_Enable: [wreg]
 22387                           
 22388                           
 22389                           ;utils.c: 51:     PPSLOCK = 0x55;
 22390  146B  3055               	movlw	85
 22391  146C  003D               	movlb	29	; select bank29
 22392  146D  008F               	movwf	15	;volsfr
 22393                           
 22394                           ;utils.c: 52:     PPSLOCK = 0xAA;
 22395  146E  30AA               	movlw	170
 22396  146F  008F               	movwf	15	;volsfr
 22397  1470                     l6641:	
 22398                           
 22399                           ;utils.c: 53:     PPSLOCKbits.PPSLOCKED = 0x00;
 22400  1470  100F               	bcf	15,0	;volsfr
 22401                           
 22402                           ;utils.c: 55:     RA6PPS = 0x0E;
 22403  1471  300E               	movlw	14
 22404  1472  003E               	movlb	30	; select bank30
 22405  1473  0096               	movwf	22	;volatile
 22406                           
 22407                           ;utils.c: 56:     PPSLOCK = 0x55;
 22408  1474  3055               	movlw	85
 22409  1475  003D               	movlb	29	; select bank29
 22410  1476  008F               	movwf	15	;volsfr
 22411                           
 22412                           ;utils.c: 57:     PPSLOCK = 0xAA;
 22413  1477  30AA               	movlw	170
 22414  1478  008F               	movwf	15	;volsfr
 22415  1479                     l6643:	
 22416                           
 22417                           ;utils.c: 58:     PPSLOCKbits.PPSLOCKED = 0x01;
 22418  1479  140F               	bsf	15,0	;volsfr
 22419  147A                     l1349:	
 22420  147A  0008               	return
 22421  147B                     __end_of_PWM_Output_D4_Enable:	
 22422                           
 22423                           	psect	text98
 22424  14EC                     __ptext98:	
 22425 ;; *************** function _PWM6_LoadDutyValue *****************
 22426 ;; Defined at:
 22427 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 22428 ;; Parameters:    Size  Location     Type
 22429 ;;  dutyValue       2    2[COMMON] unsigned short 
 22430 ;; Auto vars:     Size  Location     Type
 22431 ;;		None
 22432 ;; Return value:  Size  Location     Type
 22433 ;;                  1    wreg      void 
 22434 ;; Registers used:
 22435 ;;		wreg, status,2, status,0
 22436 ;; Tracked objects:
 22437 ;;		On entry : 0/0
 22438 ;;		On exit  : 0/0
 22439 ;;		Unchanged: 0/0
 22440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22443 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22444 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22445 ;;Total ram usage:        4 bytes
 22446 ;; Hardware stack levels used:    1
 22447 ;; Hardware stack levels required when called:    6
 22448 ;; This function calls:
 22449 ;;		Nothing
 22450 ;; This function is called by:
 22451 ;;		_Alarm
 22452 ;; This function uses a non-reentrant model
 22453 ;;
 22454                           
 22455                           
 22456                           ;psect for function _PWM6_LoadDutyValue
 22457  14EC                     _PWM6_LoadDutyValue:	
 22458  14EC                     l6599:	
 22459                           ;incstack = 0
 22460                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 22461                           
 22462                           
 22463                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22464  14EC  0873               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 22465  14ED  00F5               	movwf	??_PWM6_LoadDutyValue+1
 22466  14EE  0872               	movf	PWM6_LoadDutyValue@dutyValue,w
 22467  14EF  00F4               	movwf	??_PWM6_LoadDutyValue
 22468  14F0  36F5               	lsrf	??_PWM6_LoadDutyValue+1,f
 22469  14F1  0CF4               	rrf	??_PWM6_LoadDutyValue,f
 22470  14F2  36F5               	lsrf	??_PWM6_LoadDutyValue+1,f
 22471  14F3  0CF4               	rrf	??_PWM6_LoadDutyValue,f
 22472  14F4  0874               	movf	??_PWM6_LoadDutyValue,w
 22473  14F5  0027               	movlb	7	; select bank7
 22474  14F6  008D               	movwf	13	;volatile
 22475                           
 22476                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 22477  14F7  0872               	movf	PWM6_LoadDutyValue@dutyValue,w
 22478  14F8  3903               	andlw	3
 22479  14F9  00F4               	movwf	??_PWM6_LoadDutyValue
 22480  14FA  3005               	movlw	5
 22481  14FB                     u5415:	
 22482  14FB  35F4               	lslf	??_PWM6_LoadDutyValue,f
 22483  14FC  3EFF               	addlw	-1
 22484  14FD  1D03               	skipz
 22485  14FE  2CFB               	goto	u5415
 22486  14FF  3574               	lslf	??_PWM6_LoadDutyValue,w
 22487  1500  008C               	movwf	12	;volatile
 22488  1501                     l644:	
 22489  1501  0008               	return
 22490  1502                     __end_of_PWM6_LoadDutyValue:	
 22491                           
 22492                           	psect	intentry
 22493  0004                     __pintentry:	
 22494 ;; *************** function _INTERRUPT_InterruptManager *****************
 22495 ;; Defined at:
 22496 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22497 ;; Parameters:    Size  Location     Type
 22498 ;;		None
 22499 ;; Auto vars:     Size  Location     Type
 22500 ;;		None
 22501 ;; Return value:  Size  Location     Type
 22502 ;;                  1    wreg      void 
 22503 ;; Registers used:
 22504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22505 ;; Tracked objects:
 22506 ;;		On entry : 0/0
 22507 ;;		On exit  : 0/0
 22508 ;;		Unchanged: 0/0
 22509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22514 ;;Total ram usage:        0 bytes
 22515 ;; Hardware stack levels used:    1
 22516 ;; Hardware stack levels required when called:    5
 22517 ;; This function calls:
 22518 ;;		Absolute function
 22519 ;;		_EUSART_Receive_ISR
 22520 ;;		_EUSART_Transmit_ISR
 22521 ;;		_INT_ISR
 22522 ;;		_TMR1_ISR
 22523 ;;		_countMsg
 22524 ;; This function is called by:
 22525 ;;		Interrupt level 1
 22526 ;; This function uses a non-reentrant model
 22527 ;;
 22528                           
 22529  0004                     _INTERRUPT_InterruptManager:	
 22530                           
 22531                           ;incstack = 0
 22532  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 22533                           
 22534                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22535  0005  3180               	pagesel	$
 22536  0006                     i1l5643:	
 22537                           
 22538                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 22539  0006  002E               	movlb	14	; select bank14
 22540  0007  1C16               	btfss	22,0	;volatile
 22541  0008  280A               	goto	u420_21
 22542  0009  280B               	goto	u420_20
 22543  000A                     u420_21:	
 22544  000A  2813               	goto	i1l121
 22545  000B                     u420_20:	
 22546  000B                     i1l5645:	
 22547  000B  1C0C               	btfss	12,0	;volatile
 22548  000C  280E               	goto	u421_21
 22549  000D  280F               	goto	u421_20
 22550  000E                     u421_21:	
 22551  000E  2813               	goto	i1l121
 22552  000F                     u421_20:	
 22553  000F                     i1l5647:	
 22554                           
 22555                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 22556  000F  3192  22FE  3180   	fcall	_INT_ISR
 22557                           
 22558                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 22559  0012  2853               	goto	i1l135
 22560  0013                     i1l121:	
 22561                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 22562                           
 22563  0013  1F0B               	btfss	11,6	;volatile
 22564  0014  2816               	goto	u422_21
 22565  0015  2817               	goto	u422_20
 22566  0016                     u422_21:	
 22567  0016  2853               	goto	i1l135
 22568  0017                     u422_20:	
 22569  0017                     i1l5649:	
 22570                           
 22571                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 22572  0017  1C99               	btfss	25,1	;volatile
 22573  0018  281A               	goto	u423_21
 22574  0019  281B               	goto	u423_20
 22575  001A                     u423_21:	
 22576  001A  2820               	goto	i1l124
 22577  001B                     u423_20:	
 22578  001B                     i1l5651:	
 22579                           
 22580                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             i2c1_driver_busCollisionISR();
 22581  001B  1C8F               	btfss	15,1	;volatile
 22582  001C  281E               	goto	u424_21
 22583  001D  281F               	goto	u424_20
 22584  001E                     u424_21:	
 22585  001E  2820               	goto	i1l124
 22586  001F                     u424_20:	
 22587  001F  2853               	goto	i1l135
 22588  0020                     i1l124:	
 22589                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 22590                           
 22591  0020  1C19               	btfss	25,0	;volatile
 22592  0021  2823               	goto	u425_21
 22593  0022  2824               	goto	u425_20
 22594  0023                     u425_21:	
 22595  0023  282A               	goto	i1l126
 22596  0024                     u425_20:	
 22597  0024                     i1l5655:	
 22598                           
 22599                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_i2cISR();
 22600  0024  1C0F               	btfss	15,0	;volatile
 22601  0025  2827               	goto	u426_21
 22602  0026  2828               	goto	u426_20
 22603  0027                     u426_21:	
 22604  0027  282A               	goto	i1l126
 22605  0028                     u426_20:	
 22606  0028  2853               	goto	i1l135
 22607  0029                     i1l5657:	
 22608                           
 22609                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 22610  0029  2853               	goto	i1l135
 22611  002A                     i1l126:	
 22612                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TXIE == 1 && PIR3
      +                          bits.TXIF == 1)
 22613                           
 22614  002A  1E19               	btfss	25,4	;volatile
 22615  002B  282D               	goto	u427_21
 22616  002C  282E               	goto	u427_20
 22617  002D                     u427_21:	
 22618  002D  2839               	goto	i1l128
 22619  002E                     u427_20:	
 22620  002E                     i1l5659:	
 22621  002E  1E0F               	btfss	15,4	;volatile
 22622  002F  2831               	goto	u428_21
 22623  0030  2832               	goto	u428_20
 22624  0031                     u428_21:	
 22625  0031  2839               	goto	i1l128
 22626  0032                     u428_20:	
 22627  0032                     i1l5661:	
 22628                           
 22629                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART_TxDefaultInterruptHandler();
 22630  0032  0021               	movlb	1	; select bank1
 22631  0033  0868               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 22632  0034  008A               	movwf	10
 22633  0035  0867               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 22634  0036  000A               	callw
 22635  0037  3180               	pagesel	$
 22636                           
 22637                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 22638  0038  2853               	goto	i1l135
 22639  0039                     i1l128:	
 22640                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RCIE == 1 && PIR3
      +                          bits.RCIF == 1)
 22641                           
 22642  0039  1E99               	btfss	25,5	;volatile
 22643  003A  283C               	goto	u429_21
 22644  003B  283D               	goto	u429_20
 22645  003C                     u429_21:	
 22646  003C  2848               	goto	i1l130
 22647  003D                     u429_20:	
 22648  003D                     i1l5663:	
 22649  003D  1E8F               	btfss	15,5	;volatile
 22650  003E  2840               	goto	u430_21
 22651  003F  2841               	goto	u430_20
 22652  0040                     u430_21:	
 22653  0040  2848               	goto	i1l130
 22654  0041                     u430_20:	
 22655  0041                     i1l5665:	
 22656                           
 22657                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART_RxDefaultInterruptHandler();
 22658  0041  0021               	movlb	1	; select bank1
 22659  0042  0866               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 22660  0043  008A               	movwf	10
 22661  0044  0865               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 22662  0045  000A               	callw
 22663  0046  3180               	pagesel	$
 22664                           
 22665                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 22666  0047  2853               	goto	i1l135
 22667  0048                     i1l130:	
 22668                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 22669                           
 22670  0048  1C1A               	btfss	26,0	;volatile
 22671  0049  284B               	goto	u431_21
 22672  004A  284C               	goto	u431_20
 22673  004B                     u431_21:	
 22674  004B  2829               	goto	i1l5657
 22675  004C                     u431_20:	
 22676  004C                     i1l5667:	
 22677  004C  1C10               	btfss	16,0	;volatile
 22678  004D  284F               	goto	u432_21
 22679  004E  2850               	goto	u432_20
 22680  004F                     u432_21:	
 22681  004F  2829               	goto	i1l5657
 22682  0050                     u432_20:	
 22683  0050                     i1l5669:	
 22684                           
 22685                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR1_ISR();
 22686  0050  3195  252E  3180   	fcall	_TMR1_ISR
 22687  0053                     i1l135:	
 22688                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 22689                           
 22690  0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 22691  0054  0009               	retfie
 22692  0055                     __end_of_INTERRUPT_InterruptManager:	
 22693                           
 22694                           	psect	text100
 22695  09CC                     __ptext100:	
 22696 ;; *************** function _EUSART_Receive_ISR *****************
 22697 ;; Defined at:
 22698 ;;		line 225 in file "mcc_generated_files/eusart.c"
 22699 ;; Parameters:    Size  Location     Type
 22700 ;;		None
 22701 ;; Auto vars:     Size  Location     Type
 22702 ;;		None
 22703 ;; Return value:  Size  Location     Type
 22704 ;;                  1    wreg      void 
 22705 ;; Registers used:
 22706 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22707 ;; Tracked objects:
 22708 ;;		On entry : 0/0
 22709 ;;		On exit  : 0/0
 22710 ;;		Unchanged: 0/0
 22711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22716 ;;Total ram usage:        0 bytes
 22717 ;; Hardware stack levels used:    1
 22718 ;; Hardware stack levels required when called:    2
 22719 ;; This function calls:
 22720 ;;		Absolute function
 22721 ;;		_EUSART_DefaultErrorHandler
 22722 ;;		_EUSART_DefaultFramingErrorHandler
 22723 ;;		_EUSART_DefaultOverrunErrorHandler
 22724 ;;		_EUSART_RxDataHandler
 22725 ;; This function is called by:
 22726 ;;		_EUSART_Initialize
 22727 ;;		_countMsg
 22728 ;;		_INTERRUPT_InterruptManager
 22729 ;; This function uses a non-reentrant model
 22730 ;;
 22731                           
 22732                           
 22733                           ;psect for function _EUSART_Receive_ISR
 22734  09CC                     _EUSART_Receive_ISR:	
 22735  09CC                     i1l5105:	
 22736                           ;incstack = 0
 22737                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22738                           
 22739                           
 22740                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 22741  09CC  087B               	movf	_eusartRxHead,w	;volatile
 22742  09CD  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 22743  09CE  0086               	movwf	6
 22744  09CF  0187               	clrf	7
 22745  09D0  0181               	clrf	1
 22746  09D1                     i1l5107:	
 22747                           
 22748                           ;mcc_generated_files/eusart.c: 230:     if(RC1STAbits.FERR){
 22749  09D1  0022               	movlb	2	; select bank2
 22750  09D2  1D1D               	btfss	29,2	;volatile
 22751  09D3  29D5               	goto	u329_21
 22752  09D4  29D6               	goto	u329_20
 22753  09D5                     u329_21:	
 22754  09D5  29E1               	goto	i1l5113
 22755  09D6                     u329_20:	
 22756  09D6                     i1l5109:	
 22757                           
 22758                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 22759  09D6  087B               	movf	_eusartRxHead,w	;volatile
 22760  09D7  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 22761  09D8  0086               	movwf	6
 22762  09D9  0187               	clrf	7
 22763  09DA  1481               	bsf	1,1
 22764  09DB                     i1l5111:	
 22765                           
 22766                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 22767  09DB  0021               	movlb	1	; select bank1
 22768  09DC  0864               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 22769  09DD  008A               	movwf	10
 22770  09DE  0863               	movf	_EUSART_FramingErrorHandler^(0+128),w
 22771  09DF  000A               	callw
 22772  09E0  3189               	pagesel	$
 22773  09E1                     i1l5113:	
 22774                           
 22775                           ;mcc_generated_files/eusart.c: 235:     if(RC1STAbits.OERR){
 22776  09E1  0022               	movlb	2	; select bank2
 22777  09E2  1C9D               	btfss	29,1	;volatile
 22778  09E3  29E5               	goto	u330_21
 22779  09E4  29E6               	goto	u330_20
 22780  09E5                     u330_21:	
 22781  09E5  29F1               	goto	i1l5119
 22782  09E6                     u330_20:	
 22783  09E6                     i1l5115:	
 22784                           
 22785                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 22786  09E6  087B               	movf	_eusartRxHead,w	;volatile
 22787  09E7  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 22788  09E8  0086               	movwf	6
 22789  09E9  0187               	clrf	7
 22790  09EA  1501               	bsf	1,2
 22791  09EB                     i1l5117:	
 22792                           
 22793                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 22794  09EB  0021               	movlb	1	; select bank1
 22795  09EC  0862               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 22796  09ED  008A               	movwf	10
 22797  09EE  0861               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 22798  09EF  000A               	callw
 22799  09F0  3189               	pagesel	$
 22800  09F1                     i1l5119:	
 22801                           
 22802                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 22803  09F1  087B               	movf	_eusartRxHead,w	;volatile
 22804  09F2  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 22805  09F3  0086               	movwf	6
 22806  09F4  0187               	clrf	7
 22807  09F5  0801               	movf	1,w
 22808  09F6  1903               	btfsc	3,2
 22809  09F7  29F9               	goto	u331_21
 22810  09F8  29FA               	goto	u331_20
 22811  09F9                     u331_21:	
 22812  09F9  2A01               	goto	i1l5123
 22813  09FA                     u331_20:	
 22814  09FA                     i1l5121:	
 22815                           
 22816                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 22817  09FA  0021               	movlb	1	; select bank1
 22818  09FB  0860               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 22819  09FC  008A               	movwf	10
 22820  09FD  085F               	movf	_EUSART_ErrorHandler^(0+128),w
 22821  09FE  000A               	callw
 22822  09FF  3189               	pagesel	$
 22823                           
 22824                           ;mcc_generated_files/eusart.c: 242:     } else {
 22825  0A00  2A04               	goto	i1l833
 22826  0A01                     i1l5123:	
 22827                           
 22828                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 22829  0A01  3195  255E  3189   	fcall	_EUSART_RxDataHandler
 22830  0A04                     i1l833:	
 22831  0A04  0008               	return
 22832  0A05                     __end_of_EUSART_Receive_ISR:	
 22833                           
 22834                           	psect	text101
 22835  149C                     __ptext101:	
 22836 ;; *************** function _countMsg *****************
 22837 ;; Defined at:
 22838 ;;		line 241 in file "communications.c"
 22839 ;; Parameters:    Size  Location     Type
 22840 ;;		None
 22841 ;; Auto vars:     Size  Location     Type
 22842 ;;		None
 22843 ;; Return value:  Size  Location     Type
 22844 ;;                  1    wreg      void 
 22845 ;; Registers used:
 22846 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22847 ;; Tracked objects:
 22848 ;;		On entry : 0/0
 22849 ;;		On exit  : 0/0
 22850 ;;		Unchanged: 0/0
 22851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22854 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22855 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22856 ;;Total ram usage:        1 bytes
 22857 ;; Hardware stack levels used:    1
 22858 ;; Hardware stack levels required when called:    3
 22859 ;; This function calls:
 22860 ;;		_EUSART_LastByte
 22861 ;;		_EUSART_Receive_ISR
 22862 ;; This function is called by:
 22863 ;;		_main
 22864 ;;		_INTERRUPT_InterruptManager
 22865 ;; This function uses a non-reentrant model
 22866 ;;
 22867                           
 22868                           
 22869                           ;psect for function _countMsg
 22870  149C                     _countMsg:	
 22871  149C                     i1l5635:	
 22872                           ;incstack = 0
 22873                           ; Regs used in _countMsg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22874                           
 22875                           
 22876                           ;communications.c: 242:     EUSART_Receive_ISR();
 22877  149C  3189  21CC  3194   	fcall	_EUSART_Receive_ISR
 22878                           
 22879                           ;communications.c: 243:     if(EUSART_LastByte() == 0xFE) {
 22880  149F  3193  2304  3194   	fcall	_EUSART_LastByte
 22881  14A2  3AFE               	xorlw	254
 22882  14A3  1D03               	skipz
 22883  14A4  2CA6               	goto	u419_21
 22884  14A5  2CA7               	goto	u419_20
 22885  14A6                     u419_21:	
 22886  14A6  2CAD               	goto	i1l1741
 22887  14A7                     u419_20:	
 22888  14A7                     i1l5637:	
 22889                           
 22890                           ;communications.c: 244:         msgs++;
 22891  14A7  3001               	movlw	1
 22892  14A8  00F1               	movwf	??_countMsg
 22893  14A9  0871               	movf	??_countMsg,w
 22894  14AA  0021               	movlb	1	; select bank1
 22895  14AB  07CF               	addwf	_msgs^(0+128),f	;volatile
 22896  14AC                     i1l5639:	
 22897                           
 22898                           ;communications.c: 245:         __nop();
 22899  14AC  0000               	nop
 22900  14AD                     i1l1741:	
 22901  14AD  0008               	return
 22902  14AE                     __end_of_countMsg:	
 22903                           
 22904                           	psect	text102
 22905  12FA                     __ptext102:	
 22906 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 22907 ;; Defined at:
 22908 ;;		line 261 in file "mcc_generated_files/eusart.c"
 22909 ;; Parameters:    Size  Location     Type
 22910 ;;		None
 22911 ;; Auto vars:     Size  Location     Type
 22912 ;;		None
 22913 ;; Return value:  Size  Location     Type
 22914 ;;                  1    wreg      void 
 22915 ;; Registers used:
 22916 ;;		None
 22917 ;; Tracked objects:
 22918 ;;		On entry : 0/0
 22919 ;;		On exit  : 0/0
 22920 ;;		Unchanged: 0/0
 22921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22926 ;;Total ram usage:        0 bytes
 22927 ;; Hardware stack levels used:    1
 22928 ;; This function calls:
 22929 ;;		Nothing
 22930 ;; This function is called by:
 22931 ;;		_EUSART_Initialize
 22932 ;;		_EUSART_Receive_ISR
 22933 ;; This function uses a non-reentrant model
 22934 ;;
 22935                           
 22936                           
 22937                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 22938  12FA                     _EUSART_DefaultOverrunErrorHandler:	
 22939  12FA                     i1l4649:	
 22940                           ;incstack = 0
 22941                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 22942                           
 22943                           
 22944                           ;mcc_generated_files/eusart.c: 264:     RC1STAbits.CREN = 0;
 22945  12FA  0022               	movlb	2	; select bank2
 22946  12FB  121D               	bcf	29,4	;volatile
 22947                           
 22948                           ;mcc_generated_files/eusart.c: 265:     RC1STAbits.CREN = 1;
 22949  12FC  161D               	bsf	29,4	;volatile
 22950  12FD                     i1l843:	
 22951  12FD  0008               	return
 22952  12FE                     __end_of_EUSART_DefaultOverrunErrorHandler:	
 22953                           
 22954                           	psect	text103
 22955  0003                     __ptext103:	
 22956 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 22957 ;; Defined at:
 22958 ;;		line 259 in file "mcc_generated_files/eusart.c"
 22959 ;; Parameters:    Size  Location     Type
 22960 ;;		None
 22961 ;; Auto vars:     Size  Location     Type
 22962 ;;		None
 22963 ;; Return value:  Size  Location     Type
 22964 ;;                  1    wreg      void 
 22965 ;; Registers used:
 22966 ;;		None
 22967 ;; Tracked objects:
 22968 ;;		On entry : 0/0
 22969 ;;		On exit  : 0/0
 22970 ;;		Unchanged: 0/0
 22971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22976 ;;Total ram usage:        0 bytes
 22977 ;; Hardware stack levels used:    1
 22978 ;; This function calls:
 22979 ;;		Nothing
 22980 ;; This function is called by:
 22981 ;;		_EUSART_Initialize
 22982 ;;		_EUSART_Receive_ISR
 22983 ;; This function uses a non-reentrant model
 22984 ;;
 22985                           
 22986                           
 22987                           ;psect for function _EUSART_DefaultFramingErrorHandler
 22988  0003                     _EUSART_DefaultFramingErrorHandler:	
 22989  0003                     i1l840:	
 22990                           ;incstack = 0
 22991                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 22992                           
 22993  0003  0008               	return
 22994  0004                     __end_of_EUSART_DefaultFramingErrorHandler:	
 22995                           
 22996                           	psect	text104
 22997  12F6                     __ptext104:	
 22998 ;; *************** function _EUSART_DefaultErrorHandler *****************
 22999 ;; Defined at:
 23000 ;;		line 269 in file "mcc_generated_files/eusart.c"
 23001 ;; Parameters:    Size  Location     Type
 23002 ;;		None
 23003 ;; Auto vars:     Size  Location     Type
 23004 ;;		None
 23005 ;; Return value:  Size  Location     Type
 23006 ;;                  1    wreg      void 
 23007 ;; Registers used:
 23008 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23009 ;; Tracked objects:
 23010 ;;		On entry : 0/0
 23011 ;;		On exit  : 0/0
 23012 ;;		Unchanged: 0/0
 23013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23018 ;;Total ram usage:        0 bytes
 23019 ;; Hardware stack levels used:    1
 23020 ;; Hardware stack levels required when called:    1
 23021 ;; This function calls:
 23022 ;;		_EUSART_RxDataHandler
 23023 ;; This function is called by:
 23024 ;;		_EUSART_Initialize
 23025 ;;		_EUSART_Receive_ISR
 23026 ;; This function uses a non-reentrant model
 23027 ;;
 23028                           
 23029                           
 23030                           ;psect for function _EUSART_DefaultErrorHandler
 23031  12F6                     _EUSART_DefaultErrorHandler:	
 23032  12F6                     i1l4651:	
 23033                           ;incstack = 0
 23034                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 23035                           
 23036                           
 23037                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 23038  12F6  3195  255E  3192   	fcall	_EUSART_RxDataHandler
 23039  12F9                     i1l846:	
 23040  12F9  0008               	return
 23041  12FA                     __end_of_EUSART_DefaultErrorHandler:	
 23042                           
 23043                           	psect	text105
 23044  155E                     __ptext105:	
 23045 ;; *************** function _EUSART_RxDataHandler *****************
 23046 ;; Defined at:
 23047 ;;		line 249 in file "mcc_generated_files/eusart.c"
 23048 ;; Parameters:    Size  Location     Type
 23049 ;;		None
 23050 ;; Auto vars:     Size  Location     Type
 23051 ;;		None
 23052 ;; Return value:  Size  Location     Type
 23053 ;;                  1    wreg      void 
 23054 ;; Registers used:
 23055 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23056 ;; Tracked objects:
 23057 ;;		On entry : 0/0
 23058 ;;		On exit  : 0/0
 23059 ;;		Unchanged: 0/0
 23060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23063 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23064 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23065 ;;Total ram usage:        1 bytes
 23066 ;; Hardware stack levels used:    1
 23067 ;; This function calls:
 23068 ;;		Nothing
 23069 ;; This function is called by:
 23070 ;;		_EUSART_Receive_ISR
 23071 ;;		_EUSART_DefaultErrorHandler
 23072 ;; This function uses a non-reentrant model
 23073 ;;
 23074                           
 23075                           
 23076                           ;psect for function _EUSART_RxDataHandler
 23077  155E                     _EUSART_RxDataHandler:	
 23078  155E                     i1l4483:	
 23079                           ;incstack = 0
 23080                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 23081                           
 23082                           
 23083                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 23084  155E  0022               	movlb	2	; select bank2
 23085  155F  0819               	movf	25,w	;volatile
 23086  1560  00F0               	movwf	??_EUSART_RxDataHandler
 23087  1561  087B               	movf	_eusartRxHead,w
 23088  1562  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
 23089  1563  0086               	movwf	6
 23090  1564  0187               	clrf	7
 23091  1565  0870               	movf	??_EUSART_RxDataHandler,w
 23092  1566  0081               	movwf	1
 23093  1567                     i1l4485:	
 23094  1567  3001               	movlw	1
 23095  1568  00F0               	movwf	??_EUSART_RxDataHandler
 23096  1569  0870               	movf	??_EUSART_RxDataHandler,w
 23097  156A  07FB               	addwf	_eusartRxHead,f	;volatile
 23098  156B                     i1l4487:	
 23099                           
 23100                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 23101  156B  3008               	movlw	8
 23102  156C  027B               	subwf	_eusartRxHead,w	;volatile
 23103  156D  1C03               	skipc
 23104  156E  2D70               	goto	u255_21
 23105  156F  2D71               	goto	u255_20
 23106  1570                     u255_21:	
 23107  1570  2D72               	goto	i1l4491
 23108  1571                     u255_20:	
 23109  1571                     i1l4489:	
 23110                           
 23111                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 23112  1571  01FB               	clrf	_eusartRxHead	;volatile
 23113  1572                     i1l4491:	
 23114                           
 23115                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 23116  1572  3001               	movlw	1
 23117  1573  00F0               	movwf	??_EUSART_RxDataHandler
 23118  1574  0870               	movf	??_EUSART_RxDataHandler,w
 23119  1575  0021               	movlb	1	; select bank1
 23120  1576  07DC               	addwf	_eusartRxCount^(0+128),f	;volatile
 23121  1577                     i1l837:	
 23122  1577  0008               	return
 23123  1578                     __end_of_EUSART_RxDataHandler:	
 23124                           
 23125                           	psect	text106
 23126  1304                     __ptext106:	
 23127 ;; *************** function _EUSART_LastByte *****************
 23128 ;; Defined at:
 23129 ;;		line 293 in file "mcc_generated_files/eusart.c"
 23130 ;; Parameters:    Size  Location     Type
 23131 ;;		None
 23132 ;; Auto vars:     Size  Location     Type
 23133 ;;		None
 23134 ;; Return value:  Size  Location     Type
 23135 ;;                  1    wreg      unsigned char 
 23136 ;; Registers used:
 23137 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23138 ;; Tracked objects:
 23139 ;;		On entry : 0/0
 23140 ;;		On exit  : 0/0
 23141 ;;		Unchanged: 0/0
 23142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23147 ;;Total ram usage:        0 bytes
 23148 ;; Hardware stack levels used:    1
 23149 ;; This function calls:
 23150 ;;		Nothing
 23151 ;; This function is called by:
 23152 ;;		_countMsg
 23153 ;; This function uses a non-reentrant model
 23154 ;;
 23155                           
 23156                           
 23157                           ;psect for function _EUSART_LastByte
 23158  1304                     _EUSART_LastByte:	
 23159  1304                     i1l5125:	
 23160                           ;incstack = 0
 23161                           ; Regs used in _EUSART_LastByte: [wreg+fsr1l+fsr1h+status,2+status,0]
 23162                           
 23163  1304  087B               	movf	_eusartRxHead,w
 23164  1305  3EA7               	addlw	(low ((_eusartRxBuffer| 0+255)))& (0+255)
 23165  1306  0086               	movwf	6
 23166  1307  0187               	clrf	7
 23167  1308  0801               	movf	1,w
 23168  1309                     i1l864:	
 23169  1309  0008               	return
 23170  130A                     __end_of_EUSART_LastByte:	
 23171                           
 23172                           	psect	text107
 23173  152E                     __ptext107:	
 23174 ;; *************** function _TMR1_ISR *****************
 23175 ;; Defined at:
 23176 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 23177 ;; Parameters:    Size  Location     Type
 23178 ;;		None
 23179 ;; Auto vars:     Size  Location     Type
 23180 ;;		None
 23181 ;; Return value:  Size  Location     Type
 23182 ;;                  1    wreg      void 
 23183 ;; Registers used:
 23184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 23185 ;; Tracked objects:
 23186 ;;		On entry : 0/0
 23187 ;;		On exit  : 0/0
 23188 ;;		Unchanged: 0/0
 23189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23194 ;;Total ram usage:        0 bytes
 23195 ;; Hardware stack levels used:    1
 23196 ;; Hardware stack levels required when called:    1
 23197 ;; This function calls:
 23198 ;;		Absolute function
 23199 ;;		_Blink
 23200 ;;		_TMR1_DefaultInterruptHandler
 23201 ;;		_TMR1_WriteTimer
 23202 ;;		_Timer
 23203 ;; This function is called by:
 23204 ;;		_INTERRUPT_InterruptManager
 23205 ;; This function uses a non-reentrant model
 23206 ;;
 23207                           
 23208                           
 23209                           ;psect for function _TMR1_ISR
 23210  152E                     _TMR1_ISR:	
 23211  152E                     i1l5389:	
 23212                           ;incstack = 0
 23213                           ; Regs used in _TMR1_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 23214                           
 23215                           
 23216                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 23217  152E  002E               	movlb	14	; select bank14
 23218  152F  1010               	bcf	16,0	;volatile
 23219  1530                     i1l5391:	
 23220                           
 23221                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 23222  1530  0021               	movlb	1	; select bank1
 23223  1531  086E               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 23224  1532  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 23225  1533  086D               	movf	_timer1ReloadVal^(0+128),w	;volatile
 23226  1534  00F0               	movwf	TMR1_WriteTimer@timerVal
 23227  1535  3194  248B  3195   	fcall	_TMR1_WriteTimer
 23228  1538                     i1l5393:	
 23229                           
 23230                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 23231  1538  0021               	movlb	1	; select bank1
 23232  1539  086B               	movf	_TMR1_InterruptHandler^(0+128),w
 23233  153A  046C               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 23234  153B  1903               	btfsc	3,2
 23235  153C  2D3E               	goto	u372_21
 23236  153D  2D3F               	goto	u372_20
 23237  153E                     u372_21:	
 23238  153E  2D44               	goto	i1l58
 23239  153F                     u372_20:	
 23240  153F                     i1l5395:	
 23241                           
 23242                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 23243  153F  086C               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 23244  1540  008A               	movwf	10
 23245  1541  086B               	movf	_TMR1_InterruptHandler^(0+128),w
 23246  1542  000A               	callw
 23247  1543  3195               	pagesel	$
 23248  1544                     i1l58:	
 23249  1544  0008               	return
 23250  1545                     __end_of_TMR1_ISR:	
 23251                           
 23252                           	psect	text108
 23253  0C13                     __ptext108:	
 23254 ;; *************** function _Blink *****************
 23255 ;; Defined at:
 23256 ;;		line 112 in file "menus.c"
 23257 ;; Parameters:    Size  Location     Type
 23258 ;;		None
 23259 ;; Auto vars:     Size  Location     Type
 23260 ;;		None
 23261 ;; Return value:  Size  Location     Type
 23262 ;;                  1    wreg      void 
 23263 ;; Registers used:
 23264 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 23265 ;; Tracked objects:
 23266 ;;		On entry : 0/0
 23267 ;;		On exit  : 0/0
 23268 ;;		Unchanged: 0/0
 23269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23272 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23273 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23274 ;;Total ram usage:        2 bytes
 23275 ;; Hardware stack levels used:    1
 23276 ;; This function calls:
 23277 ;;		Nothing
 23278 ;; This function is called by:
 23279 ;;		_Menus
 23280 ;;		_TMR1_ISR
 23281 ;; This function uses a non-reentrant model
 23282 ;;
 23283                           
 23284                           
 23285                           ;psect for function _Blink
 23286  0C13                     _Blink:	
 23287  0C13                     i1l5235:	
 23288                           ;incstack = 0
 23289                           ; Regs used in _Blink: [wreg-fsr0h+status,2+status,0]
 23290                           
 23291                           
 23292                           ;menus.c: 113:     switch(mode){
 23293  0C13  2C44               	goto	i1l5247
 23294  0C14                     i1l5237:	
 23295  0C14  1003               	clrc
 23296  0C15  1F96               	btfss	22,7	;volatile
 23297  0C16  1403               	setc
 23298  0C17  1803               	btfsc	3,0
 23299  0C18  2C1A               	goto	u351_21
 23300  0C19  2C1D               	goto	u351_20
 23301  0C1A                     u351_21:	
 23302  0C1A  0020               	movlb	0	; select bank0
 23303  0C1B  1796               	bsf	22,7	;volatile
 23304  0C1C  2C1F               	goto	u352_24
 23305  0C1D                     u351_20:	
 23306  0C1D  0020               	movlb	0	; select bank0
 23307  0C1E  1396               	bcf	22,7	;volatile
 23308  0C1F                     u352_24:	
 23309  0C1F  2C5B               	goto	i1l1186
 23310  0C20                     i1l5239:	
 23311  0C20  1003               	clrc
 23312  0C21  1F16               	btfss	22,6	;volatile
 23313  0C22  1403               	setc
 23314  0C23  1803               	btfsc	3,0
 23315  0C24  2C26               	goto	u353_21
 23316  0C25  2C29               	goto	u353_20
 23317  0C26                     u353_21:	
 23318  0C26  0020               	movlb	0	; select bank0
 23319  0C27  1716               	bsf	22,6	;volatile
 23320  0C28  2C2B               	goto	u354_24
 23321  0C29                     u353_20:	
 23322  0C29  0020               	movlb	0	; select bank0
 23323  0C2A  1316               	bcf	22,6	;volatile
 23324  0C2B                     u354_24:	
 23325  0C2B  2C5B               	goto	i1l1186
 23326  0C2C                     i1l5241:	
 23327  0C2C  1003               	clrc
 23328  0C2D  1E96               	btfss	22,5	;volatile
 23329  0C2E  1403               	setc
 23330  0C2F  1803               	btfsc	3,0
 23331  0C30  2C32               	goto	u355_21
 23332  0C31  2C35               	goto	u355_20
 23333  0C32                     u355_21:	
 23334  0C32  0020               	movlb	0	; select bank0
 23335  0C33  1696               	bsf	22,5	;volatile
 23336  0C34  2C37               	goto	u356_24
 23337  0C35                     u355_20:	
 23338  0C35  0020               	movlb	0	; select bank0
 23339  0C36  1296               	bcf	22,5	;volatile
 23340  0C37                     u356_24:	
 23341  0C37  2C5B               	goto	i1l1186
 23342  0C38                     i1l5243:	
 23343  0C38  1003               	clrc
 23344  0C39  1E16               	btfss	22,4	;volatile
 23345  0C3A  1403               	setc
 23346  0C3B  1803               	btfsc	3,0
 23347  0C3C  2C3E               	goto	u357_21
 23348  0C3D  2C41               	goto	u357_20
 23349  0C3E                     u357_21:	
 23350  0C3E  0020               	movlb	0	; select bank0
 23351  0C3F  1616               	bsf	22,4	;volatile
 23352  0C40  2C43               	goto	u358_24
 23353  0C41                     u357_20:	
 23354  0C41  0020               	movlb	0	; select bank0
 23355  0C42  1216               	bcf	22,4	;volatile
 23356  0C43                     u358_24:	
 23357  0C43  2C5B               	goto	i1l1186
 23358  0C44                     i1l5247:	
 23359  0C44  0020               	movlb	0	; select bank0
 23360  0C45  086E               	movf	_mode,w	;volatile
 23361  0C46  00F0               	movwf	??_Blink
 23362  0C47  01F1               	clrf	??_Blink+1
 23363                           
 23364                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23365                           ; Switch size 1, requested type "simple"
 23366                           ; Number of cases is 1, Range of values is 0 to 0
 23367                           ; switch strategies available:
 23368                           ; Name         Instructions Cycles
 23369                           ; simple_byte            4     3 (average)
 23370                           ; direct_byte            8     6 (fixed)
 23371                           ; jumptable            260     6 (fixed)
 23372                           ;	Chosen strategy is simple_byte
 23373  0C48  0871               	movf	??_Blink+1,w
 23374  0C49  3A00               	xorlw	0	; case 0
 23375  0C4A  1903               	skipnz
 23376  0C4B  2C4D               	goto	i1l7253
 23377  0C4C  2C5B               	goto	i1l1186
 23378  0C4D                     i1l7253:	
 23379                           
 23380                           ; Switch size 1, requested type "simple"
 23381                           ; Number of cases is 4, Range of values is 0 to 3
 23382                           ; switch strategies available:
 23383                           ; Name         Instructions Cycles
 23384                           ; simple_byte           13     7 (average)
 23385                           ; direct_byte           14     6 (fixed)
 23386                           ; jumptable            260     6 (fixed)
 23387                           ;	Chosen strategy is simple_byte
 23388  0C4D  0870               	movf	??_Blink,w
 23389  0C4E  3A00               	xorlw	0	; case 0
 23390  0C4F  1903               	skipnz
 23391  0C50  2C14               	goto	i1l5237
 23392  0C51  3A01               	xorlw	1	; case 1
 23393  0C52  1903               	skipnz
 23394  0C53  2C20               	goto	i1l5239
 23395  0C54  3A03               	xorlw	3	; case 2
 23396  0C55  1903               	skipnz
 23397  0C56  2C2C               	goto	i1l5241
 23398  0C57  3A01               	xorlw	1	; case 3
 23399  0C58  1903               	skipnz
 23400  0C59  2C38               	goto	i1l5243
 23401  0C5A  2C5B               	goto	i1l1186
 23402  0C5B                     i1l1186:	
 23403  0C5B  0008               	return
 23404  0C5C                     __end_of_Blink:	
 23405                           
 23406                           	psect	text109
 23407  0002                     __ptext109:	
 23408 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 23409 ;; Defined at:
 23410 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 23411 ;; Parameters:    Size  Location     Type
 23412 ;;		None
 23413 ;; Auto vars:     Size  Location     Type
 23414 ;;		None
 23415 ;; Return value:  Size  Location     Type
 23416 ;;                  1    wreg      void 
 23417 ;; Registers used:
 23418 ;;		None
 23419 ;; Tracked objects:
 23420 ;;		On entry : 0/0
 23421 ;;		On exit  : 0/0
 23422 ;;		Unchanged: 0/0
 23423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23428 ;;Total ram usage:        0 bytes
 23429 ;; Hardware stack levels used:    1
 23430 ;; This function calls:
 23431 ;;		Nothing
 23432 ;; This function is called by:
 23433 ;;		_TMR1_Initialize
 23434 ;;		_TMR1_ISR
 23435 ;; This function uses a non-reentrant model
 23436 ;;
 23437                           
 23438                           
 23439                           ;psect for function _TMR1_DefaultInterruptHandler
 23440  0002                     _TMR1_DefaultInterruptHandler:	
 23441  0002                     i1l64:	
 23442                           ;incstack = 0
 23443                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 23444                           
 23445  0002  0008               	return
 23446  0003                     __end_of_TMR1_DefaultInterruptHandler:	
 23447                           
 23448                           	psect	text110
 23449  0B86                     __ptext110:	
 23450 ;; *************** function _Timer *****************
 23451 ;; Defined at:
 23452 ;;		line 49 in file "main.c"
 23453 ;; Parameters:    Size  Location     Type
 23454 ;;		None
 23455 ;; Auto vars:     Size  Location     Type
 23456 ;;		None
 23457 ;; Return value:  Size  Location     Type
 23458 ;;                  1    wreg      void 
 23459 ;; Registers used:
 23460 ;;		wreg, status,2, status,0
 23461 ;; Tracked objects:
 23462 ;;		On entry : 0/0
 23463 ;;		On exit  : 0/0
 23464 ;;		Unchanged: 0/0
 23465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23469 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23470 ;;Total ram usage:        1 bytes
 23471 ;; Hardware stack levels used:    1
 23472 ;; This function calls:
 23473 ;;		Nothing
 23474 ;; This function is called by:
 23475 ;;		_main
 23476 ;;		_TMR1_ISR
 23477 ;; This function uses a non-reentrant model
 23478 ;;
 23479                           
 23480                           
 23481                           ;psect for function _Timer
 23482  0B86                     _Timer:	
 23483  0B86                     i1l966:	
 23484                           ;incstack = 0
 23485                           ; Regs used in _Timer: [wreg+status,2+status,0]
 23486                           ;main.c: 50:     do { LATAbits.LATA7 = ~LATAbits.LATA7; } while(0);
 23487                           
 23488  0B86                     i1l5129:	
 23489  0B86  1003               	clrc
 23490  0B87  0020               	movlb	0	; select bank0
 23491  0B88  1F96               	btfss	22,7	;volatile
 23492  0B89  1403               	setc
 23493  0B8A  1803               	btfsc	3,0
 23494  0B8B  2B8D               	goto	u332_21
 23495  0B8C  2B90               	goto	u332_20
 23496  0B8D                     u332_21:	
 23497  0B8D  0020               	movlb	0	; select bank0
 23498  0B8E  1796               	bsf	22,7	;volatile
 23499  0B8F  2B92               	goto	u333_24
 23500  0B90                     u332_20:	
 23501  0B90  0020               	movlb	0	; select bank0
 23502  0B91  1396               	bcf	22,7	;volatile
 23503  0B92                     u333_24:	
 23504  0B92                     i1l5131:	
 23505                           
 23506                           ;main.c: 52:     if(pmon != 0)
 23507  0B92  086D               	movf	_pmon,w
 23508  0B93  1903               	btfsc	3,2
 23509  0B94  2B96               	goto	u334_21
 23510  0B95  2B97               	goto	u334_20
 23511  0B96                     u334_21:	
 23512  0B96  2B9C               	goto	i1l5135
 23513  0B97                     u334_20:	
 23514  0B97                     i1l5133:	
 23515                           
 23516                           ;main.c: 53:         timer++;
 23517  0B97  3001               	movlw	1
 23518  0B98  00F0               	movwf	??_Timer
 23519  0B99  0870               	movf	??_Timer,w
 23520  0B9A  0021               	movlb	1	; select bank1
 23521  0B9B  07DA               	addwf	_timer^(0+128),f	;volatile
 23522  0B9C                     i1l5135:	
 23523                           
 23524                           ;main.c: 55:     if(clks < 59)
 23525  0B9C  303B               	movlw	59
 23526  0B9D  0020               	movlb	0	; select bank0
 23527  0B9E  0268               	subwf	_clks,w	;volatile
 23528  0B9F  1803               	skipnc
 23529  0BA0  2BA2               	goto	u335_21
 23530  0BA1  2BA3               	goto	u335_20
 23531  0BA2                     u335_21:	
 23532  0BA2  2BA8               	goto	i1l5139
 23533  0BA3                     u335_20:	
 23534  0BA3                     i1l5137:	
 23535                           
 23536                           ;main.c: 56:         clks++;
 23537  0BA3  3001               	movlw	1
 23538  0BA4  00F0               	movwf	??_Timer
 23539  0BA5  0870               	movf	??_Timer,w
 23540  0BA6  07E8               	addwf	_clks,f	;volatile
 23541  0BA7  2BC1               	goto	i1l5153
 23542  0BA8                     i1l5139:	
 23543                           
 23544                           ;main.c: 58:         clks = 0;
 23545  0BA8  01E8               	clrf	_clks	;volatile
 23546  0BA9                     i1l5141:	
 23547                           
 23548                           ;main.c: 59:         if(clkm < 59)
 23549  0BA9  303B               	movlw	59
 23550  0BAA  0269               	subwf	_clkm,w	;volatile
 23551  0BAB  1803               	skipnc
 23552  0BAC  2BAE               	goto	u336_21
 23553  0BAD  2BAF               	goto	u336_20
 23554  0BAE                     u336_21:	
 23555  0BAE  2BB4               	goto	i1l5145
 23556  0BAF                     u336_20:	
 23557  0BAF                     i1l5143:	
 23558                           
 23559                           ;main.c: 60:             clkm++;
 23560  0BAF  3001               	movlw	1
 23561  0BB0  00F0               	movwf	??_Timer
 23562  0BB1  0870               	movf	??_Timer,w
 23563  0BB2  07E9               	addwf	_clkm,f	;volatile
 23564  0BB3  2BC1               	goto	i1l5153
 23565  0BB4                     i1l5145:	
 23566                           
 23567                           ;main.c: 62:             clkm = 0;
 23568  0BB4  01E9               	clrf	_clkm	;volatile
 23569  0BB5                     i1l5147:	
 23570                           
 23571                           ;main.c: 63:             if(clkh < 23)
 23572  0BB5  3017               	movlw	23
 23573  0BB6  026A               	subwf	_clkh,w	;volatile
 23574  0BB7  1803               	skipnc
 23575  0BB8  2BBA               	goto	u337_21
 23576  0BB9  2BBB               	goto	u337_20
 23577  0BBA                     u337_21:	
 23578  0BBA  2BC0               	goto	i1l5151
 23579  0BBB                     u337_20:	
 23580  0BBB                     i1l5149:	
 23581                           
 23582                           ;main.c: 64:                 clkh++;
 23583  0BBB  3001               	movlw	1
 23584  0BBC  00F0               	movwf	??_Timer
 23585  0BBD  0870               	movf	??_Timer,w
 23586  0BBE  07EA               	addwf	_clkh,f	;volatile
 23587  0BBF  2BC1               	goto	i1l5153
 23588  0BC0                     i1l5151:	
 23589                           
 23590                           ;main.c: 66:                 clkh = 0;
 23591  0BC0  01EA               	clrf	_clkh	;volatile
 23592  0BC1                     i1l5153:	
 23593                           
 23594                           ;main.c: 70:     if(clks == 0){
 23595  0BC1  0868               	movf	_clks,w	;volatile
 23596  0BC2  1D03               	btfss	3,2
 23597  0BC3  2BC5               	goto	u338_21
 23598  0BC4  2BC6               	goto	u338_20
 23599  0BC5                     u338_21:	
 23600  0BC5  2BCB               	goto	i1l976
 23601  0BC6                     u338_20:	
 23602  0BC6                     i1l5155:	
 23603                           
 23604                           ;main.c: 71:         flag_timer = 1;
 23605  0BC6  3001               	movlw	1
 23606  0BC7  00F0               	movwf	??_Timer
 23607  0BC8  0870               	movf	??_Timer,w
 23608  0BC9  0021               	movlb	1	; select bank1
 23609  0BCA  00D8               	movwf	_flag_timer^(0+128)	;volatile
 23610  0BCB                     i1l976:	
 23611  0BCB  0008               	return
 23612  0BCC                     __end_of_Timer:	
 23613                           
 23614                           	psect	text111
 23615  148B                     __ptext111:	
 23616 ;; *************** function _TMR1_WriteTimer *****************
 23617 ;; Defined at:
 23618 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 23619 ;; Parameters:    Size  Location     Type
 23620 ;;  timerVal        2    0[COMMON] unsigned short 
 23621 ;; Auto vars:     Size  Location     Type
 23622 ;;		None
 23623 ;; Return value:  Size  Location     Type
 23624 ;;                  1    wreg      void 
 23625 ;; Registers used:
 23626 ;;		wreg, status,2
 23627 ;; Tracked objects:
 23628 ;;		On entry : 0/0
 23629 ;;		On exit  : 0/0
 23630 ;;		Unchanged: 0/0
 23631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23636 ;;Total ram usage:        2 bytes
 23637 ;; Hardware stack levels used:    1
 23638 ;; This function calls:
 23639 ;;		Nothing
 23640 ;; This function is called by:
 23641 ;;		_TMR1_ISR
 23642 ;;		_TMR1_Reload
 23643 ;; This function uses a non-reentrant model
 23644 ;;
 23645                           
 23646                           
 23647                           ;psect for function _TMR1_WriteTimer
 23648  148B                     _TMR1_WriteTimer:	
 23649  148B                     i1l4919:	
 23650                           ;incstack = 0
 23651                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 23652                           
 23653                           
 23654                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 23655  148B  0024               	movlb	4	; select bank4
 23656  148C  1D0E               	btfss	14,2	;volatile
 23657  148D  2C8F               	goto	u321_21
 23658  148E  2C90               	goto	u321_20
 23659  148F                     u321_21:	
 23660  148F  2C97               	goto	i1l4929
 23661  1490                     u321_20:	
 23662  1490                     i1l4921:	
 23663                           
 23664                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 23665  1490  100E               	bcf	14,0	;volatile
 23666  1491                     i1l4923:	
 23667                           
 23668                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 23669  1491  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 23670  1492  008D               	movwf	13	;volatile
 23671  1493                     i1l4925:	
 23672                           
 23673                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 23674  1493  0870               	movf	TMR1_WriteTimer@timerVal,w
 23675  1494  008C               	movwf	12	;volatile
 23676  1495                     i1l4927:	
 23677                           
 23678                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 23679  1495  140E               	bsf	14,0	;volatile
 23680                           
 23681                           ;mcc_generated_files/tmr1.c: 140:     }
 23682  1496  2C9B               	goto	i1l45
 23683  1497                     i1l4929:	
 23684                           
 23685                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 23686  1497  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 23687  1498  008D               	movwf	13	;volatile
 23688  1499                     i1l4931:	
 23689                           
 23690                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 23691  1499  0870               	movf	TMR1_WriteTimer@timerVal,w
 23692  149A  008C               	movwf	12	;volatile
 23693  149B                     i1l45:	
 23694  149B  0008               	return
 23695  149C                     __end_of_TMR1_WriteTimer:	
 23696                           
 23697                           	psect	text112
 23698  12FE                     __ptext112:	
 23699 ;; *************** function _INT_ISR *****************
 23700 ;; Defined at:
 23701 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 23702 ;; Parameters:    Size  Location     Type
 23703 ;;		None
 23704 ;; Auto vars:     Size  Location     Type
 23705 ;;		None
 23706 ;; Return value:  Size  Location     Type
 23707 ;;                  1    wreg      void 
 23708 ;; Registers used:
 23709 ;;		wreg, status,2, status,0, pclath, cstack
 23710 ;; Tracked objects:
 23711 ;;		On entry : 0/0
 23712 ;;		On exit  : 0/0
 23713 ;;		Unchanged: 0/0
 23714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23719 ;;Total ram usage:        0 bytes
 23720 ;; Hardware stack levels used:    1
 23721 ;; Hardware stack levels required when called:    4
 23722 ;; This function calls:
 23723 ;;		_INT_CallBack
 23724 ;; This function is called by:
 23725 ;;		_INTERRUPT_InterruptManager
 23726 ;; This function uses a non-reentrant model
 23727 ;;
 23728                           
 23729                           
 23730                           ;psect for function _INT_ISR
 23731  12FE                     _INT_ISR:	
 23732  12FE                     i1l5397:	
 23733                           ;incstack = 0
 23734                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 23735                           
 23736                           
 23737                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 23738  12FE  002E               	movlb	14	; select bank14
 23739  12FF  100C               	bcf	12,0	;volatile
 23740  1300                     i1l5399:	
 23741                           
 23742                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 23743  1300  3193  23EB  3192   	fcall	_INT_CallBack
 23744  1303                     i1l77:	
 23745  1303  0008               	return
 23746  1304                     __end_of_INT_ISR:	
 23747                           
 23748                           	psect	text113
 23749  13EB                     __ptext113:	
 23750 ;; *************** function _INT_CallBack *****************
 23751 ;; Defined at:
 23752 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 23753 ;; Parameters:    Size  Location     Type
 23754 ;;		None
 23755 ;; Auto vars:     Size  Location     Type
 23756 ;;		None
 23757 ;; Return value:  Size  Location     Type
 23758 ;;                  1    wreg      void 
 23759 ;; Registers used:
 23760 ;;		wreg, status,2, status,0, pclath, cstack
 23761 ;; Tracked objects:
 23762 ;;		On entry : 0/0
 23763 ;;		On exit  : 0/0
 23764 ;;		Unchanged: 0/0
 23765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23770 ;;Total ram usage:        0 bytes
 23771 ;; Hardware stack levels used:    1
 23772 ;; Hardware stack levels required when called:    3
 23773 ;; This function calls:
 23774 ;;		Absolute function
 23775 ;;		_INT_DefaultInterruptHandler
 23776 ;;		_Switch1
 23777 ;; This function is called by:
 23778 ;;		_INT_ISR
 23779 ;; This function uses a non-reentrant model
 23780 ;;
 23781                           
 23782                           
 23783                           ;psect for function _INT_CallBack
 23784  13EB                     _INT_CallBack:	
 23785  13EB                     i1l4933:	
 23786                           ;incstack = 0
 23787                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 23788                           
 23789                           
 23790                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 23791  13EB  0021               	movlb	1	; select bank1
 23792  13EC  0869               	movf	_INT_InterruptHandler^(0+128),w
 23793  13ED  046A               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 23794  13EE  1903               	btfsc	3,2
 23795  13EF  2BF1               	goto	u322_21
 23796  13F0  2BF2               	goto	u322_20
 23797  13F1                     u322_21:	
 23798  13F1  2BF7               	goto	i1l81
 23799  13F2                     u322_20:	
 23800  13F2                     i1l4935:	
 23801                           
 23802                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 23803  13F2  086A               	movf	(_INT_InterruptHandler+1)^(0+128),w
 23804  13F3  008A               	movwf	10
 23805  13F4  0869               	movf	_INT_InterruptHandler^(0+128),w
 23806  13F5  000A               	callw
 23807  13F6  3193               	pagesel	$
 23808  13F7                     i1l81:	
 23809  13F7  0008               	return
 23810  13F8                     __end_of_INT_CallBack:	
 23811                           
 23812                           	psect	text114
 23813  12EF                     __ptext114:	
 23814 ;; *************** function _INT_DefaultInterruptHandler *****************
 23815 ;; Defined at:
 23816 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 23817 ;; Parameters:    Size  Location     Type
 23818 ;;		None
 23819 ;; Auto vars:     Size  Location     Type
 23820 ;;		None
 23821 ;; Return value:  Size  Location     Type
 23822 ;;                  1    wreg      void 
 23823 ;; Registers used:
 23824 ;;		None
 23825 ;; Tracked objects:
 23826 ;;		On entry : 0/0
 23827 ;;		On exit  : 0/0
 23828 ;;		Unchanged: 0/0
 23829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23834 ;;Total ram usage:        0 bytes
 23835 ;; Hardware stack levels used:    1
 23836 ;; This function calls:
 23837 ;;		Nothing
 23838 ;; This function is called by:
 23839 ;;		_EXT_INT_Initialize
 23840 ;;		_INT_CallBack
 23841 ;; This function uses a non-reentrant model
 23842 ;;
 23843                           
 23844                           
 23845                           ;psect for function _INT_DefaultInterruptHandler
 23846  12EF                     _INT_DefaultInterruptHandler:	
 23847  12EF                     i1l87:	
 23848                           ;incstack = 0
 23849                           ; Regs used in _INT_DefaultInterruptHandler: []
 23850                           
 23851  12EF  0008               	return
 23852  12F0                     __end_of_INT_DefaultInterruptHandler:	
 23853                           
 23854                           	psect	text115
 23855  142F                     __ptext115:	
 23856 ;; *************** function _Switch1 *****************
 23857 ;; Defined at:
 23858 ;;		line 81 in file "main.c"
 23859 ;; Parameters:    Size  Location     Type
 23860 ;;		None
 23861 ;; Auto vars:     Size  Location     Type
 23862 ;;		None
 23863 ;; Return value:  Size  Location     Type
 23864 ;;                  1    wreg      void 
 23865 ;; Registers used:
 23866 ;;		wreg, status,2, status,0, pclath, cstack
 23867 ;; Tracked objects:
 23868 ;;		On entry : 0/0
 23869 ;;		On exit  : 0/0
 23870 ;;		Unchanged: 0/0
 23871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23874 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23876 ;;Total ram usage:        1 bytes
 23877 ;; Hardware stack levels used:    1
 23878 ;; Hardware stack levels required when called:    2
 23879 ;; This function calls:
 23880 ;;		i1_clear_alarm
 23881 ;; This function is called by:
 23882 ;;		_main
 23883 ;;		_INT_CallBack
 23884 ;; This function uses a non-reentrant model
 23885 ;;
 23886                           
 23887                           
 23888                           ;psect for function _Switch1
 23889  142F                     _Switch1:	
 23890  142F                     i1l4653:	
 23891                           ;incstack = 0
 23892                           ; Regs used in _Switch1: [wreg+status,2+status,0+pclath+cstack]
 23893                           
 23894                           
 23895                           ;main.c: 82:     if(alarm)
 23896  142F  0021               	movlb	1	; select bank1
 23897  1430  0850               	movf	_alarm^(0+128),w
 23898  1431  1903               	btfsc	3,2
 23899  1432  2C34               	goto	u278_21
 23900  1433  2C35               	goto	u278_20
 23901  1434                     u278_21:	
 23902  1434  2C39               	goto	i1l4657
 23903  1435                     u278_20:	
 23904  1435                     i1l4655:	
 23905                           
 23906                           ;main.c: 83:         clear_alarm();
 23907  1435  3193  2340  3194   	fcall	i1_clear_alarm
 23908  1438  2C3D               	goto	i1l986
 23909  1439                     i1l4657:	
 23910                           
 23911                           ;main.c: 85:         switch1 = 1;
 23912  1439  3001               	movlw	1
 23913  143A  00F0               	movwf	??_Switch1
 23914  143B  0870               	movf	??_Switch1,w
 23915  143C  00D9               	movwf	_switch1^(0+128)	;volatile
 23916  143D                     i1l986:	
 23917  143D  0008               	return
 23918  143E                     __end_of_Switch1:	
 23919                           
 23920                           	psect	text116
 23921  1340                     __ptext116:	
 23922 ;; *************** function i1_clear_alarm *****************
 23923 ;; Defined at:
 23924 ;;		line 75 in file "main.c"
 23925 ;; Parameters:    Size  Location     Type
 23926 ;;		None
 23927 ;; Auto vars:     Size  Location     Type
 23928 ;;		None
 23929 ;; Return value:  Size  Location     Type
 23930 ;;                  1    wreg      void 
 23931 ;; Registers used:
 23932 ;;		wreg, status,2, status,0, pclath, cstack
 23933 ;; Tracked objects:
 23934 ;;		On entry : 0/0
 23935 ;;		On exit  : 0/0
 23936 ;;		Unchanged: 0/0
 23937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23942 ;;Total ram usage:        0 bytes
 23943 ;; Hardware stack levels used:    1
 23944 ;; Hardware stack levels required when called:    1
 23945 ;; This function calls:
 23946 ;;		i1_PWM_Output_D4_Disable
 23947 ;; This function is called by:
 23948 ;;		_Switch1
 23949 ;; This function uses a non-reentrant model
 23950 ;;
 23951                           
 23952                           
 23953                           ;psect for function i1_clear_alarm
 23954  1340                     i1_clear_alarm:	
 23955  1340                     i1l4625:	
 23956                           ;incstack = 0
 23957                           ; Regs used in i1_clear_alarm: [wreg+status,2+status,0+pclath+cstack]
 23958                           
 23959                           
 23960                           ;main.c: 76:     PWM_Output_D4_Disable();
 23961  1340  3194  2420  3193   	fcall	i1_PWM_Output_D4_Disable
 23962  1343                     i1l4627:	
 23963  1343  0020               	movlb	0	; select bank0
 23964  1344  1316               	bcf	22,6	;volatile
 23965  1345                     i1l4629:	
 23966                           
 23967                           ;main.c: 78:     alarm = 0;
 23968  1345  0021               	movlb	1	; select bank1
 23969  1346  01D0               	clrf	_alarm^(0+128)
 23970  1347                     i1l981:	
 23971  1347  0008               	return
 23972  1348                     __end_ofi1_clear_alarm:	
 23973                           
 23974                           	psect	text117
 23975  1420                     __ptext117:	
 23976 ;; *************** function i1_PWM_Output_D4_Disable *****************
 23977 ;; Defined at:
 23978 ;;		line 61 in file "utils.c"
 23979 ;; Parameters:    Size  Location     Type
 23980 ;;		None
 23981 ;; Auto vars:     Size  Location     Type
 23982 ;;		None
 23983 ;; Return value:  Size  Location     Type
 23984 ;;                  1    wreg      void 
 23985 ;; Registers used:
 23986 ;;		wreg, status,2
 23987 ;; Tracked objects:
 23988 ;;		On entry : 0/0
 23989 ;;		On exit  : 0/0
 23990 ;;		Unchanged: 0/0
 23991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23996 ;;Total ram usage:        0 bytes
 23997 ;; Hardware stack levels used:    1
 23998 ;; This function calls:
 23999 ;;		Nothing
 24000 ;; This function is called by:
 24001 ;;		i1_clear_alarm
 24002 ;; This function uses a non-reentrant model
 24003 ;;
 24004                           
 24005                           
 24006                           ;psect for function i1_PWM_Output_D4_Disable
 24007  1420                     i1_PWM_Output_D4_Disable:	
 24008  1420                     i1l4471:	
 24009                           ;incstack = 0
 24010                           ; Regs used in i1_PWM_Output_D4_Disable: [wreg+status,2]
 24011                           
 24012                           
 24013                           ;utils.c: 62:     PPSLOCK = 0x55;
 24014  1420  3055               	movlw	85
 24015  1421  003D               	movlb	29	; select bank29
 24016  1422  008F               	movwf	15	;volsfr
 24017                           
 24018                           ;utils.c: 63:     PPSLOCK = 0xAA;
 24019  1423  30AA               	movlw	170
 24020  1424  008F               	movwf	15	;volsfr
 24021  1425                     i1l4473:	
 24022                           
 24023                           ;utils.c: 64:     PPSLOCKbits.PPSLOCKED = 0x00;
 24024  1425  100F               	bcf	15,0	;volsfr
 24025  1426                     i1l4475:	
 24026                           
 24027                           ;utils.c: 66:     RA6PPS = 0x00;
 24028  1426  003E               	movlb	30	; select bank30
 24029  1427  0196               	clrf	22	;volatile
 24030  1428                     i1l4477:	
 24031                           
 24032                           ;utils.c: 67:     PPSLOCK = 0x55;
 24033  1428  3055               	movlw	85
 24034  1429  003D               	movlb	29	; select bank29
 24035  142A  008F               	movwf	15	;volsfr
 24036  142B                     i1l4479:	
 24037                           
 24038                           ;utils.c: 68:     PPSLOCK = 0xAA;
 24039  142B  30AA               	movlw	170
 24040  142C  008F               	movwf	15	;volsfr
 24041  142D                     i1l4481:	
 24042                           
 24043                           ;utils.c: 69:     PPSLOCKbits.PPSLOCKED = 0x01;
 24044  142D  140F               	bsf	15,0	;volsfr
 24045  142E                     i1l1352:	
 24046  142E  0008               	return
 24047  142F                     __end_ofi1_PWM_Output_D4_Disable:	
 24048                           
 24049                           	psect	text118
 24050  16A1                     __ptext118:	
 24051 ;; *************** function _EUSART_Transmit_ISR *****************
 24052 ;; Defined at:
 24053 ;;		line 206 in file "mcc_generated_files/eusart.c"
 24054 ;; Parameters:    Size  Location     Type
 24055 ;;		None
 24056 ;; Auto vars:     Size  Location     Type
 24057 ;;		None
 24058 ;; Return value:  Size  Location     Type
 24059 ;;                  1    wreg      void 
 24060 ;; Registers used:
 24061 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24062 ;; Tracked objects:
 24063 ;;		On entry : 0/0
 24064 ;;		On exit  : 0/0
 24065 ;;		Unchanged: 0/0
 24066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24069 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24070 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24071 ;;Total ram usage:        1 bytes
 24072 ;; Hardware stack levels used:    1
 24073 ;; This function calls:
 24074 ;;		Nothing
 24075 ;; This function is called by:
 24076 ;;		_EUSART_Initialize
 24077 ;;		_INTERRUPT_InterruptManager
 24078 ;; This function uses a non-reentrant model
 24079 ;;
 24080                           
 24081                           
 24082                           ;psect for function _EUSART_Transmit_ISR
 24083  16A1                     _EUSART_Transmit_ISR:	
 24084  16A1                     i1l5431:	
 24085                           ;incstack = 0
 24086                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 24087                           
 24088                           
 24089                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 24090  16A1  3008               	movlw	8
 24091  16A2  0021               	movlb	1	; select bank1
 24092  16A3  026F               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 24093  16A4  1803               	skipnc
 24094  16A5  2EA7               	goto	u374_21
 24095  16A6  2EA8               	goto	u374_20
 24096  16A7                     u374_21:	
 24097  16A7  2EC0               	goto	i1l823
 24098  16A8                     u374_20:	
 24099  16A8                     i1l5433:	
 24100                           
 24101                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
 24102  16A8  085D               	movf	_eusartTxTail^(0+128),w
 24103  16A9  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
 24104  16AA  0086               	movwf	6
 24105  16AB  0187               	clrf	7
 24106  16AC  0801               	movf	1,w
 24107  16AD  0022               	movlb	2	; select bank2
 24108  16AE  009A               	movwf	26	;volatile
 24109  16AF                     i1l5435:	
 24110  16AF  3001               	movlw	1
 24111  16B0  00F0               	movwf	??_EUSART_Transmit_ISR
 24112  16B1  0870               	movf	??_EUSART_Transmit_ISR,w
 24113  16B2  0021               	movlb	1	; select bank1
 24114  16B3  07DD               	addwf	_eusartTxTail^(0+128),f	;volatile
 24115  16B4                     i1l5437:	
 24116                           
 24117                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 24118  16B4  3008               	movlw	8
 24119  16B5  025D               	subwf	_eusartTxTail^(0+128),w	;volatile
 24120  16B6  1C03               	skipc
 24121  16B7  2EB9               	goto	u375_21
 24122  16B8  2EBA               	goto	u375_20
 24123  16B9                     u375_21:	
 24124  16B9  2EBB               	goto	i1l5441
 24125  16BA                     u375_20:	
 24126  16BA                     i1l5439:	
 24127                           
 24128                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 24129  16BA  01DD               	clrf	_eusartTxTail^(0+128)	;volatile
 24130  16BB                     i1l5441:	
 24131                           
 24132                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 24133  16BB  3001               	movlw	1
 24134  16BC  00F0               	movwf	??_EUSART_Transmit_ISR
 24135  16BD  0870               	movf	??_EUSART_Transmit_ISR,w
 24136  16BE  07EF               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 24137                           
 24138                           ;mcc_generated_files/eusart.c: 218:     }
 24139  16BF  2EC2               	goto	i1l826
 24140  16C0                     i1l823:	
 24141                           ;mcc_generated_files/eusart.c: 219:     else
 24142                           
 24143                           
 24144                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          3bits.TXIE = 0;
 24145  16C0  002E               	movlb	14	; select bank14
 24146  16C1  1219               	bcf	25,4	;volatile
 24147  16C2                     i1l826:	
 24148  16C2  0008               	return
 24149  16C3                     __end_of_EUSART_Transmit_ISR:	
 24150  007E                     btemp	set	126	;btemp
 24151  007E                     int$flags	set	126
 24152  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         95
    Persistent  49
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     72      80
    BANK1            80      0      80
    BANK2            80      2      24
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 8
		 -> send_confirmation@msg(BANK0[3]), notification_memory@msg(BANK0[6]), registers_info@msg(BANK0[6]), read_alarms@msg(BANK0[5]), 
		 -> read_param@msg(BANK0[4]), read_temp_lum@msg(BANK0[4]), read_clock@msg(BANK0[5]), NULL(NULL[0]), 
		 -> read_msgs@aux(BANK0[8]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 8
		 -> send_confirmation@msg(BANK0[3]), notification_memory@msg(BANK0[6]), registers_info@msg(BANK0[6]), read_alarms@msg(BANK0[5]), 
		 -> read_param@msg(BANK0[4]), read_temp_lum@msg(BANK0[4]), read_clock@msg(BANK0[5]), NULL(NULL[0]), 
		 -> read_msgs@aux(BANK0[8]), 

    send_msg@msg	PTR unsigned char  size(1) Largest target is 6
		 -> send_confirmation@msg(BANK0[3]), notification_memory@msg(BANK0[6]), registers_info@msg(BANK0[6]), read_alarms@msg(BANK0[5]), 
		 -> read_param@msg(BANK0[4]), read_temp_lum@msg(BANK0[4]), read_clock@msg(BANK0[5]), 

    transfer_registers_i@data	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), read_msgs@aux(BANK0[8]), 

    transfer_n_registers@data	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), read_msgs@aux(BANK0[8]), 

    switch_alarm@data	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), read_msgs@aux(BANK0[8]), 

    define_alarm@data	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), read_msgs@aux(BANK0[8]), 

    modify_time_alarm@data	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), read_msgs@aux(BANK0[8]), 

    modify_pmon@data	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), read_msgs@aux(BANK0[8]), 

    set_clock@data	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), read_msgs@aux(BANK0[8]), 

    interpret_message@data	PTR unsigned char  size(1) Largest target is 8
		 -> NULL(NULL[0]), read_msgs@aux(BANK0[8]), 

    interpret_message@msg	PTR unsigned char  size(1) Largest target is 8
		 -> read_msgs@aux(BANK0[8]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> countMsg(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> countMsg(), EUSART_Receive_ISR(), Absolute function(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Switch1(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Switch1(), INT_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Blink(), Timer(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Blink(), Timer(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->___wmul
    _main->_notification_memory
    _ring_buffer_write->___lwdiv
    _ring_buffer_write->___wmul
    _interpret_message->_registers_info
    _interpret_message->_send_confirmation
    _transfer_registers_i->_send_confirmation
    _transfer_n_registers->_send_confirmation
    _read_buffer->___wmul
    _putch->_EUSART_Write
    _switch_alarm->_send_confirmation
    _set_clock->_send_confirmation
    _registers_info->_send_msg
    _read_temp_lum->_send_msg
    _read_param->_send_msg
    _read_clock->_send_msg
    _read_alarms->_send_msg
    _modify_time_alarm->_send_confirmation
    _modify_pmon->_send_confirmation
    _define_alarm->_send_confirmation
    _send_confirmation->_send_msg
    _notification_memory->_send_msg
    _send_msg->_strlen
    _ring_buffer_laped->_DATAEE_ReadByte
    _read_iwrt->_DATAEE_ReadByte
    _used->_DATAEE_ReadByte
    _read_tala->_DATAEE_ReadByte
    _read_pmon->_DATAEE_ReadByte
    _read_nreg->_DATAEE_ReadByte
    _read_clkm->_DATAEE_ReadByte
    _read_clkh->_DATAEE_ReadByte
    _read_alat->_DATAEE_ReadByte
    _read_alal->_DATAEE_ReadByte
    _read_alaf->_DATAEE_ReadByte
    _check_corruption->_get_check_up_value
    _get_check_up_value->_DATAEE_ReadByte
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _ReadTemp->_WriteI2C
    _ReadIllum->_ADCC_GetSingleConversion
    _DATAEE_WriteByte->___lwdiv
    _Update->_ShowOnLEDs
    _Alarm->___wmul
    ___wmul->_DATAEE_ReadByte

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_countMsg
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _TMR1_ISR->_Blink
    _TMR1_ISR->_TMR1_WriteTimer
    _INT_CallBack->_Switch1

Critical Paths under _main in BANK0

    _main->_read_msgs
    _ring_buffer_write->_DATAEE_WriteByte
    _ring_buffer_write->___awdiv
    _read_msgs->_interpret_message
    _interpret_message->_transfer_registers_i
    _transfer_registers_i->_transfer_registers
    _transfer_n_registers->_transfer_registers
    _transfer_registers->_send_register
    _send_register->_read_buffer
    _switch_alarm->_write_alaf
    _set_clock->_update_clk
    _registers_info->_send_msg
    _read_temp_lum->_send_msg
    _read_param->_send_msg
    _read_clock->_send_msg
    _read_alarms->_send_msg
    _modify_time_alarm->_write_tala
    _write_tala->_DATAEE_WriteByte
    _modify_pmon->_write_pmon
    _write_pmon->_DATAEE_WriteByte
    _define_alarm->_send_confirmation
    _send_confirmation->_send_msg
    _notification_memory->_send_msg
    _load_eeprom->_default_setup
    _default_setup->_eeprom_setup
    _eeprom_setup->_DATAEE_WriteByte
    _check_corruption->_get_check_up_value
    _Menus->_Menu
    _Menu->_submenu_clock
    _submenu_temp->_write_alat
    _write_alat->_DATAEE_WriteByte
    _submenu_illum->_write_alal
    _write_alal->_DATAEE_WriteByte
    _submenu_clock->_update_clk
    _update_clk->_eeprom_clk_update
    _eeprom_clk_update->_DATAEE_WriteByte
    _submenu_alarm->_write_alaf
    _write_alaf->_DATAEE_WriteByte

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  306360
                                             57 BANK0     15    15      0
                                              0 BANK2      2     2      0
                              _Alarm
       _EUSART_SetRxInterruptHandler
            _INT_SetInterruptHandler
                              _Menus
              _PWM_Output_D4_Disable
                          _ReadIllum
                           _ReadTemp
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                             ___wmul
                        _clear_alarm
                   _i2c1_driver_open
                        _load_eeprom
                _notification_memory
                          _read_msgs
                  _ring_buffer_write
                           _sys_init
                         _update_clk
 ---------------------------------------------------------------------------------
 (1) _sys_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ring_buffer_write                                   13     9      4   26259
                                              4 BANK0     13     9      4
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            ___awdiv
                            ___lwdiv
                             ___wmul
                    _not_transferred
                          _read_nreg
 ---------------------------------------------------------------------------------
 (2) _not_transferred                                      5     5      0    7817
                                              4 COMMON     5     5      0
                          _read_iwrt
                          _read_nreg
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _read_msgs                                           12    12      0  148109
                                             45 BANK0     12    12      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                  _interpret_message
 ---------------------------------------------------------------------------------
 (2) _interpret_message                                    5     5      0  147740
                                             40 BANK0      5     5      0
                       _define_alarm
                        _modify_pmon
                  _modify_time_alarm
                        _read_alarms
                         _read_clock
                         _read_param
                      _read_temp_lum
                     _registers_info
                  _send_confirmation
                          _set_clock
                             _strlen
                       _switch_alarm
               _transfer_n_registers
               _transfer_registers_i
 ---------------------------------------------------------------------------------
 (3) _transfer_registers_i                                13    13      0   36051
                                             27 BANK0     13    13      0
                            ___awmod
                              _putch
                          _read_iwrt
                          _read_nreg
                  _ring_buffer_laped
                  _send_confirmation
                             _strlen
                 _transfer_registers
 ---------------------------------------------------------------------------------
 (3) _transfer_n_registers                                 8     8      0   34275
                                             27 BANK0      8     8      0
                              _putch
                          _read_iwrt
                          _read_nreg
                  _ring_buffer_laped
                  _send_confirmation
                             _strlen
                 _transfer_registers
 ---------------------------------------------------------------------------------
 (4) _transfer_registers                                  15    14      1   19538
                                             12 BANK0     15    14      1
                            ___awmod
                          _read_iwrt
                          _read_nreg
                  _ring_buffer_laped
                      _send_register
 ---------------------------------------------------------------------------------
 (5) _send_register                                        4     4      0    5613
                                              8 BANK0      4     4      0
                              _putch
                        _read_buffer
 ---------------------------------------------------------------------------------
 (6) _read_buffer                                          8     7      1    5390
                                              0 BANK0      8     7      1
                    _DATAEE_ReadByte
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      93
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _switch_alarm                                         2     2      0   13341
                                              8 BANK0      2     2      0
                  _send_confirmation
                             _strlen
                         _write_alaf
 ---------------------------------------------------------------------------------
 (3) _set_clock                                            5     5      0   13657
                                             12 BANK0      5     5      0
                  _send_confirmation
                             _strlen
                         _update_clk
 ---------------------------------------------------------------------------------
 (3) _registers_info                                      14    14      0   12887
                                              8 COMMON     2     2      0
                                              3 BANK0     12    12      0
                          _read_iwrt
                          _read_nreg
                  _ring_buffer_laped
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _read_temp_lum                                        5     5      0    1052
                                              8 COMMON     1     1      0
                                              3 BANK0      4     4      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _read_param                                           5     5      0    1052
                                              8 COMMON     1     1      0
                                              3 BANK0      4     4      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _read_clock                                           9     9      0    1191
                                              8 COMMON     1     1      0
                                              3 BANK0      8     8      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _read_alarms                                          6     6      0    1089
                                              8 COMMON     1     1      0
                                              3 BANK0      5     5      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _modify_time_alarm                                    2     2      0   13372
                                              8 BANK0      2     2      0
                  _send_confirmation
                             _strlen
                         _write_tala
 ---------------------------------------------------------------------------------
 (4) _write_tala                                           4     4      0   10331
                                              4 BANK0      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _modify_pmon                                          2     2      0   13372
                                              8 BANK0      2     2      0
                  _send_confirmation
                             _strlen
                         _write_pmon
 ---------------------------------------------------------------------------------
 (4) _write_pmon                                           4     4      0   10331
                                              4 BANK0      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _define_alarm                                         2     2      0    3103
                                              7 BANK0      2     2      0
                  _send_confirmation
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _send_confirmation                                    6     5      1    2427
                                              8 COMMON     2     1      1
                                              3 BANK0      4     4      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          2     2      0      37
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _notification_memory                                 14    14      0   12887
                                              8 COMMON     2     2      0
                                              3 BANK0     12    12      0
                          _read_iwrt
                          _read_nreg
                  _ring_buffer_laped
                           _send_msg
 ---------------------------------------------------------------------------------
 (5) _send_msg                                             4     4      0     898
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                       _EUSART_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               5     3      2     454
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _ring_buffer_laped                                    0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _read_iwrt                                            0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _load_eeprom                                          1     1      0   50106
                                             19 BANK0      1     1      0
                   _check_corruption
                      _default_setup
                          _read_alaf
                          _read_alal
                          _read_alat
                          _read_clkh
                          _read_clkm
                          _read_nreg
                          _read_pmon
                          _read_tala
                               _used
 ---------------------------------------------------------------------------------
 (2) _used                                                 3     3      0    3944
                                              4 COMMON     3     3      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _read_tala                                            0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _read_pmon                                            0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _read_nreg                                            0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _read_clkm                                            0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _read_clkh                                            0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _read_alat                                            0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _read_alal                                            0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _read_alaf                                            0     0      0    3842
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _default_setup                                        5     5      0    7674
                                             14 BANK0      5     5      0
                       _eeprom_setup
 ---------------------------------------------------------------------------------
 (3) _eeprom_setup                                        10     2      8    7674
                                              4 BANK0     10     2      8
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _check_corruption                                     2     2      0    7752
                                              5 COMMON     2     2      0
                    _DATAEE_ReadByte
                 _get_check_up_value
 ---------------------------------------------------------------------------------
 (3) _get_check_up_value                                  10    10      0    3876
                                              4 COMMON     1     1      0
                                              0 BANK0      9     9      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clear_alarm                                          0     0      0       0
              _PWM_Output_D4_Disable
 ---------------------------------------------------------------------------------
 (2) _PWM_Output_D4_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1297
                    _ADCC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     391
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     695
                                              4 COMMON     1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     211
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadTemp                                             2     2      0      99
                                              4 COMMON     2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      31
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadIllum                                            2     2      0      31
                                              6 COMMON     2     2      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetSingleConversion                             4     1      3      31
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Menus                                                1     1      0   53022
                                             22 BANK0      1     1      0
                               _Menu
                         _ShowOnLEDs
           _TMR1_SetInterruptHandler
                      _checkButtonS1
                      _checkButtonS2
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     391
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Menu                                                 3     3      0   52600
                                             19 BANK0      3     3      0
                         _ShowOnLEDs
                    _TMR1_StartTimer
                     _TMR1_StopTimer
                      _submenu_alarm
                      _submenu_clock
                      _submenu_illum
                       _submenu_temp
 ---------------------------------------------------------------------------------
 (3) _submenu_temp                                         5     5      0   14761
                                              8 BANK0      5     5      0
                             _Update
                            ___awdiv
                            ___awmod
                             ___bmul
                         _write_alat
 ---------------------------------------------------------------------------------
 (4) _write_alat                                           4     4      0   10331
                                              4 BANK0      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _submenu_illum                                        2     2      0   11330
                                              8 BANK0      2     2      0
                             _Update
                         _write_alal
 ---------------------------------------------------------------------------------
 (4) _write_alal                                           4     4      0   10331
                                              4 BANK0      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _submenu_clock                                        7     7      0   15117
                                             12 BANK0      7     7      0
                             _Update
                            ___awdiv
                            ___awmod
                             ___bmul
                         _update_clk
 ---------------------------------------------------------------------------------
 (1) _update_clk                                           1     1      0   10483
                                             11 BANK0      1     1      0
                  _eeprom_clk_update
 ---------------------------------------------------------------------------------
 (2) _eeprom_clk_update                                    7     6      1   10483
                                              4 BANK0      7     6      1
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     406
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4    1513
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1345
                                              4 COMMON     5     1      4
                                              0 BANK0      4     4      0
                          _read_nreg (ARG)
 ---------------------------------------------------------------------------------
 (3) _submenu_alarm                                        1     1      0   11330
                                              8 BANK0      1     1      0
                             _Update
                         _write_alaf
 ---------------------------------------------------------------------------------
 (4) _write_alaf                                           4     4      0   10331
                                              4 BANK0      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    6427
                                              0 BANK0      4     1      3
                    _DATAEE_ReadByte (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2    3842
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Update                                               3     2      1     999
                                              4 COMMON     3     2      1
                         _ShowOnLEDs
                      _checkButtonS1
                      _checkButtonS2
 ---------------------------------------------------------------------------------
 (2) _checkButtonS2                                        1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _checkButtonS1                                        1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ShowOnLEDs                                           2     2      0      31
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Alarm                                               13    11      2    1821
                                              0 BANK0     13    11      2
                 _PWM6_LoadDutyValue
               _PWM_Output_D4_Enable
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1396
                                              4 COMMON     6     2      4
                    _DATAEE_ReadByte (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM_Output_D4_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_LoadDutyValue                                   4     2      2     152
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0     240
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                            _INT_ISR
                           _TMR1_ISR
                           _countMsg *
 ---------------------------------------------------------------------------------
 (9) _countMsg                                             1     1      0       0
                                              1 COMMON     1     1      0
                    _EUSART_LastByte
                 _EUSART_Receive_ISR
 ---------------------------------------------------------------------------------
 (10) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EUSART_LastByte                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
                              _Blink *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                              _Timer *
 ---------------------------------------------------------------------------------
 (10) _Timer                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Blink                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (10) _INT_CallBack                                        0     0      0       0
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _Switch1 *
 ---------------------------------------------------------------------------------
 (11) _Switch1                                             1     1      0       0
                                              0 COMMON     1     1      0
                      i1_clear_alarm
 ---------------------------------------------------------------------------------
 (12) i1_clear_alarm                                       0     0      0       0
            i1_PWM_Output_D4_Disable
 ---------------------------------------------------------------------------------
 (13) i1_PWM_Output_D4_Disable                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Alarm
     _PWM6_LoadDutyValue
     _PWM_Output_D4_Enable
     ___wmul
       _DATAEE_ReadByte (ARG)
   _EUSART_SetRxInterruptHandler
   _INT_SetInterruptHandler
   _Menus
     _Menu
       _ShowOnLEDs
       _TMR1_StartTimer
       _TMR1_StopTimer
       _submenu_alarm
         _Update
           _ShowOnLEDs
           _checkButtonS1
           _checkButtonS2
         _write_alaf
           _DATAEE_ReadByte
           _DATAEE_WriteByte
             _DATAEE_ReadByte (ARG)
             ___lwdiv (ARG)
       _submenu_clock
         _Update
           _ShowOnLEDs
           _checkButtonS1
           _checkButtonS2
         ___awdiv
           _read_nreg (ARG)
             _DATAEE_ReadByte
         ___awmod
         ___bmul
         _update_clk
           _eeprom_clk_update
             _DATAEE_ReadByte
             _DATAEE_WriteByte
               _DATAEE_ReadByte (ARG)
               ___lwdiv (ARG)
       _submenu_illum
         _Update
           _ShowOnLEDs
           _checkButtonS1
           _checkButtonS2
         _write_alal
           _DATAEE_ReadByte
           _DATAEE_WriteByte
             _DATAEE_ReadByte (ARG)
             ___lwdiv (ARG)
       _submenu_temp
         _Update
           _ShowOnLEDs
           _checkButtonS1
           _checkButtonS2
         ___awdiv
           _read_nreg (ARG)
             _DATAEE_ReadByte
         ___awmod
         ___bmul
         _write_alat
           _DATAEE_ReadByte
           _DATAEE_WriteByte
             _DATAEE_ReadByte (ARG)
             ___lwdiv (ARG)
     _ShowOnLEDs
     _TMR1_SetInterruptHandler
     _checkButtonS1
     _checkButtonS2
   _PWM_Output_D4_Disable
   _ReadIllum
     _ADCC_GetSingleConversion
   _ReadTemp
     _ReadI2C
     _WriteI2C
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
   _TMR1_SetInterruptHandler
   ___wmul
     _DATAEE_ReadByte (ARG)
   _clear_alarm
     _PWM_Output_D4_Disable
   _i2c1_driver_open
   _load_eeprom
     _check_corruption
       _DATAEE_ReadByte
       _get_check_up_value
         _DATAEE_ReadByte
     _default_setup
       _eeprom_setup
         _DATAEE_WriteByte
           _DATAEE_ReadByte (ARG)
           ___lwdiv (ARG)
     _read_alaf
       _DATAEE_ReadByte
     _read_alal
       _DATAEE_ReadByte
     _read_alat
       _DATAEE_ReadByte
     _read_clkh
       _DATAEE_ReadByte
     _read_clkm
       _DATAEE_ReadByte
     _read_nreg
       _DATAEE_ReadByte
     _read_pmon
       _DATAEE_ReadByte
     _read_tala
       _DATAEE_ReadByte
     _used
       _DATAEE_ReadByte
   _notification_memory
     _read_iwrt
       _DATAEE_ReadByte
     _read_nreg
       _DATAEE_ReadByte
     _ring_buffer_laped
       _DATAEE_ReadByte
     _send_msg
       _EUSART_Write
       _strlen
   _read_msgs
     _EUSART_Read
     _EUSART_is_rx_ready
     _interpret_message
       _define_alarm
         _send_confirmation
           _send_msg
             _EUSART_Write
             _strlen
         _strlen
       _modify_pmon
         _send_confirmation
           _send_msg
             _EUSART_Write
             _strlen
         _strlen
         _write_pmon
           _DATAEE_ReadByte
           _DATAEE_WriteByte
             _DATAEE_ReadByte (ARG)
             ___lwdiv (ARG)
       _modify_time_alarm
         _send_confirmation
           _send_msg
             _EUSART_Write
             _strlen
         _strlen
         _write_tala
           _DATAEE_ReadByte
           _DATAEE_WriteByte
             _DATAEE_ReadByte (ARG)
             ___lwdiv (ARG)
       _read_alarms
         _send_msg
           _EUSART_Write
           _strlen
       _read_clock
         _send_msg
           _EUSART_Write
           _strlen
       _read_param
         _send_msg
           _EUSART_Write
           _strlen
       _read_temp_lum
         _send_msg
           _EUSART_Write
           _strlen
       _registers_info
         _read_iwrt
           _DATAEE_ReadByte
         _read_nreg
           _DATAEE_ReadByte
         _ring_buffer_laped
           _DATAEE_ReadByte
         _send_msg
           _EUSART_Write
           _strlen
       _send_confirmation
         _send_msg
           _EUSART_Write
           _strlen
       _set_clock
         _send_confirmation
           _send_msg
             _EUSART_Write
             _strlen
         _strlen
         _update_clk
           _eeprom_clk_update
             _DATAEE_ReadByte
             _DATAEE_WriteByte
               _DATAEE_ReadByte (ARG)
               ___lwdiv (ARG)
       _strlen
       _switch_alarm
         _send_confirmation
           _send_msg
             _EUSART_Write
             _strlen
         _strlen
         _write_alaf
           _DATAEE_ReadByte
           _DATAEE_WriteByte
             _DATAEE_ReadByte (ARG)
             ___lwdiv (ARG)
       _transfer_n_registers
         _putch
           _EUSART_Write
         _read_iwrt
           _DATAEE_ReadByte
         _read_nreg
           _DATAEE_ReadByte
         _ring_buffer_laped
           _DATAEE_ReadByte
         _send_confirmation
           _send_msg
             _EUSART_Write
             _strlen
         _strlen
         _transfer_registers
           ___awmod
           _read_iwrt
             _DATAEE_ReadByte
           _read_nreg
             _DATAEE_ReadByte
           _ring_buffer_laped
             _DATAEE_ReadByte
           _send_register
             _putch
               _EUSART_Write
             _read_buffer
               _DATAEE_ReadByte
               ___wmul
                 _DATAEE_ReadByte (ARG)
       _transfer_registers_i
         ___awmod
         _putch
           _EUSART_Write
         _read_iwrt
           _DATAEE_ReadByte
         _read_nreg
           _DATAEE_ReadByte
         _ring_buffer_laped
           _DATAEE_ReadByte
         _send_confirmation
           _send_msg
             _EUSART_Write
             _strlen
         _strlen
         _transfer_registers
           ___awmod
           _read_iwrt
             _DATAEE_ReadByte
           _read_nreg
             _DATAEE_ReadByte
           _ring_buffer_laped
             _DATAEE_ReadByte
           _send_register
             _putch
               _EUSART_Write
             _read_buffer
               _DATAEE_ReadByte
               ___wmul
                 _DATAEE_ReadByte (ARG)
   _ring_buffer_write
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _DATAEE_ReadByte (ARG)
       ___lwdiv (ARG)
     ___awdiv
       _read_nreg (ARG)
         _DATAEE_ReadByte
     ___lwdiv
     ___wmul
       _DATAEE_ReadByte (ARG)
     _not_transferred
       _read_iwrt
         _DATAEE_ReadByte
       _read_nreg
         _DATAEE_ReadByte
     _read_nreg
       _DATAEE_ReadByte
   _sys_init
   _update_clk
     _eeprom_clk_update
       _DATAEE_ReadByte
       _DATAEE_WriteByte
         _DATAEE_ReadByte (ARG)
         ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _Switch1 *
         i1_clear_alarm
           i1_PWM_Output_D4_Disable
   _TMR1_ISR *
     Absolute function(Fake) *
     _Blink *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _Timer *
   _countMsg *
     _EUSART_LastByte
     _EUSART_Receive_ISR
       Absolute function(Fake) *
       _EUSART_DefaultErrorHandler *
         _EUSART_RxDataHandler
       _EUSART_DefaultFramingErrorHandler *
       _EUSART_DefaultOverrunErrorHandler *
       _EUSART_RxDataHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      2      18       9       30.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C4      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C4      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Dec 08 00:13:05 2019

                ?_EUSART_SetRxInterruptHandler 0072                                 ___bmul@product 0074  
                                  __CFG_CP$OFF 0000                      __end_of_send_confirmation 152E  
                                           l31 1603                                             l34 12F2  
                                           l37 12F5                                             l61 130F  
                                           l90 1404                                             l84 1333  
                                 ___awdiv@sign 0021                            ___wmul@multiplicand 0076  
                  __size_of_PWM6_LoadDutyValue 0016                                    __CFG_LVP$ON 0000  
                                          l182 15C8                                            l185 13A8  
                                          l275 0D3A                                            l372 0811  
                                          l188 134F                                            l357 1517  
                                          l630 13DE                                            l624 1721  
                                          l369 0808                                            l641 1411  
                                          l626 1725                                            l810 1782  
                                          l627 172C                                            l811 178B  
                                          l644 1501                                            l820 1339  
                                          l805 17D1                                            l814 17A4  
                                          l671 141F                                            l499 13EA  
                                          l852 1321                                            l861 1327  
                                          l855 1315                                            l792 13B1  
                                          l849 131B                                            l858 132D  
                                          l786 0ABB                                            l963 13C6  
                                          l981 1357                                            l989 0B85  
                                          _PR2 028D                                   __CFG_CPD$OFF 0000  
                              _timer1ReloadVal 00ED                         ??_EUSART_RxDataHandler 0070  
                   __size_of_modify_time_alarm 0037                 ?_EUSART_SetFramingErrorHandler 0072  
                         _not_transferred$2648 0076                        __size_of_PMD_Initialize 0008  
                                 ___awmod@sign 0078                                _TMR2_Initialize 1412  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 ?_EUSART_Read 0070                                   __CFG_ZCD$OFF 0000  
                                         l1000 0157                                           l1012 01D6  
                                         l1016 01D8                                           l1042 158B  
                                         l1050 0CEF                                           l1043 158C  
                                         l1300 038F                                           l1141 177A  
                                         l1133 095E                                           l1053 0CC1  
                                         l1046 1591                                           l1062 0CDF  
                                         l1055 0CC6                                           l1136 1756  
                                         l1152 148A                                           l1160 14C1  
                                         l1312 03B2                                           l1313 03B3  
                                         l1305 039E                                           l1410 0C12  
                                         l1306 039F                                           l1067 0CEE  
                                         l1403 14EB                                           l1148 0550  
                                         l1156 0EDB                                           l1324 03E2  
                                         l1308 03A3                                           l1149 05AB  
                                         l1157 0EDF                                           l1325 03E3  
                                         l2046 0F9C                                           l1342 0425  
                                         l1406 0657                                           l1414 031E  
                                         l1343 0426                                           l1407 06D6  
                                         l1423 15AC                                           l1336 0414  
                                         l1272 031F                                           l1352 145B  
                                         l1432 138F                                           l1169 0B40  
                                         l1337 0416                                           l1441 1367  
                                         l1362 1680                                           l1346 042B  
                                         l1450 137F                                           l1418 146A  
                                         l1426 1750                                           l1355 13D2  
                                         l2059 0DDD                                           l1275 032B  
                                         l1435 1397                                           l1380 13BB  
                                         l1276 032C                                           l1444 135F  
                                         l1349 147A                                           l1365 1697  
                                         l1269 144C                                           l1429 1387  
                                         l1453 139F                                           l2173 0A7A  
                                         l1358 1677                                           l1438 136F  
                                         l1374 0D8A                                           l1462 08F7  
                                         l1630 1641                                           l1622 07BA  
                                         l1614 0762                                           l1471 17FF  
                                         l1287 035B                                           l1447 1377  
                                         l1711 04CE                                           l1703 0455  
                                         l1288 035C                                           l1369 16A0  
                                         l1465 086D                                           l1377 0A3E  
                                         l1721 0E30                                           l1641 0994  
                                         l1625 07D0                                           l1706 04F6  
                                         l1299 038D                                           l1459 08C9  
                                         l1619 07FF                                           l1635 15E5  
                                         l1468 083F                                           l1732 089B  
                                         l1652 16E5                                           l1397 0F3C  
                                         l2349 155D                                           l1477 165F  
                                         l1718 0E05                                           l1726 152D  
                                         l1670 0E58                                           l1478 1660  
                                         l1647 09CB                                           l1664 0929  
                                         l1592 0CA4                                           l1673 0E83  
                                         l1737 1708                                           l1658 0AFD  
                                         l6011 0D8B                                           l1683 0FFF  
                                         l1691 05D5                                           l6021 0D9B  
                                         l6013 0D8C                                           l6005 16EA  
                                         l6101 0489                                           l6031 0DB2  
                                         l6023 0DA0                                           l6015 0D90  
                                         l1919 14D6                                           l6007 16F6  
                                         l6111 04B1                                           l1695 0647  
                                         l6033 0DB6                                           l6025 0DA6  
                                         l6041 0DCF                                           l6017 0D95  
                                         l6201 052A                                           l7001 0E27  
                                         l6009 16FB                                           l6113 04B8  
                                         l6051 1752                                           l6211 147B  
                                         l6043 0DD4                                           l6035 0DC0  
                                         l6027 0DA9                                           l6019 0D97  
                                         l6131 14CE                                           l6123 14C3  
                                         l6203 0530                                           l7003 0E2B  
                                         l6115 04E4                                           l6107 04A8  
                                         l7011 0C66                                           l1893 160E  
                                         l6061 176E                                           l6053 175C  
                                         l6141 0F43                                           l6045 0DD9  
                                         l6037 0DC4                                           l6029 0DAE  
                                         l6133 14D5                                           l6125 14C4  
                                         l6205 0536                                           l6221 14AE  
                                         l6213 0E84                                           l7005 0E2C  
                                         l6301 098F                                           l6109 04AC  
                                         l6117 04E8                                           l7021 0C87  
                                         l7013 0C6C                                           l7101 00A9  
                                         l1895 1622                                           l6055 1762  
                                         l6063 1773                                           l6071 17D4  
                                         l6151 0F57                                           l6143 0F48  
                                         l6039 0DC9                                           l6127 14C8  
                                         l6207 0537                                           l6215 0EB7  
                                         l7031 0AFE                                           l6223 064A  
                                         l6303 0997                                           l6119 04F5  
                                         l7023 0C8B                                           l7015 0C74  
                                         l7007 0C5C                                           l7111 00C3  
                                         l7103 00AC                                           l6065 1778  
                                         l6057 1763                                           l6161 0F6B  
                                         l6153 0F59                                           l6145 0F4A  
                                         l6137 0F3D                                           l6129 14CC  
                                         l6049 13B2                                           l6209 0544  
                                         l6073 0842                                           l6217 0EBD  
                                         l7041 0B0E                                           l7033 0B00  
                                         l6225 064F                                           l6081 151A  
                                         l6313 09BA                                           l6305 099C  
                                         l6321 16CD                                           l6241 07EA  
                                         l6233 07D1                                           l6401 0FCF  
                                         l7025 0C91                                           l7017 0C78  
                                         l7009 0C5F                                           l7121 00DC  
                                         l7113 00C9                                           l7105 00B2  
                                         l6067 1779                                           l6059 176D  
                                         l6171 0F88                                           l6163 0F6F  
                                         l6155 0F5F                                           l6147 0F4E  
                                         l6139 0F3F                                           l6075 0814  
                                         l6219 0EC2                                           l7051 0B25  
                                         l7043 0B14                                           l7035 0B04  
                                         l6227 0EE0                                           l6083 1528  
                                         l6315 09C2                                           l6307 09A6  
                                         l6331 16E1                                           l6323 16D2  
                                         l6251 07FB                                           l6243 07EE  
                                         l6235 07D2                                           l6091 044D  
                                         l6411 0FFB                                           l6403 0FDA  
                                         l7027 0C99                                           l7019 0C7F  
                                         l7131 0100                                           l7123 00E1  
                                         l7115 00CA                                           l7107 00B8  
                                         l6165 0F7E                                           l6157 0F62  
                                         l6173 0F8E                                           l6149 0F53  
                                         l6181 130A                                           l7053 0B2A  
                                         l7045 0B1A                                           l7061 0B39  
                                         l7037 0B05                                           l6501 0D21  
                                         l6229 0F3B                                           l6085 1529  
                                         l6341 0AE1                                           l6333 0ABE  
                                         l6077 089E                                           l6317 09C6  
                                         l6309 09B0                                           l6325 16D6  
                                         l6245 07F2                                           l6237 07DF  
                                         l6261 079C                                           l6253 0765  
                                         l6093 045F                                           l6421 05D9  
                                         l6413 05AE                                           l7029 0CA0  
                                         l7141 013A                                           l7133 0108  
                                         l7125 00E2                                           l7117 00CF  
                                         l7109 00BE                                           l6183 12F0  
                                         l6175 0F93                                           l6167 0F82  
                                         l6159 0F67                                           l7055 0B2B  
                                         l7047 0B1B                                           l7039 0B0C  
                                         l6191 1328                                           l6511 0D2C  
                                         l6503 0D23                                           l6335 0AC3  
                                         l6079 08CC                                           l6327 16DC  
                                         l6319 16C3                                           l6247 07F6  
                                         l6239 07E0                                           l6271 07C8  
                                         l6255 076A                                           l6263 07B0  
                                         l6351 0904                                           l6095 0477  
                                         l6087 042E                                           l6407 0FE4  
                                         l6423 05DE                                           l6415 05C4  
                                         l7151 015F                                           l7143 0140  
                                         l7135 0129                                           l7127 00EA  
                                         l7119 00D6                                           l7071 007B  
                                 _submenu_temp 0E84                                           l6185 12F3  
                                         l6177 0F98                                           l6169 0F83  
                                         l7057 0B2F                                           l7049 0B20  
                                         l6193 1316                                           l6521 0D37  
                                         l6513 0D2E                                           l6505 0D25  
                                         l6441 15E6                                           l6601 13A9  
                                         l6345 0AEB                                           l6337 0ACE  
                                         l6329 16E0                                           l6249 07FA  
                                         l6281 15C9                                           l6273 07CB  
                                         l6257 0775                                           l6361 0920  
                                         l6353 090E                                           l6089 0444  
                                         l6409 0FF1                                           l6433 0617  
                                         l6425 05E9                                           l6417 05CD  
                                         l7161 017E                                           l7153 0164  
                                         l7145 0146                                           l7137 012C  
                                         l7129 00F4                                           l7081 008A  
                                         l7073 007E                                           l7251 0949  
                                         l7059 0B34                                           l6195 131C  
                                         l6187 132E                                           l6523 13A0  
                                         l6515 0D30                                           l6507 0D27  
                                         l6531 1405                                           l6451 15F6  
                                         l6443 15E9                                           l6611 17BE  
                                         l6347 0AF8                                           l6339 0AD8  
                                         l6291 0970                                           l6283 15E0  
                                         l6275 1623                                           l6371 0E60  
                                         l6267 07BB                                           l6259 0789  
                                         l6363 0924                                           l6355 0917  
                                         l6099 0479                                           l6435 062C  
                                         l6427 05F4                                           l6419 05D9  
                                         l7171 01E0                                           l7163 0180  
                                         l7155 0174                                           l7147 0158  
                                         l7139 0133                                           l7091 009E  
                                         l7083 0091                                           l7075 0081  
                                         l7067 0075                                           l5901 1613  
                                         l6197 1310                                           l6189 1322  
                                         l6461 13FB                                           l6525 13A3  
                                         l6517 0D33                                           l6509 0D29  
                                         l6533 140C                                           l6453 15F8  
                                         l6445 15EB                                           l6541 1412  
                                         l6621 17CE                                           l6613 17C2  
                                         l6605 17A5                                           l6293 097A  
                                         l6285 15E1                                           l6277 163C  
                                         l6381 0E7A                                           l6373 0E6A  
                                         l6365 0E31                                           l6269 07C7  
                                         l6349 08FA                                           l6437 0639  
                                         l6429 060D                                           l7181 01ED  
                                         l7173 01E1                                           l7165 01D0  
                                         l7157 0176                                           l7149 015C  
                                         l7093 00A0                                           l7085 0098  
                                         l7077 0082                                           l7069 0078  
                         __end_of_define_alarm 0AFE                                           l5903 1618  
                                         l5911 1711                                           l6199 04F7  
                                         l6535 1502                                           l6463 1402  
                                         l6527 13A4                                           l6519 0D35  
                                         l6471 0CF8                                           l6455 15F9  
                                         l6447 15ED                                           l6551 141C  
                                         l6543 1415                                           l6631 1453  
                                         l6711 15A4                                           l6623 17D0  
                                         l6615 17C8                                           l6607 17A5  
                                         l6287 0961                                           l6279 163D  
                                         l6383 0E7E                                           l6375 0E6E  
                                         l6367 0E47                                           l6359 0919  
                                         l6391 0FB2                                           l6439 0643  
                                         l7175 01E4                                           l7183 01EF  
                                         l7167 01D3                                           l7159 0178  
                                         l7095 00A1                                           l7087 009B  
                                         l7079 0083                                           l6641 1470  
                                         l5905 161E                                           l5921 171C  
                                         l5913 1715                                           l6537 1514  
                                         l6561 0A90                                           l6553 0A7B  
                                         l6529 13A7                                           l6481 0D03  
                                         l6473 0CFA                                           l6465 1348  
                                         l6457 1600                                           l6449 15EF  
                                         l6545 1416                                           l6633 1455  
                                         l6721 14E1                                           l6713 15AA  
                                         l6705 1592                                           l6617 17C9  
                                         l6609 17AB                                           l6297 0984  
                                         l6289 0966                                           l6385 0E7F  
                                         l6377 0E72                                           l6369 0E50  
                                         l6393 0FBC                                           l7249 073C  
                                         l6801 0721                                           l7177 01E5  
                                         l7169 01DA                                           l7097 00A2  
                                         l7089 009D                                           l6643 1479  
                                         l5923 171E                                           l5915 1719  
                                         l6539 1516                                           l6571 0A9E  
                                         l6563 0A92                                           l6555 0A7D  
                                         l6459 13F8                                           l6491 0D17  
                                         l6483 0D05                                           l6475 0CFC  
                                         l6467 0CF0                                           l6547 1419  
                                         l6635 1458                                           l6627 144D  
                                         l6715 15AB                                           l6707 159C  
                                         l6619 17CB                                           l6299 098B  
                                         l6379 0E76                                           l5931 172F  
                                         l6395 0FC0                                           l6387 0F9F  
                                         l6803 0726                                           l7179 01EC  
                                         l7099 00A8                                           l5861 13D3  
                                         l5925 1720                                           l5917 171A  
                                         l5909 1709                                           l6645 1578  
                                         l6661 0CAE                                           l6653 0CA6  
                                         l6901 033F                                           l6581 0AB7  
                                         l6573 0AA5                                           l6565 0A94  
                                         l6557 0A84                                           l6493 0D19  
                                         l6485 0D07                                           l6477 0CFE  
                                         l6469 0CF6                                           l6549 141A  
                                         l6637 145A                                           l6629 1452  
                                         l6741 1358                                           l6733 1368  
                                         l6725 1388                                           l6709 159E  
                                         l5941 1557                                           l6397 0FC0  
                                         l6389 0FA7                                           l6805 072B  
                                         l6821 0A4A                                           l6639 146B  
                                         l5951 166C                                           l5871 13DB  
                                         l5863 13D6                                           l5927 1726  
                                         l5919 171B                                           l6591 0806  
                                         l6647 1582                                           l6663 0CB7  
                                         l6655 0CA9                                           l6911 036F  
                                         l6903 034B                                           l6583 0AB9  
                                         l6575 0AB0                                           l6567 0A96  
                                         l6559 0A8D                                           l6495 0D1B  
                                         l6487 0D09                                           l6479 0D00  
                                         l6719 14D7                                           l5935 1546  
                                         l6399 0FC5                                           l6831 0A6A  
                                         l6823 0A4F                                           l6815 0A3F  
                                         l5945 13C8                                           l5953 1673  
                                         l5961 1687                                           l5873 13DC  
                                         l5865 13D8                                           l6593 0807  
                                         l6585 0801                                           l6649 1590  
                                         l6665 0CC0                                           l6673 0CCD  
                                         l6921 03B7                                           l6913 037B  
                                         l6905 034F                                           l6577 0AB4  
                                         l6569 0A97                                           l6497 0D1D  
                                         l6489 0D15                                           l6841 15AD  
                                         l6761 0A23                                           l6753 0A05  
                                         l6737 1360                                           l6745 1370  
                                         l6729 1390                                           l5881 1787  
                                         l5937 154B                                           l5929 1335  
                                         l6809 0734                                           l6833 0A6B  
                                         l6825 0A53                                           l6817 0A41  
                                         l5955 167C                                           l5947 1661  
                                         l5963 168C                                           l5867 13D9  
                                         l6691 093C                                           l6683 092C  
                                         l6595 080D                                           l6587 0804  
                                         l6675 0CD6                                           l6667 0CCB  
                                         l6931 03E7                                           l6923 03C2  
                                         l6915 0381                                           l6907 0360  
                                         l6579 0AB5                                           l6499 0D1F  
                                         l6851 15BC                                           l6843 15B0  
                                         l6755 0A1F                                           l5971 1380  
                                         l5891 17A0                                           l5883 178C  
                                         l5939 154F                                           l6835 0A70  
                                         l6827 0A57                                           l6819 0A47  
                                         l6763 1642                                           l5957 167E  
                                         l5949 1667                                           l5965 1693  
                                         l5869 13DA                                           l6685 0930  
                                         l6589 0805                                           l6677 0CE3  
                                         l6941 041A                                           l6933 03F2  
                                         l6925 03C6                                           l6917 0393  
                                         l6909 036B                                           l6853 15BF  
                                         l6845 15B3                                           l6861 13E4  
                                         l6757 0A21                                           l6749 1378  
                                         l5981 1398                                           l5885 1795  
                                         l5893 17A2                                           l5877 177C  
                                         l6781 06F4                                           l6773 06D9  
                                         l6829 0A66                                           l6837 0A76  
                                         l6765 164B                                           l6599 14EC  
                                         l5895 1604                                           l5967 169C  
                                         l5959 1681                                           l5975 0BCE  
                                         l6687 0934                                           l6695 0940  
                                         l6943 042A                                           l6935 03F6  
                                         l6927 03D2                                           l6919 03A7  
                                         l6855 15C2                                           l6847 15B6  
                                         l6863 13E5                                           l6759 0A22  
                                         l5887 1799                                           l5879 177C  
                                         l5991 0882                                           l6791 070A  
                                         l6783 06F8                                           l6775 06E0  
                                         l6767 1650                                           l6951 0216  
                                         l6871 13BC                                           l5897 1606  
                                         l6881 0B46                                           l5969 169E  
                                         l6689 0938                                           l6697 0957  
                                         l6937 0402                                           l6929 03D6  
                                         l6857 15C5                                           l6849 15B9  
                                         l6873 1350                                           l6865 13E7  
                                         l5977 145C                                           l5889 179F  
                                         l5993 0887                                           l5985 0870  
                                         l6793 070F                                           l6785 06FD  
                                         l6777 06EA                                           l6769 1658  
                                         l6953 021C                                           l6961 0261  
                                         l5899 160A                                           l6699 095A  
                                         l6891 143E                                           l6939 0408  
                                         l6875 1353                                           l6859 13DF  
                                         l6883 0D3B                                           l5995 0896  
                                         l5987 0874                                           l6795 0713  
                                         l6787 0701                                           l6779 06ED  
                                         l6971 02B0                                           l6963 0287  
                                         l6955 022B                                           l6947 01F6  
                                         l6877 1355                                           l6885 0D43  
                                         l5997 089A                                           l5989 0878  
                                         l6797 0718                                           l6789 0705  
                                         l6973 02BE                                           l6965 028B  
                                         l6957 023A                                           l6949 0204  
                                         l6879 0B43                                           l6895 031F  
                                         l6887 0D4B                                           l6991 0E0D  
                                         l5999 16E8                                           l6799 071D  
                                         l6975 02CC                                           l6967 0296  
                                         l6897 0330                                           l6889 0D87  
                                         l6993 0E17                                           l6985 0DDE  
                                         l6977 02DA                                           l6969 02A2  
                                         l6899 033B                                           l6995 0E1B  
                                         l6987 0DF4                                           l6979 02F4  
                                         l6997 0E1F                                           l6989 0DFD  
                                         l6999 0E23                                           _LATA 0016  
                                         _LATB 0017                                __end_of_INT_ISR 1304  
                                         _LATC 0018                                           _LATD 0019  
                                         _LATE 001A                                           u5000 0EBD  
                                         u5001 0EBC                                           u5010 064F  
                                         _T2PR 028D                                           u5011 064E  
                                         u5020 07E7                                           u5100 079C  
                                         u5101 079B                                           u5110 07A7  
                                         u5030 076A                                           u5111 07A5  
                                         u5031 0769                                           u5200 16CA  
                                         u5120 07A8                                           u5040 0775  
                                         u6000 021C                                           u5041 0774  
                                         u6001 021B                                           u5210 0AC3  
                                         u5130 07B0                                           u5050 0780  
                                         u6010 022B                                           u5211 0AC2  
                                         u5131 07AF                                           u5051 077E  
                                         u6011 022A                                           u4500 160A  
                                         u5220 0ACE                                           u5140 0966  
                                         u5060 0781                                           u5300 0FC5  
                                         u6100 0C91                                           u6020 023A  
                                         u4501 1609                                           u5221 0ACD  
                                         u5141 0965                                           u5301 0FC4  
                                         u6101 0C90                                           u6021 0239  
                                         u5230 0AD8                                           u5150 0970  
                                         u5070 0789                                           u5310 0FCF  
                                         u6110 0C99                                           u6030 025F  
                                         u5231 0AD7                                           u5151 096F  
                                         u5071 0788                                           u5311 0FCE  
                                         u6111 0C98                                           u6031 025D  
                                         u4600 1687                                           u6120 0B1A  
                                         u5400 080D                                           u5240 0AE1  
                                         u5160 097A                                           u5080 0793  
                                         u5320 0FDA                                           u6040 0260  
                                         u6200 0129                                           u4601 1686  
                                         u6121 0B19                                           u5401 080C  
                                         u5241 0AE0                                           u5161 0979  
                                         u5081 0791                                           u5321 0FD9  
                                         u6201 0128                                           u4530 161E  
                                         u4610 168C                                           u6130 0B2A  
                                         u5170 099C                                           u5090 0794  
                                         u5250 0904                                           u5330 0FF1  
                                         u6050 0287                                           u6210 0133  
                                         u4531 161D                                           u4515 160F  
                                         u4611 168B                                           u6131 0B29  
                                         u5171 099B                                           u5251 0903  
                                         u5331 0FF0                                           u6051 0286  
                                         u6035 025A                                           u6211 0132  
                                         u4620 169C                                           u4540 1725  
                                         u6140 0B40                                           u5500 0CB7  
                                         u6060 0DF4                                           u5420 13B0  
                                         u5180 09A6                                           u5260 090E  
                                         u5340 05C4                                           u6220 013A  
                                         _PMD0 0796                                           u4525 1614  
                                         u4621 169B                                           u4541 1724  
                                         u6141 0B3F                                           u5501 0CB6  
                                         u6061 0DF3                                           u5421 13AE  
                                         u5181 09A5                                           u5261 090D  
                                         u5341 05C3                                           u6221 0139  
                                         _PMD1 0797                                           u4710 0DB6  
                                         u5510 0CC0                                           u4630 1469  
                                         u4470 1782                                           u4550 1557  
                                         u6070 0E14                                           u5430 13B1  
                                         u5190 09B0                                           u5270 0E47  
                                         u5350 05DE                                           u6230 0140  
                                         u6150 00A8                                           _PMD2 0798  
                                         u5415 14FB                                           u4711 0DB5  
                                         u5511 0CBF                                           u4631 1467  
                                         u4471 1781                                           u4551 1556  
                                         u5191 09AF                                           u5271 0E46  
                                         u5351 05DD                                           u6055 0283  
                                         u6231 013F                                           u6151 00A7  
                                         _PMD3 0799                                           u4720 0DC0  
                                         u5520 0CC6                                           u5600 14EA  
                                         u4640 146A                                           u4480 1787  
                                         u5440 17AB                                           u5280 0E67  
                                         u4800 045F                                           u5360 05E9  
                                         u6080 0C6C                                           u6240 0146  
                                         u6160 00C3                                           _PMD4 079A  
                                         u4721 0DBF                                           u4705 0DAA  
                                         u5521 0CC5                                           u5601 14E8  
                                         u4481 1786                                           u5441 17AA  
                                         u4801 045E                                           u5361 05E8  
                                         u6081 0C6B                                           u6241 0145  
                                         u6161 00C2                                           _PMD5 079B  
                                         u4570 1667                                           u5530 0CCB  
                                         u5610 14EB                                           u4490 179F  
                                         u4650 0896                                           u5450 17C8  
                                         u4810 0477                                           u5290 0FA7  
                                         u5370 05F4                                           u6090 0C74  
                                         u6250 0174                                           u6170 00CF  
                                         u6307 166F                                           u4571 1666  
                                         u5531 0CCA                                           u4491 179E  
                                         u4651 0895                                           u5451 17C7  
                                         u4811 0476                                           u5291 0FA6  
                                         u5371 05F3                                           u6091 0C73  
                                         u6251 0173                                           u6171 00CE  
                                         u4580 166C                                           u4900 0F5F  
                                         u4740 0DCF                                           u5460 1582  
                                         u5540 0CD6                                           u4660 1708  
                                         u4820 0489                                           u5380 060D  
                                         u5700 0A76                                           u5620 1650  
                                         u6260 017E                                           u6180 00D6  
                                         i1l45 149B                                           u4565 13CB  
                                         u4581 166B                                           u4901 0F5E  
                                         u4741 0DCE                                           u4725 0DBC  
                                         u5461 1581                                           u5541 0CD5  
                                         u4661 1707                                           u4821 0488  
                                         u5381 060C                                           u5701 0A75  
                                         u5621 164F                                           u6261 017D  
                                         u6181 00D5                                           u4590 167C  
                                         u4750 0DD4                                           u4670 0D90  
                                         u5470 158B                                           u5550 0CDF  
                                         u5710 13E4                                           u4830 04A7  
                                         u5390 0639                                           u5630 06EA  
                                         u6270 01D0                                           u6190 00DC  
                                         u4591 167B                                           u4751 0DD3  
                                         u4735 0DC5                                           u4671 0D8F  
                                         u5471 158A                                           u5551 0CDE  
                                         u5711 13E3                                           u4655 0892  
                                         u4831 04A6                                           u4815 0473  
                                         u5391 0638                                           u5631 06E9  
                                         u6271 01CF                                           u6255 0170  
                                         u6191 00DB                                 ??_eeprom_setup 002C  
                                         i1l64 0002                                           u4760 1762  
                                         u4920 0F6F                                           u4680 0D9B  
                                         u5480 1590                                           u5560 0CE3  
                                         u5800 0360                                           u5720 0D43  
                                         u4840 04B8                                           u5640 0A47  
                                         u6280 01E0                                           i1l81 13F7  
                                         u4761 1761                                           u4921 0F6E  
                                         u4681 0D9A                                           u5481 158F  
                                         u5561 0CE2                                           u5801 035F  
                                         u5721 0D42                                           u4665 1704  
                                         u4841 04B7                                           u4825 0485  
                                         u5385 0609                                           u5641 0A46  
                                         u6281 01DF                                           i1l58 1544  
                                         u4770 176D                                           u4690 0DA6  
                                         u5570 0CEE                                           u5490 0CAD  
                                         u5810 036B                                           u5730 0D4B  
                                         u4850 04F5                                           u4771 176C  
                                         u4915 0F63                                           u4691 0DA5  
                                         u5571 0CED                                           u5491 0CAC  
                                         u5811 036A                                           u5731 0D4A  
                                         u4851 04F4                                           u4835 04A3  
                                         u6275 01CC                                           u4780 1778  
                                         u4940 0F7E                                           u4860 14C8  
                                         u5900 03C2                                           u5820 037B  
                                         u5580 15A4                                           u5660 0A57  
                                         i1l77 1303                                           u4781 1777  
                                         u4941 0F7D                                           u4861 14C7  
                                         u5901 03C1                                           u5821 037A  
                                         u5581 15A3                                           u5661 0A56  
                                         u4870 14D5                                           u5910 03D2  
                                         u5830 038D                                           u5750 032B  
                                         u5590 15AA                                           u4790 0444  
                                         i1l87 12EF                                           u4935 0F70  
                                         u4871 14D4                                           u5911 03D1  
                                         u5831 038C                                           u5751 032A  
                                         u5591 15A9                                           u4855 04F1  
                                         u4791 0443                                           u5655 0A4B  
                                         u4960 0F8E                                           u4880 0F43  
                                         u5920 03E2                                           u5840 0393  
                                         u5760 0330                                           u5680 0A66  
                                         u6297 168F                                           u4961 0F8D  
                                         u4945 0F7A                                           u4881 0F42  
                                         u5745 1447                                           u5921 03E1  
                                         u5841 0392                                           u5761 032F  
                                         u5681 0A65                                           u4970 0F93  
                                         u4890 0F4E                                           u5930 03E7  
                                         u5850 039E                                           u5770 033B  
                                         u4971 0F92                                           u4955 0F84  
                                         u4891 0F4D                                           u5931 03E6  
                                         u5851 039D                                           u5771 033A  
                                         u5675 0A58                                           u4980 0530  
                                         u5940 03F2                                           u5860 03A3  
                                         u5780 034B                                           u4981 052F  
                                         u5941 03F1                                           u5861 03A2  
                                         u5781 034A                                           u5685 0A62  
                                         u4990 0536                                           u5950 0402  
                                         u5870 03A7                                           u5790 035B  
                                         u4991 0535                                           u5951 0401  
                                         u5871 03A6                                           u5791 035A  
                                         u5695 0A6C                                           u5960 0414  
                                         u5880 03B2                                           u5961 0413  
                                         u5881 03B1                                           u5970 041A  
                                         u5890 03B7                                           u5971 0419  
                                         u5891 03B6                                           u5980 0425  
                                         u5981 0424                                           u5990 042A  
                                         u5991 0429                                           _TMR2 028C  
                                         _WPUA 0F39                                           _WPUB 0F44  
                                         _WPUC 0F4F                                           _WPUD 0F5A  
                                         _WPUE 0F65                                           _Menu 092A  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         _alaf 006B                                           _alal 00D6  
                                         _alat 006C                                           _clkh 006A  
                                         _clkm 0069                                           _clks 0068  
                                         _main 0075                                           _mode 006E  
                                         _tala 00D7                                           _nreg 00CB  
                                         _msgs 00CF                                           _temp 00D2  
                                         _pmon 006D                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           _used 1592  
                                         btemp 007E                                  __CFG_BOREN$ON 0000  
          __end_of_INT_DefaultInterruptHandler 12F0                    _INT_DefaultInterruptHandler 12EF  
                                         start 0055                __end_of_INT_SetInterruptHandler 1334  
                   ??_TMR1_SetInterruptHandler 0074                                  __CFG_CSWEN$ON 0000  
                            ___bmul@multiplier 0075                                  __CFG_MCLRE$ON 0000  
                              __end_of_ReadI2C 1592                               define_alarm@data 0028  
                    __size_of_DATAEE_WriteByte 0024                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0009                                   ?_load_eeprom 0070  
                                _submenu_alarm 147B                                          ?_Menu 0070  
                                _submenu_clock 04F7                  __end_of_OSCILLATOR_Initialize 13A9  
                                _submenu_illum 14AE                                          _ADACQ 009D  
                                        _ADCAP 009B                                          _ADACT 0099  
                     __end_of_i2c1_driver_open 13EB                                          ?_main 0070  
                                        _ADCLK 0098                  __size_of_transfer_n_registers 0063  
                                        _ADCNT 010C                                          _ADPCH 009E  
                                        _ADREF 009A                                __end_of___awdiv 0F9D  
                                        _ADPRE 009C                                  __CFG_WDTE$OFF 0000  
                              __end_of_Switch1 143E                                __end_of___awmod 0DDE  
                                        _ADRPT 010D                          __end_of_default_setup 0A3F  
                              _TMR1_StartTimer 12F0                                          ?_used 0070  
                                        _T1CLK 0211                                ___awdiv@divisor 0074  
                                        _T1CON 020E                                          _T2CON 028E  
                                        _T2HLT 028F                                 __CFG_DEBUG$OFF 0000  
                              __end_of___lwdiv 0A7B                                          i1l121 0013  
                                        i1l130 0048                                          i1l124 0020  
                                        _T2TMR 028C                                          i1l126 002A  
                                        i1l135 0053                                          i1l128 0039  
                                        _T2RST 0291                                          i1l823 16C0  
                                        i1l840 0003                                          i1l833 0A04  
                                        i1l826 16C2                                          i1l843 12FD  
                                        i1l837 1577                                          i1l846 12F9  
                                        i1l864 1309                                          i1l981 1347  
                                        i1l966 0B86                                          i1l976 0BCB  
                                        i1l986 143D                                ___awdiv@counter 0020  
                                        _OSCEN 0891                                          _TMR1H 020D  
                                        _TMR1L 020C                                          _TRISA 0011  
                                        _TRISB 0012                                          _TRISC 0013  
                                        _TRISD 0014                                          _TRISE 0015  
                        __size_of_switch_alarm 0032                                          _WPUC3 7A7B  
                                        _WPUC4 7A7C                                          _RXPPS 0ECB  
                                        _Alarm 0B41                                          _Blink 0C13  
                                 ?_read_alarms 0070                                _PWM6_Initialize 1405  
                                        _Menus 0AFE                                   ?_read_buffer 0020  
                                        _Timer 0B86                               __end_of_TMR1_ISR 1545  
                       __size_ofi1_clear_alarm 0008                                _DATAEE_ReadByte 13D3  
                                        _alarm 00D0                                 send_register@i 0029  
                               send_register@k 002A                                          _iread 007A  
                                        _illum 00D1                                          _hours 00D5  
                  __end_of_notification_memory 0E31                                          _timer 00DA  
                                        _putch 1334                                          main@i 0136  
                      __end_of_TMR1_Initialize 1604                                          pclath 000A  
                            ??_EUSART_LastByte 0070                               _check_corruption 14D7  
                   __end_of_transfer_registers 04F7                                          status 0003  
                                        wtemp0 007E                         ??_PWM_Output_D4_Enable 0072  
                              _TMR1_WriteTimer 148B                                __initialization 0057  
                                 __end_of_Menu 095F                                   __end_of_main 01F4  
                                 ?_modify_pmon 0070                           __size_of_clear_alarm 0008  
                                 __end_of_used 15AD                                   _switch_alarm 08F8  
                   __size_of_send_confirmation 0016                                 ??_EUSART_Write 0072  
                               ?_submenu_alarm 0070                               __end_of_ReadTemp 042C  
                               ?_submenu_clock 0070                        __end_of_TMR2_Initialize 1420  
                  ?_INTERRUPT_InterruptManager 0070                                 ?_submenu_illum 0070  
                                       ??_Menu 0033                 ??_EUSART_SetRxInterruptHandler 0074  
                     _notification_memory$2857 002B                                         ??_main 0059  
                                       ??_used 0074                                _not_transferred 1642  
                      _transfer_registers$2851 0034                                         ?_Alarm 0020  
                                       ?_Blink 0070                             _get_check_up_value 0EE0  
                                    ??_INT_ISR 0071                                         ?_Menus 0070  
                                       ?_Timer 0070                          __end_of_send_register 1709  
                                       _ADACCH 0091                                         _ADACCL 0090  
    __end_of_EUSART_DefaultFramingErrorHandler 0004     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 0003                                         _ADCON0 0093  
                                       _ADCON1 0094                                         _ADCON2 0095  
                                       _ADCON3 0096                     _EUSART_OverrunErrorHandler 00E1  
                                       _ADERRH 0117                                         _ADERRL 0116  
                                       _ADLTHH 010F                                         _ADLTHL 010E  
                                       _ADRESH 008D                                         _ADRESL 008C  
                                       _ADSTAT 0097                                         _ADUTHH 0111  
                             ___awdiv@dividend 0076                                         _ADUTHL 0110  
                             __end_of_WriteI2C 0CF0                                         _ANSELA 0F38  
                                       ?_putch 0070                                         _ANSELB 0F43  
                                       _ANSELC 0F4E                                         _ANSELD 0F59  
                                       _ANSELE 0F64                             __CFG_RSTOSC$HFINT1 0000  
                   __end_of_EUSART_is_rx_ready 13B2                                         _T1GATE 0210  
                                       _T1GCON 020F                                         _RC1REG 0119  
                          ?_get_check_up_value 0070                                         _RC1STA 011D  
                                       _RA6PPS 0F16                                         _RC3PPS 0F23  
                                       Alarm@h 002C                                         Alarm@m 0020  
                      TMR1_WriteTimer@timerVal 0070                                         _RC4PPS 0F24  
                                       Alarm@s 0021                                         i1l1352 142E  
                                       _ODCONA 0F3A                                         i1l1186 0C5B  
                                       _ODCONB 0F45                                         _ODCONC 0F50  
                                       _RC6PPS 0F26                                         _ODCOND 0F5B  
                                       _ODCONE 0F66                                         i1l1741 14AD  
                                       i1l5111 09DB                                         i1l5121 09FA  
                                       i1l5113 09E1                                         i1l5105 09CC  
                                       i1l5131 0B92                                         i1l5123 0A01  
                                       i1l5115 09E6                                         i1l5107 09D1  
                                       i1l5141 0BA9                                         i1l5133 0B97  
                                       i1l5125 1304                                         i1l5117 09EB  
                                       i1l5109 09D6                                         i1l5151 0BC0  
                                       i1l5143 0BAF                                         i1l5135 0B9C  
                                       i1l5119 09F1                                         i1l5145 0BB4  
                                       i1l5153 0BC1                                         i1l5137 0BA3  
                                       i1l5129 0B86                                         i1l5241 0C2C  
                                       i1l5155 0BC6                                         i1l5147 0BB5  
                                       i1l5139 0BA8                                         i1l5243 0C38  
                                       i1l5235 0C13                                         i1l5149 0BBB  
                                       i1l5237 0C14                                         i1l5431 16A1  
                                       i1l4471 1420                                         i1l5239 0C20  
                                       i1l5247 0C44                                         i1l5441 16BB  
                                       i1l5433 16A8                                         i1l4481 142D  
                                       i1l4473 1425                                         i1l4625 1340  
                               __CFG_WDTCCS$SC 0000                                         i1l5435 16AF  
                                       i1l4475 1426                                         i1l4627 1343  
                                       i1l4491 1572                                         i1l4483 155E  
                                       i1l4651 12F6                                         i1l5437 16B4  
                                       i1l4477 1428                                         i1l4629 1345  
                                       i1l4653 142F                                         i1l4485 1567  
                                       i1l5439 16BA                                         i1l4479 142B  
                                       i1l4655 1435                                         i1l5391 1530  
                                       i1l4487 156B                                         i1l4657 1439  
                                       i1l4921 1490                                         i1l5393 1538  
                                       i1l4489 1571                                         i1l4649 12FA  
                                       i1l4931 1499                                         i1l4923 1491  
                                       i1l5395 153F                                         i1l5635 149C  
                                       i1l5651 001B                                         i1l5643 0006  
                                       i1l4933 13EB                                         i1l5397 12FE  
                                       i1l4925 1493                                         i1l7253 0C4D  
                                       i1l5389 152E                                         i1l5637 14A7  
                                       i1l5661 0032                                         i1l5645 000B  
                                       i1l4935 13F2                                         i1l5399 1300  
                                       i1l4927 1495                                         i1l4919 148B  
                                       i1l5639 14AC                                         i1l5663 003D  
                                       i1l5655 0024                                         i1l5647 000F  
                                       i1l4929 1497                                         i1l5665 0041  
                                       i1l5657 0029                                         i1l5649 0017  
                                       i1l5667 004C                                         i1l5659 002E  
                                       i1l5669 0050                                         _INLVLA 0F3C  
                                       _INLVLB 0F47                                         _INLVLC 0F52  
                                       _INLVLD 0F5D                                         _INLVLE 0F68  
                                       u321_20 1490                                         u321_21 148F  
                                       u322_20 13F2                                         u330_20 09E6  
                                       u322_21 13F1                                         u330_21 09E5  
                                       u331_20 09FA                                         u331_21 09F9  
                                       u332_20 0B90                                         u420_20 000B  
                                       u332_21 0B8D                                         u420_21 000A  
                                       u421_20 000F                                         u421_21 000E  
                                       u333_24 0B92                                         u334_20 0B97  
                                       u430_20 0041                                         u422_20 0017  
                                       u334_21 0B96                                         u430_21 0040  
                                       u422_21 0016                  __size_of_transfer_registers_i 009C  
                                       u335_20 0BA3                                         u351_20 0C1D  
                                       u255_20 1571                                         u431_20 004C  
                                       u423_20 001B                                         u335_21 0BA2  
                                       u351_21 0C1A                                         u255_21 1570  
                                       u431_21 004B                                         u423_21 001A  
                                       u336_20 0BAF                                         u432_20 0050  
                                       u424_20 001F                                         u336_21 0BAE  
                                       u432_21 004F                                         u424_21 001E  
                                       _INTPPS 0E90                                         u352_24 0C1F  
                                       u337_20 0BBB                                         u353_20 0C29  
                                       u329_20 09D6                                         u425_20 0024  
                                       u337_21 0BBA                                         u353_21 0C26  
                                       u329_21 09D5                                         u425_21 0023  
                                       u338_20 0BC6                                         u426_20 0028  
                                       u338_21 0BC5                                         u426_21 0027  
                                       u354_24 0C2B                                         u355_20 0C35  
                                       u419_20 14A7                                         u427_20 002E  
                                       u355_21 0C32                                         u419_21 14A6  
                                       u427_21 002D                                         u372_20 153F  
                                       u428_20 0032                                         u372_21 153E  
                                       u428_21 0031                                         u356_24 0C37  
                                       u357_20 0C41                                         u429_20 003D  
                                       u357_21 0C3E                                         u429_21 003C  
                                       u374_20 16A8                                         u278_20 1435  
                                       u374_21 16A7                                         u278_21 1434  
                                       u358_24 0C43                                         u375_20 16BA  
                                       u375_21 16B9                                         _OSCFRQ 0893  
                               _registers_info 0E31                                         _TX1REG 011A  
                                       _TX1STA 011E                             __size_of_ReadIllum 000F  
                                    ??_ReadI2C 0072                                 __CFG_PWRTE$OFF 0000  
                                i1_clear_alarm 1340           __end_of_TMR1_DefaultInterruptHandler 0003  
        __size_of_TMR1_DefaultInterruptHandler 0001                   _TMR1_DefaultInterruptHandler 0002  
                                 _CCPTMRS1bits 021F                                         _s1flag 00CC  
                                       _s2flag 00CD                                         _Update 1751  
                                   _ShowOnLEDs 13C7                                         ___bmul 14C2  
                       send_confirmation@error 0078                        __end_of_TMR1_StartTimer 12F3  
                                       ___wmul 1604                                      ??___awdiv 0078  
                               __CFG_STVREN$ON 0000                                      ??_Switch1 0070  
                                    ??___awmod 0076                               __end_of_countMsg 14AE  
                                    ??___lwdiv 0076                           ??_get_check_up_value 0020  
                          _EUSART_Transmit_ISR 16A1                        __end_of_PWM6_Initialize 1412  
                             ___awdiv@quotient 0022                           __end_of_eeprom_setup 06D7  
                              ___awmod@divisor 0072                                ___awmod@counter 0077  
                                ?_INT_CallBack 0070                        __end_of_DATAEE_ReadByte 13DF  
                                       _strlen 1545                               __end_of_send_msg 089C  
                              _ADCC_Initialize 1502                                 _PMD_Initialize 1348  
                        __size_of_define_alarm 0042                       ?i1_PWM_Output_D4_Disable 0070  
            __size_of_ADCC_GetSingleConversion 0012               __size_of_INT_SetInterruptHandler 0006  
                    ?_ADCC_GetSingleConversion 0072        INT_SetInterruptHandler@InterruptHandler 0072  
     TMR1_SetInterruptHandler@InterruptHandler 0072                        __end_of_TMR1_WriteTimer 149C  
                       __end_of_registers_info 0E84                        ??_PWM_Output_D4_Disable 0072  
                         ?_EUSART_Transmit_ISR 0070                               ?_TMR1_Initialize 0070  
                             __end_of_sys_init 13C7                           __size_of_EUSART_Read 002D  
                            _SYSTEM_Initialize 15AD                        __end_of__initialization 0071  
                            registers_info@msg 0023                             ?_SYSTEM_Initialize 0070  
                       __size_of_read_temp_lum 001F           __end_of_EUSART_SetTxInterruptHandler 132E  
        __size_of_EUSART_SetTxInterruptHandler 0006                   _EUSART_SetTxInterruptHandler 1328  
                               ?i1_clear_alarm 0070                            ___bmul@multiplicand 0072  
                                __end_of_Alarm 0B86                                  __end_of_Blink 0C5C  
                                __end_of_Menus 0B41                                 __pcstackCOMMON 0070  
                                __end_of_Timer 0BCC                                ??_submenu_alarm 0028  
                              ??_submenu_clock 002C                            ??_SYSTEM_Initialize 0075  
                    _transfer_n_registers$2831 0040                                ??_submenu_illum 0028  
                                    ?_TMR1_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                      __end_of_not_transferred 1661                               _DATAEE_WriteByte 1709  
                                 _define_alarm 0ABC                                  __end_of_putch 133A  
                             ?_TMR2_Initialize 0070                                 ??_INT_CallBack 0071  
                       __end_of_PMD_Initialize 1350                              __end_of_ReadIllum 144D  
                  __size_of_EXT_INT_Initialize 000D                           __size_of_load_eeprom 0050  
                                      ??_Alarm 0022                              _eeprom_clk_update 0BCC  
                         _eusartRxStatusBuffer 00A0                                        ??_Blink 0070  
                                      ??_Menus 0036                                        ??_Timer 0070  
              ??_EUSART_SetOverrunErrorHandler 0074                             ?_eeprom_clk_update 0024  
                         __size_of_read_alarms 0023                     submenu_clock@minutes_units 0030  
                    __end_of_SYSTEM_Initialize 15C9                          ??_EUSART_Transmit_ISR 0070  
                         __size_of_read_buffer 0024                                        ??_putch 0074  
                              ?_registers_info 0070                                     __pbssBANK0 0068  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                         __end_of_EUSART_Write 17A5                      _transfer_registers_i$2840 0042  
                                    ?_ReadTemp 0070                            ??_eeprom_clk_update 0025  
                  __size_of_EUSART_Receive_ISR 0039                            read_temp_lum@F13178 00BC  
                           __size_of_read_alaf 0008                             __size_of_read_alal 0008  
                           __size_of_read_alat 0008                             __size_of_read_clkh 0008  
                           __size_of_read_clkm 0008                             __size_of_read_tala 0008  
                           __size_of_read_nreg 0008                             __size_of_read_msgs 0049  
                           __size_of_read_iwrt 0008                             __size_of_read_pmon 0008  
                                   __pmaintext 0075                                        ?_Update 0074  
                                  ?_ShowOnLEDs 0070                                        ?___bmul 0072  
                ?_EUSART_SetTxInterruptHandler 0072               _EUSART_TxDefaultInterruptHandler 00E7  
                                      ?___wmul 0074                               ?_TMR1_StartTimer 0070  
                                   ??_TMR1_ISR 0072                        __end_of_ADCC_Initialize 1518  
                   __end_of_PWM6_LoadDutyValue 1502                           notification_memory@N 002D  
                        not_transferred@unread 0078                                     __pintentry 0004  
                                      _ADFLTRH 0115                                        _ADFLTRL 0114  
                         __size_of_modify_pmon 0036                                        _ADPREVH 008F  
                                      _ADPREVL 008E                                      ?_WriteI2C 0070  
                             ?_PWM6_Initialize 0070                       __end_of_check_corruption 14EC  
                                      _ADSTPTH 0113                                        _ADSTPTL 0112  
              __end_ofi1_PWM_Output_D4_Disable 142F                   ??_EUSART_DefaultErrorHandler 0071  
                           __size_of_set_clock 006E                                ?_PMD_Initialize 0070  
                                   _flag_timer 00D8                          transfer_n_registers@n 003F  
                    __end_of_eeprom_clk_update 0C13                                        ?_strlen 0072  
                      __size_of_TMR1_StopTimer 0003                               ?_DATAEE_ReadByte 0072  
                            ?_i2c1_driver_open 0070                               read_clock@F13170 0131  
                                _eusartRxCount 00DC                                _EUSART_LastByte 1304  
                      send_confirmation@F13232 00C0                                  _read_temp_lum 1623  
                                      _SP1BRGH 011C                                        _SP1BRGL 011B  
                           ??_i2c1_driver_open 0072                                        _INT_ISR 12FE  
                                      _OSCCON1 088D                                        _OSCCON3 088F  
                           ring_buffer_write@L 0027                             ring_buffer_write@T 0026  
                __size_of_EUSART_RxDataHandler 001A                           interpret_message@cmd 004A  
                           ring_buffer_write@h 002C                             ring_buffer_write@m 0024  
                           ring_buffer_write@s 0025                                        _NVMADRH 081B  
                                      _NVMADRL 081A                           interpret_message@msg 004B  
                       notification_memory@msg 0023                                 set_clock@hours 002D  
                                      _NVMDATH 081D                                        _OSCTUNE 0892  
                                      _NVMDATL 081C                                        _NVMCON2 081F  
                                      _PWM6DCH 038D                                        _PWM6DCL 038C  
                                      _PWM6CON 038E                                        _SSP1ADD 018D  
                                      _SLRCONA 0F3B                                        _SLRCONB 0F46  
                                      _SLRCONC 0F51                                        _SLRCOND 0F5C  
                                      _SLRCONE 0F67                                        _PPSLOCK 0E8F  
                                      _SSP1BUF 018C                                        _SSP1MSK 018E  
                     ??_EUSART_SetErrorHandler 0074                         __size_of_checkButtonS1 0020  
                       __size_of_checkButtonS2 0020                               ?_TMR1_WriteTimer 0070  
                     eeprom_setup@reset_buffer 002D                                      ?_countMsg 0070  
                 __end_of_transfer_n_registers 1000                           DATAEE_WriteByte@bAdd 0020  
                                  send_msg@msg 0022                             _i2c1_driver_i2cISR 00C5  
                                   ??_ReadTemp 0074                                ??i1_clear_alarm 0070  
                                      _ReadI2C 1578                                      ?_send_msg 0070  
          __size_of_EUSART_DefaultErrorHandler 0004                          __size_of_eeprom_setup 008F  
                              __size_of_Update 002A                           __CFG_SCANE$available 0000  
                              __size_of___bmul 0015                                        ___awdiv 0F3D  
                                      _Switch1 142F                                        ___awmod 0D8B  
                              __size_of___wmul 001F                                        ___lwdiv 0A3F  
                             ?_not_transferred 0070                             _transfer_registers 042C  
                                   ??_WriteI2C 0072                                     _read_clock 07D1  
                                   _read_param 15C9                                        __ptext1 13BC  
                                      __ptext2 01F4                                        __ptext3 1642  
                                      __ptext4 0A3F                                        __ptext5 0C5C  
                                      __ptext6 06D7                                        __ptext7 05AC  
                                      __ptext8 0F9D                                        __ptext9 042C  
                                    ?_sys_init 0070                 ??_TMR1_DefaultInterruptHandler 0070  
                               ?_read_temp_lum 0070                                __size_of_strlen 0019  
                                    _T1CONbits 020E                          _OSCILLATOR_Initialize 13A0  
                                    _T2CONbits 028E                              _ring_buffer_laped 145C  
                            __end_of_read_alaf 1360                              __end_of_read_alal 1368  
                          ?_transfer_registers 002C                              __end_of_read_alat 1370  
                            __end_of_read_clkh 1378                              __end_of_read_clkm 1380  
                             ___awmod@dividend 0074              __size_of_TMR1_SetInterruptHandler 0006  
                            __end_of_read_tala 1398                              __end_of_read_nreg 1388  
                            __end_of_read_msgs 0CA5                              __end_of_read_iwrt 13A0  
                            __end_of_read_pmon 1390                                        _minutes 00D4  
                     ??_PIN_MANAGER_Initialize 0072                                        _seconds 00D3  
                    ?_TMR1_SetInterruptHandler 0072                                      _T2HLTbits 028F  
                            _ring_buffer_write 01F4                        _INT_SetInterruptHandler 132E  
                           ?_ring_buffer_laped 0070                   submenu_temp@temperature_tens 002C  
                           ?_ring_buffer_write 0024                     __size_of_SYSTEM_Initialize 001C  
                          __size_of_ShowOnLEDs 000C                                        clrloop0 133B  
                                      _switch1 00D9                           end_of_initialization 0071  
                                    _T2RSTbits 0291                                     ??_countMsg 0071  
        __end_of_EUSART_SetOverrunErrorHandler 1322         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 131C                            ??_ring_buffer_laped 0074  
                                 _eeprom_setup 0648                              __end_of_set_clock 07D1  
                         __end_of_INT_CallBack 13F8                            ??_ring_buffer_write 0028  
                            _EUSART_Initialize 0A7B                   __size_of_notification_memory 0053  
                       __size_of_default_setup 003A                           ??_transfer_registers 002D  
                                ??_clear_alarm 0072                  __size_of_PWM_Output_D4_Enable 0010  
                                   ??_send_msg 0077                             ?_EUSART_Initialize 0070  
                                 read_buffer@i 0027                                   read_buffer@j 0020  
                       transfer_registers_i@nr 0046                         transfer_registers_i@wi 0044  
                           _EUSART_is_rx_ready 13A9                                        used@val 0076  
                                _checkButtonS1 1661                                  _checkButtonS2 1681  
                             set_clock@minutes 002E                               set_clock@seconds 002F  
                      __end_of_EUSART_LastByte 130A                               ?_ADCC_Initialize 0070  
                 __end_of_transfer_registers_i 0648               __end_of_ADCC_GetSingleConversion 0812  
                        __CFG_WDTCPS$WDTCPS_31 0000                                        strlen@a 0075  
                                      strlen@s 0076                            ??_EUSART_Initialize 0074  
               ??_EUSART_SetTxInterruptHandler 0074                      __end_of_ring_buffer_laped 146B  
                    notification_memory@F13227 0120                                      _PORTBbits 000D  
                          ?_EUSART_is_rx_ready 0070                                      _PORTCbits 000E  
                                   ??_sys_init 0072                     __size_of_eeprom_clk_update 0047  
                            _interpret_message 06D7                                   read_msgs@cmd 0058  
                                 read_msgs@aux 004E                      __end_of_ring_buffer_write 031F  
                           ?_interpret_message 0070                                      _TRISCbits 0013  
                                ReadTemp@value 0075                          __size_of_EUSART_Write 002A  
                                   _update_clk 13B2                               __CFG_FEXTOSC$OFF 0000  
              __size_of_EUSART_SetErrorHandler 0006                       __end_of_DATAEE_WriteByte 172D  
                                ShowOnLEDs@num 0073                            ??_interpret_message 0048  
               __size_of_PWM_Output_D4_Disable 000F                      __end_of_EUSART_Initialize 0ABC  
                         ??_EUSART_is_rx_ready 0072                  __end_of_PWM_Output_D4_Disable 145C  
                        check_corruption@check 0076               __size_ofi1_PWM_Output_D4_Disable 000F  
                               ?_checkButtonS1 0070                                 ?_checkButtonS2 0070  
                               __end_of_Update 177B                         __size_of_send_register 0023  
                               __end_of___bmul 14D7             __end_of_EUSART_DefaultErrorHandler 12FA  
                   _EUSART_DefaultErrorHandler 12F6                            __end_of_clear_alarm 1358  
                    __end_of_interpret_message 0763                    __size_of_get_check_up_value 005D  
                               __end_of___wmul 1623                                     _write_alaf 17D2  
                                   _write_alal 0812                                     _write_alat 0840  
                                  ?_read_clock 0070                                ??_read_temp_lum 0078  
                                 _EUSART_Write 177B                                     _write_tala 08CA  
                            __size_of_TMR1_ISR 0017                                     _write_pmon 089C  
                                  ?_read_param 0070                                 _TMR1_StopTimer 12F3  
                       ?_OSCILLATOR_Initialize 0070                           _transfer_n_registers 0F9D  
                    ??_INT_SetInterruptHandler 0074                                  _default_setup 0A05  
                               __end_of_strlen 155E                               ??_registers_info 0078  
                          start_initialization 0057                __size_of_PIN_MANAGER_Initialize 004B  
                                    _ReadIllum 143E                                  ??_EUSART_Read 0072  
 EUSART_SetRxInterruptHandler@interruptHandler 0072   EUSART_SetTxInterruptHandler@interruptHandler 0072  
                             WriteI2C@data_out 0073                                  ?_submenu_temp 0070  
                                  putch@txData 0074                              read_alarms@F13188 012C  
                             eeprom_setup@alaf 0029                               eeprom_setup@alal 0028  
                             eeprom_setup@alat 0027                               eeprom_setup@clkh 002A  
                             eeprom_setup@clkm 002B                            DATAEE_ReadByte@bAdd 0072  
                             eeprom_setup@tala 0026                               eeprom_setup@nreg 0024  
                             eeprom_setup@pmon 0025                   ?_INT_DefaultInterruptHandler 0070  
                        eeprom_clk_update@clkh 002A                          eeprom_clk_update@clkm 0024  
                            __size_of_ReadTemp 010D                 ?_EUSART_SetOverrunErrorHandler 0072  
                             __CFG_LPBOREN$OFF 0000                       __size_of_TMR1_Initialize 001E  
                                 ??_ShowOnLEDs 0072                                       ??_Update 0075  
                   _EUSART_FramingErrorHandler 00E3                                       ??___bmul 0073  
                             ??_PMD_Initialize 0072                                       ??___wmul 0078  
                       _EUSART_SetErrorHandler 1310                         __end_of_TMR1_StopTimer 12F6  
                             ?_EUSART_LastByte 0070                          __end_of_submenu_alarm 148B  
                        __end_of_submenu_clock 05AC                                  ??_load_eeprom 0033  
                        __end_of_submenu_illum 14C2                     __end_of_EXT_INT_Initialize 1405  
                        ?_transfer_n_registers 0070                     __size_of_ring_buffer_laped 000F  
                                    Update@var 0076                                      Update@thr 0074  
                            ?_check_corruption 0070                                       ??_strlen 0074  
                     submenu_clock@hours_units 0032                                 ?_default_setup 0070  
                                   read_msgs@i 0056                     __size_of_ring_buffer_write 012B  
                            __size_of_WriteI2C 004B                       _ADCC_GetSingleConversion 0800  
                  __end_of_EUSART_Transmit_ISR 16C3                             ??_check_corruption 0075  
                             registers_info@ri 002A                               registers_info@nr 0029  
                             registers_info@wi 002E                                  ??_read_alarms 0078  
                                  __pbssCOMMON 007A                                  ??_read_buffer 0021  
                                    ___latbits 0002                               read_param@F13181 00B8  
                                     ?_INT_ISR 0070                                  __pcstackBANK0 0020  
                                __pcstackBANK2 0136                                    ?_update_clk 0070  
                           _PWM6_LoadDutyValue 14EC                       __size_of_TMR2_Initialize 000E  
                                   ?_ReadIllum 0070                                 ??_submenu_temp 0028  
                        __size_of_INT_CallBack 000D                                  _send_register 16E6  
                           __end_of_ShowOnLEDs 13D3                     __end_of_EUSART_Receive_ISR 0A05  
                         _transfer_registers_i 05AC                            ?_PWM6_LoadDutyValue 0072  
                   __size_of_EUSART_Initialize 0041                      ring_buffer_write@ring_pos 002F  
                    __size_of_i2c1_driver_open 000C               _EUSART_RxDefaultInterruptHandler 00E5  
                          __size_of_read_clock 002F                            __end_of_EUSART_Read 17D2  
                                     ?_ReadI2C 0070                            __size_of_read_param 001D  
                            __size_of_countMsg 0012                                      _btn1State 00CA  
                                    _btn2State 00C9                                      __pnvBANK1 00DF  
                              ??_checkButtonS1 0072                                ??_checkButtonS2 0072  
                 __end_of_EUSART_RxDataHandler 1578                                    _clear_alarm 1350  
                             ___lwdiv@dividend 0074                         _PIN_MANAGER_Initialize 0CF0  
                                 _initial_time 00C3                  ??_INT_DefaultInterruptHandler 0070  
                         EUSART_Read@readValue 0073                                  ??_modify_pmon 0028  
             __end_of_TMR1_SetInterruptHandler 1310                ADCC_GetSingleConversion@channel 0075  
                            __size_of_send_msg 002E                                       ?___awdiv 0074  
                                    __ptext100 09CC                                      __ptext101 149C  
                                    __ptext110 0B86                                      __ptext102 12FA  
                                    __ptext111 148B                                      __ptext103 0003  
                                    __ptext112 12FE                                      __ptext104 12F6  
                                    __ptext113 13EB                                      __ptext105 155E  
                                    __ptext114 12EF                                      __ptext106 1304  
                                    __ptext115 142F                                      __ptext107 152E  
                                    __ptext116 1340                                      __ptext108 0C13  
                                    __ptext117 1420                                      __ptext109 0002  
                                    __ptext118 16A1                                       ?_Switch1 0070  
                                     ?___awmod 0072                                  ?_switch_alarm 0070  
                                     ?___lwdiv 0072                    _i2c1_driver_busCollisionISR 00C7  
                                 _eusartRxHead 007B                                ?_TMR1_StopTimer 0070  
                                 _eusartTxHead 00DE                     __size_of_interpret_message 008C  
                                 _eusartRxTail 006F                               __CFG_PPS1WAY$OFF 0000  
                                  ?_write_alaf 0070                                    ?_write_alal 0070  
                                 _eusartTxTail 00DD                                    ?_write_alat 0070  
                         ??_PWM6_LoadDutyValue 0074                                  set_clock@data 0030  
                                  ?_write_tala 0070                                    ?_write_pmon 0070  
                 ??_INTERRUPT_InterruptManager 0072                          notification_memory@ri 002A  
                        notification_memory@nr 0029                          notification_memory@wi 002E  
                      _eusartTxBufferRemaining 00EF                                   _INT_CallBack 13EB  
                                     _BAUD1CON 011F                            _notification_memory 0DDE  
                     __size_of_TMR1_StartTimer 0003                                 __size_of_Alarm 0045  
                            __size_of_sys_init 000B                                 __size_of_Blink 0049  
                          __end_of_load_eeprom 0D8B                                 __size_of_Menus 0043  
                               __size_of_Timer 0046                       __size_of_PWM6_Initialize 000D  
                              read_clock@hours 0023                                 ?_send_register 0070  
                             ___lwdiv@quotient 0078                                      _read_alaf 1358  
                       transfer_n_registers@nr 003E                                      _read_alal 1360  
                                    _read_alat 1368                                      _read_clkh 1370  
                                    _read_clkm 1378                                       _T2CLKCON 0290  
                     __size_of_DATAEE_ReadByte 000C                                      _read_tala 1390  
                                    _read_nreg 1380                                      _read_msgs 0C5C  
                                    _read_iwrt 1398                                      _read_pmon 1388  
                               __size_of_putch 0006                          ?_transfer_registers_i 0070  
                          __end_of_read_alarms 16E6                                 _eusartRxBuffer 00A8  
                          __end_of_read_buffer 1751                                 _eusartTxBuffer 00B0  
                      i1_PWM_Output_D4_Disable 1420                                 ___wmul@product 0078  
                                     _LATAbits 0016         EUSART_SetErrorHandler@interruptHandler 0072  
                                    clear_ram0 133A                                       _PIE0bits 0716  
                         ?_notification_memory 0070                                       _PIE3bits 0719  
                                    _used$2620 0075                                       _PIE4bits 071A  
                            _eusartRxLastError 00DB                          __end_ofi1_clear_alarm 1348  
                     __size_of_TMR1_WriteTimer 0011            __size_of_INTERRUPT_InterruptManager 0051  
                             switch_alarm@data 0029                                       _PIR0bits 070C  
                                    _set_clock 0763                ??_EUSART_SetFramingErrorHandler 0074  
                                     _PIR3bits 070F                                       _PIR4bits 0710  
                        transfer_registers_i@N 0040                          transfer_registers_i@i 0045  
                        transfer_registers_i@n 0041                          interpret_message@data 004C  
                               ??_switch_alarm 0028                            __size_of_update_clk 000A  
                                     _SSP1CON1 0190                                       _SSP1CON2 0191  
    __end_of_EUSART_DefaultOverrunErrorHandler 12FE     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 12FA                                       _TMR1_ISR 152E  
                                     _SSP1STAT 018F                         ??_transfer_n_registers 003B  
                              ??_default_setup 002E                              ??_TMR1_Initialize 0074  
                                   _ADCON0bits 0093                                     _ADCON1bits 0094  
                                   _ADCON2bits 0095                                     _ADCON3bits 0096  
                            ___wmul@multiplier 0074                            __end_of_modify_pmon 0995  
                                  write_alaf@x 0027                                    write_alal@x 0027  
                                  write_alat@x 0027                   __end_of_PWM_Output_D4_Enable 147B  
         __size_of_INT_DefaultInterruptHandler 0001                                       Menu@mode 0035  
                     __size_of_not_transferred 001F                                    write_tala@x 0027  
                        DATAEE_WriteByte@bData 0022                                    ??_ReadIllum 0076  
                                  write_pmon@x 0027                               __size_of_INT_ISR 0006  
                                  _EUSART_Read 17A5                                     ?_read_alaf 0070  
                                   ?_read_alal 0070                                     ?_read_alat 0070  
                                   ?_read_clkh 0070                                     ?_read_clkm 0070  
                                   ?_read_tala 0070                                     ?_read_nreg 0070  
                                   ?_read_msgs 0070                                     ?_read_iwrt 0070  
                                   ?_read_pmon 0070                              ?_DATAEE_WriteByte 0020  
                            ??_TMR2_Initialize 0072                                       _ReadTemp 031F  
                          __size_of_write_alaf 002E                            __size_of_write_alal 002E  
                          __size_of_write_alat 002E                            __size_of_write_tala 002E  
                           ??_DATAEE_WriteByte 007A                            __size_of_write_pmon 002E  
                        ??_notification_memory 0078                               __size_of_ReadI2C 001A  
                                   _ADSTATbits 0097                    __size_of_transfer_registers 00CB  
                                   ?_set_clock 0070                           send_confirmation@cmd 0023  
                         send_confirmation@msg 0024                           __end_of_submenu_temp 0EE0  
                      ??_OSCILLATOR_Initialize 0072                            _EUSART_ErrorHandler 00DF  
                      submenu_clock@hours_tens 0031                                  ?_define_alarm 0070  
                             __size_of___awdiv 0060                               __size_of_Switch1 000F  
                             __size_of___awmod 0053                    ?_EUSART_DefaultErrorHandler 0070  
                              registers_info@N 002D                              read_clock@minutes 0024  
                            read_clock@seconds 0025                               __size_of___lwdiv 003C  
                                 ??_read_clock 0078                                       _WriteI2C 0CA5  
                                  _load_eeprom 0D3B                                   ??_read_param 0078  
                     _TMR1_SetInterruptHandler 130A                          _TMR1_InterruptHandler 00EB  
                     transfer_n_registers@data 0042                       __size_of_ADCC_Initialize 0016  
                               read_alarms@msg 0023                                ??_send_register 0028  
                                  _read_alarms 16C3                                    _read_buffer 172D  
                              ___lwdiv@divisor 0072                           _EUSART_RxDataHandler 155E  
                            _modify_time_alarm 0995                                ___lwdiv@counter 0077  
                                     __ptext10 16E6                                       __ptext11 172D  
                                     __ptext20 0995                                       __ptext12 1334  
                                     __ptext21 08CA                                       __ptext13 08F8  
                                   _T1GCONbits 020F                                       __ptext30 1545  
                                     __ptext22 095F                                       __ptext14 0763  
                                     __ptext31 177B                                       __ptext23 089C  
                                     __ptext15 0E31                                       __ptext40 1370  
                                     __ptext32 145C                                       __ptext24 0ABC  
                                     __ptext16 1623                                       __ptext41 1368  
                                     __ptext33 1398                                       __ptext25 1518  
                                     __ptext17 15C9                                       __ptext50 144D  
                                     __ptext42 1360                                       __ptext34 0D3B  
                                     __ptext26 13A9                                       __ptext18 07D1  
                                     __ptext51 15AD                                       __ptext43 1358  
                                     __ptext35 1592                                       __ptext27 17A5  
                                     __ptext19 16C3                                       __ptext60 0A7B  
                                     __ptext52 1412                                       __ptext44 0A05  
                                     __ptext36 1390                                       __ptext28 0DDE  
                                     __ptext61 1328                                       __ptext53 15E6  
                                     __ptext45 0648                                       __ptext37 1388  
                                     __ptext29 086E                                       __ptext70 143E  
                                     __ptext62 1322                                       __ptext54 1405  
                                     __ptext46 14D7                                       __ptext38 1380  
                                     __ptext71 0800                                       __ptext63 131C  
                                     __ptext55 1348                                       __ptext47 0EE0  
                                     __ptext39 1378                                       __ptext80 13B2  
                                     __ptext72 0AFE                                       __ptext64 1316  
                                     __ptext56 0CF0                                       __ptext48 13DF  
                                     __ptext81 0BCC                                       __ptext73 130A  
                                     __ptext65 1310                                       __ptext57 13A0  
                                     __ptext49 1350                                       __ptext90 1681  
                                     __ptext82 14C2                                       __ptext74 092A  
                                     __ptext66 1502                                       __ptext58 13F8  
                                     __ptext91 1661                                       __ptext83 0D8B  
                                     __ptext75 0E84                                       __ptext67 031F  
                                     __ptext59 132E                                       __ptext92 13C7  
                                     __ptext84 0F3D                                       __ptext76 0840  
                                     __ptext68 0CA5                                       __ptext93 12F3  
                                     __ptext85 147B                                       __ptext77 14AE  
                                     __ptext69 1578                                       __ptext94 12F0  
                                     __ptext86 17D2                                       __ptext78 0812  
                                     __ptext95 0B41                                       __ptext87 1709  
                                     __ptext79 04F7                                       __ptext96 1604  
                                     __ptext88 13D3                                       __ptext97 146B  
                                     __ptext89 1751                                       __ptext98 14EC  
                                 _SSP1CON1bits 0190                                   _SSP1CON2bits 0191  
                       ??_transfer_registers_i 003B                      ??i1_PWM_Output_D4_Disable 0070  
                        modify_time_alarm@data 0029                             ?_modify_time_alarm 0070  
                            ??_TMR1_StartTimer 0072                    DATAEE_WriteByte@GIEBitValue 0023  
                                    send_msg@i 0020                            _registers_info$2824 002B  
                                     _countMsg 149C                                  __size_of_Menu 0035  
                             _i2c1_driver_open 13DF                              ??_PWM6_Initialize 0072  
                  __size_of_EUSART_is_rx_ready 0009                                  __size_of_main 017F  
                                __size_of_used 001B                             __end_of_read_clock 0800  
                    submenu_clock@minutes_tens 002F                            ??_modify_time_alarm 0028  
                           __end_of_read_param 15E6                              ??_DATAEE_ReadByte 0074  
                         __CFG_WDTCWS$WDTCWS_7 0000                          _PWM_Output_D4_Disable 144D  
                      ?_EUSART_SetErrorHandler 0072                                       _send_msg 086E  
                         transfer_registers@nr 0033                           transfer_registers@wi 003A  
                                   _RC1STAbits 011D  EUSART_SetOverrunErrorHandler@interruptHandler 0072  
                   __end_of_get_check_up_value 0F3D                                       _num_msgs 00CE  
                     transfer_registers_i@data 0047                     ??_ADCC_GetSingleConversion 0075  
                                  _modify_pmon 095F                                 ??_define_alarm 0027  
                                     int$flags 007E                  submenu_temp@temperature_units 002B  
           __end_of_INTERRUPT_InterruptManager 0055                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 131C         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 1316                                   _SSP1STATbits 018F  
                            ??_TMR1_WriteTimer 0072                                       _sys_init 13BC  
                        __end_of_read_temp_lum 1642                      __end_of_modify_time_alarm 09CC  
                                   _INTCONbits 000B                     ring_buffer_write@ring_pos_ 002D  
                                  _NVMCON1bits 081E                          ?_EUSART_RxDataHandler 0070  
                                 ??_update_clk 002B                           _INT_InterruptHandler 00E9  
                                  ??_read_alaf 0074                                    ??_read_alal 0074  
                                  ??_read_alat 0074                                    ??_read_clkh 0074  
                                  ??_read_clkm 0074                             _EXT_INT_Initialize 13F8  
                         __end_of_switch_alarm 092A                                    ??_read_tala 0074  
                                  ??_read_nreg 0074                                    ??_read_msgs 004D  
                                  ??_read_iwrt 0074                                    ??_read_pmon 0074  
                                     intlevel1 0000                              ??_not_transferred 0074  
                    __size_of_check_corruption 0015                        ?_PIN_MANAGER_Initialize 0070  
                             read_temp_lum@msg 0023                 __end_of_EUSART_SetErrorHandler 1316  
                            __CFG_CLKOUTEN$OFF 0000                            ?_EXT_INT_Initialize 0070  
                                  _PPSLOCKbits 0E8F                                  read_clock@msg 0026  
                                 ?_clear_alarm 0070           __end_of_EUSART_SetRxInterruptHandler 1328  
        __size_of_EUSART_SetRxInterruptHandler 0006                   _EUSART_SetRxInterruptHandler 1322  
                         _PWM_Output_D4_Enable 146B                               ??_TMR1_StopTimer 0072  
                                  ??_set_clock 002C                            transfer_registers@N 0039  
                          transfer_registers@c 0036                            transfer_registers@i 002C  
                          transfer_registers@n 0038                             _EUSART_Receive_ISR 09CC  
                           __end_of_update_clk 13BC  EUSART_SetFramingErrorHandler@interruptHandler 0072  
                     ?_INT_SetInterruptHandler 0072                                   ??_write_alaf 0024  
                                 ??_write_alal 0024                                   ??_write_alat 0024  
                                 ??_write_tala 0024                                   ??_write_pmon 0024  
                            _send_confirmation 1518                           ??_EXT_INT_Initialize 0074  
                          ?_EUSART_Receive_ISR 0070                                     _SSP1DATPPS 0EC6  
                                   _SSP1CLKPPS 0EC5                             ?_send_confirmation 0078  
                                read_param@msg 0023                       __size_of_EUSART_LastByte 0006  
                  PWM6_LoadDutyValue@dutyValue 0072                        get_check_up_value@check 0074  
                                   _TX1STAbits 011E                            ??_send_confirmation 0079  
                           EUSART_Write@txData 0073                   __size_of_EUSART_Transmit_ISR 0022  
               __end_of_PIN_MANAGER_Initialize 0D3B                              ??_ADCC_Initialize 0072  
                                ?_eeprom_setup 0024                         __size_of_submenu_alarm 0010  
                       __size_of_submenu_clock 00B5                         __size_of_submenu_illum 0014  
                      __size_of_registers_info 0053                                modify_pmon@data 0029  
                       ?_PWM_Output_D4_Disable 0070                           ??_EUSART_Receive_ISR 0071  
                           __end_of_write_alaf 1800                             __end_of_write_alal 0840  
                           __end_of_write_alat 086E                             __end_of_write_tala 08F8  
                           __end_of_write_pmon 08CA                          ?_PWM_Output_D4_Enable 0070  
                        __size_of_submenu_temp 005C                           registers_info@F13199 0126  
                              _TMR1_Initialize 15E6                          __end_of_checkButtonS1 1681  
                        __end_of_checkButtonS2 16A1  
